<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《算法竞赛进阶指南》0x14 Hash</title>
      <link href="/Algorithm/lydguid/z0x14_Hash/"/>
      <url>/Algorithm/lydguid/z0x14_Hash/</url>
      
        <content type="html"><![CDATA[<h1 id="hash表基本概念">Hash表基本概念</h1><p>Hash 表又称散列表，一般由Hash函数与链表结构共同实现</p><p>与离散化思想类似，当我们要对若干复杂信息进行统计时，可以用 Hash函数 把这些复杂信息映射到一个容易维护的值域内</p><p>因为值域变简单、范围变小，可能造成不同的原始信息被 Hash函数 映射为相同的值，处理该冲突的方法有：</p><ol type="1"><li>“闭散列法”（开放寻址法）：闭散列方法把所有记录直接存储在散列表中，如果发生冲突则根据某种方式继续进行探查</li><li><strong>“开散列法” （拉链法）</strong>：开散列法是在每个存放数据的地方开一个链表，如果有多个键值索引到同一个地方，只用把他们都放到那个位置的链表里就行了，查询的时候需要把对应位置的链表整个扫一遍，对其中的每个数据比较其键值与查询的键值是否一致</li></ol><p><strong>Hash表的两个基本操作</strong> ：</p><ol type="1"><li>计算 Hash函数 的值</li><li>定位到对应链表中依次遍历、比较</li></ol><p>其他所有操作都是基于上述两个操作的</p><h1 id="字符串哈希">字符串哈希</h1><p>Hash 的核心思想在于，将输入映射到一个值域较小、可以方便比较的范围</p><blockquote><p>这里的“值域较小”在不同情况下意义不同</p><p>在 哈希表 中，值域需要小到能够接受线性的空间与时间复杂度</p><p>在字符串哈希中，值域需要小到能够快速比较（<span class="math inline">\(10^9\)</span>、 <span class="math inline">\(10^{18}\)</span> 都是可以快速比较的）</p><p>同时，为了降低哈希冲突率，值域也不能太小</p></blockquote><p>下面介绍的 字符串Hash函数 把一个任意长度的字符串映射成一个非负整数，并且其冲突概率几乎为零</p><p><strong>取一固定值 <span class="math inline">\(P\)</span>，把字符串看做 <span class="math inline">\(P\)</span> 进制数，并分配一个大于 <span class="math inline">\(0\)</span> 的数值，代表每种字符</strong></p><p>一般来说，分配的数值都远小于 <span class="math inline">\(P\)</span>，例如，对于小写字符构成的字符串，可以令 <span class="math inline">\(a=1,b=2,\cdots\)</span></p><p><strong>取一固定值 <span class="math inline">\(M\)</span>，求出 <span class="math inline">\(P\)</span> 进制数对 <span class="math inline">\(M\)</span> 的余数，作为该字符串的 Hash值</strong></p><blockquote><p>【注】对于一个字符，其高低位和下标是反过来的</p></blockquote><p>对于字符串 <span class="math inline">\(S = \overline{s_{n}s_{n-1}\cdots s_2s_1}\)</span>，其哈希值为：</p><p><span class="math display">\[H(S) = s_{n} + s_{n-1} \times P + \cdots + s_2 \times P^{n-2} + s_1 \times P^{n-1}\]</span></p><p>一般来说，<strong><span class="math inline">\(P = 131\)</span> 或 <span class="math inline">\(P = 13331\)</span></strong>，此时 Hash 值产生冲突的概率极低</p><p>只要 Hash值 相同，我们就可以认为原字符串是相等的</p><p>通常<strong>取 <span class="math inline">\(M = 2^{64}\)</span></strong>，即直接<strong>使用 unsigned long long 类型</strong>存储这个 Hash值，让计算机自动取模</p><p><strong>如何递推求解字符串的哈希值</strong></p><p>基于如下的理论，对于一个字符串 <span class="math inline">\(S=\overline{s_{n}\cdots s_2s_1}\)</span>，我们在前面添加一个字符 <span class="math inline">\(c\)</span>，则新哈希值为：</p><p><span class="math display">\[H(\overline{cS}) = c + s_{n} \times P + s_{n-1} \times P^2 + \cdots + s_2 \times P^{n-1} + s_1 \times P^{n}\]</span></p><p>固有递推式：<span class="math inline">\(H(\overline{cS}) = (H(S) \times P + value(c)) \bmod M\)</span></p><p>由如上递推式，我们可以从低位开始，对一个字符串进行遍历，并同时生成其任意前缀的哈希值</p><p><strong>如何求解字符串任意子串的哈希值</strong></p><p>基于上述递推，我们对整个字符串哈希完成后，同时获得了两个数组：<span class="math inline">\(H[N], P[N]\)</span></p><p>因此我们可以在 <span class="math inline">\(O(1)\)</span> 的时间内，获得范围内任意 <strong>字符串的前缀哈希值</strong> 和 <strong><span class="math inline">\(P\)</span> 的 <span class="math inline">\(n\)</span> 次幂</strong></p><p>对于已知哈希值的字符串 <span class="math inline">\(\overline{TS}\)</span>，求解其后缀子串 <span class="math inline">\(T\)</span> 的哈希值，将其分解成多项式有：</p><p><span class="math display">\[\overline{TS} = t_m  + t_{m-1} \times P +  \cdots + t_1 \times P^{m-1} + s_n \times P^{m} + s_{n-1} \times P^{m+1} + \cdots + s_1 \times P^{n + m - 1}\]</span></p><p>简单推导易得公式：<span class="math inline">\(H(T) = (H(\overline{TS}) - H(S) \times P^m) \bmod M\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ULL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">131</span>; <span class="comment">//131 or 13331</span></span><br><span class="line">ULL f[N], p[N];</span><br><span class="line"><span class="function">ULL <span class="title">get_hash</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[r] - f[l - <span class="number">1</span>] * p[r - l + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize_hash</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">        f[i] = f[i - <span class="number">1</span>] * p + str[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="习题">习题</h1><h2 id="雪花雪花雪花">雪花雪花雪花</h2><h3 id="题目描述">题目描述</h3><p>有 <span class="math inline">\(N\)</span> 片雪花，每片雪花由六个角组成，每个角都有长度。</p><p>第 <span class="math inline">\(i\)</span> 片雪花六个角的长度从某个角开始顺时针依次记为 <span class="math inline">\(a_{i,1},a_{i,2},…,a_{i,6}\)</span>。</p><p>因为雪花的形状是封闭的环形，所以从任何一个角开始顺时针或逆时针往后记录长度，得到的六元组都代表形状相同的雪花。</p><p>例如 <span class="math inline">\(a_{i,1},a_{i,2},…,a_{i,6}\)</span> 和 <span class="math inline">\(a_{i,2},…,a_{i,6},a_{i,1}\)</span> 就是形状相同的雪花。</p><p><span class="math inline">\(a_{i,1},a_{i,2},…,a_{i,6}\)</span> 和 <span class="math inline">\(a_{i,6},a_{i,5},…,a_{i,1}\)</span> 也是形状相同的雪花。</p><p>我们称两片雪花形状相同，当且仅当它们各自从某一角开始顺时针或逆时针记录长度，能得到两个相同的六元组。</p><p>求这 <span class="math inline">\(N\)</span> 片雪花中是否存在两片形状相同的雪花。</p><p><strong>输入格式</strong></p><p>第一行输入一个整数 <span class="math inline">\(N\)</span>，代表雪花的数量。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行描述一片雪花。</p><p>每行包含 <span class="math inline">\(6\)</span> 个整数，分别代表雪花的六个角的长度（这六个数即为从雪花的随机一个角顺时针或逆时针记录长度得到）。</p><p>同行数值之间，用空格隔开。</p><p><strong>输出格式</strong></p><p>如果不存在两片形状相同的雪花，则输出：<code>No two snowflakes are alike.</code></p><p>如果存在两片形状相同的雪花，则输出：<code>Twin snowflakes found.</code></p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤100000, 0≤ai,j&lt;10000000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1 2 3 4 5 6</span><br><span class="line">4 3 2 1 6 5</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Twin snowflakes found.</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>本题的问题是如何将同类集合的雪花存下来，映射到一个更小的范围内，便于查询</p><p>蓝书上用了累加累乘值之和作为一个字符串的哈希值，y总用了字符串的最小表示法进行的哈希</p><p><strong>字符串的最小表示法</strong>：最小表示法是求与某个字符串 <strong>循环同构</strong> 的所有字符串中，字典序最小的</p><p>我们求出每个雪花字符串的最小表示以及他翻转以后的最小表示，以最小表示作为他的哈希值</p><p>最后遍历所有字符串的最小表示，如果出现相同的，则表示出现重复雪花</p><p><strong>如何在 <span class="math inline">\(O(N)\)</span> 的时间内求出字符串的最小表示</strong></p><p>类似 <strong>循环同构</strong> 的问题，第一时间想到 <strong>破环成链</strong>，将数组整体复制接到后面，然后寻找长度为 <span class="math inline">\(n\)</span> 的最小字典序</p><p>先枚举起点，然后暴力挨个比较的做法，时间复杂度为 <span class="math inline">\(O(N^2)\)</span>，对于本题的数据规模完全是 ok 的</p><p>这里介绍一个线性的做法：</p><p>考虑对于一对字符串 <span class="math inline">\(A,B\)</span> , 它们在原字符串 <span class="math inline">\(S\)</span> 中的起始位置分别为 <span class="math inline">\(i,j\)</span>, 且它们的前 <span class="math inline">\(k\)</span> 个字符均相同，即</p><p><span class="math display">\[A[i \cdots i + k - 1] = B[j \cdots j + k - 1]\]</span></p><p>不妨先考虑 <span class="math inline">\(A[i+k] &gt; B[j + k]\)</span> 的情况，我们发现起始位置下标 <span class="math inline">\(l\)</span> 满足 <span class="math inline">\(i \le l \le i + k\)</span> 的字符串均不能成为答案。因为对于任意一个字符串 <span class="math inline">\(S_{i+p}\)</span>（表示以 <span class="math inline">\(i+p\)</span> 为起始位置的字符串）一定存在字符串 <span class="math inline">\(S_{j+p}\)</span> 比它更优。</p><p>所以我们比较时可以跳过下标 <span class="math inline">\(l\in[i,i+k]\)</span> , 直接比较 <span class="math inline">\(S_{i+k+l}\)</span></p><p>这样对于每个指针都只会向后位移，因此时间复杂度为 <span class="math inline">\(O(N)\)</span></p><p><strong>算法流程</strong></p><ol type="1"><li>初始化指针 <span class="math inline">\(i\)</span> 为 <span class="math inline">\(0\)</span>，<span class="math inline">\(j\)</span> 为 <span class="math inline">\(1\)</span> ；初始化匹配长度 <span class="math inline">\(k\)</span> 为 <span class="math inline">\(0\)</span></li><li>比较第 <span class="math inline">\(k\)</span> 位的大小，根据比较结果跳转相应指针。若跳转后两个指针相同，则随意选一个加一以保证比较的两个字符串不同</li><li>重复上述过程，直到比较结束</li><li>答案为 <span class="math inline">\(i,j\)</span> 中较小的一个</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_min</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;a)</span>    <span class="comment">//求字符串最小表示法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">b</span><span class="params">(<span class="number">12</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i ++ ) b[i] = a[i % <span class="number">6</span>];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">1</span>, k;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n &amp;&amp; j &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; n &amp;&amp; b[i + k] == b[j + k]; k ++ );</span><br><span class="line">        <span class="keyword">if</span> (k == n) <span class="keyword">break</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (b[i + k] &gt; b[j + k])</span><br><span class="line">        &#123;</span><br><span class="line">            i += k + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == j) i ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            j += k + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == j) j ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    k = <span class="built_in">min</span>(i, j);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) a[i] = b[i + k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">snow</span><span class="params">(<span class="number">6</span>)</span>, <span class="title">isnow</span><span class="params">(<span class="number">6</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;snow[j]), isnow[<span class="number">5</span> - j] = snow[j];</span><br><span class="line">    <span class="built_in">get_min</span>(snow);</span><br><span class="line">    <span class="built_in">get_min</span>(isnow);</span><br><span class="line">    snows[i] = <span class="built_in">min</span>(snow, isnow);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(snows + <span class="number">1</span>, snows + n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">    <span class="keyword">if</span> (snows[i] == snows[i + <span class="number">1</span>])</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">puts</span>(flag ? <span class="string">&quot;Twin snowflakes found.&quot;</span> : <span class="string">&quot;No two snowflakes are alike.&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="兔子与兔子">兔子与兔子</h2><h3 id="题目描述-1">题目描述</h3><p>很久很久以前，森林里住着一群兔子。</p><p>有一天，兔子们想要研究自己的 DNA 序列。</p><p>我们首先选取一个好长好长的 DNA 序列（小兔子是外星生物，DNA 序列可能包含 <span class="math inline">\(26\)</span> 个小写英文字母）。</p><p>然后我们每次选择两个区间，询问如果用两个区间里的 DNA 序列分别生产出来两只兔子，这两个兔子是否一模一样。</p><p>注意两个兔子一模一样只可能是他们的 DNA 序列一模一样。</p><p><strong>输入格式</strong></p><p>第一行输入一个 DNA 字符串 <span class="math inline">\(S\)</span>。</p><p>第二行一个数字 <span class="math inline">\(m\)</span>，表示 <span class="math inline">\(m\)</span> 次询问。</p><p>接下来 <span class="math inline">\(m\)</span> 行，每行四个数字 <span class="math inline">\(l_1,r_1,l_2,r_2\)</span>，分别表示此次询问的两个区间，注意字符串的位置从 <span class="math inline">\(1\)</span> 开始编号。</p><p><strong>输出格式</strong></p><p>对于每次询问，输出一行表示结果。</p><p>如果两只兔子完全相同输出 Yes，否则输出 No（注意大小写）。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤length(S),m≤1000000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aabbaabb</span><br><span class="line">3</span><br><span class="line">1 3 5 7</span><br><span class="line">1 3 6 8</span><br><span class="line">1 2 1 2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br><span class="line">No</span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>字符串哈希的板子题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line">n = <span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">initialize</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">while</span> (m -- )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> l1, r1, l2, r2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;l1, &amp;r1, &amp;l2, &amp;r2);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="built_in">get_hash</span>(l1, r1) == <span class="built_in">get_hash</span>(l2, r2) ? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回文子串的最大长度">回文子串的最大长度</h2><h3 id="题目描述-2">题目描述</h3><p>如果一个字符串正着读和倒着读是一样的，则称它是回文的。</p><p>给定一个长度为 <span class="math inline">\(N\)</span> 的字符串 <span class="math inline">\(S\)</span>，求他的最长回文子串的长度是多少。</p><p><strong>输入格式</strong></p><p>输入将包含最多 <span class="math inline">\(30\)</span> 个测试用例，每个测试用例占一行，以最多 <span class="math inline">\(10^6\)</span> 个小写字符的形式给出。</p><p>输入以一个以字符串 <code>END</code> 开头的行表示输入终止。</p><p><strong>输出格式</strong></p><p>对于输入中的每个测试用例，输出测试用例编号和最大回文子串的长度（参考样例格式）。</p><p>每个输出占一行。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">abcbabcbabcba</span><br><span class="line">abacacbaaaab</span><br><span class="line">END</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Case 1: 13</span><br><span class="line">Case 2: 6</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>最长回文子串，是学 “马拉车” 的板子题，可以在线性的时间内完成求解</p><p>本篇讲用字符串哈希来进行求解，时间复杂度次于马拉车，为 <span class="math inline">\(O(n\log n)\)</span></p><p>根据回文子串的定义，不难想到暴力做法，先枚举子串中点，然后向两侧延伸找到相等的最长长度</p><p>枚举好终点后，不难发现答案长度具有单调性，即大于最长长度必然前后缀不相等，小于等于则相等</p><p>因此我们可以结合该单调性，二分出最长长度，二分的过程中判断前后是否构成回文，可以用字符串哈希</p><p>即可在 <span class="math inline">\(O(1)\)</span> 的时间内，实现二分结果的判定</p><p>这题还要注意边界，回文子串可能是奇数串也可能是偶数串（没中点）</p><p>因此在预处理时，我们可以把每两个字母之间放入一个 <code>#</code> 号隔开，这样所有情况都可以处理成奇数情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    f[<span class="number">0</span>] = g[n + <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = n; i &lt;= n; i ++ , j -- )</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">        f[i] = f[i - <span class="number">1</span>] * P + s[i];</span><br><span class="line">        g[i] = g[i - <span class="number">1</span>] * P + s[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ULL <span class="title">get_hash</span><span class="params">(ULL h[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>] * p[r - l + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">strlen</span>(s + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n &lt;&lt; <span class="number">1</span>; i; i -= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = s[i / <span class="number">2</span>];</span><br><span class="line">        s[i - <span class="number">1</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    n &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">initialize</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="built_in">min</span>(i - <span class="number">1</span>, n - i);</span><br><span class="line">        <span class="keyword">while</span> (l &lt; r)   <span class="comment">//[i - mid, i] [i, i + mid] -&gt; [n+1-(i+mid), n+1-i]</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            ULL lval = <span class="built_in">get_hash</span>(f, i - mid, i);</span><br><span class="line">            ULL rval = <span class="built_in">get_hash</span>(g, n + <span class="number">1</span> - (i + mid), n + <span class="number">1</span> - i);</span><br><span class="line">            <span class="keyword">if</span> (lval == rval) l = mid; <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s[i - l] != <span class="string">&#x27;#&#x27;</span>) l ++ ;</span><br><span class="line">        res = <span class="built_in">max</span>(res, l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后缀数组">后缀数组</h2><h3 id="题目描述-3">题目描述</h3><p>后缀数组 (SA) 是一种重要的数据结构，通常使用倍增或者 DC3 算法实现，这超出了我们的讨论范围。</p><p>在本题中，我们希望使用快排、Hash 与二分实现一个简单的 <span class="math inline">\(O(nlog^2n)\)</span> 的后缀数组求法。</p><p>详细地说，给定一个长度为 <span class="math inline">\(n\)</span> 的字符串 <span class="math inline">\(S\)</span>（下标 <span class="math inline">\(0∼n−1\)</span>），我们可以用整数 <span class="math inline">\(k(0≤k&lt;n)\)</span> 表示字符串 <span class="math inline">\(S\)</span> 的后缀 <span class="math inline">\(S(k∼n−1)\)</span>。</p><p>把字符串 <span class="math inline">\(S\)</span> 的所有后缀按照字典序排列，排名为 <span class="math inline">\(i\)</span> 的后缀记为 <span class="math inline">\(SA[i]\)</span>。</p><p>额外地，我们考虑排名为 <span class="math inline">\(i\)</span> 的后缀与排名为 <span class="math inline">\(i−1\)</span> 的后缀，把二者的最长公共前缀的长度记为 <span class="math inline">\(Height[i]\)</span>。</p><p>我们的任务就是求出 <span class="math inline">\(SA\)</span> 与 <span class="math inline">\(Height\)</span> 这两个数组。</p><p><strong>输入格式</strong></p><p>输入一个字符串，其长度不超过 <span class="math inline">\(3\times 10^5\)</span>。</p><p>字符串由小写字母构成。</p><p><strong>输出格式</strong></p><p>第一行为数组 <span class="math inline">\(SA\)</span>，相邻两个整数用 <span class="math inline">\(1\)</span> 个空格隔开。</p><p>第二行为数组 <span class="math inline">\(Height\)</span>，相邻两个整数用 <span class="math inline">\(1\)</span> 个空格隔开，我们规定 <span class="math inline">\(Height[1]=0\)</span>。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ponoiiipoi</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9 4 5 6 2 8 3 1 7 0</span><br><span class="line">0 1 2 1 0 0 2 1 0 2</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p>暴力快排的时间复杂度为 <span class="math inline">\(O(n^2 \log n)\)</span> 因为字符串每一次比较的时间复杂度为 <span class="math inline">\(O(len(s))\)</span></p><p>基于比较的排序算法时间复杂度下界为 <span class="math inline">\(O(n\log n)\)</span> 因此能优化的只有字符串的比较方式</p><p>基于上一题最长回文子串解法的启发，我们可以在进行字符串比较时用哈希 + 二分的手段优化到 <span class="math inline">\(O(\log len(s))\)</span></p><p>通过字符串哈希和二分迅速找到最长相等前缀，然后比较最后一个不相等的字符，决定两个子串的大小</p><p>总时间复杂度为 <span class="math inline">\(O(n\log^2 n)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_max_common_prefix</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> <span class="comment">//二分两个子数组最长前缀</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="built_in">min</span>(n + <span class="number">1</span> - a, n + <span class="number">1</span> - b);</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">get_hash</span>(a, a + mid - <span class="number">1</span>) == <span class="built_in">get_hash</span>(b, b + mid - <span class="number">1</span>)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span>  <span class="comment">//比较后缀字符串 str[a...n] 和 str[b...n] 的大小</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">get_max_common_prefix</span>(a, b);</span><br><span class="line">    <span class="keyword">int</span> a_val = a + len &gt; n ? <span class="number">0</span> : str[a + len];</span><br><span class="line">    <span class="keyword">int</span> b_val = b + len &gt; n ? <span class="number">0</span> : str[b + len];</span><br><span class="line">    <span class="keyword">return</span> a_val &lt; b_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x13 链表与邻接表</title>
      <link href="/Algorithm/lydguid/z0x13_%E9%93%BE%E8%A1%A8%E4%B8%8E%E9%82%BB%E6%8E%A5%E8%A1%A8/"/>
      <url>/Algorithm/lydguid/z0x13_%E9%93%BE%E8%A1%A8%E4%B8%8E%E9%82%BB%E6%8E%A5%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="链表基本概念">链表基本概念</h1><p>链表是一种用于存储数据的数据结构，通过如链条一般的指针来连接元素</p><p>它的特点是插入与删除数据十分方便，但寻找与读取数据的表现欠佳</p><p>链表和数组都可用于存储数据。与链表不同，数组将所有元素按次序依次存储。不同的存储结构令它们有了不同的优势：</p><ul><li><p>链表因其链状的结构，能方便地删除、插入数据，操作次数是 <span class="math inline">\(O(1)\)</span> 。但也因为这样，寻找、读取数据的效率不如数组高，在随机访问数据中的操作次数是 <span class="math inline">\(O(n)\)</span></p></li><li><p>数组可以方便地寻找并读取数据，在随机访问中操作次数是 <span class="math inline">\(O(1)\)</span> 。但删除、插入的操作次数是 O(n) 次</p></li></ul><p><strong>双向链表的指针实现方式：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> value; <span class="comment">// data</span></span><br><span class="line">Node *prev, *next; <span class="comment">// pointers</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Node *head, *tail;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> <span class="comment">// create an empty list</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">head = <span class="keyword">new</span> <span class="built_in">Node</span>();</span><br><span class="line">tail = <span class="keyword">new</span> <span class="built_in">Node</span>();</span><br><span class="line">head-&gt;next = tail;</span><br><span class="line">tail-&gt;prev = head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(Node *p, <span class="keyword">int</span> value)</span> <span class="comment">// insert data after p</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">q = <span class="keyword">new</span> <span class="built_in">Node</span>();</span><br><span class="line">q-&gt;value = value;</span><br><span class="line">p-&gt;next-&gt;prev = q; q-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = q; q-&gt;prev = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(Node *p)</span> <span class="comment">// remove p</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p-&gt;prev-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next-&gt;prev = p-&gt;prev;</span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recycle</span><span class="params">()</span> <span class="comment">// release memory</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (head != tail)</span><br><span class="line">&#123;</span><br><span class="line">head = head-&gt;next;</span><br><span class="line"><span class="keyword">delete</span> head-&gt;prev;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> tail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>双向链表的静态数组实现方式：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> value;</span><br><span class="line"><span class="keyword">int</span> prev, next;</span><br><span class="line">&#125; node[SIZE];</span><br><span class="line"><span class="keyword">int</span> head, tail, tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tot = <span class="number">2</span>;</span><br><span class="line">head = <span class="number">1</span>, tail = <span class="number">2</span>;</span><br><span class="line">node[head].next = tail;</span><br><span class="line">node[tail].prev = head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">q = ++tot;</span><br><span class="line">node[q].value = value;</span><br><span class="line">node[node[p].next].prev = q;</span><br><span class="line">node[q].next = node[p].next;</span><br><span class="line">node[p].next = q; node[q].prev = p;</span><br><span class="line">    <span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">node[node[p].prev].next = node[p].next;</span><br><span class="line">node[node[p].next].prev = node[p].prev;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(node, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(node));</span><br><span class="line">    head = tail = tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="邻接表基本概念">邻接表基本概念</h1><p>邻接表一般实现使用一个 <code>vector&lt;int&gt;</code> 来存每一个点的出边</p><p>竞赛里常用的是 <strong>链式前向星</strong> 存图方式，即数组模拟邻接表</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> head[N], ver[N], edge[N], nxt[N], tot;</span><br><span class="line"><span class="comment">//初始化邻接表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 邻接表：加入有向边(x, y)，权值为z</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ver[tot] = y, edge[tot] = z; <span class="comment">// 真实数据</span></span><br><span class="line">nxt[tot] = head[x], head[x] = tot ++ ; <span class="comment">// 在表头x处插入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 邻接表：访问从x出发的所有边</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[x]; i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = ver[i], z = edge[i];</span><br><span class="line"><span class="comment">// 一条有向边(x, y)，权值为z</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="习题">习题</h1><h2 id="邻值查找">邻值查找</h2><h3 id="题目描述">题目描述</h3><p>给定一个长度为 <span class="math inline">\(n\)</span> 的序列 <span class="math inline">\(A\)</span>，<span class="math inline">\(A\)</span> 中的数各不相同。</p><p>对于 <span class="math inline">\(A\)</span> 中的每一个数 <span class="math inline">\(A_i\)</span>，求：</p><p><span class="math display">\[\min_{1≤j&lt;i}|A_i−A_j|\]</span></p><p>以及令上式取到最小值的 <span class="math inline">\(j\)</span>（记为 <span class="math inline">\(P_i\)</span>）。若最小值点不唯一，则选择使 <span class="math inline">\(A_j\)</span> 较小的那个。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(n\)</span>，代表序列长度。</p><p>第二行输入 <span class="math inline">\(n\)</span> 个整数 <span class="math inline">\(A_1…A_n\)</span>，代表序列的具体数值，数值之间用空格隔开。</p><p><strong>输出格式</strong></p><p>输出共 <span class="math inline">\(n−1\)</span> 行，每行输出两个整数，数值之间用空格隔开。</p><p>分别表示当 <span class="math inline">\(i\)</span> 取 <span class="math inline">\(2∼n\)</span> 时，对应的 <span class="math inline">\(\min\limits_{1≤j&lt;i}|A_i−A_j|\)</span> 和 <span class="math inline">\(P_i\)</span> 的值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(n≤10^5, |A_i|≤10^9\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 5 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 1</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>维护这种类似问题的数据结构太多了，可以上线段树、树状数组、平衡树，但是本题的链表解法非常的巧妙，值得一写</p><p>链表解法是一种离线做法，步骤如下：</p><p>将原数组带着下标一起，按照元素的值从小到大顺排，然后以此顺序建立双向链表</p><p>找到原数组中下标为 <span class="math inline">\(n\)</span> 的元素在双向链表中的位置 <span class="math inline">\(l_i\)</span></p><p>则 <span class="math inline">\(\forall i\in [1, n-1]\)</span>，欲使 <span class="math inline">\(|A_n−A_i|\)</span> 最小，显然 <span class="math inline">\(A_i\)</span> 必然在顺排后的新数组中与 <span class="math inline">\(A_n\)</span> 相邻</p><p>因此直接找 <span class="math inline">\(l_i\)</span> 的 前驱 和 后继 的最小值即是 <span class="math inline">\(|A_n−A_i|\)</span> 的最小值</p><p>然后在双向链表中删去 <span class="math inline">\(l_i\)</span>，接着处理原数组中第 <span class="math inline">\(A_{n-1}\)</span> 个数</p><p>删去的原因是，前缀中的邻值不包含大于当前下标的元素</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    pos[a[i].y] = <span class="built_in">insert</span>(node[tail].prev, a[i].x, a[i].y);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt; <span class="number">1</span>; i -- )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">2e9</span>, idx = <span class="number">-1</span>;</span><br><span class="line">    Node &amp;t = node[pos[i]];</span><br><span class="line">    <span class="keyword">if</span> (t.prev != head &amp;&amp; s &gt; <span class="built_in">abs</span>(t.value - node[t.prev].value))</span><br><span class="line">    &#123;</span><br><span class="line">        s = <span class="built_in">abs</span>(t.value - node[t.prev].value);</span><br><span class="line">        idx = node[t.prev].pos;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t.next != tail &amp;&amp; s &gt; <span class="built_in">abs</span>(t.value - node[t.next].value))</span><br><span class="line">    &#123;</span><br><span class="line">        s = <span class="built_in">abs</span>(t.value - node[t.next].value);</span><br><span class="line">        idx = node[t.next].pos;</span><br><span class="line">    &#125;</span><br><span class="line">    res[i] = &#123;s, idx&#125;;</span><br><span class="line">    <span class="built_in">remove</span>(pos[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态中位数">动态中位数</h2><h3 id="题目描述-1">题目描述</h3><p>依次读入一个整数序列，每当已经读入的整数个数为奇数时，输出已读入的整数构成的序列的中位数。</p><p><strong>输入格式</strong></p><p>第一行输入一个整数 <span class="math inline">\(P\)</span>，代表后面数据集的个数，接下来若干行输入各个数据集。</p><p>每个数据集的第一行首先输入一个代表数据集的编号的整数。</p><p>然后输入一个整数 <span class="math inline">\(M\)</span>，代表数据集中包含数据的个数，<span class="math inline">\(M\)</span> 一定为奇数，数据之间用空格隔开。</p><p>数据集的剩余行由数据集的数据构成，每行包含 <span class="math inline">\(10\)</span> 个数据，最后一行数据量可能少于 <span class="math inline">\(10\)</span> 个，数据之间用空格隔开。</p><p><strong>输出格式</strong></p><p>对于每个数据集，第一行输出两个整数，分别代表数据集的编号以及输出中位数的个数（应为数据个数加一的二分之一），数据之间用空格隔开。</p><p>数据集的剩余行由输出的中位数构成，每行包含 <span class="math inline">\(10\)</span> 个数据，最后一行数据量可能少于 <span class="math inline">\(10\)</span> 个，数据之间用空格隔开。</p><p>输出中不应该存在空行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤P≤1000\)</span>, <span class="math inline">\(1≤M≤99999\)</span>, 所有 <span class="math inline">\(M\)</span> 相加之和不超过 <span class="math inline">\(5×10^5\)</span>。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3 </span><br><span class="line">1 9 </span><br><span class="line">1 2 3 4 5 6 7 8 9 </span><br><span class="line">2 9 </span><br><span class="line">9 8 7 6 5 4 3 2 1 </span><br><span class="line">3 23 </span><br><span class="line">23 41 13 22 -3 24 -31 -11 -8 -7 </span><br><span class="line">3 5 103 211 -311 -45 -67 -73 -81 -99 </span><br><span class="line">-33 24 56</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">2 5</span><br><span class="line">9 8 7 6 5</span><br><span class="line">3 12</span><br><span class="line">23 23 22 22 13 3 5 5 3 -3 </span><br><span class="line">-7 -3</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>对顶堆的做法在之前排序章节讲过了，说一下链表做法</p><p>同上一题一样是离线做法，同时维护数组内元素的值和原始下标，然后将数组按元素值从小到大排序</p><p>然后按照当前顺排顺序建立双向链表，显然对于 <span class="math inline">\(n\)</span> 个数来说，中位数位于 <span class="math inline">\(\lfloor\dfrac{n + 1}{2}\rfloor\)</span> 的位置</p><p>将指针移动到该位置，便是第 <span class="math inline">\(n\)</span> 轮的中位数答案，记录下该答案并保留指针位置，接着要分类讨论回滚到前一轮</p><ol type="1"><li>要删掉的数字就是中位数<ol type="1"><li>当前是奇数轮：则中位数左右两侧元素数量相同，回滚直接往前移动一位即可</li><li>当前是偶数轮：则中位数位于左侧元素最后一位，回滚直接往后移动一位即可</li></ol></li><li>要删掉的数字不是中位数<ol type="1"><li>当前是奇数轮：<ol type="1"><li>要删的数字位于中位数右侧：回滚直接往前移动一位即可</li><li>要删的数字位于中位数左侧：回滚不需要移动中位数指针</li></ol></li><li>当前是偶数轮：<ol type="1"><li>要删的数字位于中位数右侧：回滚不需要移动中位数指针</li><li>要删的数字位于中位数左侧：回滚直接往后移动一位即可</li></ol></li></ol></li></ol><p>最终输出所有答案即可，<del>离线回滚真好玩（bushi）</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">pos[a[i].y] = <span class="built_in">insert</span>(node[tail].prev, a[i].x, a[i].y);</span><br><span class="line">node[head].value = -INF, node[tail].value = INF;</span><br><span class="line"><span class="keyword">int</span> midx = head;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span> &gt;&gt; <span class="number">1</span>; i ++ ) midx = node[midx].next;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; i -- )</span><br><span class="line">&#123;</span><br><span class="line">res[i] = node[midx].value;</span><br><span class="line">Node &amp;t = node[pos[i]];</span><br><span class="line"><span class="keyword">if</span> (t.pos == node[midx].pos) <span class="comment">//删掉的是中位数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &amp; <span class="number">1</span>) midx = node[midx].prev;</span><br><span class="line"><span class="keyword">else</span> midx = node[midx].next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &amp; <span class="number">1</span> &amp;&amp; pos[i] &gt; midx) midx = node[midx].prev;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i &amp; <span class="number">1</span> ^ <span class="number">1</span> &amp;&amp; pos[i] &lt; midx) midx = node[midx].next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">remove</span>(pos[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x12 队列</title>
      <link href="/Algorithm/lydguid/z0x12_%E9%98%9F%E5%88%97/"/>
      <url>/Algorithm/lydguid/z0x12_%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="队列的基础概念">队列的基础概念</h1><p>队列的<strong>逻辑存储结构</strong>属于 “<strong>受限线性表</strong>”，其 “<strong>受限</strong>” 的部分是只能在线性表的一端执行插入在另一端执行删除操作</p><p>队列的修改是按照 <strong>先进先出</strong> 的原则进行的，因此队列通常被称为是 <strong>先进先出</strong>（<strong>first in first out</strong>）<strong>表</strong>，简称 <strong>FIFO 表</strong></p><p>通常，允许插入的一端称为 “<strong>队尾</strong>”，允许删除的一端称为 “<strong>队首</strong>”</p><p><strong>物理存储实现</strong> 可以在 C++ 中用一个数组和两个变量（记录队首队尾位置）来实现队列存储</p><p>队列多次出队操作可能会造成大量的内存浪费，因此还引入了 <strong>循环队列</strong>，从而重复利用曾被战过的空间，C++ STL 中的 <strong>queue</strong> 就是一个 <strong>循环队列</strong></p><p>队列还有很多变体，例如两端都能取出或插入元素的双端队列 deque，以及给每个元素附带一个评估值、出队时取出估值最大的、贾登峪一个二叉堆的优先队列 priority_queue</p><p>队列也是实现广度优先搜索的基本结构</p><h1 id="c-stl-中的队列">C++ STL 中的队列</h1><p>C++ 在 STL 中提供了一个容器 <code>std::queue</code>，使用前需要先引入 <code>&lt;queue&gt;</code> 头文件。</p><p><strong>STL 中对 queue 的定义</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// clang-format off</span><br><span class="line">template&lt;</span><br><span class="line">    class T,</span><br><span class="line">    class Container = std::deque&lt;T&gt;</span><br><span class="line">&gt; class queue;</span><br></pre></td></tr></table></figure><p><code>T</code> 为 <code>queue</code> 中要存储的数据类型。</p><p><code>Container</code> 为用于存储元素的底层容器类型。如果不指定，则默认使用 <code>std::deque</code> 作为底层容器。</p><p><code>STL</code> 中的 <code>queue</code> 容器提供了一众成员函数以供调用。其中较为常用的有：</p><ul><li>元素访问<ul><li><code>q.front()</code> 返回队首元素</li><li><code>q.back()</code> 返回队尾元素</li></ul></li><li>修改<ul><li><code>q.push()</code> 在队尾插入元素</li><li><code>q.pop()</code> 弹出队首元素</li></ul></li><li>容量<ul><li><code>q.empty()</code> 队列是否为空</li><li><code>q.size()</code> 返回队列中元素的数量</li></ul></li></ul><p>此外，<code>queue</code> 还提供了一些运算符。较为常用的是使用赋值运算符 <code>=</code> 为 <code>queue</code> 赋值</p><h1 id="习题">习题</h1><h2 id="小组队列">小组队列</h2><h3 id="题目描述">题目描述</h3><p>有 <span class="math inline">\(n\)</span> 个小组要排成一个队列，每个小组中有若干人。</p><p>当一个人来到队列时，如果队列中已经有了自己小组的成员，他就直接插队排在自己小组成员的后面，否则就站在队伍的最后面。</p><p>请你编写一个程序，模拟这种小组队列。</p><p><strong>输入格式</strong>：</p><p>输入将包含一个或多个测试用例。</p><p>对于每个测试用例，第一行输入小组数量 <span class="math inline">\(t\)</span>。</p><p>接下来 <span class="math inline">\(t\)</span> 行，每行输入一个小组描述，第一个数表示这个小组的人数，接下来的数表示这个小组的人的编号。</p><p>编号是 <span class="math inline">\(0\)</span> 到 <span class="math inline">\(999999\)</span> 范围内的整数。</p><p>一个小组最多可包含 <span class="math inline">\(1000\)</span> 个人。</p><p>最后，命令列表如下。 有三种不同的命令：</p><ol type="1"><li><p><code>ENQUEUE x</code> - 将编号是 <code>x</code> 的人插入队列；</p></li><li><p><code>DEQUEUE</code> - 让整个队列的第一个人出队；</p></li><li><p><code>STOP</code> - 测试用例结束</p></li></ol><p>每个命令占一行。</p><p>当输入用例 <code>t=0</code> 时，代表停止输入。</p><p>需注意：测试用例最多可包含 <span class="math inline">\(200000\)</span> 个命令，因此小组队列的实现应该是高效的：</p><p>入队和出队都需要使用常数时间。</p><p><strong>输出样例</strong></p><p>对于每个测试用例，首先输出一行 <code>Scenario #k</code> ，其中 <span class="math inline">\(k\)</span> 是测试用例的编号。</p><p>然后，对于每个 <code>DEQUEUE</code> 命令，输出出队的人的编号，每个编号占一行。</p><p>在每个测试用例（包括最后一个测试用例）输出完成后，输出一个空行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤t≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3 101 102 103</span><br><span class="line">3 201 202 203</span><br><span class="line">ENQUEUE 101</span><br><span class="line">ENQUEUE 201</span><br><span class="line">ENQUEUE 102</span><br><span class="line">ENQUEUE 202</span><br><span class="line">ENQUEUE 103</span><br><span class="line">ENQUEUE 203</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">STOP</span><br><span class="line">2</span><br><span class="line">5 259001 259002 259003 259004 259005</span><br><span class="line">6 260001 260002 260003 260004 260005 260006</span><br><span class="line">ENQUEUE 259001</span><br><span class="line">ENQUEUE 260001</span><br><span class="line">ENQUEUE 259002</span><br><span class="line">ENQUEUE 259003</span><br><span class="line">ENQUEUE 259004</span><br><span class="line">ENQUEUE 259005</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">ENQUEUE 260002</span><br><span class="line">ENQUEUE 260003</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">DEQUEUE</span><br><span class="line">STOP</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Scenario #1</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line"></span><br><span class="line">Scenario #2</span><br><span class="line">259001</span><br><span class="line">259002</span><br><span class="line">259003</span><br><span class="line">259004</span><br><span class="line">259005</span><br><span class="line">260001</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>用 <span class="math inline">\(n\)</span> 个 <code>queue</code> 来维护 <span class="math inline">\(n\)</span> 个小组各自的队列情况</p><p>再单独用一个 <code>queue</code> 来维护 <span class="math inline">\(n\)</span> 个小组的组队列情况</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;<span class="keyword">int</span>&gt; group[M], groups;</span><br><span class="line">string op;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; op, op != <span class="string">&quot;STOP&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="string">&quot;ENQUEUE&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t; cin &gt;&gt; t;</span><br><span class="line">        <span class="keyword">if</span> (!group[id[t]].<span class="built_in">size</span>()) groups.<span class="built_in">push</span>(id[t]);</span><br><span class="line">        group[id[t]].<span class="built_in">push</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = groups.<span class="built_in">front</span>();</span><br><span class="line">        cout &lt;&lt; group[t].<span class="built_in">front</span>() &lt;&lt; endl;</span><br><span class="line">        group[t].<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (!group[t].<span class="built_in">size</span>()) groups.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="蚯蚓">蚯蚓</h2><h3 id="题目描述-1">题目描述</h3><p>蛐蛐国最近蚯蚓成灾了！</p><p>隔壁跳蚤国的跳蚤也拿蚯蚓们没办法，蛐蛐国王只好去请神刀手来帮他们消灭蚯蚓。</p><p>蛐蛐国里现在共有 <span class="math inline">\(n\)</span> 只蚯蚓，第 <span class="math inline">\(i\)</span> 只蚯蚓的长度为 <span class="math inline">\(a_i\)</span> ，所有蚯蚓的长度都是非负整数，即可能存在长度为 <span class="math inline">\(0\)</span> 的蚯蚓。</p><p>每一秒，神刀手会在所有的蚯蚓中，准确地找到最长的那一只，将其切成两段。</p><p>若有多只最长的，则任选一只。</p><p>神刀手切开蚯蚓的位置由有理数 <span class="math inline">\(p\)</span> 决定。</p><p>一只长度为 <span class="math inline">\(x\)</span> 的蚯蚓会被切成两只长度分别为 <span class="math inline">\(⌊px⌋\)</span> 和 <span class="math inline">\(x−⌊px⌋\)</span> 的蚯蚓。</p><p>特殊地，如果这两个数的其中一个等于 <span class="math inline">\(0\)</span>，则这个长度为 <span class="math inline">\(0\)</span> 的蚯蚓也会被保留。</p><p>此外，除了刚刚产生的两只新蚯蚓，其余蚯蚓的长度都会增加一个非负整数 <span class="math inline">\(q\)</span>。</p><p>蛐蛐国王知道这样不是长久之计，因为蚯蚓不仅会越来越多，还会越来越长。</p><p>蛐蛐国王决定求助于一位有着洪荒之力的神秘人物，但是救兵还需要 <span class="math inline">\(m\)</span> 秒才能到来。</p><p>蛐蛐国王希望知道这 <span class="math inline">\(m\)</span> 秒内的战况。</p><p>具体来说，他希望知道：</p><ul><li><span class="math inline">\(m\)</span> 秒内，每一秒被切断的蚯蚓被切断前的长度，共有 <span class="math inline">\(m\)</span> 个数。</li><li><span class="math inline">\(m\)</span> 秒后，所有蚯蚓的长度，共有 <span class="math inline">\(n+m\)</span> 个数。</li></ul><p><strong>输入格式</strong></p><p>第一行包含六个整数 <span class="math inline">\(n,m,q,u,v,t\)</span>，其中：<span class="math inline">\(n,m,q\)</span> 的意义参考题目描述；<span class="math inline">\(u,v,t\)</span> 均为正整数；你需要自己计算 <span class="math inline">\(p=u/v\)</span>（保证 <span class="math inline">\(0&lt;u&lt;v\)</span>）；<span class="math inline">\(t\)</span> 是输出参数，其含义将会在输出格式中解释。</p><p>第二行包含 <span class="math inline">\(n\)</span> 个非负整数，为 <span class="math inline">\(a_1,a_2,…,a_n\)</span>，即初始时 <span class="math inline">\(n\)</span> 只蚯蚓的长度。</p><p>同一行中相邻的两个数之间，恰好用一个空格隔开。</p><p><strong>输出格式</strong></p><p>第一行输出 <span class="math inline">\(⌊m/t⌋\)</span> 个整数，按时间顺序，依次输出第 <span class="math inline">\(t\)</span> 秒，第 <span class="math inline">\(2t\)</span> 秒，第 <span class="math inline">\(3t\)</span> 秒，…… 被切断蚯蚓（在被切断前）的长度。</p><p>第二行输出 <span class="math inline">\(⌊(n+m)/t⌋\)</span> 个整数，输出 <span class="math inline">\(m\)</span> 秒后蚯蚓的长度；需要按从大到小的顺序，依次输出排名第 <span class="math inline">\(t\)</span>，第 <span class="math inline">\(2t\)</span>，第 <span class="math inline">\(3t\)</span>，…… 的长度。</p><p>同一行中相邻的两个数之间，恰好用一个空格隔开。</p><p>即使某一行没有任何数需要输出，你也应输出一个空行。</p><p>请阅读样例来更好地理解这个格式。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤10^5\)</span>, <span class="math inline">\(0≤a_i≤10^8\)</span>, <span class="math inline">\(0&lt;p&lt;1\)</span>, <span class="math inline">\(0≤q≤200\)</span>, <span class="math inline">\(0≤m≤7∗10^6\)</span></p><p><span class="math inline">\(0&lt;u&lt;v≤10^9\)</span>, <span class="math inline">\(1≤t≤71\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 7 1 1 3 1</span><br><span class="line">3 3 2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 4 4 4 5 5 6</span><br><span class="line">6 6 6 5 5 4 4 3 2 2</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p><strong>先考虑朴素的 <span class="math inline">\(O(m\ log m)\)</span> 做法</strong></p><p>当 <span class="math inline">\(q=0\)</span> 时，每轮操作相当于在一堆线段中，取出一个长度最长的线段，将其分割成两个子线段放回原堆中</p><p>当 <span class="math inline">\(q&gt;0\)</span> 时，每轮操作完后，除了操作产生的两个子线段，其他所有线段长度增加 <span class="math inline">\(q\)</span></p><p>等价于产生的两个子线段长度减去了 <span class="math inline">\(q\)</span>，然后给整个集合都加上 <span class="math inline">\(q\)</span></p><p>因此可以用一个变量 <span class="math inline">\(delta\)</span> 来维护整个集合的偏移量，集合中的数加上 <span class="math inline">\(delta\)</span> 才是他真正的值</p><p>这样做的时间复杂度为 <span class="math inline">\(O(m\log m)\)</span> 但本题的 <span class="math inline">\(m\)</span> 范围是 <span class="math inline">\(7 \times 10^6\)</span> 不能 Ac</p><p><strong>考虑如何使得单次操作时间复杂度从 <span class="math inline">\(O(\log m)\)</span> 优化成 <span class="math inline">\(O(1)\)</span></strong></p><p>将动态维护的序列分成三个子序列：原序列 <span class="math inline">\(x\)</span>、分割后的左端子序列 <span class="math inline">\(l\)</span>、分割后的右端子序列 <span class="math inline">\(r\)</span></p><p>现证明: 在原序列中 <span class="math inline">\(x_1 &gt; x_2\)</span>，则切割后 <span class="math inline">\(x_1\)</span> 的两个子序列 <span class="math inline">\(l_1, r_1\)</span> 也大于 <span class="math inline">\(x_2\)</span> 的两个 子序列 <span class="math inline">\(l_2,r_2\)</span></p><p><span class="math inline">\(l_1 = \lfloor px_1 \rfloor + q\)</span>，<span class="math inline">\(l_2 = \lfloor p(x_2 + q) \rfloor\)</span>，对 <span class="math inline">\(l_1\)</span> 放缩有： <span class="math display">\[l_1 = \lfloor px_1 \rfloor + q \ge \lfloor px_1 + q \rfloor \ge \lfloor px_1 + pq \rfloor\ge \lfloor p(x_1 + q) \rfloor \ge \lfloor p(x_2 + q) \rfloor = l_2\]</span></p><p><span class="math inline">\(r_1 = x_1 - \lfloor px_1 \rfloor + q\)</span>，<span class="math inline">\(r_2 = x_2 + q - \lfloor p(x_2 + q) \rfloor\)</span>，对 <span class="math inline">\(r_1\)</span> 放缩有：</p><p><span class="math display">\[r_1 = x_1 - \lfloor px_1 \rfloor + q \gex_1 - \lfloor p(x_1+q) \rfloor + q \gex_2 + q - \lfloor p(x_2+q) \rfloor = r_2\]</span></p><p>得证，因此不仅从集合中取出的数是单调递减的，新产生的两类数也分别随时间单调递减</p><p>因此可以维护三个单调队列分别维护 <span class="math inline">\(x,l,r\)</span></p><p>每轮比较三个队列的队首元素，弹出队首元素，按照要求分成两个新数字放到 <span class="math inline">\(l, r\)</span> 的队尾</p><p>最终统计时，不要忘记加上偏移量 <span class="math inline">\(delta\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_max</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">-1e9</span>;</span><br><span class="line">    <span class="keyword">if</span> (hhx &lt;= ttx) x = <span class="built_in">max</span>(x, qx[hhx]);</span><br><span class="line">    <span class="keyword">if</span> (hhl &lt;= ttl) x = <span class="built_in">max</span>(x, ql[hhl]);</span><br><span class="line">    <span class="keyword">if</span> (hhr &lt;= ttr) x = <span class="built_in">max</span>(x, qr[hhr]);</span><br><span class="line">    <span class="keyword">if</span> (hhx &lt;= ttx &amp;&amp; x == qx[hhx]) hhx ++ ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (hhl &lt;= ttl &amp;&amp; x == ql[hhl]) hhl ++ ;</span><br><span class="line">    <span class="keyword">else</span> hhr ++ ;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q, &amp;u, &amp;v, &amp;t);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;qx[i]);</span><br><span class="line">    <span class="built_in">sort</span>(qx, qx + n, greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">    ttx = n - <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> delta = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="built_in">get_max</span>() + delta;</span><br><span class="line">        delta += q;</span><br><span class="line">        <span class="keyword">if</span> (i % t == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x);</span><br><span class="line">        <span class="keyword">int</span> templ = x * <span class="number">1ll</span> * u / v;</span><br><span class="line">        <span class="keyword">int</span> tempr = x - templ;</span><br><span class="line">        templ -= delta, tempr -= delta;</span><br><span class="line">        ql[ ++ ttl] = templ, qr[ ++ ttr] = tempr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="built_in">get_max</span>();</span><br><span class="line">        <span class="keyword">if</span> (i % t == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, x + delta);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双端队列">双端队列</h2><h3 id="题目描述-2">题目描述</h3><p>达达现在碰到了一个棘手的问题，有 <span class="math inline">\(N\)</span> 个整数需要排序。</p><p>达达手头能用的工具就是若干个双端队列。</p><p>她从 <span class="math inline">\(1\)</span> 到 <span class="math inline">\(N\)</span> 需要依次处理这 <span class="math inline">\(N\)</span> 个数，对于每个数，达达能做以下两件事：</p><ol type="1"><li><p>新建一个双端队列，并将当前数作为这个队列中的唯一的数；</p></li><li><p>将当前数放入已有的队列的头之前或者尾之后。</p></li></ol><p>对所有的数处理完成之后，达达将这些队列按一定的顺序连接起来后就可以得到一个非降的序列。</p><p>请你求出最少需要多少个双端序列。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N\)</span>，代表整数的个数。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行包括一个整数 <span class="math inline">\(D_i\)</span>，代表所需处理的整数。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表最少需要的双端队列数。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤200000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3</span><br><span class="line">6</span><br><span class="line">0</span><br><span class="line">9</span><br><span class="line">6</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>本题的思维量远大于代码实现难易度，显然正过来按照题意模拟，时间复杂度太高了，不可能完成</p><p>最终数组是有序的，这是本题的一大突破点，诱使我们从结果出发思考解法</p><p>在最优解中，每一个双端队列，元素的值一定是从小到大递增的，符合有序数组子序列性质</p><p>他们的下标是先减少后递增的 “单谷” 形式，因为之后枚举到的数要么接在队首，要么队尾</p><p>因此我们不妨对原数组先排序，然后根据下标找 “单谷” 计算最优解</p><p>本题另一大难点在于数值相同的元素在最优解中的位置（值相同可以互相交换位置，不改变有序性）</p><p>考虑一个贪心策略：</p><ol type="1"><li>如果当前处于下降趋势<ol type="1"><li>下标最大值小于最后一个元素的下标，按下标降序接在后面，整体呈 <code>\</code> 形</li><li>下标最大值大于最后一个元素的下标，按下标升序接在后面，整体呈 <code>\/</code> 形</li></ol></li><li>如果当前处于上升趋势<ol type="1"><li>下标最小值大于最后一个元素的下标，按下标升序接在后面，整体呈 <code>/</code> 形</li><li>下标最小值小于最后一个元素的下标，按下标降序接在后面，整体呈 <code>/\</code> 形</li></ol></li></ol><p>这个启发式策略正确性是显然的，略证</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> last = n + <span class="number">1</span>, k = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> j = i;</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= n &amp;&amp; a[j].x == a[i].x) j ++ ;</span><br><span class="line">    <span class="keyword">int</span> max_idx = a[j - <span class="number">1</span>].y, min_idx = a[i].y;</span><br><span class="line">    <span class="keyword">if</span> (~k)  <span class="comment">//上升</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (last &lt; min_idx) last = max_idx;</span><br><span class="line">        <span class="keyword">else</span> last = min_idx, k = <span class="number">-1</span>, res ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>    <span class="comment">//下降</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (last &gt; max_idx) last = min_idx;</span><br><span class="line">        <span class="keyword">else</span> last = max_idx, k = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大子序和">最大子序和</h2><h3 id="题目描述-3">题目描述</h3><p>输入一个长度为 <span class="math inline">\(n\)</span> 的整数序列，从中找出一段长度不超过 <span class="math inline">\(m\)</span> 的连续子序列，使得子序列中所有数的和最大。</p><p>注意： 子序列的长度至少是 <span class="math inline">\(1\)</span>。</p><p>输入格式 第一行输入两个整数 <span class="math inline">\(n,m\)</span>。</p><p>第二行输入 <span class="math inline">\(n\)</span> 个数，代表长度为 <span class="math inline">\(n\)</span> 的整数序列。</p><p>同一行数之间用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表该序列的最大子序和。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n,m≤300000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 4</span><br><span class="line">1 -3 5 1 -2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><blockquote><p>这是我以前在 DP 中写过的部分，就不在额外写 lyd 的做法了</p></blockquote><p>看到求一段 <strong>连续区间</strong> 的和的问题，会想到用 <strong>前缀和</strong> 进行优化，然后就是 <strong>枚举</strong> 区间的问题</p><p><strong>暴力枚举</strong> 子区间是一种方法，但没有优化空间；因此不妨 <strong>枚举</strong> 子区间的 <strong>右端点</strong></p><p><strong>状态表示-集合</strong> <span class="math inline">\(f_i\)</span>：以 <span class="math inline">\(i\)</span> 为 <strong>右端点</strong>，长度 <strong>不超过</strong> <span class="math inline">\(m\)</span> <strong>连续子区间</strong></p><p><strong>状态表示-属性</strong> <span class="math inline">\(f_i\)</span>：区间的总和最大 <span class="math inline">\(Max\)</span></p><p><strong>状态计算</strong> <span class="math inline">\(f_i\)</span>：</p><p>$$ f_i = <br /></p>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x11 栈</title>
      <link href="/Algorithm/lydguid/z0x11_%E6%A0%88/"/>
      <url>/Algorithm/lydguid/z0x11_%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<h1 id="栈的基础概念">栈的基础概念</h1><p>栈的<strong>逻辑存储结构</strong>属于 “<strong>受限线性表</strong>”，其 “<strong>受限</strong>” 的部分是只能在线性表的一端执行插入和删除</p><p>栈的修改是按照 <strong>后进先出</strong> 的原则进行的，因此栈通常被称为是 <strong>后进先出</strong>（<strong>last in first out</strong>）<strong>表</strong>，简称 <strong>LIFO 表</strong></p><p>通常，允许插入删除的一端称为 “<strong>栈顶</strong>”，不允许的一端称为 “<strong>栈底</strong>”</p><p><strong>物理存储实现</strong> 可以在 C++ 中用一个数组和一个变量（记录栈顶位置）来实现栈存储</p><h1 id="c-stl-中的栈">C++ STL 中的栈</h1><p>C++ 中的 STL 也提供了一个容器 <code>std::stack</code>，使用前需要引入 <code>stack</code> 头文件</p><p><strong>STL 中对 stack 的定义</strong>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// clang-format off</span></span><br><span class="line"><span class="keyword">template</span>&lt;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span>,</span></span><br><span class="line"><span class="class">    <span class="keyword">class</span> <span class="title">Container</span> =</span> std::deque&lt;T&gt;</span><br><span class="line">&gt; <span class="class"><span class="keyword">class</span> <span class="title">stack</span>;</span></span><br></pre></td></tr></table></figure><p><code>T</code> 为 <code>stack</code> 中要存储的数据类型。<code>Container</code> 为用于存储元素的底层容器类型。</p><p><code>STL</code> 容器 <code>std::vector、std::deque</code> 和 <code>std::list</code> 满足这些要求。如果不指定，则默认使用 <code>std::deque</code> 作为底层容器。</p><p><code>STL</code> 中的 <code>stack</code> 容器提供了一众成员函数以供调用，其中较为常用的有：</p><ul><li>元素访问<ul><li><code>st.top()</code> 返回栈顶</li></ul></li><li>修改<ul><li><code>st.push()</code> 插入传入的参数到栈顶</li><li><code>st.pop()</code> 弹出栈顶</li></ul></li><li>容量<ul><li><code>st.empty()</code> 返回是否为空</li><li><code>st.size()</code> 返回元素数量</li></ul></li></ul><p>此外，<code>std::stack</code> 还提供了一些运算符。较为常用的是使用赋值运算符 <code>=</code> 为 <code>stack</code> 赋值</p><h1 id="表达式求值">表达式求值</h1><p>表达式求值是栈的一个经典应用，表达式类型分为三种：前缀、中缀、后缀表达式</p><p><strong>后缀表达式求值</strong></p><ol type="1"><li>建立一个用于存数的栈，逐一扫描该后缀表达式的元素<ol type="1"><li>如果遇到一个数，则把数入栈</li><li>如果遇到运算符，就取出栈顶的两个数进行计算，把结果存回栈中</li></ol></li><li>扫描完成后，栈中恰好剩下一个数，就是该后缀表达式的值</li></ol><p><strong>中缀表达式求转后缀表达式</strong></p><ol type="1"><li>建立一个用于存运算符的栈，逐一扫描该中缀表达式的元素<ol type="1"><li>如果遇到一个数，输出该数</li><li>如果遇到左括号，把左括号入栈</li><li>如果遇到右括号，不断取出栈顶并输出，直到栈顶为左括号，然后把左括号出栈</li><li>如果遇到运算符，只要栈顶符号的优先级不低于新符号，就不断取出栈顶并输出，最后把新符号进栈。优先级为乘除 &gt; 加减 &gt; 左括号</li></ol></li><li>一次取出并输出栈中的所有剩余符号，最终输出的序列就是一个与原中缀表达式等价的后缀表达式</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中缀表达式转后缀表达式，同时对后缀表达式求值 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">nums.<span class="built_in">clear</span>();</span><br><span class="line">ops.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>, val = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="comment">// 中缀表达式的一个数字 </span></span><br><span class="line"><span class="keyword">if</span> (s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">val = val * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (s[i+<span class="number">1</span>] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i+<span class="number">1</span>] &lt;= <span class="string">&#x27;9&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">// 后缀表达式的一个数，直接入栈 </span></span><br><span class="line">nums.<span class="built_in">push_back</span>(val);</span><br><span class="line">val = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中缀表达式的左括号 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>) ops.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line"><span class="comment">// 中缀表达式的右括号 </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">while</span> (*ops.<span class="built_in">rbegin</span>() != <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line"><span class="comment">// 处理后缀表达式的一个运算符 </span></span><br><span class="line"><span class="built_in">calc</span>(*ops.<span class="built_in">rbegin</span>());</span><br><span class="line">ops.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line">ops.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中缀表达式的加减乘除号 </span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (ops.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">grade</span>(*ops.<span class="built_in">rbegin</span>()) &gt;= <span class="built_in">grade</span>(s[i])) &#123;</span><br><span class="line"><span class="built_in">calc</span>(*ops.<span class="built_in">rbegin</span>());</span><br><span class="line">ops.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line">ops.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (ops.<span class="built_in">size</span>()) &#123;</span><br><span class="line"><span class="built_in">calc</span>(*ops.<span class="built_in">rbegin</span>());</span><br><span class="line">ops.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 后缀表达式栈中最后剩下的数就是答案 </span></span><br><span class="line"><span class="keyword">return</span> *nums.<span class="built_in">begin</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>中缀表达式的递归求值</strong></p><p>目标：求解中缀表达式 <span class="math inline">\(S[1 \sim N]\)</span> 的值 子问题：求解中缀表达式 <span class="math inline">\(S\)</span> 的子区间表达式 <span class="math inline">\(S[L \sim R]\)</span> 的值</p><ol type="1"><li>在 <span class="math inline">\(L \sim R\)</span> 中考虑没有被任何括号包含的运算符：<ol type="1"><li>若存在加减号，选其中最后一个分成左右两半递归，结果相加减，返回</li><li>若存在乘除号，选其中最后一个分成左右两半递归，结果相乘除，返回</li></ol></li><li>若不存在没有被任何括号包含的运算符<ol type="1"><li>若首尾字符是括号，递归求解 <span class="math inline">\(S[L + 1 \sim R - 1]\)</span>，把结果返回</li><li>否则，说明区间 <span class="math inline">\(S[L \sim R]\)</span> 是一个数，直接返回数值</li></ol></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">// 寻找未被任何括号包含的最后一个加减号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r, j = <span class="number">0</span>; i &gt;= l; i--)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>) j++;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>) j--;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; s[i] == <span class="string">&#x27;+&#x27;</span>) <span class="keyword">return</span> <span class="built_in">calc</span>(l, i - <span class="number">1</span>) + <span class="built_in">calc</span>(i + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; s[i] == <span class="string">&#x27;-&#x27;</span>) <span class="keyword">return</span> <span class="built_in">calc</span>(l, i - <span class="number">1</span>) - <span class="built_in">calc</span>(i + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 寻找未被任何括号包含的最后一个乘除号</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r, j = <span class="number">0</span>; i &gt;= l; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>) j++;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>) j--;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; s[i] == <span class="string">&#x27;*&#x27;</span>) <span class="keyword">return</span> <span class="built_in">calc</span>(l, i - <span class="number">1</span>) * <span class="built_in">calc</span>(i + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> &amp;&amp; s[i] == <span class="string">&#x27;/&#x27;</span>) <span class="keyword">return</span> <span class="built_in">calc</span>(l, i - <span class="number">1</span>) / <span class="built_in">calc</span>(i + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 首尾是括号</span></span><br><span class="line"><span class="keyword">if</span> (s[l] == <span class="string">&#x27;(&#x27;</span>&amp;&amp;s[r] == <span class="string">&#x27;)&#x27;</span>) <span class="keyword">return</span> <span class="built_in">calc</span>(l + <span class="number">1</span>, r - <span class="number">1</span>);</span><br><span class="line"><span class="comment">// 是一个数</span></span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i++) ans = ans * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="习题">习题</h1><h2 id="包含min函数的栈">包含min函数的栈</h2><h3 id="题目描述">题目描述</h3><p>设计一个支持 push，pop，top 等操作并且可以在O(1)时间内检索出最小元素的堆栈。</p><ul><li>push(x) – 将元素 x 插入栈中</li><li>pop( ) – 移除栈顶元素</li><li>top( ) – 得到栈顶元素</li><li>getMin( ) – 得到栈中最小元素</li></ul><p><strong>数据范围</strong></p><p>操作命令总数 <span class="math inline">\([0,100]\)</span>。</p><p><strong>样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MinStack minStack = new MinStack();</span><br><span class="line">minStack.push(-1);</span><br><span class="line">minStack.push(3);</span><br><span class="line">minStack.push(-4);</span><br><span class="line">minStack.getMin();   --&gt; Returns -4.</span><br><span class="line">minStack.pop();</span><br><span class="line">minStack.top();      --&gt; Returns 3.</span><br><span class="line">minStack.getMin();   --&gt; Returns -1.</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>栈本身是一个用于实现递归的辅助数据结构，所以执行退栈操作，相当于回溯到之前某个时间点的状态</p><p>因此，我们考虑用一个线性数据结构记录操作过程中，每个时间点栈中最小值的状态</p><p>该线性数据结构要支持在尾部 <span class="math inline">\(O(1)\)</span> 时间实现插入删除，从而与模拟的栈保持同步</p><p>因此我们考虑引入第二个辅助栈，记录历史每个时刻的最小值，他需要完成</p><ol type="1"><li>主栈插入新元素时，辅助栈维护的最小值更新为原最小值和信最小值中最小的那个</li><li>主栈弹出栈顶元素，辅助栈弹出栈顶元素，和主栈一起回到上个时刻的状态</li><li>主栈返回最小元素，辅助栈栈顶元素返回即可</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MinStack</span>() &#123;</span><br><span class="line">        stkmin.<span class="built_in">push</span>(INF);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        stkini.<span class="built_in">push</span>(x);</span><br><span class="line">        stkmin.<span class="built_in">push</span>(<span class="built_in">min</span>(x, <span class="built_in">getMin</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        stkini.<span class="built_in">pop</span>();</span><br><span class="line">        stkmin.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stkini.<span class="built_in">top</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stkmin.<span class="built_in">top</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    stack&lt;<span class="keyword">int</span>&gt; stkini, stkmin;</span><br><span class="line">    <span class="keyword">int</span> INF = <span class="number">1e9</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="编辑器">编辑器</h2><h3 id="题目描述-1">题目描述</h3><p>你将要实现一个功能强大的整数序列编辑器。</p><p>在开始时，序列是空的。</p><p>编辑器共有五种指令，如下：</p><p>1、<code>I x</code>，在光标处插入数值 <code>x</code>。 2、<code>D</code>，将光标前面的第一个元素删除，如果前面没有元素，则忽略此操作。 3、<code>L</code>，将光标向左移动，跳过一个元素，如果左边没有元素，则忽略此操作。 4、<code>R</code>，将光标向右移动，跳过一个元素，如果右边没有元素，则忽略次操作。 5、<code>Q k</code>，假设此刻光标之前的序列为 <span class="math inline">\(a_1,a_2,…,a_n\)</span>，输出 <span class="math inline">\(\max\limits_{1≤i≤k}S_i\)</span>，其中 <span class="math inline">\(S_i=a_1+a_2+…+a_i\)</span>。</p><p><strong>输入格式</strong></p><p>第一行包含一个整数 <code>Q</code>，表示指令的总数。</p><p>接下来 <code>Q</code> 行，每行一个指令，具体指令格式如题目描述。</p><p><strong>输出格式</strong></p><p>每一个 <code>Q k</code> 指令，输出一个整数作为结果，每个结果占一行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤Q≤10^6\)</span>, <span class="math inline">\(|x|≤10^3\)</span>, <span class="math inline">\(1≤k≤n\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">I 2</span><br><span class="line">I -1</span><br><span class="line">I 1</span><br><span class="line">Q 3</span><br><span class="line">L</span><br><span class="line">D</span><br><span class="line">R</span><br><span class="line">Q 2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure></p><h3 id="解析-1">解析</h3><p>本题的特殊点，也是突破点在于，<code>I D L R</code> 四种操作都在光标位置处发生，并且操作完成后至多移动 1 个位置，因此也就允许了我们用受限线性表去快速操作队首队尾完成该操作</p><blockquote><p>这题的进阶版，就是去掉了光标每次只能移动一步的限制，使得增删改的操作可以在任意点进行，那时就需要写一个巨难写的数据结构 — “块状链表”</p></blockquote><p>根据 “始终在序列中间某个指定位置进行修改” 的性质，联想到动态中位数的 “对顶堆” 做法，不难想到类似的 “对顶栈” 做法</p><p>用左侧栈维护光标所指以及光标之前的序列，用右侧栈维护光标之后的序列</p><p>同时在光标以及光标之前的位置维护一个前缀和数字 <span class="math inline">\(s_i\)</span></p><p>再额外用一个栈记录前缀和数组 <span class="math inline">\(s_i\)</span> 在任意时刻的前缀最大值，即可完成本题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> stk_l[N], stk_r[N], tt_l = <span class="number">0</span>, tt_r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> s[N], f[N] = &#123;-INF&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update_prefix</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s[tt_l] = s[tt_l - <span class="number">1</span>] + t;</span><br><span class="line">    f[tt_l] = <span class="built_in">max</span>(f[tt_l - <span class="number">1</span>], s[tt_l]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> op[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">int</span> t, Q;</span><br><span class="line">    cin &gt;&gt; Q;</span><br><span class="line">    <span class="keyword">while</span> (Q -- )</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span> (*op == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; t;</span><br><span class="line">            stk_l[ ++ tt_l] = t;</span><br><span class="line">            <span class="built_in">update_prefix</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (*op == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!tt_l) <span class="keyword">continue</span>;</span><br><span class="line">            tt_l -- ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (*op == <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!tt_l) <span class="keyword">continue</span>;</span><br><span class="line">            stk_r[ ++ tt_r] = stk_l[tt_l -- ];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (*op == <span class="string">&#x27;R&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!tt_r) <span class="keyword">continue</span>;</span><br><span class="line">            stk_l[ ++ tt_l] = stk_r[tt_r -- ];</span><br><span class="line">            <span class="built_in">update_prefix</span>(stk_l[tt_l]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; t;</span><br><span class="line">            cout &lt;&lt; f[t] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="火车进栈">火车进栈</h2><h3 id="题目描述-2">题目描述</h3><p>这里有 <span class="math inline">\(n\)</span> 列火车将要进站再出站，但是，每列火车只有 <span class="math inline">\(1\)</span> 节，那就是车头。</p><p>这 <span class="math inline">\(n\)</span> 列火车按 <span class="math inline">\(1\)</span> 到 <span class="math inline">\(n\)</span> 的顺序从东方左转进站，这个车站是南北方向的，它虽然无限长，只可惜是一个死胡同，而且站台只有一条股道，火车只能倒着从西方出去，而且每列火车必须进站，先进后出。</p><p>也就是说这个火车站其实就相当于一个栈，每次可以让右侧头火车进栈，或者让栈顶火车出站。</p><p>车站示意如图：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">出站&lt;——    &lt;——进站</span><br><span class="line">         |车|</span><br><span class="line">         |站|</span><br><span class="line">         |__|</span><br></pre></td></tr></table></figure><p>现在请你按《字典序》输出前 <span class="math inline">\(20\)</span> 种可能的出栈方案。</p><p><strong>输入格式</strong></p><p>输入一个整数 <span class="math inline">\(n\)</span>，代表火车数量。</p><p><strong>输出格式</strong></p><p>按照《字典序》输出前 <span class="math inline">\(20\)</span> 种答案，每行一种，不要空格。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤20\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">123</span><br><span class="line">132</span><br><span class="line">213</span><br><span class="line">231</span><br><span class="line">321</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>模拟题，模拟火车进出站的过程，至于要求字典序最小，我们就让出栈操作枚举在入栈之前即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!cnt) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (path.<span class="built_in">size</span>() == n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;it: path) cout &lt;&lt; it;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        cnt -- ;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//出站</span></span><br><span class="line">    <span class="keyword">if</span> (stk.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        path.<span class="built_in">push_back</span>(stk.<span class="built_in">top</span>());</span><br><span class="line">        stk.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">dfs</span>(u);</span><br><span class="line">        stk.<span class="built_in">push</span>(path.<span class="built_in">back</span>());</span><br><span class="line">        path.<span class="built_in">pop_back</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//入站</span></span><br><span class="line">    <span class="keyword">if</span> (u &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        stk.<span class="built_in">push</span>(u);</span><br><span class="line">        <span class="built_in">dfs</span>(u + <span class="number">1</span>);</span><br><span class="line">        stk.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="火车进出栈问题">火车进出栈问题</h2><h3 id="题目描述-3">题目描述</h3><p>一列火车 <span class="math inline">\(n\)</span> 节车厢，依次编号为 <span class="math inline">\(1,2,3,…,n\)</span>。</p><p>每节车厢有两种运动方式，进栈与出栈，问 <span class="math inline">\(n\)</span> 节车厢出栈的可能排列方式有多少种。</p><p><strong>输入格式</strong></p><p>输入一个整数 <span class="math inline">\(n\)</span>，代表火车的车厢数。</p><p><strong>输出格式</strong></p><p>输出一个整数 <span class="math inline">\(s\)</span> 表示 <span class="math inline">\(n\)</span> 节车厢出栈的可能排列方式数量。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤60000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p>本题的做法很多，是一个经典的问题</p><p><strong>第一种是爆搜</strong> <span class="math inline">\(O(2^n)\)</span>，即利用上一题的递归，在输出答案的地方进行统计</p><p><strong>第二种是递推</strong> <span class="math inline">\(O(n^2)\)</span>，本题只要求计算出方案数，而非具体方案，于是可以通过递推直接进行统计</p><p>设 <span class="math inline">\(S_N\)</span> 表示进栈顺序为 <span class="math inline">\(1, 2, \cdots , N\)</span> 时可能的出栈序列总数，根据递推理论，将问题分解成若干类似子问题</p><p>考虑 "<span class="math inline">\(1\)</span>" 这个数排在最终出栈序列中的位置，如果最后 “<span class="math inline">\(1\)</span>” 这个数排在第 <span class="math inline">\(k\)</span> 个，那么整个序列进出栈过程为：</p><ol type="1"><li>整数 <span class="math inline">\(1\)</span> 入栈</li><li>整数 <span class="math inline">\(2\)</span> ~ <span class="math inline">\(k\)</span> 这 <span class="math inline">\(k - 1\)</span> 个数按某种顺序进出栈</li><li>整数 <span class="math inline">\(1\)</span> 出栈，排在第 <span class="math inline">\(k\)</span> 位</li><li>整数 <span class="math inline">\(k+1\)</span> ~ <span class="math inline">\(N\)</span> 这 <span class="math inline">\(N - k\)</span> 个数按某种顺序进出栈</li></ol><p>整个问题就变被 “<span class="math inline">\(1\)</span>” 这个数划分成了 “<span class="math inline">\(k-1\)</span> 个数进出栈” 和 “<span class="math inline">\(N - k\)</span> 个数进出栈” 这两个子问题，得到递推式如下：</p><p><span class="math display">\[S_N = \sum_{i=1}^N (S_{i-1} \times S_{n-i})\]</span></p><p><strong>第三种是动态规划</strong> <span class="math inline">\(O(n^2)\)</span>，用 <span class="math inline">\(f[i, j]\)</span> 表示当前有 <span class="math inline">\(i\)</span> 个数从栈中移出，有 <span class="math inline">\(j\)</span> 个数还在栈中的方案总数</p><blockquote><p>我这里状态定义和蓝书上不太一样，我个人认为这样定义比较容易接受一点</p></blockquote><p>初始状态为 <span class="math inline">\(f[0, 0] = 1\)</span> 目标状态为 <span class="math inline">\(f[n, 0]\)</span></p><p>状态计算根据最后一步进行递推，可能是栈中数字出栈，也可能是新数字加入栈中，有递推式：</p><p><span class="math display">\[f[i, j] = f[i - 1, j + 1] + f[i, j - 1]\]</span></p><p><strong>第三种是组合数学</strong> <span class="math inline">\(O(n)\)</span>，<span class="math inline">\(n\)</span> 个火车进出栈方案数等价于第 <span class="math inline">\(n\)</span> 项 Catalan 数</p><p>求出组合数 <span class="math inline">\(\dfrac{\dbinom{2n}{n}}{n-1}\)</span> 即为 Catalan 数第 <span class="math inline">\(n\)</span> 项</p><p><strong>Catalan 数简单推导</strong></p><p>在直角坐标系中，从原点出发，令进栈为向右移动一步，出栈为向上移动一步，目的地为 <span class="math inline">\((n, n)\)</span></p><p>则合法的方案应是整条路线都不越过 <span class="math inline">\(y=x\)</span> 这条线的路径</p><p>且对于任意一条不合法的路线，都必定越过 <span class="math inline">\(y=x\)</span> 并与 <span class="math inline">\(y=x+1\)</span> 有交点</p><p>我们将图像从路线与 <span class="math inline">\(y=x+1\)</span> 的第一个交点往后的图像关于 <span class="math inline">\(y=x+1\)</span> 向上翻折，目的就变为 <span class="math inline">\((n + 1, n - 1)\)</span></p><p>因此任意一条不合法路线都对应一条从原点出发到 <span class="math inline">\((n + 1, n - 1)\)</span> 的路线，且这是双射关系</p><p>所以合法方案数为从原点出发所有到 <span class="math inline">\((n, n)\)</span> 的方案数 - 所有到 <span class="math inline">\((n + 1, n - 1)\)</span> 的方案数</p><p><span class="math display">\[Catalan(n) = \dbinom{2n}{n} - \dbinom{2n}{n - 1} = \frac{1}{n - 1} \dbinom{2n}{n}\]</span></p><blockquote><p>组合计数详细内容会在数学章节具体讲解</p></blockquote><p>不想写高精度了，直接上了 py3</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">n=<span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(math.<span class="built_in">factorial</span>(<span class="number">2</span>*n)<span class="comment">//math.factorial(n)//math.factorial(n)//(n+1))</span></span><br></pre></td></tr></table></figure><h2 id="直方图中最大的矩形">直方图中最大的矩形</h2><h3 id="题目描述-4">题目描述</h3><p>直方图是由在公共基线处对齐的一系列矩形组成的多边形。</p><p>矩形具有相等的宽度，但可以具有不同的高度。</p><p>例如，图例左侧显示了由高度为 <span class="math inline">\(2,1,4,5,1,3,3\)</span> 的矩形组成的直方图，矩形的宽度都为 <span class="math inline">\(1\)</span>：</p><p><img src="https://www.acwing.com/media/article/image/2019/01/14/19_eac6c46017-2559_1.jpg" /></p><p>通常，直方图用于表示离散分布，例如，文本中字符的频率。</p><p>现在，请你计算在公共基线处对齐的直方图中最大矩形的面积。</p><p>图例右图显示了所描绘直方图的最大对齐矩形。</p><p><strong>输入格式</strong></p><p>输入包含几个测试用例。</p><p>每个测试用例占据一行，用以描述一个直方图，并以整数 <span class="math inline">\(n\)</span> 开始，表示组成直方图的矩形数目。</p><p>然后跟随 <span class="math inline">\(n\)</span> 个整数 <span class="math inline">\(h_1，…，h_n\)</span>。</p><p>这些数字以从左到右的顺序表示直方图的各个矩形的高度。</p><p>每个矩形的宽度为 <span class="math inline">\(1\)</span>。</p><p>同行数字用空格隔开。</p><p>当输入用例为 <span class="math inline">\(n=0\)</span> 时，结束输入，且该用例不用考虑。</p><p><strong>输出格式</strong></p><p>对于每一个测试用例，输出一个整数，代表指定直方图中最大矩形的区域面积。</p><p>每个数据占一行。</p><p>请注意，此矩形必须在公共基线处对齐。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤100000\)</span>, <span class="math inline">\(0≤h_i≤1000000000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">7 2 1 4 5 1 3 3</span><br><span class="line">4 1000 1000 1000 1000</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">4000</span><br></pre></td></tr></table></figure><h3 id="解析-4">解析</h3><p><strong>蓝书给出的解法:</strong></p><p>如果下一个矩形的高度比上一个小，那么该矩形想利用之前的矩形一起构成较大的面积时，这块面积的高度都不可能超过该矩形自己的高度</p><p>既然没有用处，就可以把高于当前柱子的直方柱都删掉，用一个宽度累加、高度为该举行自己的高度的新矩形代替，这样就不会使后续的计算产生影响</p><p>于是我们维护的轮廓就变成了一个高度始终单调递增的矩形序列，问题就变得可解了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">a[n + <span class="number">1</span>] = tt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n + <span class="number">1</span>; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] &gt; stk[tt]) </span><br><span class="line">    &#123;</span><br><span class="line">        stk[ ++ tt] = a[i], w[tt] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (stk[tt] &gt; a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            width += w[tt];</span><br><span class="line">            res = <span class="built_in">max</span>(res, (<span class="keyword">long</span> <span class="keyword">long</span>) width * stk[tt]);</span><br><span class="line">            tt -- ;</span><br><span class="line">        &#125;</span><br><span class="line">        stk[ ++ tt] = a[i], w[tt] = width + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>y总的解法</strong></p><p>这个解法思维度要求就低很多了，求以 <span class="math inline">\(h_i\)</span> 为高度的矩形</p><p>其左侧最远应该是碰到第一个低于 <span class="math inline">\(h_i\)</span> 的柱子，右侧同理</p><p>这样枚举出来的矩形一定是以 <span class="math inline">\(h_i\)</span> 为高的最大矩形</p><p>因此我们对序列从左往右维护一个单调栈，求出任意点左侧第一个小于他高度的柱子下标</p><p>同理也求出右侧第一个小于他高度的柱子下标，设这两个值分别为 <span class="math inline">\(l_i, r_i\)</span></p><p>则显然该矩形最大面积为 <span class="math inline">\(S = (r_i - l_i - 1) \times h_i\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">a[<span class="number">0</span>] = a[n + <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cin &gt;&gt; a[i];</span><br><span class="line">tt = <span class="number">0</span>, q[tt] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (a[i] &lt;= a[q[tt]]) tt -- ;</span><br><span class="line">    l[i] = q[tt];</span><br><span class="line">    q[ ++ tt] = i;</span><br><span class="line">&#125;</span><br><span class="line">tt = <span class="number">0</span>, q[tt] = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; i -- )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (a[i] &lt;= a[q[tt]]) tt -- ;</span><br><span class="line">    r[i] = q[tt];</span><br><span class="line">    q[ ++ tt] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    res = <span class="built_in">max</span>(res, (<span class="keyword">long</span> <span class="keyword">long</span>) a[i] * (r[i] - l[i] - <span class="number">1</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x08 总结与练习</title>
      <link href="/Algorithm/lydguid/z0x08_%E6%80%BB%E7%BB%93%E4%B8%8E%E7%BB%83%E4%B9%A0/"/>
      <url>/Algorithm/lydguid/z0x08_%E6%80%BB%E7%BB%93%E4%B8%8E%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="章节总结">章节总结</h1><p>任何问题都有其涉及的范围，称之为问题的“状态空间”，求解一个问题，就是在这个状态空间里的遍历与映射</p><p>递推与递归是遍历状态空间的两种基本形式</p><p>接下来的章节探讨的各种算法，则是对于 “遍历顺序” “遍历过程中的决策方法” “状态空间中各状态之间的映射方式” 给出的指导</p><ol type="1"><li><p>枚举与模拟是按照问题的直接表述形式对状态空间进行朴素的遍历</p></li><li><p>搜索则是带有一定的选择性、决策性的遍历</p></li><li><p>贪心是在每步决策时采取局部最优策略的遍历</p></li><li><p>动态规划则是基于全局考量的分阶段、按维度、无重复遍历</p></li><li><p>二分、倍增以及与排序相关的一些算法会对状态空间实施划分、等价、代表、拼接等手段，直接降低遍历时需要面对的时空规模</p></li></ol><p>本章知识点汇总：</p><ol type="1"><li>位运算<ol type="1"><li>补码表示法，理解 C++ 无符号、有符号整数在计算机中的存储方式</li><li>各种按位运算，包括取位、置位、移位等，以及一些常用技巧</li><li>快速幂，64位整数乘法</li><li>二进制状态压缩，使用二进制数对状态进行压缩、提取的方法</li></ol></li><li>枚举、模拟、递推<ol type="1"><li>能想象问题 “状态空间”，理解各种基本算法其实是对状态空间的遍历与映射</li><li>常见的枚举形式，无法设计有效算法时能够通过美剧的方式直接遍历状态空间</li><li>通过模拟，主要侧重代码实现能力的训练</li><li>递推边界、目标、递推公式的发现与设计</li><li>一维、二维前缀和的递推与应用</li></ol></li><li>递归<ol type="1"><li>理解递归思想、子问题、递归边界、回溯时还原现场</li><li>递归实现常见规模的状态空间的遍历</li><li>分治思想，对问题进行划分、递归、再合并</li><li>分形，主要练习对子问题的划分、提取、抽象</li><li>递归的机器实现，转化成非递归的通用方式</li></ol></li><li>二分<ol type="1"><li>整数集合二分法、实数域二分法</li><li>单峰函数的三分法</li><li>二分答案，把求解转化为判定</li></ol></li><li>排序<ol type="1"><li>各种排序算法</li><li>离散化</li><li>中位数相关问题，包括货仓选址、环形均分纸牌、动态维护中位数等</li><li>求第 k 个数的线性算法</li><li>逆序对相关问题，使用归并排序求逆序对</li></ol></li><li>倍增<ol type="1"><li>序列上的倍增算法及其应用</li><li>RMQ-ST 算法</li></ol></li><li>贪心<ol type="1"><li>贪心思想及其证明手段，主要通过较多题目开拓视野、归纳总结</li></ol></li></ol><h1 id="习题">习题</h1><h2 id="飞行员兄弟">飞行员兄弟</h2><h3 id="题目描述">题目描述</h3><p>“飞行员兄弟”这个游戏，需要玩家顺利的打开一个拥有 <span class="math inline">\(16\)</span> 个把手的冰箱。</p><p>已知每个把手可以处于以下两种状态之一：打开或关闭。</p><p>只有当所有把手都打开时，冰箱才会打开。</p><p>把手可以表示为一个 <span class="math inline">\(4×4\)</span> 的矩阵，您可以改变任何一个位置 <span class="math inline">\([i,j]\)</span> 上把手的状态。</p><p>但是，这也会使得第 <span class="math inline">\(i\)</span> 行和第 <span class="math inline">\(j\)</span> 列上的所有把手的状态也随着改变。</p><p>请你求出打开冰箱所需的切换把手的次数最小值是多少。</p><p><strong>输入格式</strong></p><p>输入一共包含四行，每行包含四个把手的初始状态。</p><p>符号 <code>+</code> 表示把手处于闭合状态，而符号 <code>-</code> 表示把手处于打开状态。</p><p>至少一个手柄的初始状态是关闭的。</p><p><strong>输出格式</strong></p><p>第一行输出一个整数 <span class="math inline">\(N\)</span>，表示所需的最小切换把手次数。</p><p>接下来 <span class="math inline">\(N\)</span> 行描述切换顺序，每行输出两个整数，代表被切换状态的把手的行号和列号，数字之间用空格隔开。</p><p>注意：如果存在多种打开冰箱的方式，则按照优先级整体从上到下，同行从左到右打开。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤i,j≤4\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-+--</span><br><span class="line">----</span><br><span class="line">----</span><br><span class="line">-+--</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 1</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">4 1</span><br><span class="line">4 3</span><br><span class="line">4 4</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>显然最优解中，每个位置至多操作一次</p><p>因此直接二进制枚举即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> op = <span class="number">0</span>; op &lt; <span class="number">1</span> &lt;&lt; n * n; op ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">memcpy</span>(a, b, <span class="keyword">sizeof</span> b);</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (op &gt;&gt; i * n + j &amp; <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">turn</span>(i, j), cnt ++ ;</span><br><span class="line">    <span class="keyword">if</span> (cnt &gt;= res) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (ok) res = cnt, state = op;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="占卜diy">占卜DIY</h2><h3 id="题目描述-1">题目描述</h3><p>达达学会了使用扑克 DIY 占卜。</p><p>方法如下：</p><p>一副去掉大小王的扑克共 <span class="math inline">\(52\)</span> 张，打乱后均分为 <span class="math inline">\(13\)</span> 堆，编号 <span class="math inline">\(1∼13\)</span>，每堆 <span class="math inline">\(4\)</span> 张，其中第 <span class="math inline">\(13\)</span> 堆称作“生命牌”，也就是说你有 <span class="math inline">\(4\)</span> 条命。</p><p>这里边，<span class="math inline">\(4\)</span> 张 <span class="math inline">\(K\)</span> 被称作死神。</p><p>初始状态下，所有的牌背面朝上扣下。</p><p>流程如下：</p><ol type="1"><li><p>抽取生命牌中的最上面一张(第一张)。</p></li><li><p>把这张牌翻开，正面朝上，放到牌上的数字所对应编号的堆的最上边。(例如抽到 <span class="math inline">\(2\)</span>，正面朝上放到第 <span class="math inline">\(2\)</span> 堆牌最上面，又比如抽到 <span class="math inline">\(J\)</span>，放到第 <span class="math inline">\(11\)</span> 堆牌最上边，注意是正面朝上放)</p></li><li><p>从刚放了牌的那一堆最底下(最后一张)抽取一张牌，重复第 <span class="math inline">\(2\)</span> 步。（例如你上次抽了 <span class="math inline">\(2\)</span>，放到了第二堆顶部，现在抽第二堆最后一张发现是 <span class="math inline">\(8\)</span>，又放到第 <span class="math inline">\(8\)</span> 堆顶部.........）</p></li><li><p>在抽牌过程中如果抽到 <span class="math inline">\(K\)</span>，则称死了一条命，就扔掉 <span class="math inline">\(K\)</span> 再从第 <span class="math inline">\(1\)</span> 步开始。</p></li><li><p>当发现四条命都死了以后，统计现在每堆牌上边正面朝上的牌的数目，只要同一数字的牌出现 <span class="math inline">\(4\)</span> 张正面朝上的牌(比如 <span class="math inline">\(4\)</span> 个 <span class="math inline">\(A\)</span>)，则称“开了一对”，当然 <span class="math inline">\(4\)</span> 个 <span class="math inline">\(K\)</span> 是不算的。</p></li><li><p>统计一共开了多少对，开了 <span class="math inline">\(0\)</span> 对称作”极凶”，<span class="math inline">\(1∼2\)</span> 对为“大凶”，<span class="math inline">\(3\)</span> 对为“凶”，<span class="math inline">\(4∼5\)</span> 对为“小凶”，<span class="math inline">\(6\)</span> 对为“中庸”，<span class="math inline">\(7∼8\)</span> 对“小吉”，<span class="math inline">\(9\)</span> 对为“吉”，<span class="math inline">\(10∼11\)</span> 为“大吉”，<span class="math inline">\(12\)</span> 为“满堂开花，极吉”。</p></li></ol><p><strong>输入格式</strong></p><p>一共输入 <span class="math inline">\(13\)</span> 行数据，每行四个数字或字母，表示每堆牌的具体牌型(不区分花色只区分数字)，每堆输入的顺序为从上到下。</p><p>为了便于读入，用 <span class="math inline">\(0\)</span> 代表 <span class="math inline">\(10\)</span>。</p><p>同行数字用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表统计得到的开出的总对数。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">8 5 A A</span><br><span class="line">K 5 3 2</span><br><span class="line">9 6 0 6</span><br><span class="line">3 4 3 4</span><br><span class="line">3 4 4 5</span><br><span class="line">5 6 7 6</span><br><span class="line">8 7 7 7</span><br><span class="line">9 9 8 8</span><br><span class="line">9 0 0 0</span><br><span class="line">K J J J</span><br><span class="line">Q A Q K</span><br><span class="line">J Q 2 2</span><br><span class="line">A K Q 2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>模拟题，我是用双端队列来模拟的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!t) <span class="keyword">return</span>;</span><br><span class="line">    cnt[t] ++ ;</span><br><span class="line">    <span class="keyword">int</span> ne = cards[t].<span class="built_in">back</span>(); cards[t].<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="built_in">dfs</span>(ne);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分形">分形</h2><h3 id="题目描述-2">题目描述</h3><p>分形，具有以非整数维形式充填空间的形态特征。</p><p>通常被定义为“一个粗糙或零碎的几何形状，可以分成数个部分，且每一部分都（至少近似地）是整体缩小后的形状”，即具有自相似的性质。</p><p>现在，定义“盒子分形”如下：</p><p>一级盒子分形：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X</span><br></pre></td></tr></table></figure><p>二级盒子分形：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X X</span><br><span class="line"> X</span><br><span class="line">X X</span><br></pre></td></tr></table></figure><p>如果用 <span class="math inline">\(B(n−1)\)</span> 代表第 <span class="math inline">\(n−1\)</span> 级盒子分形，那么第 <span class="math inline">\(n\)</span> 级盒子分形即为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B(n - 1)        B(n - 1)</span><br><span class="line"></span><br><span class="line">        B(n - 1)</span><br><span class="line"></span><br><span class="line">B(n - 1)        B(n - 1)</span><br></pre></td></tr></table></figure><p>你的任务是绘制一个 <span class="math inline">\(n\)</span> 级的盒子分形。</p><p><strong>输入格式</strong></p><p>输入包含几个测试用例。</p><p>输入的每一行包含一个不大于 <span class="math inline">\(7\)</span> 的正整数 <span class="math inline">\(n\)</span>，代表要输出的盒子分形的等级。</p><p>输入的最后一行为 <span class="math inline">\(−1\)</span>，代表输入结束。</p><p><strong>输出格式</strong></p><p>对于每个测试用例，使用 <code>X</code> 符号输出对应等级的盒子分形。</p><p>请注意 <code>X</code> 是一个大写字母。</p><p>每个测试用例后输出一个独立一行的短划线。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">X</span><br><span class="line">-</span><br><span class="line">X X</span><br><span class="line"> X</span><br><span class="line">X X</span><br><span class="line">-</span><br><span class="line">X X   X X</span><br><span class="line"> X     X</span><br><span class="line">X X   X X</span><br><span class="line">   X X</span><br><span class="line">    X</span><br><span class="line">   X X</span><br><span class="line">X X   X X</span><br><span class="line"> X     X</span><br><span class="line">X X   X X</span><br><span class="line">-</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line"> X     X           X     X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line">   X X               X X</span><br><span class="line">    X                 X</span><br><span class="line">   X X               X X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line"> X     X           X     X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line">         X X   X X</span><br><span class="line">          X     X</span><br><span class="line">         X X   X X</span><br><span class="line">            X X</span><br><span class="line">             X</span><br><span class="line">            X X</span><br><span class="line">         X X   X X</span><br><span class="line">          X     X</span><br><span class="line">         X X   X X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line"> X     X           X     X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line">   X X               X X</span><br><span class="line">    X                 X</span><br><span class="line">   X X               X X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line"> X     X           X     X</span><br><span class="line">X X   X X         X X   X X</span><br><span class="line">-</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>分形图</p><p>假设当前绘制第 <span class="math inline">\(n\)</span> 级分形图，则边长为 <span class="math inline">\(3^{n-1}\)</span>，设当前分形图左上角坐标为 <span class="math inline">\((x,y)\)</span></p><p>则 <span class="math inline">\(n-1\)</span> 级分形图的五个坐标应为：<span class="math inline">\(\begin{cases} (x,y)\\ (x+2 \cdot 3^{n-2}, y)\\ (x+3^{n-2},y+3^{n-2}) \\ (x,y+2 \cdot 3^{n-2})\\ (x+2 \cdot 3^{n-2},y+2 \cdot 3^{n-2}) \end{cases}\)</span></p><p>然后递归处理即可，属于入门分形图难度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        g[x][y] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    k /= <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(x, y, k);</span><br><span class="line">    <span class="built_in">dfs</span>(x, y + <span class="number">2</span> * k, k);</span><br><span class="line">    <span class="built_in">dfs</span>(x + k, y + k, k);</span><br><span class="line">    <span class="built_in">dfs</span>(x + <span class="number">2</span> * k, y, k);</span><br><span class="line">    <span class="built_in">dfs</span>(x + <span class="number">2</span> * k, y + <span class="number">2</span> * k, k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="袭击">袭击</h2><h3 id="题目描述-3">题目描述</h3><p>在与联盟的战斗中屡战屡败后，帝国撤退到了最后一个据点。</p><p>依靠其强大的防御系统，帝国击退了联盟的六波猛烈进攻。</p><p>经过几天的苦思冥想，联盟将军亚瑟终于注意到帝国防御系统唯一的弱点就是能源供应。</p><p>该系统由 <span class="math inline">\(N\)</span> 个核电站供应能源，其中任何一个被摧毁都会使防御系统失效。</p><p>将军派出了 <span class="math inline">\(N\)</span> 个特工进入据点之中，打算对能源站展开一次突袭。</p><p>不幸的是，由于受到了帝国空军的袭击，他们未能降落在预期位置。</p><p>作为一名经验丰富的将军，亚瑟很快意识到他需要重新安排突袭计划。</p><p>他现在最想知道的事情就是哪个特工距离其中任意一个发电站的距离最短。</p><p>你能帮他算出来这最短的距离是多少吗？</p><p><strong>输入格式</strong></p><p>输入中包含多组测试用例。</p><p>第一行输入整数 <span class="math inline">\(T\)</span>，代表测试用例的数量。</p><p>对于每个测试用例，第一行输入整数 <span class="math inline">\(N\)</span>。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输入两个整数 <span class="math inline">\(X\)</span> 和 <span class="math inline">\(Y\)</span>，代表每个核电站的位置的 <span class="math inline">\(X\)</span>，<span class="math inline">\(Y\)</span> 坐标。</p><p>在接下来 <span class="math inline">\(N\)</span> 行，每行输入两个整数 <span class="math inline">\(X\)</span> 和 <span class="math inline">\(Y\)</span>，代表每名特工的位置的 <span class="math inline">\(X\)</span>，<span class="math inline">\(Y\)</span> 坐标。</p><p><strong>输出格式</strong></p><p>每个测试用例，输出一个最短距离值，结果保留三位小数。</p><p>每个输出结果占一行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤10^5\)</span>, <span class="math inline">\(0≤X,Y≤10^9\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">0 0</span><br><span class="line">0 1</span><br><span class="line">1 0</span><br><span class="line">1 1</span><br><span class="line">2 2</span><br><span class="line">2 3</span><br><span class="line">3 2</span><br><span class="line">3 3</span><br><span class="line">4</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.414</span><br><span class="line">0.000</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p><strong>平面最近点对</strong>，这是一个 K-D Tree 的裸题，也称为“邻域查询”问题，我们采用分治思想来求解</p><p>本质和 K-D Tree 解法没有区别，都是根据坐标对点进行分类，然后分治</p><p>本题真正难点在于邻域查询后的合并，理解这个合并可以为日后学 K-D Tree 打好基础，让我们开始</p><p>首先，我们先将所有点按照横坐标递增排序，然后采用分治的思路</p><p>每次将一个区间 <span class="math inline">\([l, r]\)</span> 分成 <span class="math inline">\([l, mid]\)</span> 和 <span class="math inline">\([mid + 1, r]\)</span> 两个区间，其中 <span class="math inline">\(mid = \lfloor\dfrac{l + r}{2}\rfloor\)</span></p><p>那么多有的点对可以简单分为三类：</p><ol type="1"><li>两个点都在区间 <span class="math inline">\([l, mid]\)</span> 里</li><li>两个点都在区间 <span class="math inline">\([mid + 1, r]\)</span> 里</li><li>一个点在区间 <span class="math inline">\([l, mid]\)</span> 里，一个点在区间 <span class="math inline">\([mid + 1, r]\)</span> 里</li></ol><p>对于第一类点对和第二类的点对，我们递归下去处理即可，现讨论如何统计第三类点对</p><p>先递归处理左右两个子区间，统计好第一、第二类点对的平面最近距离，递归处理好后设该距离为 <span class="math inline">\(\delta\)</span></p><p>于是，第三类点对可以分为：点对距离大于 <span class="math inline">\(\delta\)</span> 和点对距离小于 <span class="math inline">\(\delta\)</span> 的两类</p><p>显然距离大于 <span class="math inline">\(\delta\)</span> 的点对对答案的贡献为 <span class="math inline">\(0\)</span>，我们只需去关心距离小于 <span class="math inline">\(\delta\)</span> 的点对</p><p>而距离小于 <span class="math inline">\(\delta\)</span> 的点对的任意点一定位于区间 <span class="math inline">\([x_{mid} - \delta, x_{mid} + \delta]\)</span>，否则点对距离必定大于 <span class="math inline">\(\delta\)</span></p><figure><img src="https://cdn.acwing.com/media/article/image/2022/01/31/55909_54f0f1b282-PNG图像.png" alt="PNG图像.png" /><figcaption>PNG图像.png</figcaption></figure><p>我们枚举一侧的点，然后找出枚举的点 <span class="math inline">\(x\)</span> 配对的最近点对 <span class="math inline">\(y\)</span>，<span class="math inline">\(y\)</span> 一定位于以 <span class="math inline">\(x\)</span> 为圆心半径为 <span class="math inline">\(\delta\)</span> 的圆内，不妨把圆放宽成矩形</p><p><strong>假设：任意左侧点的矩形范围内，至多只有 6 个点</strong></p><p><strong>证明：</strong> 我们将矩形长二等分，宽三等分，获得的 6 个子矩阵长为 <span class="math inline">\(\dfrac{1}{2}\delta\)</span>，宽为 <span class="math inline">\(\dfrac{2}{3}\delta\)</span>，如下图所示：</p><figure><img src="https://cdn.acwing.com/media/article/image/2022/01/31/55909_5d525d9c82-PNG图像-2.png" alt="PNG图像 2.png" /><figcaption>PNG图像 2.png</figcaption></figure><p>反证法：假设存在 7 个点，根据抽屉原理，则必然存在一个子矩形内有两个点</p><p>根据子矩阵的长宽，易推得子矩阵内最远的两个点距离为子矩阵的对角线，即 <span class="math inline">\(\dfrac{5}{6}\delta\)</span></p><p>而 <span class="math inline">\(\delta\)</span> 定义是邻域内部的最近点对最小距离，如果存在第 7 个点，必然使右侧邻域内存在距离小于 <span class="math inline">\(\delta\)</span> 的点对，与先前的假设矛盾</p><p>故得证，对于左侧每个点，至多枚举 6 个右侧的点，便可以遍历出第三类点中的最近点对</p><p>设当前点坐标为 <span class="math inline">\((x,y)\)</span>，则要枚举的 6 个点的坐标范围为：<span class="math inline">\(x_i \in [x, x+\delta], y_i\in[y-\delta,y+\delta]\)</span></p><p>考虑如何枚举这些点对，显然暴力枚举的时间复杂度为 <span class="math inline">\(O(n^2)\)</span></p><p>如果按照横坐标来枚举，由于横坐标的跨度为 <span class="math inline">\(2\delta\)</span>，每次会枚举 <span class="math inline">\([x,x+\delta]\)</span> 范围内的点，因此点会很密集</p><p>很容易导致一层内枚举的时间复杂度变成 <span class="math inline">\(O(n^2)\)</span>，而纵坐标范围是 <span class="math inline">\([-\infty,+\infty]\)</span>，考虑按他来枚举</p><p>因此不妨对所有在每次递归回溯之后，将所有点按纵坐标排好序，当然如果直接排序，时间复杂度为 <span class="math inline">\(O(n\log^2n)\)</span></p><p>用到之前在 <strong>“天才ACM”</strong> 里的技巧，观察发现回溯之后，左右两个子区间都已经排好序了</p><p>因此可以直接在原地做一遍 <strong>二路归并</strong>，这样最终排序的总时间复杂度就只有 <span class="math inline">\(O(n\log n)\)</span> 了</p><p>最终的总时间复杂度也为 <span class="math inline">\(O(n \log n)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    <span class="keyword">int</span> type;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point&amp; t) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; t.x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; t) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> x == t.x &amp;&amp; y == t.y &amp;&amp; type == t.type;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Point points[N], temp[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_dist</span><span class="params">(Point a, Point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a.type == b.type) <span class="keyword">return</span> INF;</span><br><span class="line">    <span class="keyword">double</span> dx = a.x - b.x, dy = a.y - b.y;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>(dx * dx + dy * dy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> INF;</span><br><span class="line">    <span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">double</span> mid_x = points[mid].x;</span><br><span class="line">    <span class="keyword">double</span> res = <span class="built_in">min</span>(<span class="built_in">dfs</span>(l, mid), <span class="built_in">dfs</span>(mid + <span class="number">1</span>, r));</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 按照纵坐标进行归并</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">            <span class="keyword">if</span> (points[i].y &lt; points[j].y) temp[k ++ ] = points[i ++ ];</span><br><span class="line">            <span class="keyword">else</span> temp[k ++ ] = points[j ++ ];</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) temp[k ++ ] = points[i ++ ];</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= r) temp[k ++ ] = points[j ++ ];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i ++ ) points[i + l] = temp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 取出 [x_mid - delta, x_mid + delta] 区间内的点</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (mid_x - res &lt;= points[i].x &amp;&amp; points[i].x &lt;= mid_x + res)</span><br><span class="line">            temp[k ++ ] = points[i];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; ~j &amp;&amp; temp[i].y - temp[j].y &lt;= res; j -- )</span><br><span class="line">            res = <span class="built_in">min</span>(res, <span class="built_in">get_dist</span>(temp[i], temp[j]));</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>, &amp;points[i].x, &amp;points[i].y);</span><br><span class="line">        points[i].type = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt; <span class="number">2</span> * n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>, &amp;points[i].x, &amp;points[i].y);</span><br><span class="line">        points[i].type = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(points, points + <span class="number">2</span> * n);</span><br><span class="line">    n = <span class="built_in">unique</span>(points, points + <span class="number">2</span> * n) - points;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.3lf\n&quot;</span>, <span class="built_in">dfs</span>(<span class="number">0</span>, n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="防线">防线</h2><h3 id="题目描述-4">题目描述</h3><p>达达学习数学竞赛的时候受尽了同仁们的鄙视，终于有一天......受尽屈辱的达达黑化成为了黑暗英雄怪兽达达。</p><p>就如同中二漫画的情节一样，怪兽达达打算毁掉这个世界。</p><p>数学竞赛界的精英 lqr 打算阻止怪兽达达的阴谋，于是她集合了一支由数学竞赛选手组成的超级行动队。</p><p>由于队员们个个都智商超群，很快，行动队便来到了怪兽达达的黑暗城堡的下方。</p><p>但是，同样强大的怪兽达达在城堡周围布置了一条“不可越过”的坚固防线。</p><p>防线由很多防具组成，这些防具分成了 <span class="math inline">\(N\)</span> 组。</p><p>我们可以认为防线是一维的，那么每一组防具都分布在防线的某一段上，并且同一组防具是等距离排列的。</p><p>也就是说，我们可以用三个整数 <span class="math inline">\(S\)</span>， <span class="math inline">\(E\)</span> 和 <span class="math inline">\(D\)</span> 来描述一组防具，即这一组防具布置在防线的 <span class="math inline">\(S，S+D，S+2D，…，S+KD(K∈Z，S+KD≤E，S+(K+1)D&gt;E)\)</span> 位置上。</p><p>黑化的怪兽达达设计的防线极其精良。</p><p>如果防线的某个位置有偶数个防具，那么这个位置就是毫无破绽的(包括这个位置一个防具也没有的情况，因为 <span class="math inline">\(0\)</span> 也是偶数)。</p><p>只有有奇数个防具的位置有破绽，但是整条防线上也最多只有一个位置有奇数个防具。</p><p>作为行动队的队长，lqr 要找到防线的破绽以策划下一步的行动。</p><p>但是，由于防具的数量太多，她实在是不能看出哪里有破绽。</p><p>作为 lqr 可以信任的学弟学妹们，你们要帮助她解决这个问题。</p><p><strong>输入格式</strong></p><p>输入文件的第一行是一个整数 <span class="math inline">\(T\)</span>，表示有 <span class="math inline">\(T\)</span> 组互相独立的测试数据。</p><p>每组数据的第一行是一个整数 <span class="math inline">\(N\)</span>。</p><p>之后 <span class="math inline">\(N\)</span> 行，每行三个整数 <span class="math inline">\(Si，Ei，Di\)</span>，代表第 <span class="math inline">\(i\)</span> 组防具的三个参数，数据用空格隔开。</p><p><strong>输出格式</strong></p><p>对于每组测试数据，如果防线没有破绽，即所有的位置都有偶数个防具，输出一行 <code>There's no weakness.</code>。</p><p>否则在一行内输出两个空格分隔的整数 <span class="math inline">\(P\)</span> 和 <span class="math inline">\(C\)</span>，表示在位置 <span class="math inline">\(P\)</span> 有 <span class="math inline">\(C\)</span> 个防具。当然 <span class="math inline">\(C\)</span> 应该是一个奇数。</p><p><strong>数据范围</strong></p><p>防具总数不多于 <span class="math inline">\(10^8\)</span>,</p><p><span class="math inline">\(Si≤Ei\)</span>, <span class="math inline">\(1≤T≤5\)</span>, <span class="math inline">\(N≤200000\)</span>, <span class="math inline">\(0≤Si，Ei，Di≤2^{31}−1\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">1 10 1</span><br><span class="line">2 10 1</span><br><span class="line">2</span><br><span class="line">1 10 1 </span><br><span class="line">1 10 1 </span><br><span class="line">4</span><br><span class="line">1 10 1 </span><br><span class="line">4 4 1 </span><br><span class="line">1 5 1 </span><br><span class="line">6 10 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br><span class="line">There&#x27;s no weakness.</span><br><span class="line">4 3</span><br></pre></td></tr></table></figure><h3 id="解析-4">解析</h3><p>题目中保证了 <strong>"整条防线上最多只有一个位置有奇数个防具"</strong></p><p>因此很容易想到前缀和的性质：</p><ol type="1"><li>若前缀中有偶数个奇数，则前缀和为偶数；</li><li>若前缀中有奇数个奇数，则前缀和为奇数；</li></ol><p>因此，若我们用前缀和来维护前缀里的防具的数量，那么显然答案具有单调性质</p><p>即，由于数组中至多只有一个奇数，则必然前缀和在答案位置之前为偶数，之后为奇数</p><p>在二分答案位置的时候，考虑如何统计前缀和，这是一个难题</p><p>由于答案范围是 <span class="math inline">\([1, 2^{31}-1]\)</span>，且最坏情况下，每个位置都会有数字，因此不能直接统计，也不能离散化</p><p>但是每个防具放置的位置是一个等差数列递推公式</p><p>因此我们可以直接遍历所有的防具，利用等差数列公式，反向统计出当前防具在二分的 <span class="math inline">\(limit\)</span> 前缀中是第几项之后的数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (limit &gt;= s[i])</span><br><span class="line">            res += (<span class="built_in">min</span>(limit, e[i]) - s[i]) / d[i] + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) cin &gt;&gt; s[i] &gt;&gt; e[i] &gt;&gt; d[i];</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = (<span class="number">1</span> &lt;&lt; <span class="number">31</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = ((<span class="keyword">long</span> <span class="keyword">long</span>)l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">calc</span>(mid) &amp; <span class="number">1</span>) r = mid; <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(l) &amp; <span class="number">1</span> ^ <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;There&#x27;s no weakness.&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> cout &lt;&lt; l &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="built_in">calc</span>(l) - <span class="built_in">calc</span>(l - <span class="number">1</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="赶牛入圈">赶牛入圈</h2><h3 id="题目描述-5">题目描述</h3><p>农夫约翰希望为他的奶牛们建立一个畜栏。</p><p>这些挑剔的畜生要求畜栏必须是正方形的，而且至少要包含 <span class="math inline">\(C\)</span> 单位的三叶草，来当做它们的下午茶。</p><p>畜栏的边缘必须与 <span class="math inline">\(X，Y\)</span> 轴平行。</p><p>约翰的土地里一共包含 <span class="math inline">\(N\)</span> 单位的三叶草，每单位三叶草位于一个 <span class="math inline">\(1×1\)</span> 的土地区域内，区域位置由其左下角坐标表示，并且区域左下角的 <span class="math inline">\(X,Y\)</span> 坐标都为整数，范围在 <span class="math inline">\(1\)</span> 到 <span class="math inline">\(10000\)</span> 以内。</p><p>多个单位的三叶草可能会位于同一个 <span class="math inline">\(1×1\)</span> 的区域内，因为这个原因，在接下来的输入中，同一个区域坐标可能出现多次。</p><p>只有一个区域完全位于修好的畜栏之中，才认为这个区域内的三叶草在畜栏之中。</p><p>请你帮约翰计算一下，能包含至少 <span class="math inline">\(C\)</span> 单位面积三叶草的情况下，畜栏的最小边长是多少。</p><p><strong>输入格式</strong></p><p>第一行输入两个整数 <span class="math inline">\(C\)</span> 和 <span class="math inline">\(N\)</span>。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输入两个整数 <span class="math inline">\(X\)</span> 和 <span class="math inline">\(Y\)</span>，代表三叶草所在的区域的 <span class="math inline">\(X,Y\)</span> 坐标。</p><p>同一行数据用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表畜栏的最小边长。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤C≤500\)</span>, <span class="math inline">\(C≤N≤500\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">1 2</span><br><span class="line">2 1</span><br><span class="line">4 1</span><br><span class="line">5 2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="解析-5">解析</h3><p>二维离散化 + 二维前缀和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">valid</span><span class="params">(<span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x1 = <span class="number">0</span>, x2 = <span class="number">1</span>; x2 &lt; xs.<span class="built_in">size</span>(); x2 ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (xs[x2] - xs[x1 + <span class="number">1</span>] + <span class="number">1</span> &gt; len) x1 ++ ;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y1 = <span class="number">0</span>, y2 = <span class="number">1</span>; y2 &lt; xs.<span class="built_in">size</span>(); y2 ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (xs[y2] - xs[y1 + <span class="number">1</span>] + <span class="number">1</span> &gt; len) y1 ++ ;</span><br><span class="line">            <span class="keyword">if</span> (s[x2][y2] - s[x1][y2] - s[x2][y1] + s[x1][y1] &gt;= m)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        xs.<span class="built_in">push_back</span>(x);</span><br><span class="line">        xs.<span class="built_in">push_back</span>(y);</span><br><span class="line">        temp[i] = &#123;x, y&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">discrete</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="built_in">get</span>(temp[i].x), y = <span class="built_in">get</span>(temp[i].y);</span><br><span class="line">        s[x][y] ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; xs.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; xs.<span class="built_in">size</span>(); j ++ )</span><br><span class="line">            s[i][j] += s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">valid</span>(mid)) r = mid; <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="糖果传递">糖果传递</h2><h3 id="题目描述-6">题目描述</h3><p>有 <span class="math inline">\(n\)</span> 个小朋友坐成一圈，每人有 <span class="math inline">\(a[i]\)</span> 个糖果。</p><p>每人只能给左右两人传递糖果。</p><p>每人每次传递一个糖果代价为 <span class="math inline">\(1\)</span>。</p><p>求使所有人获得均等糖果的最小代价。</p><p><strong>输入格式</strong></p><p>第一行输入一个正整数 <span class="math inline">\(n\)</span>，表示小朋友的个数。</p><p>接下来 <span class="math inline">\(n\)</span> 行，每行一个整数 <span class="math inline">\(a[i]\)</span>，表示第 <span class="math inline">\(i\)</span> 个小朋友初始得到的糖果的颗数。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最小代价。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤1000000\)</span>, <span class="math inline">\(0≤a[i]≤2×109\)</span>,</p><p>数据保证一定有解。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">5</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="解析-6">解析</h3><p>详情见 0x05排序 章节的 “环形均分纸牌” 问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> c[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> avg = t / n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) a[i] = c[i] - avg;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    <span class="built_in">sort</span>(s + <span class="number">1</span>, s + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) res += <span class="built_in">abs</span>(s[i] - s[(n + <span class="number">1</span>) / <span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="士兵">士兵</h2><h3 id="题目描述-7">题目描述</h3><p>格格兰郡的 <span class="math inline">\(N\)</span> 名士兵随机散落在全郡各地。</p><p>格格兰郡中的位置由一对 <span class="math inline">\((x,y)\)</span> 整数坐标表示。</p><p>士兵可以进行移动，每次移动，一名士兵可以向上，向下，向左或向右移动一个单位（因此，他的 <span class="math inline">\(x\)</span> 或 <span class="math inline">\(y\)</span> 坐标也将加 <span class="math inline">\(1\)</span> 或减 <span class="math inline">\(1\)</span>）。</p><p>现在希望通过移动士兵，使得所有士兵彼此相邻的处于同一条水平线内，即所有士兵的 <span class="math inline">\(y\)</span> 坐标相同并且 <span class="math inline">\(x\)</span> 坐标相邻。</p><p>请你计算满足要求的情况下，所有士兵的总移动次数最少是多少。</p><p>需注意，两个或多个士兵不能占据同一个位置。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N\)</span>，代表士兵的数量。</p><p>接下来的 <span class="math inline">\(N\)</span> 行，每行输入两个整数 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span>，分别代表一个士兵所在位置的 <span class="math inline">\(x\)</span> 坐标和 <span class="math inline">\(y\)</span> 坐标，第 <span class="math inline">\(i\)</span> 行即为第 <span class="math inline">\(i\)</span> 个士兵的坐标 <span class="math inline">\((x[i],y[i])\)</span>。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表所有士兵的总移动次数的最小值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤10000\)</span>, <span class="math inline">\(−10000≤x[i],y[i]≤10000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2</span><br><span class="line">2 2</span><br><span class="line">1 3</span><br><span class="line">3 -2</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h3 id="解析-7">解析</h3><p>这题比较简单，简单讲一下我分析的过程，因为士兵每次只能向四相邻格子移动</p><p>因此当前士兵抵达他在最优解中的位置所走的路程，就是当前坐标与最终坐标的曼哈顿距离</p><p>因此我们可以先处理所有点的横坐标移动，使其都在一条轴线上，再处理纵坐标移动，使其相邻</p><p>考虑第一步，是让所有点都移动到同一个坐标，反向思考，就是找一个点到所有点距离最短</p><p>自然联想到 “货仓选址” 这题，直接找纵坐标中位数即可</p><p>考虑第二步，是让所有点都移动到相邻位置，也是一个找中位数的过程，证明如下：</p><p>先将点按 <span class="math inline">\(x_i\)</span> 递增排序，设第一个点 <span class="math inline">\(x_1\)</span> 移动到的最终位置为 <span class="math inline">\(k\)</span>，则可以列出如下式子：</p><p><span class="math display">\[|x_1 - k| + |x_2 - k - 1| + |x_3 - k - 2| + \cdots + |x_n - k - n + 1|\]</span></p><p>不妨设 <span class="math inline">\(y_i = x_i - i + 1\)</span>，则原式可化为：</p><p><span class="math display">\[|y_1 - k| + |y_2 - k| + \cdots + |y_n - k|\]</span></p><p>就变成 “货仓选址” 原题了，这一题是某一场 cf 的 t5，还是比较送分的一道题目</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> a[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) res += <span class="built_in">abs</span>(a[i] - a[n + <span class="number">1</span> &gt;&gt; <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cin &gt;&gt; x[i] &gt;&gt; y[i];</span><br><span class="line">    <span class="built_in">sort</span>(x + <span class="number">1</span>, x + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) x[i] = x[i] - i + <span class="number">1</span>;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">calc</span>(x) + <span class="built_in">calc</span>(y) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数的进制转换">数的进制转换</h2><h3 id="题目描述-8">题目描述</h3><p>编写一个程序，可以实现将一个数字由一个进制转换为另一个进制。</p><p>这里有 <span class="math inline">\(62\)</span> 个不同数位 <span class="math inline">\({0−9,A−Z,a−z}\)</span>。</p><p><strong>输入格式</strong></p><p>第一行输入一个整数，代表接下来的行数。</p><p>接下来每一行都包含三个数字，首先是输入进制（十进制表示），然后是输出进制（十进制表示），最后是用输入进制表示的输入数字，数字之间用空格隔开。</p><p>输入进制和输出进制都在 <span class="math inline">\(2\)</span> 到 <span class="math inline">\(62\)</span> 的范围之内。</p><p>（在十进制下）<span class="math inline">\(A=10，B=11，…，Z=35，a=36，b=37，…，z=61\)</span> (<span class="math inline">\(0−9\)</span> 仍然表示 <span class="math inline">\(0−9\)</span>)。</p><p><strong>输出格式</strong></p><p>对于每一组进制转换，程序的输出都由三行构成。</p><p>第一行包含两个数字，首先是输入进制（十进制表示），然后是用输入进制表示的输入数字。</p><p>第二行包含两个数字，首先是输出进制（十进制表示），然后是用输出进制表示的输入数字。</p><p>第三行为空白行。</p><p>同一行内数字用空格隔开。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">62 2 abcdefghiz</span><br><span class="line">10 16 1234567890123456789012345678901234567890</span><br><span class="line">16 35 3A0C92075C0DBF3B8ACBC5F96CE3F0AD2</span><br><span class="line">35 23 333YMHOUE8JPLT7OX6K9FYCQ8A</span><br><span class="line">23 49 946B9AA02MI37E3D3MMJ4G7BL2F05</span><br><span class="line">49 61 1VbDkSIMJL3JjRgAdlUfcaWj</span><br><span class="line">61 5 dl9MDSWqwHjDnToKcsWE1S</span><br><span class="line">5 10 42104444441001414401221302402201233340311104212022133030</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">62 abcdefghiz</span><br><span class="line">2 11011100000100010111110010010110011111001001100011010010001</span><br><span class="line"></span><br><span class="line">10 1234567890123456789012345678901234567890</span><br><span class="line">16 3A0C92075C0DBF3B8ACBC5F96CE3F0AD2</span><br><span class="line"></span><br><span class="line">16 3A0C92075C0DBF3B8ACBC5F96CE3F0AD2</span><br><span class="line">35 333YMHOUE8JPLT7OX6K9FYCQ8A</span><br><span class="line"></span><br><span class="line">35 333YMHOUE8JPLT7OX6K9FYCQ8A</span><br><span class="line">23 946B9AA02MI37E3D3MMJ4G7BL2F05</span><br><span class="line"></span><br><span class="line">23 946B9AA02MI37E3D3MMJ4G7BL2F05</span><br><span class="line">49 1VbDkSIMJL3JjRgAdlUfcaWj</span><br><span class="line"></span><br><span class="line">49 1VbDkSIMJL3JjRgAdlUfcaWj</span><br><span class="line">61 dl9MDSWqwHjDnToKcsWE1S</span><br><span class="line"></span><br><span class="line">61 dl9MDSWqwHjDnToKcsWE1S</span><br><span class="line">5 42104444441001414401221302402201233340311104212022133030</span><br><span class="line"></span><br><span class="line">5 42104444441001414401221302402201233340311104212022133030</span><br><span class="line">10 1234567890123456789012345678901234567890</span><br></pre></td></tr></table></figure><h3 id="解析-8">解析</h3><p>进制转换，用短除法，然后倒叙输出余数</p><p>需要上高精度，这题是清华某一年的机试原题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">div</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; ~i; i -- )</span><br><span class="line">    &#123;</span><br><span class="line">        r = r * n + a[i];</span><br><span class="line">        a[i] = r / b;</span><br><span class="line">        r %= b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (a.<span class="built_in">size</span>() &amp;&amp; a.<span class="built_in">back</span>() == <span class="number">0</span>) a.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string line, res;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; line;</span><br><span class="line">    cout &lt;&lt; n &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; line &lt;&lt; endl &lt;&lt; m &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = line.<span class="built_in">size</span>() - <span class="number">1</span>; ~i; i -- ) num.<span class="built_in">push_back</span>(<span class="built_in">get</span>(line[i]));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (num.<span class="built_in">size</span>()) res.<span class="built_in">push_back</span>(<span class="built_in">put</span>(<span class="built_in">div</span>(num, m)));</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">reverse</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>());</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="耍杂技的牛">耍杂技的牛</h2><h3 id="题目描述-9">题目描述</h3><p>农民约翰的 <span class="math inline">\(N\)</span> 头奶牛（编号为 <span class="math inline">\(1..N\)</span>）计划逃跑并加入马戏团，为此它们决定练习表演杂技。</p><p>奶牛们不是非常有创意，只提出了一个杂技表演：</p><p>叠罗汉，表演时，奶牛们站在彼此的身上，形成一个高高的垂直堆叠。</p><p>奶牛们正在试图找到自己在这个堆叠中应该所处的位置顺序。</p><p>这 <span class="math inline">\(N\)</span> 头奶牛中的每一头都有着自己的重量 <span class="math inline">\(W_i\)</span> 以及自己的强壮程度 <span class="math inline">\(S_i\)</span>。</p><p>一头牛支撑不住的可能性取决于它头上所有牛的总重量（不包括它自己）减去它的身体强壮程度的值，现在称该数值为风险值，风险值越大，这只牛撑不住的可能性越高。</p><p>您的任务是确定奶牛的排序，使得所有奶牛的风险值中的最大值尽可能的小。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N\)</span>，表示奶牛数量。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输入两个整数，表示牛的重量和强壮程度，第 <span class="math inline">\(i\)</span> 行表示第 <span class="math inline">\(i\)</span> 头牛的重量 <span class="math inline">\(W_i\)</span> 以及它的强壮程度 <span class="math inline">\(S_i\)</span>。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大风险值的最小可能值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤50000\)</span>, <span class="math inline">\(1≤W_i≤10,000\)</span>, <span class="math inline">\(1≤S_i≤1,000,000,000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">10 3</span><br><span class="line">2 5</span><br><span class="line">3 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析-9">解析</h3><p>次序影响答案，显然是一道贪心的排序题，我们试着用微扰法找出贪心策略</p><p>原先相邻两项的风险值分别为：<span class="math inline">\(t_i = \sum\limits_{j=1}^{i-1} w_j - s_i\)</span> 和 <span class="math inline">\(t_{i+1} = \sum\limits_{j=1}^{i-1} w_j + w_i - s_{i+1}\)</span></p><p>交换两项后，风险值分别为：<span class="math inline">\(t_i = \sum\limits_{j=1}^{i-1} w_j - s_{i+1}\)</span> 和 <span class="math inline">\(t_{i+1} = \sum\limits_{j=1}^{i-1} w_j + w_{i+1} - s_{i}\)</span></p><p>对交换前后的最大风险值做差，可得：<span class="math inline">\(\max(s_{i+1}, w_i+s_{i}) - \max(s_{i}, w_{i+1}+s_{i+1})\)</span></p><p>我们希望该式子可以小于等于 0，这样交换前效果更好，才符合我们的预期，因此开始分类讨论</p><p>若 <span class="math inline">\(s_{i+1} &lt; w_i+s_{i}\)</span> 且 <span class="math inline">\(s_{i} &lt; w_{i+1}+s_{i+1}\)</span>，则原式为 <span class="math inline">\(s_i + w_i &lt; w_{i+1} + s_{i+1}\)</span> 不与条件矛盾</p><p>若 <span class="math inline">\(s_{i+1} &lt; w_i+s_{i}\)</span> 且 <span class="math inline">\(s_{i} \ge w_{i+1}+s_{i+1}\)</span>，则原式为 <span class="math inline">\(w_i &lt; 0\)</span> 矛盾</p><p>若 <span class="math inline">\(s_{i+1} \ge w_i+s_{i}\)</span> 且 <span class="math inline">\(s_{i} &lt; w_{i+1}+s_{i+1}\)</span>，则原式为 <span class="math inline">\(0 &lt; w_{i+1}\)</span> 不与条件矛盾</p><p>若 <span class="math inline">\(s_{i+1} \ge w_i+s_{i}\)</span> 且 <span class="math inline">\(s_{i} \ge w_{i+1}+s_{i+1}\)</span>，则原式为 <span class="math inline">\(s_{i+1} &lt; s_i\)</span> 矛盾</p><p>综上易得当条件 <span class="math inline">\(s_i + w_i \le w_{i+1} + s_{i+1}\)</span> 成立时，交换前效果更好</p><p>这也就是我们的排序规则，每次减少一个逆序对，都会使答案变好，因此启发式策略成立</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Cow</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w, s;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Cow&amp; t) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> s + w &lt; t.w + t.s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;cows[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) cin &gt;&gt; cows[i].w &gt;&gt; cows[i].s;</span><br><span class="line">    <span class="built_in">sort</span>(cows + <span class="number">1</span>, cows + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> prefix_w = <span class="number">0</span>, res = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        res = <span class="built_in">max</span>(res, prefix_w - cows[i].s);</span><br><span class="line">        prefix_w += cows[i].w;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大的和">最大的和</h2><h3 id="题目描述-10">题目描述</h3><p>给定一个包含整数的二维矩阵，子矩形是位于整个阵列内的任何大小为 <span class="math inline">\(1×1\)</span> 或更大的连续子阵列。</p><p>矩形的总和是该矩形中所有元素的总和。</p><p>在这个问题中，具有最大和的子矩形被称为最大子矩形。</p><p>例如，下列数组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0 -2 -7 0 </span><br><span class="line">9 2 -6 2 </span><br><span class="line">-4 1 -4 1 </span><br><span class="line">-1 8 0 -2 </span><br></pre></td></tr></table></figure><p>其最大子矩形为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">9 2 </span><br><span class="line">-4 1 </span><br><span class="line">-1 8 </span><br></pre></td></tr></table></figure><p>它拥有最大和 <span class="math inline">\(15\)</span>。</p><p><strong>输入格式</strong></p><p>输入中将包含一个 <span class="math inline">\(N×N\)</span> 的整数数组。</p><p>第一行只输入一个整数 <span class="math inline">\(N\)</span>，表示方形二维数组的大小。</p><p>从第二行开始，输入由空格和换行符隔开的 <span class="math inline">\(N^2\)</span> 个整数，它们即为二维数组中的 <span class="math inline">\(N^2\)</span> 个元素，输入顺序从二维数组的第一行开始向下逐行输入，同一行数据从左向右逐个输入。</p><p>数组中的数字会保持在 <span class="math inline">\([−127,127]\)</span> 的范围内。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表最大子矩形的总和。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤100\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">0 -2 -7 0</span><br><span class="line">9 2 -6 2</span><br><span class="line">-4 1 -4  1</span><br><span class="line">-1 8  0 -2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><h3 id="解析-10">解析</h3><p>一维问题叫“最大连续区间和”，用的递推做的</p><p>本题是上面这个问题的二维衍生问题，“最大子矩阵和”，做法是在一维递推基础上的拓展</p><p>首先，朴素做法是直接枚举所有的子区间，时间复杂度为 <span class="math inline">\(O(n^4)\)</span></p><p>为了实现递推，首先需要划分阶段，考虑该问题在一维情况下得到了递推，思考能否把二维压缩成一维</p><p>我们考虑对每一列求一个前缀和，这样就可以在 <span class="math inline">\(O(1)\)</span> 的时间内求出区间 <span class="math inline">\([a_{i, y}, a_{j, y}]\)</span> 元素总和</p><p>那么我们只需枚举二维，然后用 <span class="math inline">\(O(1)\)</span> 时间递推第三维即可，时间复杂度为 <span class="math inline">\(O(n^3)\)</span></p><p>具体思路就是：每次枚举宽度 <span class="math inline">\([x1, x2]\)</span>，然后将这个二维子矩阵压缩成一维数组，其中 <span class="math inline">\(b_i = \sum\limits_{j=x_1}^{x_2}a_{j,i}\)</span></p><p>递推：<span class="math inline">\(f_{x_1,x_2,j} = max(0, f_{x_1,x_2,j - 1}) + b_i\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x1 = <span class="number">0</span>; x1 &lt;= n; x1 ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x2 = x1 + <span class="number">1</span>; x2 &lt;= n; x2 ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> val = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> y = <span class="number">1</span>; y &lt;= n; y ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            val = <span class="built_in">max</span>(val, <span class="number">0</span>) + s[x2][y] - s[x1][y];</span><br><span class="line">            res = <span class="built_in">max</span>(res, val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="任务">任务</h2><h3 id="题目描述-11">题目描述</h3><p>今天某公司有 <span class="math inline">\(M\)</span> 个任务需要完成。</p><p>每个任务都有相应的难度级别和完成任务所需时间。</p><p>第 <span class="math inline">\(i\)</span> 个任务的难度级别为 <span class="math inline">\(y_i\)</span>，完成任务所需时间为 <span class="math inline">\(x_i\)</span> 分钟。</p><p>如果公司完成此任务，他们将获得<span class="math inline">\(（500×x_i+2×y_i）\)</span>美元收入。</p><p>该公司有 <span class="math inline">\(N\)</span> 台机器，每台机器都有最长工作时间和级别。</p><p>如果任务所需时间超过机器的最长工作时间，则机器无法完成此任务。</p><p>如果任务难度级别超过机器的级别，则机器无法完成次任务。</p><p>每台机器一天内只能完成一项任务。</p><p>每个任务只能由一台机器完成。</p><p>请为他们设计一个任务分配方案，使得该公司能够最大化他们今天可以完成的任务数量。</p><p>如果有多种解决方案，他们希望选取赚取利润最高的那种。</p><p><strong>输入格式</strong></p><p>输入包含几个测试用例。</p><p>对于每个测试用例，第一行包含两个整数 <span class="math inline">\(N\)</span> 和 <span class="math inline">\(M\)</span>，分别代表机器数量和任务数量。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行包含两个整数 <span class="math inline">\(x_i,y_i\)</span>，分别代表机器最长工作时间和机器级别。</p><p>再接下来 <span class="math inline">\(M\)</span> 行，每行包含两个整数 <span class="math inline">\(x_i,y_i\)</span>，分别代表完成任务所需时间和任务难度级别。</p><p><strong>输出格式</strong></p><p>对于每个测试用例，输出两个整数，代表公司今天可以完成的最大任务数以及他们将获得的收入。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N,M≤100000\)</span>, <span class="math inline">\(0&lt;x_i&lt;1440\)</span>, <span class="math inline">\(0≤y_i≤100\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">100 3</span><br><span class="line">100 2</span><br><span class="line">100 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 50004</span><br></pre></td></tr></table></figure><h3 id="解析-11">解析</h3><p>观察到 <span class="math inline">\(x\)</span> 一个单位的影响大于最大差值下 <span class="math inline">\(y\)</span> 的影响： △x × 500 &gt; △y × 2，其中 <span class="math inline">\(\Delta x \in (1, 1440), \Delta y \in [0, 100]\)</span></p><p>因此，我们可以把 <span class="math inline">\(x\)</span> 看做第一关键字，<span class="math inline">\(y\)</span> 看做第二关键字</p><p>原题就相当于求一个二分图的最大匹配，且点权关键字值最大</p><p>一般情况下，二分图的最大匹配，边权最大用 KM 算法，点权最大用 匈牙利 算法</p><p>然而本题二分图基本上类似于是完全图，用匈牙利算法的时间复杂度为 <span class="math inline">\(O(nm)=O(n^3)\)</span></p><p>因此我们要用贪心的思路，按双关键字排序从大到小枚举所有的任务，对于任务 <span class="math inline">\(i\)</span> 设双关键字要求为 <span class="math inline">\((x_i,y_i)\)</span></p><p>我们找到所有第一关键字大于等于 <span class="math inline">\(x_i\)</span>，且第二关键字大于 <span class="math inline">\(y_i\)</span> 的机器中 <span class="math inline">\(y_i\)</span> 最小的与其匹配</p><blockquote><p>本题就是 <strong>“防晒”</strong> 这题的二维版本，证明上述启发式策略也与该题基本一致，用找增广路径的思路即可</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">sort</span>(mach + <span class="number">1</span>, mach + n + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(task + <span class="number">1</span>, task + m + <span class="number">1</span>);</span><br><span class="line">multiset&lt;<span class="keyword">int</span>&gt; level;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m, j = n; i; i -- )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; mach[j].x &gt;= task[i].x) level.<span class="built_in">insert</span>(mach[j -- ].y);</span><br><span class="line">    <span class="keyword">auto</span> it = level.<span class="built_in">lower_bound</span>(task[i].y);</span><br><span class="line">    <span class="keyword">if</span> (it != level.<span class="built_in">end</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">        res += <span class="number">500</span> * task[i].x + <span class="number">2</span> * task[i].y;</span><br><span class="line">        level.<span class="built_in">erase</span>(it);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x07 贪心</title>
      <link href="/Algorithm/lydguid/z0x07_%E8%B4%AA%E5%BF%83/"/>
      <url>/Algorithm/lydguid/z0x07_%E8%B4%AA%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="贪心算法基础概念">贪心算法基础概念</h1><blockquote><p>From Wikipedia<br />A greedy algorithm is any algorithm that follows the problem-solving heuristic of making the locally optimal choice at each stage. In many problems, a greedy strategy does not produce an optimal solution, but a greedy heuristic can yield locally optimal solutions that approximate a globally optimal solution in a reasonable amount of time.</p></blockquote><p>贪心类问题无疑是基础算法中难度最大的，难点在于思维的跳跃性，没有固定的解题模式，往往是一类题一种解法或结论</p><p><strong>贪心算法(Greedy Algorithm)</strong> 这样的称呼，往往让刚学习的朋友会误解这类题目的特性</p><p><strong>Greedy Algorithm</strong> 实际上是在每个阶段做出 <strong>启发式（heuristic）</strong> 的 <strong>局部最优化选择</strong>，从而达到 <strong>全局最优化</strong> 的行为</p><blockquote><p><strong>heuristic</strong> 在数学最优化问题中的定义：a technique designed for solving a problem more quickly when classic methods are too slow or for finding an approximate solution when classic methods fail to find any exact solution 即在常规方法不能有效求解时，需要用到的启发式求解（这也就是为什么贪心问题特别杂，往往一题一结论，很难掌握）</p></blockquote><p>如果用“状态空间”来理解的话，<strong>动态规划(Dynamic Programming)</strong> 在每个 <strong>stage</strong> 求解所有需要的状态实现递推</p><p>而 <strong>贪心算法(Greedy Algorithm)</strong> 则是在每个 <strong>stage</strong> 根据 <strong>启发式策略</strong> 策略只去求解部分解实现递推</p><p>从“集合”来理解的话，DP就是把每个状态集合都求干净进行递推；贪心则是每次求集合中的符合策略的一部分递推</p><h1 id="贪心类型题目解法">贪心类型题目解法</h1><p>之前也说过，贪心类题目没有固定解题模式，不像数据结构计算几何可以一步步推理得出，贪心解法具有跳跃性</p><p>使用贪心算法要求问题的整体最优性可以由局部最优性导出</p><p>因此，我们可以从局部最优策略下手，证明该策略也可以实现整体最优</p><p>常见的证明手段：</p><ol type="1"><li>微扰（邻项交换） 证明在任意局面下，任何对局部最优策略的微小改变都会造成整体结果变差<br />常用于以 “排序” 为贪心策略的证明（减少逆序对不会使整体结果变差）</li><li>范围缩放 证明任何对局部最优策略作用范围的扩展都不会造成整体结果变差</li><li>决策包容性 证明任意局面下，做出局部最优决策以后，在问题状态空间中的可达集合包含了做出其他任何决策后的可达集合<br />换言之，这个局部最优策略提供的可能性包含其他有策略提供的可能性</li><li>反证法</li><li>数学归纳法</li></ol><h1 id="常见的贪心模型">常见的贪心模型</h1><ol type="1"><li>区间问题<ol type="1"><li>区间选点<ol type="1"><li>问题：数轴上选尽可能少的点，使得每个区间内至少有一个点</li><li>启发策略：区间按右端点排序，若当前区间包含当前的点，则不加入新点，否则更新新点为右端点</li></ol></li><li>最大不相交区间数量<ol type="1"><li>问题：数轴上有若干区间，选出最大不相交区间</li><li>启发策略：与上一个问题等价，右端点排序，若当前区间与正在维护的区间相交，则不选，否则选上当前区间并维护</li></ol></li><li>区间分组<ol type="1"><li>问题：数轴上有若干区间，给这些区间分组，使得每组内不相交</li><li>启发策略：区间按左端点排序，若当前所有组中最后一个加入的区间右端点都大于当前区间左端点，则开新组，否则接在最小的后面</li></ol></li><li>区间覆盖<ol type="1"><li>问题：选择尽可能少的区间，覆盖一个线段</li><li>启发策略：区间按左端点排序，找出所有左端点在当前已覆盖的区间内，最远的右端点位置，更新已覆盖区间，继续枚举</li></ol></li></ol></li><li>Huffman 树模型<ol type="1"><li>问题：给出几个带权点，每次可以合并几个点，求最小带权路径长</li><li>启发策略：每次选最小的几个点合并</li></ol></li><li>排序不等式<ol type="1"><li>问题：小学奥数的排队打水问题</li><li>启发策略：按照时间递增排序</li></ol></li><li>绝对值不等式<ol type="1"><li>详情见“排序”章节</li></ol></li><li>模拟退火<ol type="1"><li>问题：找多峰函数的极值</li><li>启发策略：这个内容很多，以后章节会详细讲</li></ol></li></ol><h1 id="习题">习题</h1><h2 id="防晒">防晒</h2><h3 id="题目描述">题目描述</h3><p>有 <span class="math inline">\(C\)</span> 头奶牛进行日光浴，第 <span class="math inline">\(i\)</span> 头奶牛需要 <span class="math inline">\(minSPF[i]\)</span> 到 <span class="math inline">\(maxSPF[i]\)</span> 单位强度之间的阳光。</p><p>每头奶牛在日光浴前必须涂防晒霜，防晒霜有 <span class="math inline">\(L\)</span> 种，涂上第 <span class="math inline">\(i\)</span> 种之后，身体接收到的阳光强度就会稳定为 <span class="math inline">\(SPF[i]\)</span>，第 <span class="math inline">\(i\)</span> 种防晒霜有 <span class="math inline">\(cover[i]\)</span> 瓶。</p><p>求最多可以满足多少头奶牛进行日光浴。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(C\)</span> 和 <span class="math inline">\(L\)</span></p><p>接下来的 <span class="math inline">\(C\)</span> 行，按次序每行输入一头牛的 <span class="math inline">\(minSPF\)</span> 和 <span class="math inline">\(maxSPF\)</span> 值，即第 <span class="math inline">\(i\)</span> 行输入 <span class="math inline">\(minSPF[i]\)</span> 和 <span class="math inline">\(maxSPF[i]\)</span></p><p>再接下来的 <span class="math inline">\(L\)</span> 行，按次序每行输入一种防晒霜的 <span class="math inline">\(SPF\)</span> 和 <span class="math inline">\(cover\)</span> 值，即第 <span class="math inline">\(i\)</span> 行输入 <span class="math inline">\(SPF[i]\)</span> 和 <span class="math inline">\(cover[i]\)</span></p><p>每行的数据之间用空格隔开</p><p><strong>输出格式</strong></p><p>输出一个整数，代表最多可以满足奶牛日光浴的奶牛数目。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤C,L≤2500\)</span>, <span class="math inline">\(1≤minSPF≤maxSPF≤1000\)</span>, <span class="math inline">\(1≤SPF≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">3 10</span><br><span class="line">2 5</span><br><span class="line">1 5</span><br><span class="line">6 2</span><br><span class="line">4 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>启发式策略：按照 <span class="math inline">\(maxSPF\)</span> 右端点从小到大排序，然后枚举每头牛，每次选择区间内最小的防晒霜</p><p>证明方法有两种，蓝书上的范围缩放和y总的二分图反证不存在增广路径</p><p>我简略介绍一下两种证明方法，具体大家可以去参考这两位佬的详细证明过程</p><p><strong>范围缩放</strong></p><p>每瓶防晒霜是否可用，取决于 <span class="math inline">\([minSPF[i], maxSPF[i]]\)</span></p><p>由于牛牛们按照 <span class="math inline">\(maxSPF\)</span> 从小到大排好序了，因此每一个不高于当前奶牛 <span class="math inline">\(maxSPF\)</span> 的防晒霜，都不会高于后续奶牛的 <span class="math inline">\(maxSPF\)</span></p><p>对于当前奶牛可用的任意两瓶防晒霜 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span>，如果 <span class="math inline">\(SPF[x] &lt; SPF[y]\)</span></p><p>那么后面其他奶牛与该两瓶防晒霜的关系有：</p><ol type="1"><li>两瓶都能用</li><li>两瓶都不能用</li><li><span class="math inline">\(x\)</span> 不能用，<span class="math inline">\(y\)</span> 能用</li></ol><p>因此，当前奶牛选择较小的 <span class="math inline">\(x\)</span> 对于整体问题的影响显然比选择较大的 <span class="math inline">\(x\)</span> 更好</p><p>另外，每头奶牛对答案的贡献至多为 1。即使放弃当前奶牛，留下防晒霜给后面的奶牛，对答案的贡献也不会变大</p><p>综上，得证该策略为正确策略</p><p><strong>增广路径</strong></p><p>将所有区间看做二分图的一个顶点集，将所有防晒霜的点看做另一个顶点集</p><p>证明对于当前牛选择该防晒霜的策略下，不存在一条增广路径即可</p><p>显然，增广路径的匹配是区间、点交替匹配的，以当前防晒霜的点为起点寻找增广路径（终点一定是未匹配的区间的顶点）</p><ol type="1"><li><p>如果向后寻找增广路径，显然会使得路径变短，违背了定义</p></li><li><p>如果向前寻找增广路径，根据我们枚举的顺序，终点一定是已匹配的区间的顶点，违背了定义</p></li></ol><p>因此不存在增广路径，所以该启发式策略一定是最优策略</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">spfs[<span class="number">1001</span>] = n; <span class="comment">//边界处理最大情况</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) cin &gt;&gt; seg[i].l &gt;&gt; seg[i].r;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, x, t; i &lt; m; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; x &gt;&gt; t;</span><br><span class="line">    spfs[x] += t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(seg, seg + n);</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">auto</span> spf = spfs.<span class="built_in">lower_bound</span>(seg[i].l);</span><br><span class="line">    <span class="keyword">if</span> (spf -&gt; first &lt;= seg[i].r)</span><br><span class="line">    &#123;</span><br><span class="line">        res ++ ;</span><br><span class="line">        <span class="keyword">if</span> ( -- spf -&gt; second == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            spfs.<span class="built_in">erase</span>(spf);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="畜栏预定">畜栏预定</h2><h3 id="题目描述-1">题目描述</h3><p>有 <span class="math inline">\(N\)</span> 头牛在畜栏中吃草。</p><p>每个畜栏在同一时间段只能提供给一头牛吃草，所以可能会需要多个畜栏。</p><p>给定 <span class="math inline">\(N\)</span> 头牛和每头牛开始吃草的时间 <span class="math inline">\(A\)</span> 以及结束吃草的时间 <span class="math inline">\(B\)</span>，每头牛在 <span class="math inline">\([A,B]\)</span> 这一时间段内都会一直吃草。</p><p>当两头牛的吃草区间存在交集时（包括端点），这两头牛不能被安排在同一个畜栏吃草。</p><p>求需要的最小畜栏数目和每头牛对应的畜栏方案。</p><p><strong>输入格式</strong></p><p>第 <span class="math inline">\(1\)</span> 行：输入一个整数 <span class="math inline">\(N\)</span>。</p><p>第 <span class="math inline">\(2..N+1\)</span> 行：第 <span class="math inline">\(i+1\)</span> 行输入第 <span class="math inline">\(i\)</span> 头牛的开始吃草时间 <span class="math inline">\(A\)</span> 以及结束吃草时间 <span class="math inline">\(B\)</span>，数之间用空格隔开。</p><p><strong>输出格式</strong></p><p>第 <span class="math inline">\(1\)</span> 行：输入一个整数，代表所需最小畜栏数。</p><p>第 <span class="math inline">\(2..N+1\)</span> 行：第 <span class="math inline">\(i+1\)</span> 行输入第 <span class="math inline">\(i\)</span> 头牛被安排到的畜栏编号，编号是从 <span class="math inline">\(1\)</span> 开始的 连续 整数，只要方案合法即可。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤50000\)</span>, <span class="math inline">\(1≤A,B≤1000000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 10</span><br><span class="line">2 4</span><br><span class="line">3 6</span><br><span class="line">5 8</span><br><span class="line">4 7</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p><strong>区间分组</strong> 的板子</p><p>启发式策略</p><ol type="1"><li>区间按左端点升序枚举</li><li>如果之前 <strong>存在</strong> 一个组的区间右端点不与当前区间左端点相交，则将当前区间插入该组</li><li>如果之前 <strong>不存在</strong> 一个组的区间右端点不与当前区间左端点相交，则开一个新的分组存放当前区间</li></ol><p>反证法，假设最优解的区间组数是 <span class="math inline">\(m\)</span></p><p>考虑在上述做法中，设第一次新建第 <span class="math inline">\(m+1\)</span> 个组的时刻，是在处理第 <span class="math inline">\(i\)</span> 个区间</p><p>由于所有区间是按左端点升序排序，所以现在前 <span class="math inline">\(m\)</span> 个组中最后一个区间的左端点一定小于等于第 <span class="math inline">\(i\)</span> 个区间的左端点</p><p>且前 <span class="math inline">\(m\)</span> 个组中最小的右端点大于等于第 <span class="math inline">\(i\)</span> 个区间的左端点，所以前 <span class="math inline">\(m\)</span> 个组里最后一个区间一定都包含第 <span class="math inline">\(i\)</span> 个区间的左端点，所以我们就找到了 <span class="math inline">\(m+1\)</span> 个区间存在交集，所以至少需要 <span class="math inline">\(m+1\)</span> 个畜栏，矛盾。</p><p><strong>做法</strong>：用一个小根堆来维护所有组的右端点，以此来判断是否存在一个组的区间右端点不与当前区间左端点相交</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(seg + <span class="number">1</span>, seg + n + <span class="number">1</span>);</span><br><span class="line">priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (heap.<span class="built_in">empty</span>() || heap.<span class="built_in">top</span>().x &gt;= seg[i].l)</span><br><span class="line">    &#123;</span><br><span class="line">        res[seg[i].id] = heap.<span class="built_in">size</span>() + <span class="number">1</span>;</span><br><span class="line">        heap.<span class="built_in">push</span>(&#123;seg[i].r, heap.<span class="built_in">size</span>() + <span class="number">1</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = heap.<span class="built_in">top</span>().y;</span><br><span class="line">        heap.<span class="built_in">pop</span>();</span><br><span class="line">        res[seg[i].id] = t;</span><br><span class="line">        heap.<span class="built_in">push</span>(&#123;seg[i].r, t&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="雷达设备">雷达设备</h2><h3 id="题目描述-2">题目描述</h3><p>假设海岸是一条无限长的直线，陆地位于海岸的一侧，海洋位于另外一侧。</p><p>每个小岛都位于海洋一侧的某个点上。</p><p>雷达装置均位于海岸线上，且雷达的监测范围为 <span class="math inline">\(d\)</span>，当小岛与某雷达的距离不超过 <span class="math inline">\(d\)</span> 时，该小岛可以被雷达覆盖。</p><p>我们使用笛卡尔坐标系，定义海岸线为 <span class="math inline">\(x\)</span> 轴，海的一侧在 <span class="math inline">\(x\)</span> 轴上方，陆地一侧在 <span class="math inline">\(x\)</span> 轴下方。</p><p>现在给出每个小岛的具体坐标以及雷达的检测范围，请你求出能够使所有小岛都被雷达覆盖所需的最小雷达数目。</p><p><strong>输入格式</strong></p><p>第一行输入两个整数 <span class="math inline">\(n\)</span> 和 $d4，分别代表小岛数目和雷达检测范围。</p><p>接下来 <span class="math inline">\(n\)</span> 行，每行输入两个整数，分别代表小岛的 <span class="math inline">\(x\)</span>，<span class="math inline">\(y\)</span> 轴坐标。</p><p>同一行数据之间用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表所需的最小雷达数目，若没有解决方案则所需数目输出 <code>−1</code>。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤1000\)</span>, <span class="math inline">\(−1000≤x,y≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2</span><br><span class="line">-3 1</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p><strong>区间选点</strong> 板子</p><p>启发式策略：</p><ol type="1"><li>区间按右端点升序排序</li><li>对于当前未选点的区间，以他的右端点作为我们选择的点<ol type="1"><li>之后所有左端点小于该点的区间都被该点覆盖</li><li>对于第一个未被该点覆盖的区间，重复上述操作</li></ol></li></ol><p>证明：</p><p>按照上述做法，我们选择的点都是某个区间的右端点，而且由于区间按右端点排好序了，所以我们选择的点也是排好序的</p><p>只有在当前区间和上一个点所对应的区间是没有交集时，我们才会选择一个新点，所以所有选出的点所对应的区间两两之间没有交集</p><p>找到了 <span class="math inline">\(m\)</span> 个两两之间没有交集的区间，因此我们至少需要选 <span class="math inline">\(m\)</span> 个点，得证启发式策略为最优策略</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">sort</span>(seg + <span class="number">1</span>, seg + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> pos = <span class="number">-1e9</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos + eps &lt; seg[i].l)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">        pos = seg[i].r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="国王游戏">国王游戏</h2><h3 id="题目描述-3">题目描述</h3><p>恰逢 <span class="math inline">\(H\)</span> 国国庆，国王邀请 <span class="math inline">\(n\)</span> 位大臣来玩一个有奖游戏。</p><p>首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。</p><p>然后，让这 <span class="math inline">\(n\)</span> 位大臣排成一排，国王站在队伍的最前面。</p><p>排好队后，所有的大臣都会获得国王奖赏的若干金币，每位大臣获得的金币数分别是:</p><p>排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。</p><p>国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。</p><p>注意，国王的位置始终在队伍的最前面。</p><p><strong>输入格式</strong></p><p>第一行包含一个整数 <span class="math inline">\(n\)</span>，表示大臣的人数。</p><p>第二行包含两个整数 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span>，之间用一个空格隔开，分别表示国王左手和右手上的整数。</p><p>接下来 <span class="math inline">\(n\)</span> 行，每行包含两个整数 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span>，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。</p><p><strong>输出格式</strong></p><p>输出只有一行，包含一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤1000\)</span>, <span class="math inline">\(0&lt;a,b&lt;10000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 1</span><br><span class="line">2 3</span><br><span class="line">7 4</span><br><span class="line">4 6</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p>不难发现，大臣的次序会影响枚举出来的，因此我们需要一种排序的启发式策略进行求解</p><p>因此选择 <strong>领项交换</strong> 来找出局部最优策略</p><p>考虑交换 <span class="math inline">\(i\)</span> 与 <span class="math inline">\(i+1\)</span> 位大臣的次序，则交换前，两人获得的奖赏为：</p><p><span class="math display">\[val_i = \frac{1}{R_i} \prod_{k=1}^{i-1}L[k] \quad ,val_{i+1} = \frac{1}{R_{i+1}} L_i \prod_{k=1}^{i-1}L[k]\]</span></p><p>交换后，两人获得的奖赏为：</p><p><span class="math display">\[val_{i+1}&#39; = \frac{1}{R_i} \prod_{k=1}^{i-1}L[k] \quad ,val_i&#39; = \frac{1}{R_{i+1}} L_{i+1} \prod_{k=1}^{i-1}L[k]\]</span></p><p>交换前，获得奖赏较多的大臣获得的奖赏为：<span class="math inline">\(\prod\limits_{k=1}^{i-1}L[k] \times \max \Big( \dfrac{1}{R_i}, \dfrac{L_i}{R_{i+1}} \Big)\)</span></p><p>交换后，获得奖赏较多的大臣获得的奖赏为：<span class="math inline">\(\prod\limits_{k=1}^{i-1}L[k] \times \max \Big( \dfrac{1}{R_{i+1}}, \dfrac{L_{i+1}}{R_{i}} \Big)\)</span></p><p>做差比较交换后式子，先通分再提出因式，有：<span class="math inline">\(f = \max(R_{i+1}, R_{i}L_{i}) - \max(R_i, R_{i+1}L_{i+1})\)</span></p><p>我们的目的是使任意邻项发生交换时，获得奖赏不会增大，即若 <span class="math inline">\(f\)</span> 小于等于 <span class="math inline">\(0\)</span>，则交换前才更优</p><p>由于 <span class="math inline">\(R_j, L_j\)</span> 都是正整数，固有：<span class="math inline">\(R_{j}L_{j} \ge R_j\)</span></p><p>若 <span class="math inline">\(R_iL_i &lt; R_{i+1}L_{j+1}\)</span>，则：</p><ol type="1"><li><span class="math inline">\(R_{i+1} &gt; R_iL_i\)</span> 时，<span class="math inline">\(f = R_{i+1} - \max(R_i, R_{i+1}L_{i+1}) \le 0\)</span></li><li><span class="math inline">\(R_{i+1} &lt; R_iL_i\)</span> 时，<span class="math inline">\(f = R_iL_i - \max(R_i, R_{i+1}L_{i+1}) \le 0\)</span></li></ol><p>显然，交换前方案更小（优）</p><p>若 <span class="math inline">\(R_iL_i \ge R_{i+1}L_{j+1}\)</span>，则：</p><ol type="1"><li>$f = R_iL_i -(R_i, R_{i+1}L_{i+1}) 0 $</li></ol><p>显然，交换后方案更小（优）</p><p>综上，排序方案为 按<span class="math inline">\(R_iL_i\)</span>升序排列</p><p>另外本题最坏情况的前缀积为 <span class="math inline">\((10^3)^{10000} = 10^{30000}\)</span> 需要上高精度</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(seg + <span class="number">1</span>, seg + n + <span class="number">1</span>);</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; prefix = &#123;seg[<span class="number">0</span>].l&#125;, res;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; t = <span class="built_in">div</span>(prefix, seg[i].r);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">lw</span>(res, t)) res = t;</span><br><span class="line">    prefix = <span class="built_in">mul</span>(prefix, seg[i].l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = res.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- ) cout &lt;&lt; res[i];</span><br><span class="line">cout &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="给树染色">给树染色</h2><h3 id="题目描述-4">题目描述</h3><p>一颗树有 <span class="math inline">\(n\)</span> 个节点，这些节点被标号为：<span class="math inline">\(1,2,3…n\)</span>，每个节点 <span class="math inline">\(i\)</span> 都有一个权值 <span class="math inline">\(A[i]\)</span>。</p><p>现在要把这棵树的节点全部染色，染色的规则是：</p><p>根节点 <span class="math inline">\(R\)</span> 可以随时被染色；对于其他节点，在被染色之前它的父亲节点必须已经染上了色。</p><p>每次染色的代价为 <span class="math inline">\(T×A[i]\)</span>，其中 <span class="math inline">\(T\)</span> 代表当前是第几次染色。</p><p>求把这棵树染色的最小总代价。</p><p><strong>输入格式</strong></p><p>第一行包含两个整数 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(R\)</span>，分别代表树的节点数以及根节点的序号。</p><p>第二行包含 <span class="math inline">\(n\)</span> 个整数，代表所有节点的权值，第 <span class="math inline">\(i\)</span> 个数即为第 <span class="math inline">\(i\)</span> 个节点的权值 <span class="math inline">\(A[i]\)</span>。</p><p>接下来 <span class="math inline">\(n−1\)</span> 行，每行包含两个整数 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span>，代表两个节点的序号，两节点满足关系： <span class="math inline">\(a\)</span> 节点是 <span class="math inline">\(b\)</span> 节点的父节点。</p><p>除根节点外的其他 <span class="math inline">\(n−1\)</span> 个节点的父节点和它们本身会在这 <span class="math inline">\(n−1\)</span> 行中表示出来。</p><p>同一行内的数用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表把这棵树染色的最小总代价。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤1000\)</span>, <span class="math inline">\(1≤A[i]≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 1</span><br><span class="line">1 2 1 2 4</span><br><span class="line">1 2</span><br><span class="line">1 3</span><br><span class="line">2 4</span><br><span class="line">3 5</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">33</span><br></pre></td></tr></table></figure><h3 id="解析-4">解析</h3><p>如果没有“先选父节点”的限制，每轮可以任意选择一个点染色，那么本题就是一个 <strong>排序不等式</strong> 的结论题</p><p>考虑加了这一限制后，如何处理本问题，易发现一个简单性质：</p><p>对含有最大权值的结点，对其父节点染色后，下一个染色对象必然是他（排序不等式易证）</p><p>既然该结点与他的父节点的染色顺序是相邻的，根据该性质，我们可以将这两个点 <strong>合并</strong> 成一个点，合并后的新结点权值，为两个点权值的平均值</p><p>例如有权值 <span class="math inline">\(x,y,z\)</span> 的三个点，其中 <span class="math inline">\(x,y\)</span> 染色是连续进行的，那么有两种染色方案：</p><ol type="1"><li>先 <span class="math inline">\(z\)</span> 后 <span class="math inline">\(x,y\)</span>，其代价为：<span class="math inline">\(z + 2x + 3y\)</span></li><li>先 <span class="math inline">\(x,y\)</span> 后 <span class="math inline">\(z\)</span>，其代价为：<span class="math inline">\(x + 2y + 3z\)</span></li></ol><p>做差易得：$x + y - 2z $，若 <span class="math inline">\(z &lt; \dfrac{x+y}{2}\)</span> 时，<span class="math inline">\(z\)</span> 先于 <span class="math inline">\(x,y\)</span>；若 <span class="math inline">\(z &gt; \dfrac{x+y}{2}\)</span> 时，<span class="math inline">\(x,y\)</span> 先于 <span class="math inline">\(z\)</span></p><p>因此，<span class="math inline">\(x,y,z\)</span> 三点的染色顺序可以转化为 <span class="math inline">\(\dfrac{x+y}{2}, z\)</span> 两点的染色顺序</p><p>将上述简单情况推广到一般情况，假设有两组点 <span class="math inline">\(a_1,\cdots,a_n\)</span> 和 <span class="math inline">\(b_1,\cdots,b_m\)</span> 进行染色：</p><ol type="1"><li>先 <span class="math inline">\(a_i\)</span> 后 <span class="math inline">\(b_i\)</span>，其代价为：<span class="math inline">\(\sum_{i=1}^n ia_i + \sum_{i=1}^m (i+n)b_i\)</span></li><li>先 <span class="math inline">\(b_i\)</span> 后 <span class="math inline">\(a_i\)</span>，其代价为：<span class="math inline">\(\sum_{i=1}^m ib_i + \sum_{i=1}^n (i+m)a_i\)</span></li></ol><p>做差易得：<span class="math inline">\(n\sum_{i=1}^mb_i-m\sum_{i=1}^na_i\)</span>，若 <span class="math inline">\(\dfrac{\sum_{i=1}^mb_i}{m} &gt; \dfrac{\sum_{i=1}^na_i}{n}\)</span>，则 <span class="math inline">\(b_i\)</span> 先于 <span class="math inline">\(a_i\)</span>；反之后于</p><p>由此得到一个 “等效权值” 的算法：记录每个点是由多少个点合并而成的，一个点的 “等效权值” 定义为：</p><p><span class="math display">\[\text{该点的等效权值} = \dfrac{\text{该点包含的原始权值总和}}{\text{该点包含的原始点数}}\]</span></p><p>最终做法是：不断在树中找到 “等效权值” 最大的点 <span class="math inline">\(p\)</span>，让其与其父节点 <span class="math inline">\(fa\)</span> 合并，并让 <span class="math inline">\(p\)</span> 染色顺序接在 <span class="math inline">\(fa\)</span> 之后，直到树中只剩下一个点为止，合并完成。根据合并过程中的染色顺序，计算最终的代价</p><p><strong>关于答案统计</strong></p><p>我这里给出一个完全不同的思路，不用像y总那样推导出每次便宜后的总值，思维量会稍微小一点</p><p>不难发现 “等效权值” 点所代表的一类点可以看做一个集合，那么不妨用 <strong>带权并查集</strong> 来维护每个等效权值点</p><ol type="1"><li>点权：在根节点维护这个集合的“<strong>等效权值</strong>”以及<strong>集合的大小</strong></li><li>边权：用边权维护在这个集合中该节点的<strong>次序</strong></li></ol><p>这样最后整个树中只会有一个并查集，因此每个点到根的路径长，就是他在染色过程中的次序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> u)</span> <span class="comment">//边权并查集</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p[u] != u)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="built_in">find</span>(p[u]);</span><br><span class="line">        d[u] += d[p[u]];</span><br><span class="line">        p[u] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p[u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> <span class="comment">// 注意顺序，要求是b作为父节点，a归到b下面，和一般并查集不一样</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p[a] = b;</span><br><span class="line">    d[a] += siz[b];</span><br><span class="line">    siz[b] += siz[a];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_maxid</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> maxv = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> id = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != root &amp;&amp; <span class="built_in">find</span>(i) == i &amp;&amp; v[i] &gt; maxv)</span><br><span class="line">        &#123;</span><br><span class="line">            id = i;</span><br><span class="line">            maxv = v[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//读入和初始化</span></span><br><span class="line">    cin &gt;&gt; n &gt;&gt; root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        cin &gt;&gt; w[i], v[i] = w[i], d[i] = <span class="number">0</span>, p[i] = i, siz[i] = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt; n; i ++ )</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b, fa[b] = a;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="built_in">get_maxid</span>(), father = <span class="built_in">find</span>(fa[t]);</span><br><span class="line">        v[father] = (v[t] * siz[t] + v[father] * siz[father]) / (siz[t] + siz[father]);;</span><br><span class="line">        <span class="built_in">merge</span>(t, father);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        res += (d[i] + <span class="number">1</span>) * w[i];</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x06 倍增</title>
      <link href="/Algorithm/lydguid/z0x06_%E5%80%8D%E5%A2%9E/"/>
      <url>/Algorithm/lydguid/z0x06_%E5%80%8D%E5%A2%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="倍增基本概念">倍增基本概念</h1><p>使用倍增算法，要求递推的问题的状态空间关于 2 的次幂具有可划分性</p><p>在进行递推时，如果状态空间很大，通常的线性递推无法满足时间和空间的要求</p><p>那么我们可以通过倍增的方式，只递推状态空间中在 2 的整数次幂位置上的值作为代表</p><p>当需要其他位置上的值时，我们通过 “任意整数可以表示成若干个 2 的次幂项的和” 这一性质，使用之前求出的代表值拼成所需的值</p><p>“倍增” 与 “二进制划分” 两个思想相互结合，降低了求解很多问题的空间与时间复杂度（例如：快速幂）</p><p>本节会讲解的内容：序列上的倍增问题，求解RMQ问题的ST表算法</p><blockquote><p>后续树的章节还会介绍树上倍增求LCA</p></blockquote><h1 id="序列上的倍增问题">序列上的倍增问题</h1><p>试想这样一个问题：</p><p>给定一个长度为 <span class="math inline">\(N\)</span> 的序列 <span class="math inline">\(A\)</span>，然后进行若干次询问，每次给定一个整数 <span class="math inline">\(T\)</span>，求出最大的 <span class="math inline">\(k\)</span>，满足 <span class="math inline">\(\sum_{i=1}^kA_i \le T\)</span>。</p><p>算法要求强制在线，且 <span class="math inline">\(0 \le T \le \sum_{i=1}^n A_i\)</span></p><p>最朴素的做法是从前往后枚举 <span class="math inline">\(k\)</span>，每次询问花费的时间与答案的大小有关，最坏时间复杂度为 <span class="math inline">\(O(N)\)</span></p><p>通过简单观察发现，答案具有单调性，因此处理单次询问可以 “二分答案转化为判定”</p><p>又观察到每次判定，要用到前缀区间的元素和，因此想到再预处理出一个前缀和优化判定</p><p>这样做，处理单词询问的时间复杂度为：<span class="math inline">\(O(\log N)\)</span></p><p>二分的解法在平均意义下表现很好，但是缺点在于如果每次询问给定的整数 <span class="math inline">\(T\)</span> 非常小，导致答案 <span class="math inline">\(k\)</span> 也很小，那么该算法可能还不如从前往后枚举更优</p><p>于是可以设计出这样一种倍增算法：</p><ol type="1"><li>令 <span class="math inline">\(p = 1\)</span>, <span class="math inline">\(k = 0\)</span>, <span class="math inline">\(sum = 0\)</span>，其中 <span class="math inline">\(p\)</span> 为 2 次幂跨度，<span class="math inline">\(k\)</span> 为当前前缀下标，<span class="math inline">\(sum\)</span> 为当前前缀和</li><li>比较 “<span class="math inline">\(A\)</span> 数组中 <span class="math inline">\(k\)</span> 之后的 <span class="math inline">\(p\)</span> 个数的和” 与 “<span class="math inline">\(T\)</span>” 的关系<ol type="1"><li>如果 <span class="math inline">\(sum + S_{k + p} - S_{k} \le T\)</span>，则令 <code>sum += s[k + p] - s[k], k += p, p *= 2</code><br />即累加上这一段，并让 <span class="math inline">\(p\)</span> 的跨度增长一倍</li><li>如果 <span class="math inline">\(sum + S_{k + p} - S_{k} \gt T\)</span>，则令 <code>p /= 2</code></li></ol></li><li>重复上一步，直到 <span class="math inline">\(p\)</span> 的值变为 <span class="math inline">\(0\)</span>，此时 <span class="math inline">\(k\)</span> 即为答案</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> p = <span class="number">1</span>, k = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (sum + s[k + p] - s[k] &lt;= T)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += s[k + p] - s[k];</span><br><span class="line">        k += p;</span><br><span class="line">        p *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> p /= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  这个算法始终在答案大小的范围内实施 “倍增” 与 “二进制划分” 思想，通过若干长度为 <span class="math inline">\(2\)</span> 的次幂的区间拼成最后的 <span class="math inline">\(k\)</span>，时间复杂度为 <span class="math inline">\(O(\log k)\)</span>，能够应对 <span class="math inline">\(T\)</span> 的各种大小情况。</p><p>  而且序列上倍增还有一个规律，就是一开始 <span class="math inline">\(p\)</span> 连续成倍增长，之后 <span class="math inline">\(p\)</span> 连续折半递减。</p><h1 id="st算法">ST算法</h1><blockquote><p>RMQ的经典应用就是ST表算法，很多人可能只知道RMQ，却不知道其就是倍增的一种产物</p></blockquote><p>给定一个长度为 <span class="math inline">\(N\)</span> 的序列 <span class="math inline">\(A\)</span>，ST算法能在 <span class="math inline">\(O(N\log N)\)</span> 时间的预处理后，以 <span class="math inline">\(O(1)\)</span> 的时间在线处理 “序列 <span class="math inline">\(A\)</span> 的下标在 <span class="math inline">\([l,r]\)</span> 之间的数的最值是多少” 这样的区间最值询问</p><p>一个序列的子区间个数为 <span class="math inline">\(N^2\)</span> 个，根据倍增的思想，首先在这 <span class="math inline">\(N^2\)</span> 个状态空间里选择一些 <span class="math inline">\(2\)</span> 的整数次幂的位置作为代表值</p><p>设 <span class="math inline">\(f[i, j]\)</span> 表示序列 <span class="math inline">\(A\)</span> 的子区间 <span class="math inline">\([i, i + 2^j - 1]\)</span> 里的最值</p><p>即从 <span class="math inline">\(i\)</span> 开始(包括 <span class="math inline">\(i\)</span>) 的 <span class="math inline">\(2^j\)</span> 个数的最大值</p><p>问题的边界显然是 <span class="math inline">\(F[i,0] = A_i\)</span>，递推式为：<span class="math inline">\(F[i,j] = \max{F[i, j - 1], F[i + 2^{j-1}, j - 1]}\)</span></p><p>即区间 <span class="math inline">\([i, i + 2^j - 1]\)</span> 的最大值为区间 <span class="math inline">\([i, i + 2^{i-1}-1]\)</span> 与区间 <span class="math inline">\([i + 2^{j-1}, i + 2^j - 1]\)</span> 的最大值</p><p>再考虑一下 <span class="math inline">\(j\)</span> 的范围：极限情况下是求区间 <span class="math inline">\([1, n]\)</span> 的最值，于是有 <span class="math inline">\(1 + 2^j - 1 \le n\)</span></p><p>化简易得：<span class="math inline">\(2^j \le n \quad\Rightarrow\quad \log_{2}^{2^j} \le \log_{2}^{n} \quad\Rightarrow\quad j \le \log_2^n \quad\Rightarrow\quad j \le \lceil \log_2^n \rceil\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ST_prework</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) f[i][<span class="number">0</span>] = a[i];</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">log</span>(n) / <span class="built_in">log</span>(<span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; t; j ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - (<span class="number">1</span> &lt;&lt; j) + <span class="number">1</span>; i ++ )</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i][j - <span class="number">1</span>], f[i + (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))][j - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当询问区间 <span class="math inline">\([l,r]\)</span> 时，先计算出 <span class="math inline">\(k\)</span>，满足 <span class="math inline">\(2^k &lt; r - l + 1 \le 2^{k+1}\)</span>，即小于区间长的最大 <span class="math inline">\(2\)</span> 的 <span class="math inline">\(k\)</span> 次幂</p><p>这样保证两个子区间：<span class="math inline">\([l, l + 2^k - 1]\)</span> 和 <span class="math inline">\([r - 2^k + 1, r]\)</span> 一定能覆盖住区间 <span class="math inline">\([l, r]\)</span></p><p>两个区间的最大值的最大值，即为整个区间的最大值</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ST_query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="built_in">log</span>(r - l + <span class="number">1</span>) / <span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(f[l][k], f[r - (<span class="number">1</span> &lt;&lt; k) + <span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>log</code> 函数为 <code>cmath</code> 库里的函数，因为其效率很高，因此我们近似看成 <span class="math inline">\(O(1)\)</span> 无碍</p></blockquote><h1 id="习题">习题</h1><h2 id="天才acm">天才ACM</h2><h3 id="题目描述">题目描述</h3><p>给定一个整数 <span class="math inline">\(M\)</span>，对于任意一个整数集合 <span class="math inline">\(S\)</span>，定义“<strong>校验值</strong>”如下:</p><p>从集合 <span class="math inline">\(S\)</span> 中取出 <span class="math inline">\(M\)</span> 对数(即 <span class="math inline">\(2×M\)</span> 个数，不能重复使用集合中的数，如果 <span class="math inline">\(S\)</span> 中的整数不够 <span class="math inline">\(M\)</span> 对，则取到不能取为止)，使得“每对数的差的平方”之和最大，这个最大值就称为集合 <span class="math inline">\(S\)</span> 的“校验值”。</p><p>现在给定一个长度为 <span class="math inline">\(N\)</span> 的数列 <span class="math inline">\(A\)</span> 以及一个整数 <span class="math inline">\(T\)</span></p><p>我们要把 <span class="math inline">\(A\)</span> 分成若干段，使得每一段的“<strong>校验值</strong>”都不超过 <span class="math inline">\(T\)</span></p><p>求最少需要分成几段</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(K\)</span>，代表有 <span class="math inline">\(K\)</span> 组测试数据</p><p>对于每组测试数据，第一行包含三个整数 <span class="math inline">\(N\)</span>, <span class="math inline">\(M\)</span>, <span class="math inline">\(T\)</span></p><p>第二行包含 <span class="math inline">\(N\)</span> 个整数，表示数列 <span class="math inline">\(A_1, A_2, …, A_N\)</span></p><p><strong>输出格式</strong></p><p>对于每组测试数据，输出其答案，每个答案占一行</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤K≤12\)</span>, <span class="math inline">\(1≤N,M≤500000\)</span>, <span class="math inline">\(0≤T≤10^{18}\)</span>, <span class="math inline">\(0≤A_i≤2^{20}\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5 1 49</span><br><span class="line">8 2 1 7 9</span><br><span class="line">5 1 64</span><br><span class="line">8 2 1 7 9</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p><strong>先考虑如何求一个集合的校验值？</strong></p><p>结论：选出 <span class="math inline">\(m\)</span> 个最大值和 <span class="math inline">\(m\)</span> 个最小值，然后最大值配对最小值，次大值配对次小值 ......</p><p>证明：假设排序后的 <span class="math inline">\(2m\)</span> 个数为 <span class="math inline">\(a_1, a_2, \cdots, a_{2m}\)</span></p><p>按照上述策略配对，有：<span class="math inline">\(|a_{2m}-a_1|^2 + |a_{2m-1}-a_2|^2 + \cdots + |a_{m+1}-a_{m}|^2\)</span></p><p>考虑交换配对 <span class="math inline">\((a, b)\)</span> 和 <span class="math inline">\((c, d)\)</span>，其中 <span class="math inline">\(i &lt; j\)</span></p><p>故有大小关系：<span class="math inline">\(a &lt; c &lt; d &lt; b\)</span>，校验值为：<span class="math inline">\((d-c)^2 + (b - a)^2\)</span></p><p>交换配对后，有两种情况，第一种情况为：<span class="math inline">\((a, c)\)</span> 和 <span class="math inline">\((d, b)\)</span></p><p>其校验值为：<span class="math inline">\((c-a)^2 + (b - d)^2\)</span>，两个等式作差易得：</p><p><span class="math display">\[\frac{1}{2}(v_1 - v_2) = ac + bd - cd - ab = b(d-a) - c(d-a) = (b-c)(d-a) \ge 0\]</span></p><p>交换之后，显然方案不会变差，第二种情况为：<span class="math inline">\((a, d)\)</span> 和 <span class="math inline">\((c, b)\)</span></p><p>其校验值为：<span class="math inline">\((d-a)^2 + (b-c)^2\)</span>，两个等式作差易得：</p><p><span class="math display">\[\frac{1}{2}(v_1-v_3) = ad+bc-cd-ab = -d(c-a) + b(c-a) = (c-a)(b-d) \ge 0\]</span></p><p>交换之后，显然方案不会变差</p><p><span class="math inline">\(\mathbf{QED}\)</span></p><p><strong>考虑如何分段？</strong></p><p>由于题设要求是分成的段数尽可能少，因此每段要求尽可能长，这就与“序列前缀区间和询问”一样了</p><p>不过那一题是求前缀区间和不少于 <span class="math inline">\(T\)</span>，这一题是前缀校验值不少于 <span class="math inline">\(T\)</span></p><p>这题就会体现出 “倍增” 和 “二分” 的区别了</p><p>由于每次要判定当前的答案是否满足条件，因此每次判定，都要对答案区间进行排序，然后配对</p><p>“倍增” 和 “二分” 找答案的时间复杂度基本一致，差的只是常数，但问题主要出现在答案判定上</p><p>如果用二分，每一次二分的中点就是 <span class="math inline">\(mid = \frac{l + n}{2}\)</span>，这个 <span class="math inline">\(mid\)</span> 与 <span class="math inline">\(n\)</span> 是一个数量级的</p><p>因此如果答案的每个段很小，那么每次排序复杂度为 <span class="math inline">\(O(n\log n)\)</span>，总复杂度是 <span class="math inline">\(O(n^2\log n)\)</span></p><p>如果用 “倍增” 寻找答案，他会从小区间往大区间扩展，效率高于二分，这里可以给出数学证明：</p><p>假设倍增到答案过程中判定的区间长度分别为：<span class="math inline">\(l_1, l_2, \cdots, l_k\)</span>，先考虑单次分段倍增的复杂度：</p><p><span class="math display">\[O\Big(\sum _{i=1}^k l_i\log l_i) \le O(\log n \times \sum_{i=1}^k l_i\Big) \le O(\log n \times \sum_{i=1}^k l_k)\le O(\log n \times \log n l_k) = O(l_k \log^2 n)\]</span></p><p>将所有的段加起来，总的时间复杂度为：<span class="math inline">\(O(n \log^2 n)\)</span> 远远优于二分做法</p><p>倍增过程如下：</p><ol type="1"><li>初始化 <span class="math inline">\(p = 1\)</span>, <span class="math inline">\(R = L\)</span></li><li>求出 <span class="math inline">\([L, R + p]\)</span> 这一段区间的校验值：<ol type="1"><li>若校验值 <span class="math inline">\(\le T\)</span>，则 <code>R += p, p *= 2</code></li><li>若校验值 <span class="math inline">\(\gt T\)</span>，则 <code>p /= 2</code></li></ol></li><li>重复上一步，直到 <span class="math inline">\(p\)</span> 变为 <span class="math inline">\(0\)</span> 为止，此时 <span class="math inline">\(R\)</span> 即为所求</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; r; i ++ ) b[k ++ ] = a[i];</span><br><span class="line">    <span class="built_in">sort</span>(b, b + k);</span><br><span class="line">    LL sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; i &lt; k; i ++ , k -- )</span><br><span class="line">        sum += (LL) (b[i] - b[k - <span class="number">1</span>]) * (b[i] - b[k - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> sum &lt;= T;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%lld&quot;</span>, &amp;n, &amp;m, &amp;T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">1</span>, r = l;</span><br><span class="line">        <span class="keyword">while</span> (p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (r + p &lt;= n &amp;&amp; <span class="built_in">check</span>(l, r + p))</span><br><span class="line">            &#123;</span><br><span class="line">                r += p;</span><br><span class="line">                p *= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> p /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">        l = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二路归并优化">二路归并优化</h3><p>不难发现，在倍增的过程中，排序的片段中前缀数组已经有序（因为上一轮倍增好后排好了）</p><p>即 <span class="math inline">\([l, r)\)</span> 已经有序，现在倍增需要检验的区间为 <span class="math inline">\([l, r + p)\)</span></p><p>如上面的做法，采用直接对 <span class="math inline">\([l, r + p)\)</span> 区间排序的策略，最终的时间复杂度为 <span class="math inline">\(O(n\log^2n)\)</span></p><p>既然前缀区间已有序，不妨只排 <span class="math inline">\([r, r + p)\)</span>，再将两个区间做一次 <strong>二路归并</strong>，单次分段的时间复杂度如下：</p><p><span class="math display">\[O\Big(\sum_{i=1}^k [(l_i - l_{i-1}) \log (l_i - l_{i-1}) + l_i]\Big) = O\Big(\sum_{i=1}^k [(l_i - l_{i-1}) \log (l_i - l_{i-1})]\Big) = O\Big(l_k \log l_k\Big)\]</span></p><p>这样总的时间复杂度为：<span class="math inline">\(O(n\log n)\)</span>，是本题的最优解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> mid, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = mid; i &lt; r; i ++ ) b[i] = a[i];</span><br><span class="line">    <span class="built_in">sort</span>(b + mid, b + r);</span><br><span class="line">    <span class="keyword">int</span> i = l, j = mid, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; mid &amp;&amp; j &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b[i] &lt; b[j]) t[k ++ ] = b[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> t[k ++ ] = b[j ++ ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; mid) t[k ++ ] = b[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt; r) t[k ++ ] = b[j ++ ];</span><br><span class="line">    </span><br><span class="line">    LL sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m &amp;&amp; i &lt; k; i ++ , k -- )</span><br><span class="line">        sum += (LL) (t[i] - t[k - <span class="number">1</span>]) * (t[i] - t[k - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> sum &lt;= T;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%lld&quot;</span>, &amp;n, &amp;m, &amp;T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> p = <span class="number">1</span>, r = l;</span><br><span class="line">        <span class="keyword">while</span> (p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (r + p &lt;= n &amp;&amp; <span class="built_in">check</span>(l, r, r + p))</span><br><span class="line">            &#123;</span><br><span class="line">                r += p;</span><br><span class="line">                p *= <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; r; i ++ )</span><br><span class="line">                    b[i] = t[i - l];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> p /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">        l = r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x05 排序</title>
      <link href="/Algorithm/lydguid/z0x05_%E6%8E%92%E5%BA%8F/"/>
      <url>/Algorithm/lydguid/z0x05_%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="排序基本概念">排序基本概念</h1><p>程序设计中，常用排序共分为三类：</p><ol type="1"><li>选择排序、插入排序、冒泡排序</li><li>堆排序、归并排序、快速排序</li><li>计数排序、基数排序、桶排序</li></ol><p>前两类是 <strong>基于比较的排序算法</strong></p><p>对 <span class="math inline">\(n\)</span> 的元素排序时，若元素比较大小的时间复杂度为 <span class="math inline">\(O(1)\)</span>，则</p><ol type="1"><li>第一类排序算法的时间复杂度为 <span class="math inline">\(O(n^2)\)</span></li><li>第二类排序算法的时间复杂度为 <span class="math inline">\(O(n\log n)\)</span></li></ol><p><strong>基于比较的排序算法</strong> 的时间复杂度下界为 <span class="math inline">\(O(n\log n)\)</span></p><p>第三类算法不是直接比较大小，而是对被排序的数值采取按位划分、分类映射等处理方式</p><p>其时间复杂度不仅与 <span class="math inline">\(n\)</span> 有关，还与数值的大小范围 <span class="math inline">\(m\)</span> 有关</p><h1 id="离散化">离散化</h1><p>排序算法的第一个应用时离散化</p><p>离散化就是把无穷大集合中的若干个元素映射为有限集合以便于统计的方法</p><p>在很多情况下，问题的范围虽然定义在整数集合 <span class="math inline">\(\mathbb{Z}\)</span>，但是只涉及其中 <span class="math inline">\(m\)</span> 个有限数值，并且与数值的绝对大小无关（只把这些数值作为代表，或只与它们的相对顺序有关）</p><p>此时，我们就可以把整数集合 <span class="math inline">\(\mathbb{Z}\)</span> 中的这 <span class="math inline">\(m\)</span> 个整数与 <span class="math inline">\(1 \sim m\)</span> 建立映射关系</p><p>如果有一个时间、空间复杂度与数值范围 <span class="math inline">\(\mathbb{Z}\)</span> 大小有关，在离散化后，该算法的时间、空间复杂度就降低为与 <span class="math inline">\(m\)</span> 有关</p><p>并且离散化以后，我们仍然保持原数据映射到新数据后相对大小不变</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="keyword">int</span>&gt; xs;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">discrete</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">    a.<span class="built_in">erase</span>(<span class="built_in">unique</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>()), a.<span class="built_in">end</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">lower_bound</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), x) - a.<span class="built_in">begin</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第k个数">第k个数</h1><p>如何求解一个长度为 <span class="math inline">\(n\)</span> 的序列的第 <span class="math inline">\(k\)</span> 个数</p><p>一个较为简单的做法是直接排序，然后输出从小到大的第 <span class="math inline">\(k\)</span> 个数，时间复杂度为 <span class="math inline">\(O(n \log n)\)</span></p><p>实际上利用快速排序的思想，可以在 <span class="math inline">\(O(n)\)</span> 的时间即可求出第 <span class="math inline">\(k\)</span> 个数</p><p>快排思想是：每一层递归中，随机选取一个数为基准，把比他小的交换到左边，比他大的交换到右边</p><p>然后递归左右两边继续处理，平均情况下的时间复杂度为 <span class="math inline">\(O(n \log n)\)</span></p><p>实际上，每次选取基准值以后，可以统计出小于基准值的数的数量 <span class="math inline">\(cnt\)</span></p><p>如果 <span class="math inline">\(k \le cnt\)</span>，就去左边寻找第 <span class="math inline">\(k\)</span> 小数；否则，去右边寻找第 <span class="math inline">\(k - cnt\)</span> 大数</p><p>这样递归求解，平均意义下的时间复杂度为 <span class="math inline">\(O(n + \frac{n}{2} + \frac{n}{4} + \cdots + 1) = O(2n) = O(n)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> a[l];</span><br><span class="line">    <span class="keyword">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, pivot = a[l + r &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> ++ i; <span class="keyword">while</span> (a[i] &lt; pivot);</span><br><span class="line">        <span class="keyword">do</span> -- j; <span class="keyword">while</span> (a[j] &gt; pivot);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(a[i], a[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (j - l + <span class="number">1</span> &gt;= k) <span class="keyword">return</span> <span class="built_in">calc</span>(l, j, k);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">calc</span>(j + <span class="number">1</span>, r, k - (j - l + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>若要求解第 k 大数，直接调用 <code>calc(l, r, n - k)</code> 找第 <span class="math inline">\(n-k\)</span> 小数即可</p></blockquote><h1 id="逆序对">逆序对</h1><p>对于一个序列 <span class="math inline">\(a\)</span>，若 <span class="math inline">\(i &lt; j\)</span> 且 <span class="math inline">\(a_i &gt; a_j\)</span>，则称 <span class="math inline">\(a_i\)</span> 与 <span class="math inline">\(a_j\)</span> 构成逆序对</p><p>使用归并排序可以在 <span class="math inline">\(O(n\log n)\)</span> 的时间里求出一个长度为 <span class="math inline">\(n\)</span> 的序列中逆序对个数</p><p>归并排序递归处理好左 <span class="math inline">\([l, mid]\)</span> 右 <span class="math inline">\([mid + 1, r]\)</span> 两边序列后，进行合并时，可以求解 <span class="math inline">\((a_i,a_j)\)</span> 的逆序对个数，其中 <span class="math inline">\(i \in [l, mid]\)</span>，<span class="math inline">\(j \in [mid + 1, r]\)</span></p><p>由数学归纳法，读者自证不难，每次合并两个序列，可以求出整个序列中全部的逆序对数量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">cal_revpair</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> cnt = <span class="built_in">cal_revpair</span>(a, l, mid) + <span class="built_in">cal_revpair</span>(a, mid + <span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; a[j]) cnt += mid - i + <span class="number">1</span>, b[k ++ ] = a[j ++ ];</span><br><span class="line">        <span class="keyword">else</span> b[k ++ ] = a[i ++ ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) b[k ++ ] = a[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) b[k ++ ] = a[j ++ ];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i ++ ) a[l + i] = b[i];</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>求逆序对还可以用树状数组，稍微有点复杂，必要的时候还要先离散化再用树状数组，之后会提及</p></blockquote><h1 id="中位数">中位数</h1><p>有序序列中，中位数具有一些很优美的性质，可以引出一系列与它相关的问题</p><p>动态维护序列的中位数也非常值得探讨，在后续例题中会进行具体讲解</p><h1 id="习题">习题</h1><h2 id="电影">电影</h2><h3 id="题目描述">题目描述</h3><p>莫斯科正在举办一个大型国际会议，有 <span class="math inline">\(n\)</span> 个来自不同国家的科学家参会。</p><p>每个科学家都只懂得一种语言。</p><p>为了方便起见，我们把世界上的所有语言用 <span class="math inline">\(1\)</span> 到 <span class="math inline">\(10^9\)</span> 之间的整数编号。</p><p>在会议结束后，所有的科学家决定一起去看场电影放松一下。</p><p>他们去的电影院里一共有 <span class="math inline">\(m\)</span> 部电影正在上映，每部电影的语音和字幕都采用不同的语言。</p><p>对于观影的科学家来说，如果能听懂电影的语音，他就会很开心；如果能看懂字幕，他就会比较开心；如果全都不懂，他就会不开心。</p><p>现在科学家们决定大家看同一场电影。</p><p>请你帮忙选择一部电影，可以让观影很开心的人最多。</p><p>如果有多部电影满足条件，则在这些电影中挑选观影比较开心的人最多的那一部。</p><p><strong>输入格式</strong></p><p>第一行输入一个整数 <span class="math inline">\(n\)</span>，代表科学家的数量。</p><p>第二行输入 <span class="math inline">\(n\)</span> 个整数 <span class="math inline">\(a_1,a_2,…,a_n\)</span>，其中 <span class="math inline">\(a_i\)</span> 表示第 <span class="math inline">\(i\)</span> 个科学家懂得的语言的编号。</p><p>第三行输入一个整数 <span class="math inline">\(m\)</span>，代表电影的数量。</p><p>第四行输入 <span class="math inline">\(m\)</span> 个整数 <span class="math inline">\(b_1,b_2,…,b_m\)</span>，其中 <span class="math inline">\(b_i\)</span> 表示第 <span class="math inline">\(i\)</span> 部电影的语音采用的语言的编号。</p><p>第五行输入 <span class="math inline">\(m\)</span> 个整数 <span class="math inline">\(c_1,c_2,…,c_m\)</span>，其中 <span class="math inline">\(c_i\)</span> 表示第 <span class="math inline">\(i\)</span> 部电影的字幕采用的语言的编号。</p><p>请注意对于同一部电影来说，<span class="math inline">\(bi≠ci\)</span>。</p><p>同一行内数字用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，代表最终选择的电影的编号。电影编号 <span class="math inline">\(1∼m\)</span>。</p><p>如果答案不唯一，输出任意一个均可。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n,m≤2 \times 10^5\)</span>, <span class="math inline">\(1≤ai,bi,ci≤10^9\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2 3 2</span><br><span class="line">2</span><br><span class="line">3 2</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>虽然语言范围在 int 以内，但是这 <span class="math inline">\(m\)</span> 部电影与 <span class="math inline">\(n\)</span> 个人最多涉及 <span class="math inline">\(2m + n\)</span> 种语言</p><p>不妨将所有有效语言离散化处理，用 <span class="math inline">\(0 \sim 2m+n-1\)</span> 之间的整数代替每种语言</p><p>接着用一个数组直接统计会每种语言的人的数量，从而选择满足题意的电影</p><p>时间复杂度：<span class="math inline">\(O((n+m)\log(n+m))\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">discrete</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n;i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="built_in">query</span>(a[i]);</span><br><span class="line">    cnt[x] ++ ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> s1 = <span class="number">0</span>, s2 = <span class="number">0</span>, res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> x1 = <span class="built_in">query</span>(b[i]), x2 = <span class="built_in">query</span>(c[i]);</span><br><span class="line">    <span class="keyword">if</span> (cnt[x1] &gt; s1) s1 = cnt[x1], s2 = cnt[x2], res = i;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cnt[x1] == s1 &amp;&amp; cnt[x2] &gt; s2) s2 = cnt[x2], res = i;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="货仓选址">货仓选址</h2><h3 id="题目描述-1">题目描述</h3><p>在一条数轴上有 <span class="math inline">\(N\)</span> 家商店，它们的坐标分别为 <span class="math inline">\(A_1∼A_N\)</span></p><p>现在需要在数轴上建立一家货仓，每天清晨，从货仓到每家商店都要运送一车商品</p><p>为了提高效率，求把货仓建在何处，可以使得货仓到每家商店的距离之和最小</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N\)</span></p><p>第二行 <span class="math inline">\(N\)</span> 个整数 <span class="math inline">\(A_1∼A_N\)</span></p><p><strong>输出格式</strong></p><p>输出一个整数，表示距离之和的最小值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤10^5\)</span>, <span class="math inline">\(0≤A_i≤4\times 10^4\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">6 2 9 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>这里给出蓝书上的证明</p><p>将 <span class="math inline">\(A_1 \sim A_n\)</span> 排序，设货仓建在 <span class="math inline">\(X\)</span> 处，<span class="math inline">\(X\)</span> 处左侧的商店有 <span class="math inline">\(P\)</span> 家，<span class="math inline">\(X\)</span> 处右侧的商店有 <span class="math inline">\(Q\)</span> 家</p><ol type="1"><li>若 <span class="math inline">\(P &lt; Q\)</span>，则每把货仓的选址向右移动 <span class="math inline">\(1\)</span> 单位距离，距离之和就会变小 <span class="math inline">\(Q - P\)</span></li><li>若 <span class="math inline">\(P &gt; Q\)</span>，则每把货仓的选址向左移动 <span class="math inline">\(1\)</span> 单位距离，距离之和就会变小 <span class="math inline">\(P - Q\)</span></li></ol><p>然后再分奇偶讨论：</p><ol type="1"><li><p>当 <span class="math inline">\(N\)</span> 为奇数时，显然建在 <span class="math inline">\(A[(N + 1) / 2]\)</span> 处最优，此时 <span class="math inline">\(P = Q\)</span></p></li><li><p>当 <span class="math inline">\(N\)</span> 为偶数时，建在 <span class="math inline">\(\big[A[N / 2], A[N / 2 + 1] \big]\)</span> 之间的任何位置都是最优</p></li></ol><p>对于第二种情况，不妨建在 <span class="math inline">\(A[N / 2]\)</span> 处，这样无论奇偶都可以统一处理成 <span class="math inline">\(A[(N + 1) / 2]\)</span> 了</p><p>对于下标从 <span class="math inline">\(0\)</span> 开始，就是 <span class="math inline">\(A[N / 2]\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span>(a, a + n);</span><br><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) s += <span class="built_in">abs</span>(a[n / <span class="number">2</span>] - a[i]);</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="七夕祭">七夕祭</h2><h3 id="题目描述-2">题目描述</h3><p>七夕节因牛郎织女的传说而被扣上了「情人节」的帽子。</p><p>于是 TYVJ 今年举办了一次线下七夕祭。</p><p>Vani 同学今年成功邀请到了 cl 同学陪他来共度七夕，于是他们决定去 TYVJ 七夕祭游玩。</p><p>TYVJ 七夕祭和 11 区的夏祭的形式很像。</p><p>矩形的祭典会场由 <span class="math inline">\(N\)</span> 排 <span class="math inline">\(M\)</span> 列共计 <span class="math inline">\(N×M\)</span> 个摊点组成。</p><p>虽然摊点种类繁多，不过 cl 只对其中的一部分摊点感兴趣，比如章鱼烧、苹果糖、棉花糖、射的屋……什么的。</p><p>Vani 预先联系了七夕祭的负责人 zhq，希望能够通过恰当地布置会场，使得各行中 cl 感兴趣的摊点数一样多，并且各列中 cl 感兴趣的摊点数也一样多。</p><p>不过 zhq 告诉 Vani，摊点已经随意布置完毕了，如果想满足 cl 的要求，唯一的调整方式就是交换两个相邻的摊点。</p><p>两个摊点相邻，当且仅当他们处在同一行或者同一列的相邻位置上。</p><p>由于 zhq 率领的 TYVJ 开发小组成功地扭曲了空间，每一行或每一列的第一个位置和最后一个位置也算作相邻。</p><p>现在 Vani 想知道他的两个要求最多能满足多少个。</p><p>在此前提下，至少需要交换多少次摊点。</p><p><strong>输入格式</strong></p><p>第一行包含三个整数 <span class="math inline">\(N\)</span> 和 <span class="math inline">\(M\)</span> 和 <span class="math inline">\(T\)</span>，<span class="math inline">\(T\)</span> 表示 cl 对多少个摊点感兴趣。</p><p>接下来 <span class="math inline">\(T\)</span> 行，每行两个整数 <span class="math inline">\(x,y\)</span>，表示 cl 对处在第 <span class="math inline">\(x\)</span> 行第 <span class="math inline">\(y\)</span> 列的摊点感兴趣。</p><p><strong>输出格式</strong></p><p>首先输出一个字符串。</p><p>如果能满足 Vani 的全部两个要求，输出 <code>both</code>；</p><p>如果通过调整只能使得各行中 cl 感兴趣的摊点数一样多，输出 <code>row</code>；</p><p>如果只能使各列中 cl 感兴趣的摊点数一样多，输出 <code>column</code>；</p><p>如果均不能满足，输出 <code>impossible</code>。</p><p>如果输出的字符串不是 <code>impossible</code>， 接下来输出最小交换次数，与字符串之间用一个空格隔开。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N,M≤100000\)</span>, <span class="math inline">\(0≤T≤min(N∗M,100000)\)</span>, <span class="math inline">\(1≤x≤N\)</span>, <span class="math inline">\(1≤y≤M\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2 3 4</span><br><span class="line">1 3</span><br><span class="line">2 1</span><br><span class="line">2 2</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">row 1</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>观察易得：</p><ol type="1"><li>只做列相邻交换时，不会改变每行的兴趣摊点数；</li><li>只做行相邻交换时，不会改变每列的兴趣摊点数；</li></ol><p>那不妨把原问题拆分成两个相似的子问题，先后计算列相邻交换和行相邻交换的最小次数，从而求解原问题</p><p>思考如何只做列相邻交换，使得每列的兴趣摊点数相等</p><p>由于我们只关心每列中，兴趣摊点总数，因此不妨把每列压缩成一个点，兴趣摊点总数表示该点的值</p><p>于是该模型就变成，在一个环形图上，每次只能相邻传递一件物品，求传递最小次数使得每个点的物品数相同</p><p>这就是经典的：“<strong>环形纸牌均分问题</strong>”，推导方式有两种，我先给出 <strong>蓝书上的推导</strong>：</p><p><strong>考虑 “纸牌均分问题” 如何解决？</strong></p><p>设一共有 <span class="math inline">\(M\)</span> 个人，每个人初始的纸牌数量为 <span class="math inline">\(c_i\)</span>，纸牌总数为 <span class="math inline">\(T\)</span></p><p>显然当 <span class="math inline">\(M \nmid T\)</span> 时，方案不存在，现只考虑方案存在的情况</p><p>第 1 个人为了达到平均持有数，需要向第 2 个人传递 <span class="math inline">\(c_1 - T / M\)</span> 数量的牌（正数是给，负数是拿）</p><p>第 2 个人为了达到平均持有数，需要向第 3 个人传递 <span class="math inline">\(c_2 - T / M + c_1 - T / M\)</span> 数量的牌</p><p>......</p><p>第 n-1 个人为了达到平均持有数，需要向第 n 个人传递 <span class="math inline">\(\sum_{i=1}^{n-1} c_i - (n-1) \times T / M\)</span> 数量的牌</p><p>此时前 n-1 人都达到了平均数，则第 n 个人必然也达到了平均数</p><p>统计易得，最小交换次数为：</p><p><span class="math display">\[\sum_{i=1}^{n-1} \Big| { \sum_{j = 1}^i (c_j - \frac{T}{M}) } \Big|\]</span></p><p>不妨设 <span class="math inline">\(A_i = c_i - T / M\)</span>，于是化简可得：</p><p><span class="math display">\[\sum_{i=1}^{n-1} \Big| { \sum_{j=1}^i A_j } \Big| = \sum_{i=1}^{n-1} | { S_i } | \quad\text{其中 } S_i \text{ 为 } A_i \text{ 的前缀和，即 } S_i = \sum_{j=1}^i A_j\]</span></p><p><strong>考虑 “纸牌均分问题” 如何延伸到 “环形纸牌均分问题” ？</strong></p><p>环形区间的问题，第一想到的就是 <strong>破环成链</strong> 了</p><p>经过思考发现，一定存在一个最优解方案，环上有相邻的两个人之间没有发生交换</p><blockquote><p>这部分证明如下：<br />如果环上相邻两人全部发生交换，则会出现两种情形：（正数传递为有向边的正向方向）<br />1. 出现一个环 这种方案肯定不是最优解，因为给出去的纸牌经过一圈收回来了，显然浪费了操作次数<br />我们在这个环上断开交易数量最小的一条交换边，并使其他边减少该边的交换数量，必然不会使方案变差<br />2. 出现一个点到达另一个点有两条路径<br />我们可以断开起点两条出边中 <span class="math inline">\(val = cnt \times w\)</span> 最小的那一套边，并该边权值累加到另一条路径的每一条边上，其结果不会变差（其中 <span class="math inline">\(cnt\)</span> 是起点到终点路径上经过的点数，<span class="math inline">\(w\)</span> 是这条边的权重）</p></blockquote><p>一个朴素的做法是直接枚举断点的位置，然后做一遍线性纸牌均分，但是时间复杂度为 <span class="math inline">\(O(n^2)\)</span> 不可取，需要推导</p><p>现将这 <span class="math inline">\(n\)</span> 个人的 <span class="math inline">\(A_i\)</span> 和 <span class="math inline">\(S_i\)</span> 罗列出来 <span class="math inline">\((A_i = \sum\limits_{j=1}^n (c_j - \dfrac{T}{M}), S_i = \sum\limits_{j = 1}^i A_j)\)</span></p><p><span class="math display">\[\begin{matrix}A_1 &amp; S_1 \\A_2 &amp; S_2 \\\cdots &amp; \cdots \\A_k &amp; S_k \\A_{k+1} &amp; S_{k+1} \\\cdots &amp; \cdots \\A_n &amp; S_n\end{matrix}\]</span></p><p>考虑在第 <span class="math inline">\(k\)</span> 个人之后断开，则环化成链有：</p><p><span class="math display">\[\begin{matrix}A_{k+1} &amp; S_{k+1} - S_k \\\cdots &amp; \cdots \\A_n &amp; S_n - S_k \\A_1 &amp; S_1 + S_n - S_k \\A_2 &amp; S_2 + S_n - S_k \\\cdots &amp; \cdots \\A_k &amp; S_k + S_n - S_k \\\end{matrix}\]</span></p><p>又易知 <span class="math inline">\(S_n = \sum c_j - n \times T / m = 0\)</span>，故求得最小步数为：</p><p><span class="math display">\[\sum_{i=1}^n |S_i - S_k| \quad\text{其中 } S_i \text{ 为 } A_i \text{ 的前缀和，即 } S_i = \sum_{j=1}^i A_j\]</span></p><p>该绝对值不等式最小值的求解，就同上一题 “货仓选址” 异曲同工了</p><p>因此 <span class="math inline">\(S_k\)</span> 的选择，就取 <span class="math inline">\(S_i\)</span> 排序后的中位数即可</p><p><strong>第二种推导方式</strong></p><p>这种推导方式相较于上一种，思维量小，但对公式的变形要求高，是直接统计每个点</p><p>考虑直接在环上求解，环的顺时针方向设为正方向，若边权为正，表示左向右传递；反之则是右向左传递</p><p>设 <span class="math inline">\(d_i\)</span> 表示第 <span class="math inline">\(i\)</span> 个人向第 <span class="math inline">\((i+1)\bmod n\)</span> 传递的所有纸牌数量</p><p>传递完成后的结束是所有人的纸牌数量变成平均数，以此建立方程组有：</p><p><span class="math display">\[\begin{cases}avg =&amp; c_1 - d_1 + d_n \\avg =&amp; c_2 - d_2 + d_1 \\\cdots \\avg =&amp; c_{n-1} - d_{n-1} + d_{n-2} \\avg =&amp; c_{n} - d_{n} + d_{n-1}\end{cases}\qquad \Rightarrow \qquad\begin{cases}d_1 &amp;= c_1 - avg + d_n \\d_2 &amp;= c_2 - avg + d_1 \\\cdots \\d_{n-1} &amp;= c_{n-1} - avg + d_{n-2} \\d_n &amp;= c_{n} - avg + d_{n-1}\end{cases}\]</span></p><p>观察易得，相邻两个等式之间，有可以代入的项，从上到下用滚动相消法可得：</p><p><span class="math display">\[\begin{cases}d_1 =&amp; c_1 - avg + d_n \\d_2 =&amp; \sum\limits_{i=1}^2 c_i - 2 \times avg + d_n \\\cdots \\d_{n-1} =&amp; \sum\limits_{i=1}^{n-1} c_i - (n-1) \times avg + d_n \\d_n =&amp; \sum\limits_{i=1}^{n} c_i - n \times avg + d_n\end{cases}\]</span></p><p>易得通项：<span class="math inline">\(d_i = \sum\limits_{j=1}^{i} c_j - i \times avg + d_n = d_n + \sum\limits_{j=1}^{i} (c_j - avg) = d_n - \sum\limits_{j=1}^{i} (avg - c_j)\)</span></p><p>不妨设 <span class="math inline">\(A_i = avg - c_i, S_i = \sum\limits_{j = 1}^i A_j\)</span>，则通项可以化简为：<span class="math inline">\(d_i = d_n - \sum\limits_{j=1}^{i}A_j\)</span></p><p>则总共的操作数为：</p><p><span class="math display">\[\sum_{i=1}^n d_i = \sum_{i=1}^n |d_n - \sum_{j=1}^i A_j| = \sum_{i=1}^n |d_n - S_i|\]</span></p><p>由 <strong>绝对值不等式</strong> 易得：<span class="math inline">\(d_n\)</span> 应取 <span class="math inline">\(S_i\)</span> 排序后的中位数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> c[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> avg = t / n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) a[i] = c[i] - avg;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    <span class="built_in">sort</span>(s + <span class="number">1</span>, s + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) res += <span class="built_in">abs</span>(s[i] - s[(n + <span class="number">1</span>) / <span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态中位数">动态中位数</h2><h3 id="题目描述-3">题目描述</h3><p>依次读入一个整数序列，每当已经读入的整数个数为奇数时，输出已读入的整数构成的序列的中位数。</p><p><strong>输入格式</strong></p><p>第一行输入一个整数 <span class="math inline">\(P\)</span>，代表后面数据集的个数，接下来若干行输入各个数据集。</p><p>每个数据集的第一行首先输入一个代表数据集的编号的整数。</p><p>然后输入一个整数 <span class="math inline">\(M\)</span>，代表数据集中包含数据的个数，<span class="math inline">\(M\)</span> 一定为奇数，数据之间用空格隔开。</p><p>数据集的剩余行由数据集的数据构成，每行包含 <span class="math inline">\(10\)</span> 个数据，最后一行数据量可能少于 <span class="math inline">\(10\)</span> 个，数据之间用空格隔开。</p><p><strong>输出格式</strong></p><p>对于每个数据集，第一行输出两个整数，分别代表数据集的编号以及输出中位数的个数（应为数据个数加一的二分之一），数据之间用空格隔开。</p><p>数据集的剩余行由输出的中位数构成，每行包含 <span class="math inline">\(10\)</span> 个数据，最后一行数据量可能少于 <span class="math inline">\(10\)</span> 个，数据之间用空格隔开。</p><p>输出中不应该存在空行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤P≤1000\)</span>, <span class="math inline">\(1≤M≤99999\)</span>, 所有 <span class="math inline">\(M\)</span> 相加之和不超过 <span class="math inline">\(5×10^5\)</span>。</p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3 </span><br><span class="line">1 9 </span><br><span class="line">1 2 3 4 5 6 7 8 9 </span><br><span class="line">2 9 </span><br><span class="line">9 8 7 6 5 4 3 2 1 </span><br><span class="line">3 23 </span><br><span class="line">23 41 13 22 -3 24 -31 -11 -8 -7 </span><br><span class="line">3 5 103 211 -311 -45 -67 -73 -81 -99 </span><br><span class="line">-33 24 56</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1 5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">2 5</span><br><span class="line">9 8 7 6 5</span><br><span class="line">3 12</span><br><span class="line">23 23 22 22 13 3 5 5 3 -3 </span><br><span class="line">-7 -3</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p>动态中位数的经典做法的就是 <strong>对顶堆</strong></p><p>建立两个堆，一个 <strong>大根堆</strong>，一个 <strong>小根堆</strong>，依次读入整个序列的过程中，设当前序列长度为 <span class="math inline">\(M\)</span>，维护：</p><ol type="1"><li>序列中从小到大排名为 <span class="math inline">\(1 \sim \lfloor M / 2 \rfloor\)</span> 的整数存储在大根堆中</li><li>序列中从小到大排名为 <span class="math inline">\(\lfloor M / 2 \rfloor + 1 \sim M\)</span> 的整数存储在小根堆中</li></ol><p>任何时候，如果某一个堆中元素个数过多，打破这一性质，就取出该堆堆顶元素放入另一个堆</p><p>这样一来，序列的中位数就是小根堆的堆顶元素</p><p>每次插入新数值 <span class="math inline">\(X\)</span> 时，若 <span class="math inline">\(X\)</span> 比中位数小，则插入大顶堆；否则插入小顶堆，然后检查并维护上述性质</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">(priority_queue&lt;<span class="keyword">int</span>&gt; &amp;up, priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;&gt;&gt; &amp;dw)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (up.<span class="built_in">size</span>() &gt; dw.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        dw.<span class="built_in">push</span>(up.<span class="built_in">top</span>());</span><br><span class="line">        up.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (dw.<span class="built_in">size</span>() &gt; up.<span class="built_in">size</span>() + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        up.<span class="built_in">push</span>(dw.<span class="built_in">top</span>());</span><br><span class="line">        dw.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt; up;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, vector&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt;&gt; dw;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; t;</span><br><span class="line">        <span class="keyword">if</span> (up.<span class="built_in">size</span>() &amp;&amp; up.<span class="built_in">top</span>() &gt; t) up.<span class="built_in">push</span>(t);</span><br><span class="line">        <span class="keyword">else</span> dw.<span class="built_in">push</span>(t);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">adjust</span>(up, dw);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (i &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; dw.<span class="built_in">top</span>() &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> ( ++ cnt % <span class="number">10</span> == <span class="number">0</span>) cout &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt % <span class="number">10</span>) cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="超快速排序">超快速排序</h2><h3 id="题目描述-4">题目描述</h3><p>在这个问题中，您必须分析特定的排序算法----超快速排序。</p><p>该算法通过交换两个相邻的序列元素来处理 <span class="math inline">\(n\)</span> 个不同整数的序列，直到序列按升序排序。</p><p>对于输入序列 <code>9 1 0 5 4</code>，超快速排序生成输出 <code>0 1 4 5 9</code>。</p><p>您的任务是确定超快速排序需要执行多少交换操作才能对给定的输入序列进行排序。</p><p><strong>输入格式</strong></p><p>输入包括一些测试用例。</p><p>每个测试用例的第一行输入整数 <span class="math inline">\(n\)</span>，代表该用例中输入序列的长度。</p><p>接下来 <span class="math inline">\(n\)</span> 行每行输入一个整数 <span class="math inline">\(a_i\)</span> 代表用例中输入序列的具体数据，第 <span class="math inline">\(i\)</span> 行的数据代表序列中第 <span class="math inline">\(i\)</span> 个数。</p><p>当输入用例中包含的输入序列长度为 <span class="math inline">\(0\)</span> 时，输入终止，该序列无需处理。</p><p><strong>输出格式</strong></p><p>对于每个需要处理的输入序列，输出一个整数 <code>op</code>，代表对给定输入序列进行排序所需的最小交换操作数，每个整数占一行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0≤n&lt;500000\)</span>, 一个测试点中，所有 n 的和不超过 <span class="math inline">\(500000\)</span>。</p><p><span class="math inline">\(0≤ai≤999999999\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">9</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">5</span><br><span class="line">4</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="解析-4">解析</h3><p>只通过比较和交换相邻两个数值的排序方法，实际上就是冒泡排序</p><p>排序过程中，每找到大小颠倒的相邻数值，就把他们交换</p><p>每次交换就会使整个序列的逆序对个数减少 1 且排好序后，逆序对个数为 0</p><p>于是能得出人尽皆知的结论：序列冒泡排序过程中的交换操作的次数 = 序列中逆序对个数</p><p>本题就等价于求逆序对个数，套模板即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">cal_revpair</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l == r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> cnt = <span class="built_in">cal_revpair</span>(l, mid) + <span class="built_in">cal_revpair</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; a[j]) cnt += mid - i + <span class="number">1</span>, b[k ++ ] = a[j ++ ];</span><br><span class="line">        <span class="keyword">else</span> b[k ++ ] = a[i ++ ];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) b[k ++ ] = a[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) b[k ++ ] = a[j ++ ];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i ++ ) a[l + i] = b[i];</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="奇数码问题">奇数码问题</h2><h3 id="题目描述-5">题目描述</h3><p>你一定玩过八数码游戏，它实际上是在一个 <span class="math inline">\(3×3\)</span> 的网格中进行的，<span class="math inline">\(1\)</span> 个空格和 <span class="math inline">\(1∼8\)</span> 这 <span class="math inline">\(8\)</span> 个数字恰好不重不漏地分布在这 <span class="math inline">\(3×3\)</span> 的网格中。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2 8</span><br><span class="line">1 3 _</span><br><span class="line">4 6 7</span><br></pre></td></tr></table></figure><p>在游戏过程中，可以把空格与其上、下、左、右四个方向之一的数字交换（如果存在）。</p><p>例如在上例中，空格可与左、上、下面的数字交换，分别变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 2 8       5 2 _      5 2 8</span><br><span class="line">1 _ 3       1 3 8      1 3 7</span><br><span class="line">4 6 7       4 6 7      4 6 _</span><br></pre></td></tr></table></figure><p>奇数码游戏是它的一个扩展，在一个 <span class="math inline">\(n×n\)</span> 的网格中进行，其中 <span class="math inline">\(n\)</span> 为奇数，<span class="math inline">\(1\)</span> 个空格和 <span class="math inline">\(1∼n^2−1\)</span> 这 <span class="math inline">\(n^2−1\)</span> 个数恰好不重不漏地分布在 <span class="math inline">\(n×n\)</span> 的网格中。</p><p>空格移动的规则与八数码游戏相同，实际上，八数码就是一个 <span class="math inline">\(n=3\)</span> 的奇数码游戏。</p><p>现在给定两个奇数码游戏的局面，请判断是否存在一种移动空格的方式，使得其中一个局面可以变化到另一个局面。</p><p><strong>输入格式</strong></p><p>多组数据，对于每组数据：</p><p>第 <span class="math inline">\(1\)</span> 行输入一个整数 <span class="math inline">\(n\)</span>，<span class="math inline">\(n\)</span> 为奇数。</p><p>接下来 <span class="math inline">\(n\)</span> 行每行 <span class="math inline">\(n\)</span> 个整数，表示第一个局面。</p><p>再接下来 <span class="math inline">\(n\)</span> 行每行 <span class="math inline">\(n\)</span> 个整数，表示第二个局面。</p><p>局面中每个整数都是 <span class="math inline">\(0∼n^2−1\)</span> 之一，其中用 <span class="math inline">\(0\)</span> 代表空格，其余数值与奇数码游戏中的意义相同，保证这些整数的分布不重不漏。</p><p><strong>输出格式</strong></p><p>对于每组数据，若两个局面可达，输出 <code>TAK</code>，否则输出 <code>NIE</code>。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n&lt;500\)</span></p><p><strong>输入样例</strong>： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 2 3</span><br><span class="line">0 4 6</span><br><span class="line">7 5 8</span><br><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 0</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">0</span><br></pre></td></tr></table></figure></p><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TAK</span><br><span class="line">TAK</span><br></pre></td></tr></table></figure><h3 id="解析-5">解析</h3><p><span class="math inline">\(n \times m\)</span> 数码问题的优解性判定，可以转化为归并排序求逆序对来解决</p><p><strong>奇数码游戏两个局面可达，当且仅当两个局面下网格中的数依次写成 <span class="math inline">\(1\)</span> 行 <span class="math inline">\(n^2 - 1\)</span> 个元素序列后，逆序对个数的奇偶性相同</strong></p><p><strong>充分性简单证明：奇数码游戏两个局面可达，则它们对应序列的逆序对奇偶性相等</strong></p><ol type="1"><li>空格 <strong>左右移动</strong> 时，序列中逆序对个数显然不变</li><li>空格 <strong>上下移动</strong> 时，不妨设区间 <span class="math inline">\((a_{i,j}, a_{i+1,j})\)</span> 内与 <span class="math inline">\(a_{i,j}\)</span> 构成逆序对的元素个数为 <span class="math inline">\(k\)</span> 则交换后，减少的逆序对个数为 <span class="math inline">\(k\)</span>，增加的逆序对个数为 <span class="math inline">\(n - 1 - k\)</span> 则该边的逆序对个数为 <span class="math inline">\(|n - 1 - 2k|\)</span>，由于 <span class="math inline">\(n\)</span> 为奇数，故该值为偶数</li></ol><p>必要性证明较为复杂，是一个拓扑学问题，找了一圈，没有一个人解释的明白，自己能力也不够，故略</p><p>综上，奇数码的任意操作，都不会改变奇数码元素序列的逆序对个数</p><p>因此，如果初始奇数码序列逆序对为偶数，则无论怎么操作，都不能变成奇数对逆序对</p><blockquote><p><strong>偶数码游戏两个局面可达，当且仅当两个网格写成序列后，“逆序对数之差” 和 “两个局面下空格所在的行数之差” 奇偶性相同</strong><br />事实上，<span class="math inline">\(n \times m\)</span> 数码问题的有解性判定，根据列数奇偶性也可分为上述两个结论之一</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">n *= n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, t, d = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">if</span> (t) a[d ++ ] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> s1 = <span class="built_in">cal_revpair</span>(a, <span class="number">0</span>, n - <span class="number">2</span>) &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, t, d = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">if</span> (t) a[d ++ ] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> s2 = <span class="built_in">cal_revpair</span>(a, <span class="number">0</span>, n - <span class="number">2</span>) &amp; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">puts</span>(s1 ^ s2 ? <span class="string">&quot;NIE&quot;</span> : <span class="string">&quot;TAK&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x04 二分</title>
      <link href="/Algorithm/lydguid/z0x04_%E4%BA%8C%E5%88%86/"/>
      <url>/Algorithm/lydguid/z0x04_%E4%BA%8C%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h1 id="二分基础概念">二分基础概念</h1><p><strong>二分</strong> 的基础用法是在 <strong>单调序列</strong> 或 <strong>单调函数</strong> 中进行查找。</p><p>因此当问题的答案具有 <strong>单调性</strong> 时，就可以通过 <strong>二分把求解化为判定</strong>。</p><p>有时在一些签到题上卡住的时候，不妨去想一想“二分”，这个简单的思想往往是最容易忽视的。</p><p>进一步地，还可以扩展到通过 <strong>三分</strong> 去解决 <strong>单峰函数</strong> 的 <strong>极值</strong> 以及相关问题。</p><blockquote><p>不过大多情况下，在我们无法确定函数是 <strong>单峰</strong> 还是 <strong>多峰</strong> 时，优先推荐用 <strong>爬山法</strong> 来找极值</p></blockquote><h1 id="二分模板">二分模板</h1><h2 id="整数域上二分">整数域上二分</h2><p>在单调递增序列 <span class="math inline">\(a\)</span> 中查找 <span class="math inline">\(\ge x\)</span> 的数中最小的一个（即 <span class="math inline">\(x\)</span> 或 <span class="math inline">\(x\)</span> 的后继）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &gt;= x) r = mid; <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[l];</span><br></pre></td></tr></table></figure><p>在单调递增序列 <span class="math inline">\(a\)</span> 中查找 <span class="math inline">\(\le x\)</span> 的数中最大的一个（即 <span class="math inline">\(x\)</span> 或 <span class="math inline">\(x\)</span> 的前驱）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[mid] &lt;= x) l = mid; <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[l];</span><br></pre></td></tr></table></figure><blockquote><p>  C++ STL 中的 <code>lower_bound</code> 与 <code>upper_bound</code> 函数实现了在一个序列中二分查找某个整数 <span class="math inline">\(x\)</span> 的后继，具体会在后面章节提及</p></blockquote><h2 id="实数域上二分">实数域上二分</h2><p>实数域上二分较为简单，确定好所需的精度 <span class="math inline">\(eps\)</span>，一般需要保留 <span class="math inline">\(k\)</span> 位小数时，取 <span class="math inline">\(eps = 10^{-(k+2)}\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l + eps &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(mid)) r = mid; <span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有时精度不容易确定或表示时，可以用迭代固定次数的二分方法，通常情况下精度会比预设更高</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(mid)) r = mid; <span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三分求单峰函数极值">三分求单峰函数极值</h1><p>有一类函数被称为 <strong>单峰函数</strong>（二次函数是特殊的单峰函数），它们有 <strong>唯一的极值点</strong>，且</p><ol type="1"><li>（极大值点）在极值点左侧 <strong>严格单调上升</strong>，右侧 <strong>严格单调下降</strong></li><li>（极小值点）在极值点左侧 <strong>严格单调下降</strong>，右侧 <strong>严格单调上升</strong></li></ol><p>以极大值点的单峰函数 <span class="math inline">\(f\)</span> 为例，在函数定义域 <span class="math inline">\([l, r]\)</span> 上任取两个点 <span class="math inline">\(lmid\)</span> 和 <span class="math inline">\(rmid\)</span> 把函数分成三段</p><ol type="1"><li><p>若 <span class="math inline">\(f(lmid) &lt; f(rmid)\)</span>，则有两种情况</p><ol type="1"><li><p><span class="math inline">\(lmid\)</span> 与 <span class="math inline">\(rmid\)</span> 同时处于极大值点左侧</p></li><li><p><span class="math inline">\(lmid\)</span> 处于极大值点左侧，<span class="math inline">\(rmid\)</span> 处于极大值点右侧</p></li></ol><p>但是无论是哪种情况，极大值点都在 <span class="math inline">\(lmid\)</span> 右侧，令 <span class="math inline">\(l=lmid\)</span></p></li><li><p>若 <span class="math inline">\(f(lmid) &gt; f(rmid)\)</span>，则有两种情况</p><ol type="1"><li><p><span class="math inline">\(lmid\)</span> 与 <span class="math inline">\(rmid\)</span> 同时处于极大值点右侧</p></li><li><p><span class="math inline">\(lmid\)</span> 处于极大值点左侧，<span class="math inline">\(rmid\)</span> 处于极大值点右侧</p></li></ol><p>但是无论是哪种情况，极大值点都在 <span class="math inline">\(rmid\)</span> 左侧，令 <span class="math inline">\(r=rmid\)</span></p></li><li><p>若 <span class="math inline">\(f(lmid) &gt; f(rmid)\)</span>，任意令 <span class="math inline">\(l = lmid\)</span> 或 <span class="math inline">\(r = rmid\)</span> 其中之一即可</p></li></ol><p>如果取 <span class="math inline">\(lmid\)</span> 和 <span class="math inline">\(rmid\)</span> 为三等分点，那么定义域范围每次缩小 <span class="math inline">\(1 / 3\)</span></p><p>如果取 <span class="math inline">\(lmid\)</span> 和 <span class="math inline">\(rmid\)</span> 为二等分点两侧及其接近的地方，那么定义域范围每次近似缩小 <span class="math inline">\(1 / 2\)</span></p><p>无论哪种，都可在 <span class="math inline">\(\log\)</span> 级别的时间复杂度内求出指定精度的极值</p><blockquote><p>  函数极值点左右两侧要求必须是严格单调的，否则在取等时，无法判断极值点的位置，就只能用爬山法了</p></blockquote><h2 id="整数域上三分">整数域上三分</h2><p>有唯一极大值点的单峰函数（严格凸函数）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> lmid = l + (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> rmid = r - (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(lmid) &gt;= <span class="built_in">calc</span>(rmid)) r = rmid - <span class="number">1</span>; <span class="keyword">else</span> l = lmid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">calc</span>(l), <span class="built_in">calc</span>(r));</span><br></pre></td></tr></table></figure><p>有唯一极小值点的单峰函数（严格凹函数）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> lmid = l + (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> rmid = r - (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(lmid) &lt;= <span class="built_in">calc</span>(rmid)) r = rmid - <span class="number">1</span>; <span class="keyword">else</span> l = lmid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">calc</span>(l), <span class="built_in">calc</span>(r));</span><br></pre></td></tr></table></figure><h2 id="实数域上三分">实数域上三分</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (l + eps &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">double</span> lmid = l + (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">double</span> rmid = r - (r - l) / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">calc</span>(lmid) &gt;= <span class="built_in">calc</span>(rmid)) r = rmid; <span class="keyword">else</span> l = lmid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二分答案转化为判定">二分答案转化为判定</h1><p>  一个宏观的最优化问题可以抽象为函数，其“定义域”是该问题下的可行方案，对这些可行方案进行评估得到的数值构成函数的“值域”，最优解就是评估值最优的方案（不妨设评分越高越优）。</p><p>  假设最优解的评分为 <span class="math inline">\(S\)</span>，显然对于 <span class="math inline">\(\forall x &gt; S\)</span>，都不存在一个合法的方案达到 <span class="math inline">\(x\)</span> 分，否则与 <span class="math inline">\(S\)</span> 的最优性矛盾；而对于 <span class="math inline">\(\forall x \le S\)</span>，一定存在一个合法的方案达到或超过 <span class="math inline">\(x\)</span> 分，因为最优解就满足这个条件。</p><p>  这样问题的值域就具有一种特殊的单调性 —— 在 <span class="math inline">\(S\)</span> 的一侧合法、在 <span class="math inline">\(S\)</span> 的另一侧不合法，就像一个在 <span class="math inline">\((-\infty, S]\)</span> 上值为 <span class="math inline">\(1\)</span>，在 <span class="math inline">\((S,+\infty)\)</span> 上值为 <span class="math inline">\(0\)</span> 的分段函数，可通过二分找到这个分界点 <span class="math inline">\(S\)</span>。</p><p>  通过二分，我们把求最优解问题，转化为给定一个值 <span class="math inline">\(mid\)</span>，判定是否存在一个可行方案评分达到 <span class="math inline">\(mid\)</span> 的问题。</p><h1 id="例题">例题</h1><h2 id="分书问题">分书问题</h2><h3 id="题目描述">题目描述</h3><p>有 <span class="math inline">\(N\)</span> 本书排成一行，已知第 <span class="math inline">\(i\)</span> 本的厚度是 <span class="math inline">\(A_i\)</span></p><p>把它们分成连续的 <span class="math inline">\(M\)</span> 组，使 <span class="math inline">\(T\)</span> 最小化，其中 <span class="math inline">\(T\)</span> 表示厚度之和最大的一组的厚度</p><p><strong>输入格式</strong></p><p>第一行输入两个整数 <span class="math inline">\(N, M\)</span>，数据用空格隔开</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输出一个正整数 <span class="math inline">\(A_i\)</span>，表示第 <span class="math inline">\(i\)</span> 本书的厚度</p><p><strong>输出格式</strong></p><p>输出最小整数 <span class="math inline">\(T\)</span>，其中 <span class="math inline">\(T\)</span> 表示厚度之和最大的一组的厚度</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1 \le N, M \le 10^5\)</span>, <span class="math inline">\(1 \le A_i \le 10^4\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>“最大值最小” ，这是答案具有单调性，可用二分转化为判定的最常见、最典型的特征之一</p><p>如果我们以 “把书划分为 <span class="math inline">\(M\)</span> 组的方案” 作为定义域，“厚度之和最大的一组的厚度” 作为评分（值域）</p><p>需要最小化这个厚度，也就是评分越小越优</p><p>假设最终答案为 <span class="math inline">\(S\)</span>，因为 <span class="math inline">\(S\)</span> 的最优性：</p><ol type="1"><li>如果要求每组厚度都 <span class="math inline">\(&lt; S\)</span>，那么这 <span class="math inline">\(M\)</span> 组一定不能容纳这些书，否则违背了 <span class="math inline">\(S\)</span> 的最优性</li><li>如果要求每组厚度都 <span class="math inline">\(&gt; S\)</span>，那么一定存在一种分书方案使得组数不会超过 <span class="math inline">\(M\)</span></li></ol><p>最优解就处于分书可行性的分界点上，利用二分转化为判定进行求解即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判定 n 本书分成 m 组，每组厚度之和 &lt;= size，是否可行</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">valid</span><span class="params">(<span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> group = <span class="number">1</span>, rest = size;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; size) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (rest &gt;= a[i]) rest -= a[i];</span><br><span class="line">        <span class="keyword">else</span> group ++ , rest = size - a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> group &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//二分答案转化为判定</span></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="built_in">accumulate</span>(a, a + n, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">valid</span>(mid)) r = mid; <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; r &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最佳牛围栏">最佳牛围栏</h2><h3 id="题目描述-1">题目描述</h3><p>农夫约翰的农场由 <span class="math inline">\(N\)</span> 块田地组成，每块地里都有一定数量的牛，其数量不会少于 <span class="math inline">\(1\)</span> 头，也不会超过 <span class="math inline">\(2000\)</span> 头。</p><p>约翰希望用围栏将一部分连续的田地围起来，并使得围起来的区域内每块地包含的牛的数量的平均值达到最大。</p><p>围起区域内至少需要包含 <span class="math inline">\(F\)</span> 块地，其中 <span class="math inline">\(F\)</span> 会在输入中给出。</p><p>在给定条件下，计算围起区域内每块地包含的牛的数量的平均值可能的最大值是多少。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N\)</span> 和 <span class="math inline">\(F\)</span>，数据间用空格隔开。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输入一个整数，第 <span class="math inline">\(i+1\)</span> 行输入的整数代表第 <span class="math inline">\(i\)</span> 片区域内包含的牛的数目。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示平均值的最大值乘以 <span class="math inline">\(1000\)</span> 再 <strong>向下取整</strong> 之后得到的结果。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤100000\)</span>, <span class="math inline">\(1≤F≤N\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10 6</span><br><span class="line">6 </span><br><span class="line">4</span><br><span class="line">2</span><br><span class="line">10</span><br><span class="line">3</span><br><span class="line">8</span><br><span class="line">5</span><br><span class="line">9</span><br><span class="line">4</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6500</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>题目转译：给定正整数序列 <span class="math inline">\(A\)</span>，求一个平均数最大的，长度不小于 <span class="math inline">\(F\)</span> 的子段</p><p>二分答案，判定“是否存在一个长度不小于 <span class="math inline">\(F\)</span> 的子段，平均数不小于二分的值”</p><p>再把数列中每个数减去二分值，问题就转化为判定“是否存在一个长度不小于 <span class="math inline">\(F\)</span> 的子段，子段和非负”</p><p>考虑一个子问题如何求解：求一个数列的最大子段和</p><p>最大子段和是一个经典模型，可以在线性的时间内完成求解，方法是不断把新的数加入当前子段，如果当前子段和变成了负数，就清空整个子段。扫描过程中出现的最大子段和即位所求。这里用到了动态规划的思想。</p><p>那么如何求一个长度不小于 <span class="math inline">\(F\)</span> 的最大子段和呢？</p><p>将子段和转化为前缀和相减的形式，有：</p><p><span class="math display">\[\begin{aligned}\max_{i - j \ge F} \{ A_{j+1} + A_{j+2} + \cdots + A_i \}&amp;=\max_{i - j \ge F} \{ sum_i - sum_j \}\\&amp;=\max_{F \le i \le n} \{ sum_i -  \min_{0 \le j \le i - F}\{ sum_j \} \}\end{aligned}\]</span></p><p>这与上面直接求最大子段和有着异曲同工之妙，最大子段和维护的是 <span class="math inline">\(\max\limits_{1 \le i \le n} \{ sum_i - \min\limits_{0 \le j \lt i}\{ sum_j \} \}\)</span></p><p>如果直接用前缀和来做，最大子段和维护的就是 <span class="math inline">\(0 \le j \lt i\)</span> 前缀最小值</p><p>带长度不小于 <span class="math inline">\(F\)</span> 限制的最大子段和维护的就是 <span class="math inline">\(0 \le j \le i - F\)</span> 前缀最小值</p><p>于是可以写出判定函数 <code>valid</code> 了：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">valid</span><span class="params">(<span class="keyword">double</span> avg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) s[i] = s[i - <span class="number">1</span>] + a[i] - avg;</span><br><span class="line">    <span class="keyword">double</span> min_val = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        min_val = <span class="built_in">min</span>(min_val, s[i - m]);</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt; min_val) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊排序">特殊排序</h2><h3 id="题目描述-2">题目描述</h3><p>有 <span class="math inline">\(N\)</span> 个元素，编号 <span class="math inline">\(1,2..N\)</span>，每一对元素之间的大小关系是确定的，关系具有反对称性，但不具有传递性。</p><p>注意：不存在两个元素大小相等的情况。</p><p>也就是说，元素的大小关系是 <span class="math inline">\(N\)</span> 个点与 <span class="math inline">\(\dfrac{N×(N−1)}{2}\)</span> 条有向边构成的任意有向图。</p><p>然而，这是一道交互式试题，这些关系不能一次性得知，你必须通过不超过 <span class="math inline">\(10000\)</span> 次提问来获取信息，每次提问只能了解某两个元素之间的关系。</p><p>现在请你把这 <span class="math inline">\(N\)</span> 个元素排成一行，使得每个元素都小于右边与它相邻的元素。</p><p>你可以通过我们预设的 <span class="math inline">\(bool\)</span> 函数 <span class="math inline">\(compare\)</span> 来获得两个元素之间的大小关系。</p><p>例如，编号为 <span class="math inline">\(a\)</span> 和 <span class="math inline">\(b\)</span> 的两个元素，如果元素 <span class="math inline">\(a\)</span> 小于元素 <span class="math inline">\(b\)</span>，则 <code>compare(a,b)</code> 返回 <code>true</code>，否则返回 <code>false</code>。</p><p>将 <span class="math inline">\(N\)</span> 个元素排好序后，把他们的编号以数组的形式输出，如果答案不唯一，则输出任意一个均可。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤1000\)</span></p><p><strong>输入样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[0, 1, 0], [0, 0, 0], [1, 1, 0]]</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[3, 1, 2]</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><p>这里用二分法可能有点难以理解，不过给出数学证明就容易理解多了</p><p>由于题目中说明，元素之间的关系不具有传递性，因此会让我们觉得失去了单调的性质，就不能二分</p><p>不过还是可以证明二分的做法是正确的，假设前 <span class="math inline">\(k - 1\)</span> 个元素已经有序排好，现插入第 <span class="math inline">\(k\)</span> 个元素：</p><p>情况一：第 <span class="math inline">\(k\)</span> 个元素 &lt; 第 <span class="math inline">\(mid\)</span> 个元素</p><p>则第 <span class="math inline">\(k\)</span> 个元素一定能在区间 <span class="math inline">\([l - 1, mid]\)</span> 之间找到插入位置，用数学归纳法证明：</p><p>若第 <span class="math inline">\(k\)</span> 个元素 <strong>大于</strong> 第 <span class="math inline">\(mid - 1\)</span> 个元素，则第 <span class="math inline">\(k\)</span> 个元素可以插在第 <span class="math inline">\(mid-1\)</span> 个元素 <strong>后面</strong></p><p>若第 <span class="math inline">\(k\)</span> 个元素 <strong>大于</strong> 第 <span class="math inline">\(mid - 2\)</span> 个元素，则第 <span class="math inline">\(k\)</span> 个元素可以插在第 <span class="math inline">\(mid-2\)</span> 个元素 <strong>后面</strong></p><p>......</p><p>若第 <span class="math inline">\(k\)</span> 个元素 <strong>大于</strong> 第 <span class="math inline">\(1\)</span> 个元素，则第 <span class="math inline">\(k\)</span> 个元素可以插在第 <span class="math inline">\(1\)</span> 个元素 <strong>后面</strong></p><p>若第 <span class="math inline">\(k\)</span> 个元素 <strong>小于</strong> 第 <span class="math inline">\(1\)</span> 个元素，则第 <span class="math inline">\(k\)</span> 个元素可以插在第 <span class="math inline">\(1\)</span> 个元素 <strong>前面</strong></p><p>情况二：第 <span class="math inline">\(k\)</span> 个元素 &gt; 第 <span class="math inline">\(mid\)</span> 个元素</p><p>则第 <span class="math inline">\(k\)</span> 个元素一定能在区间 <span class="math inline">\([mid, r + 1]\)</span> 之间找到插入位置，用数学归纳法同理易证</p><p>这样每次将查找区间缩小一倍，根据基于比较的排序的下界，可以在 <span class="math inline">\(n\log n\)</span> 的时间内完成排序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">specialSort</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="keyword">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> l = <span class="number">0</span>, r = res.<span class="built_in">size</span>();</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">compare</span>(i, res[mid])) r = mid; <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = res.<span class="built_in">size</span>() - <span class="number">1</span>; j &gt; l; j -- ) <span class="built_in">swap</span>(res[j - <span class="number">1</span>], res[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x03 前缀和与差分</title>
      <link href="/Algorithm/lydguid/z0x03_%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/"/>
      <url>/Algorithm/lydguid/z0x03_%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h1 id="前缀和基础概念">前缀和基础概念</h1><p>对于一个给定的数列 <span class="math inline">\(A\)</span>，它的前缀和数列 <span class="math inline">\(S\)</span> 是通过递推能求出的基本信息之一：</p><p><span class="math display">\[S[i] = \sum_{j=1}^i A[j]\]</span></p><p><strong>前缀和的作用</strong></p><p>一个部分和，即数列 <span class="math inline">\(A\)</span> 某个下标区间内的数的和，可表示为前缀和相减的形式</p><p><span class="math display">\[\mathrm{sum}(l, r) = \sum_{i = l}^r A[i] = S[r] - S[l - 1]\]</span></p><p>对于多维空间，同样可以定义前缀和，求部分和配合 <strong>容斥原理</strong> 即可实现</p><blockquote><p>具体“容斥原理”会在数论章节讲解</p></blockquote><p>例如 <strong>二维前缀和</strong>：</p><p><span class="math display">\[\begin{aligned}S[i, j] &amp;= S[i - 1, j] + S[i, j - 1] - S[i - 1, j - 1] + A[i, j]\\\mathrm{sum}(x_1,y_1,x_2,y_2) &amp;= S[x_2, y_2] - S[x_2, y_1 - 1] - S[x_1 - 1, y_2] + S[x_1 - 1, y_1 - 1]\end{aligned}\]</span></p><h1 id="差分基础概念">差分基础概念</h1><p>对于一个给定的数列 <span class="math inline">\(A\)</span>，它的差分数列 <span class="math inline">\(B\)</span> 定义为：</p><p><span class="math display">\[B[1] = A[1], ~ B[i] = A[i] - A[i - 1] ~ (2 \le i \le n)\]</span></p><p><strong>差分的作用</strong></p><p>“前缀和” 与 “差分” 互为逆运算：</p><ol type="1"><li>差分序列 <span class="math inline">\(B\)</span> 的前缀和序列就是原序列 <span class="math inline">\(A\)</span>；</li><li>前缀和序列 <span class="math inline">\(S\)</span> 的差分序列也是原序列 <span class="math inline">\(A\)</span>；</li></ol><p>把序列 <span class="math inline">\(A\)</span> 的区间 <span class="math inline">\([l,r]\)</span> 加 <span class="math inline">\(d\)</span>（即把 <span class="math inline">\(A_{l},A_{l+1},\cdots,A_{r}\)</span> 都加上 <span class="math inline">\(d\)</span>），其差分序列 <span class="math inline">\(B\)</span> 的变化为：</p><p><span class="math display">\[B[l] += d, ~ B[r + 1] -= d\]</span></p><p>这有助于我们把原序列的 “区间操作” 转化为差分序列上的 “单点操作” 进行计算，从而降低求解难度</p><blockquote><p>差分也可以在树上进行运用，会在图的章节进行讲解</p></blockquote><h1 id="习题">习题</h1><h2 id="激光炸弹">激光炸弹</h2><h3 id="题目描述">题目描述</h3><p>地图上有 <span class="math inline">\(N\)</span> 个目标，用整数 <span class="math inline">\(X_i,Y_i\)</span> 表示目标在地图上的位置，每个目标都有一个价值 <span class="math inline">\(W_i\)</span>。</p><p><strong>注意</strong>：不同目标可能在同一位置。</p><p>现在有一种新型的激光炸弹，可以摧毁一个包含 <span class="math inline">\(R×R\)</span> 个位置的正方形内的所有目标。</p><p>激光炸弹的投放是通过卫星定位的，但其有一个缺点，就是其爆炸范围，即那个正方形的边必须和 <span class="math inline">\(x\)</span>，<span class="math inline">\(y\)</span> 轴平行。</p><p>求一颗炸弹最多能炸掉地图上总价值为多少的目标。</p><p><strong>输入格式</strong></p><p>第一行输入正整数 <span class="math inline">\(N\)</span> 和 <span class="math inline">\(R\)</span>，分别代表地图上的目标数目和正方形的边长，数据用空格隔开。</p><p>接下来 <span class="math inline">\(N\)</span> 行，每行输入一组数据，每组数据包括三个整数 <span class="math inline">\(X_i\)</span>,<span class="math inline">\(Y_i\)</span>,<span class="math inline">\(W_i\)</span>，分别代表目标的 <span class="math inline">\(x\)</span> 坐标，<span class="math inline">\(y\)</span> 坐标和价值，数据用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个正整数，代表一颗炸弹最多能炸掉地图上目标的总价值数目。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0≤R≤10^9\)</span>, <span class="math inline">\(0&lt;N≤10000\)</span>, <span class="math inline">\(0≤X_i,Y_i≤5000\)</span>, <span class="math inline">\(0≤W_i≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br><span class="line">0 0 1</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>二维前缀和</p><p>值得注意的一点，虽然“目标”位于网格线的交点，而我们的前缀和是以方格为单位累加的</p><p>因此我们不妨把“目标”统一偏移到网格的方格中：<span class="math inline">\((x,y) \rightarrow (x + 0.5, y + 0.5)\)</span></p><p>且偏移后，新问题与原问题等价，并且新边界变得更好处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i ++ )</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; N; j ++ )</span><br><span class="line">        s[i][j] += s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt; N; i ++ )</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &lt; N; j ++ )</span><br><span class="line">        res = <span class="built_in">max</span>(res, s[i][j] - s[i - m][j] - s[i][j - m] + s[i - m][j - m]);</span><br></pre></td></tr></table></figure><h2 id="增减序列">增减序列</h2><h3 id="题目描述-1">题目描述</h3><p>给定一个长度为 <span class="math inline">\(n\)</span> 的数列 <span class="math inline">\(a_1,a_2,…,a_n\)</span>，每次可以选择一个区间 <span class="math inline">\([l,r]\)</span>，使下标在这个区间内的数都加一或者都减一。</p><p>求至少需要多少次操作才能使数列中的所有数都一样，并求出在保证最少次数的前提下，最终得到的数列可能有多少种。</p><p><strong>输入格式</strong></p><p>第一行输入正整数 <span class="math inline">\(n\)</span>。</p><p>接下来 <span class="math inline">\(n\)</span> 行，每行输入一个整数，第 <span class="math inline">\(i+1\)</span> 行的整数代表 <span class="math inline">\(a_i\)</span>。</p><p><strong>输出格式</strong></p><p>第一行输出最少操作次数。</p><p>第二行输出最终能得到多少种结果。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0&lt;n≤10^5\)</span>, <span class="math inline">\(0≤a_i&lt;2147483648\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><p>一维差分</p><p>区间修改，联想到用差分数组来维护，最终目标是使差分数组 <strong>除首元素外全为 0</strong></p><p>每次修改一个区间，对于维护的差分数组变化情况分类：<span class="math inline">\((1 &lt; l \le r &lt; n)\)</span></p><ol type="1"><li>修改 <span class="math inline">\([l, r]\)</span> ：<code>b[l] -- , b[r + 1] ++</code> 或 <code>b[l] ++ , b[r + 1] --</code></li><li>修改 <span class="math inline">\([1, r]\)</span> ：<code>b[1] -- , b[r + 1] ++</code> 或 <code>b[1] ++ , b[r + 1] --</code></li><li>修改 <span class="math inline">\([l, n]\)</span> ：<code>b[l] --</code> 或 <code>b[l] ++</code></li><li>修改 <span class="math inline">\([1, n]\)</span> ：<code>b[1] --</code> 或 <code>b[1] ++</code> （多余操作）</li></ol><p>观察易得:</p><ol type="1"><li>操作 4 是多余操作（不影响除首元素外元素值，相当于浪费一次操作，必然不是最优解）</li><li>操作 2 和操作 3 一次只能改变 1 个元素的值，操作 1 一次可以改变 2 个元素的值</li><li>操作 2 会改变首元素的值</li></ol><p>为了让操作次数尽可能少，应尽可能使用操作 1</p><p>因此不妨设 <span class="math inline">\(b_2,...,b_n\)</span> 中正数总和为 <span class="math inline">\(p\)</span>，<span class="math inline">\(b_2,...,b_n\)</span> 中负数总和为 <span class="math inline">\(q\)</span></p><p>然后让正负数配对，尽量执行操作 1，执行次数为 <span class="math inline">\(min(p, q)\)</span></p><p>剩余 <span class="math inline">\(|p - q|\)</span> 个要么全是正数，要么全是负数，调用操作 2 或操作 3 都可，执行次数为 <span class="math inline">\(|p-q|\)</span> 次</p><p>由于每次调用操作 2 时会改变一次首元素的值，因此首元素的可能值就有 <span class="math inline">\(|p - q| + 1\)</span> 种可能</p><p>因此最终答案为：<span class="math inline">\(max(p, q)\)</span> 和 <span class="math inline">\(|p - q| + 1\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> p = <span class="number">0</span>, q = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (b[i] &gt; <span class="number">0</span>) p += b[i];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (b[i] &lt; <span class="number">0</span>) q -= b[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(p, q) &lt;&lt; endl &lt;&lt; <span class="built_in">abs</span>(p - q) + <span class="number">1</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h2 id="最高的牛">最高的牛</h2><h3 id="题目描述-2">题目描述</h3><p>有 <span class="math inline">\(N\)</span> 头牛站成一行，被编队为 <span class="math inline">\(1、2、3、…、N\)</span>，每头牛的身高都为整数。</p><p>当且仅当两头牛中间的牛身高都比它们矮时，两头牛方可看到对方。</p><p>现在，我们只知道其中最高的牛是第 <span class="math inline">\(P\)</span> 头，它的身高是 <span class="math inline">\(H\)</span> ，剩余牛的身高未知。</p><p>但是，我们还知道这群牛之中存在着 <span class="math inline">\(M\)</span> 对关系，每对关系都指明了某两头牛 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span> 可以相互看见。</p><p>求每头牛的身高的最大可能值是多少。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(N,P,H,M\)</span>，数据用空格隔开。</p><p>接下来 <span class="math inline">\(M\)</span> 行，每行输出两个整数 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span> ，代表牛 <span class="math inline">\(A\)</span> 和牛 <span class="math inline">\(B\)</span> 可以相互看见，数据用空格隔开。</p><p><strong>输出格式</strong></p><p>一共输出 <span class="math inline">\(N\)</span> 行数据，每行输出一个整数。</p><p>第 <span class="math inline">\(i\)</span> 行输出的整数代表第 <span class="math inline">\(i\)</span> 头牛可能的最大身高。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤10000\)</span>, <span class="math inline">\(1≤H≤1000000\)</span>, <span class="math inline">\(1≤A,B≤10000\)</span>, <span class="math inline">\(0≤M≤10000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">9 3 5 5</span><br><span class="line">1 3</span><br><span class="line">5 3</span><br><span class="line">4 3</span><br><span class="line">3 7</span><br><span class="line">9 8</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>注意</strong>： 此题中给出的关系对可能存在重复</p><h3 id="解析-2">解析</h3><p>我们希望每对牛之间可以相互看见，并且每头牛的高度最高</p><p>一开始不妨假设所有牛的高度都是给出的最高牛的高度</p><p>要使第 <span class="math inline">\(A\)</span> 头牛与第 <span class="math inline">\(B\)</span> 头牛可以互相看见，那么只需让区间 <span class="math inline">\([A + 1, B - 1]\)</span> 的牛高度减少 1 即可</p><p>可以直接用差分序列来维护原序列，则每次修改操作为：<code>b[x + 1] -- , b[y] ++</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> b[N];</span><br><span class="line">set&lt;PII&gt; S;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; p &gt;&gt; h &gt;&gt; m; b[<span class="number">1</span>] = h;</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; y) <span class="built_in">swap</span>(x, y);</span><br><span class="line">        <span class="keyword">if</span> (S.<span class="built_in">count</span>(&#123;x, y&#125;)) <span class="keyword">continue</span>;</span><br><span class="line">        S.<span class="built_in">insert</span>(&#123;x, y&#125;);</span><br><span class="line">        b[x + <span class="number">1</span>] -- , b[y] ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = b[i - <span class="number">1</span>] + b[i];</span><br><span class="line">        cout &lt;&lt; b[i] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x02 递推与递归</title>
      <link href="/Algorithm/lydguid/z0x02_%E9%80%92%E6%8E%A8%E4%B8%8E%E9%80%92%E5%BD%92/"/>
      <url>/Algorithm/lydguid/z0x02_%E9%80%92%E6%8E%A8%E4%B8%8E%E9%80%92%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<h1 id="递推递归与分治基础概念">递推、递归与分治基础概念</h1><p>一个实际问题的各种可能情况构成的 <strong>集合</strong> 称为 “<strong>状态空间</strong>”，<strong>递推和递归</strong> 就是程序遍历 <strong>状态空间</strong> 的两种基本方式。</p><p>我们把每个状态看作一个节点，根据递推和递归的法则：</p><ol type="1"><li>对于 <strong>递归</strong> 来说，每个 <strong>状态节点</strong> 都有 <strong>唯一</strong> 的 <strong>父节点</strong>（从父节点递归下来的），这些节点就会构成一棵 <strong>树</strong></li><li>对于 <strong>递推</strong> 来说，给个 <strong>状态节点</strong> 都有 <strong>多个</strong> <strong>父节点</strong>（视递推式而定），这些节点就会构成一个 <strong>DAG</strong></li></ol><p>从 <strong>状态空间</strong> 的角度来看，<strong>递归和递推</strong> 实际上就是对一个 <strong>状态图/树</strong> 的遍历，并求解 <strong>问题边界</strong> 的行为</p><p>如果我们把 <strong>同类型</strong> 的 <strong>状态节点</strong> 合并，以 <strong>一个节点</strong> 代表 <strong>一类节点</strong>，从而省掉重复的搜索分枝，那个行为就是我们常用的 <strong>记忆化搜索</strong> 算法</p><p>这也是我之前在某篇博客里提到过的，<strong>动态规划</strong> 作为具有 <strong>递推性质</strong> 的算法，本质上是在一个 <strong>DAG</strong> 上找 “<strong>问题边界</strong>” 的 <strong>变换路线</strong></p><p><strong>递归</strong> 算法中，程序在每个变换步骤中要执行的三个操作：</p><ol type="1"><li>缩小问题状态空间的规模 程序尝试寻找“原问题”与“问题边界”之间的变换路线，并向正在探索的路线上迈出一步</li><li>尝试求解规模缩小以后的问题，结果可能成功，也可能失败</li><li>结果<ol type="1"><li>如果成功，即找到了规模缩小后的问题的答案，那么将问题扩展到当前问题</li><li>如果失败，那么重新回到当前问题，程序可能会继续寻找当前问题的其他变换路线，直至最终确定当前问题无法求解</li></ol></li></ol><p>上述三个操作中有亮点颇为关键，一是 “<strong>如何尝试求解规模缩小以后的问题</strong>”。由于问题规模缩小为原问题的一个子问题，因此可以把它视为一个新的“原问题”，并由相同的程序进行求解，也就形成了“<strong>自身调用自身</strong>”的递归。二是求解子问题失败后，程序需要回到当前问题并去寻找其他的变换路线，因此把当前问题缩小为子问题时所做的对当前问题状态 <strong>产生影响的事情应该全部失效</strong>，这就是所谓的“<strong>回溯时还原现场</strong>”。</p><p><strong>分治法</strong> 则是把一个问题划分为若干个规模更小的同类子问题，对这些子问题递归求解，然后在回溯时通过它们推导出原问题的解</p><h1 id="常见的枚举形式和遍历方式">常见的枚举形式和遍历方式</h1><table><thead><tr class="header"><th>枚举形式</th><th>状态空间规模</th><th>一般遍历方式</th></tr></thead><tbody><tr class="odd"><td>多项式</td><td><span class="math inline">\(n^k\)</span>，<span class="math inline">\(k\)</span> 为常数</td><td>循环(for)、递推</td></tr><tr class="even"><td>指数</td><td><span class="math inline">\(k^n\)</span>，<span class="math inline">\(k\)</span> 为常数</td><td>递归、位运算</td></tr><tr class="odd"><td>排列</td><td><span class="math inline">\(n!\)</span></td><td>递归、C++ next_permutation</td></tr><tr class="even"><td>组合</td><td><span class="math inline">\(C_n^m\)</span></td><td>递归+剪枝</td></tr></tbody></table><h1 id="习题">习题</h1><h2 id="递归实现指数型枚举">递归实现指数型枚举</h2><h3 id="题目描述">题目描述</h3><p>从 <span class="math inline">\(1∼n\)</span> 这 <span class="math inline">\(n\)</span> 个整数中随机选取任意多个，输出所有可能的选择方案。</p><p><strong>输入格式</strong></p><p>输入一个整数 <span class="math inline">\(n\)</span>。</p><p><strong>输出格式</strong></p><p>每行输出一种方案。</p><p>同一行内的数必须升序排列，相邻两个数用恰好 <span class="math inline">\(1\)</span> 个空格隔开。</p><p>对于没有选任何数的方案，输出空行。</p><p>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤15\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">vector&lt;<span class="keyword">int</span>&gt; chosen;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == n + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chosen.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, chosen[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">calc</span>(x + <span class="number">1</span>);</span><br><span class="line">    chosen.<span class="built_in">push_back</span>(x);</span><br><span class="line">    <span class="built_in">calc</span>(x + <span class="number">1</span>);</span><br><span class="line">    chosen.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">calc</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归实现组合型枚举">递归实现组合型枚举</h2><h3 id="题目描述-1">题目描述</h3><p>从 <span class="math inline">\(1∼n\)</span> 这 <span class="math inline">\(n\)</span> 个整数中随机选出 <span class="math inline">\(m\)</span> 个，输出所有可能的选择方案。</p><p><strong>输入格式</strong></p><p>两个整数 <span class="math inline">\(n,m\)</span> ,在同一行用空格隔开。</p><p><strong>输出格式</strong></p><p>按照从小到大的顺序输出所有方案，每行 <span class="math inline">\(1\)</span> 个。</p><p>首先，同一行内的数升序排列，相邻两个数用一个空格隔开。</p><p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如 <code>1 3 5 7</code> 排在 <code>1 3 6 8</code> 前面）。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(n&gt;0\)</span> ,<span class="math inline">\(0≤m≤n\)</span> ,<span class="math inline">\(n+(n−m)≤25\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 </span><br><span class="line">1 2 4 </span><br><span class="line">1 2 5 </span><br><span class="line">1 3 4 </span><br><span class="line">1 3 5 </span><br><span class="line">1 4 5 </span><br><span class="line">2 3 4 </span><br><span class="line">2 3 5 </span><br><span class="line">2 4 5 </span><br><span class="line">3 4 5 </span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (chosen.<span class="built_in">size</span>() &gt; m || chosen.<span class="built_in">size</span>() + (n - u + <span class="number">1</span>) &lt; m) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 除了上面一步剪枝，剩余部分同上一题一摸一样</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归实现排列型枚举">递归实现排列型枚举</h2><h3 id="题目描述-2">题目描述</h3><p>把 <span class="math inline">\(1∼n\)</span> 这 <span class="math inline">\(n\)</span> 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p><p><strong>输入格式</strong></p><p>一个整数 <span class="math inline">\(n\)</span>。</p><p><strong>输出格式</strong></p><p>按照从小到大的顺序输出所有方案，每行 <span class="math inline">\(1\)</span> 个。</p><p>首先，同一行相邻两个数用一个空格隔开。</p><p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤9\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure><h3 id="解析-2">解析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> order[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">bool</span> chosen[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u == n + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, order[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chosen[i]) <span class="keyword">continue</span>;</span><br><span class="line">        chosen[i] = <span class="literal">true</span>;</span><br><span class="line">        order[u] = i;</span><br><span class="line">        <span class="built_in">calc</span>(u + <span class="number">1</span>);</span><br><span class="line">        order[u] = <span class="number">0</span>;</span><br><span class="line">        chosen[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="费解的开关">费解的开关</h2><h3 id="题目描述-3">题目描述</h3><p>你玩过“拉灯”游戏吗？</p><p><span class="math inline">\(25\)</span> 盏灯排成一个 <span class="math inline">\(5×5\)</span> 的方形。</p><p>每一个灯都有一个开关，游戏者可以改变它的状态。</p><p>每一步，游戏者可以改变某一个灯的状态。</p><p>游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。</p><p>我们用数字 <span class="math inline">\(1\)</span> 表示一盏开着的灯，用数字 <span class="math inline">\(0\)</span> 表示关着的灯。</p><p>下面这种状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">10111</span><br><span class="line">01101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>在改变了最左上角的灯的状态后将变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01111</span><br><span class="line">11101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>再改变它正中间的灯后状态将变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">11001</span><br><span class="line">10100</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在 <span class="math inline">\(6\)</span> 步以内使所有的灯都变亮。</p><p><strong>输入格式</strong></p><p>第一行输入正整数 <span class="math inline">\(n\)</span>，代表数据中共有 <span class="math inline">\(n\)</span> 个待解决的游戏初始状态。</p><p>以下若干行数据分为 <span class="math inline">\(n\)</span> 组，每组数据有 <span class="math inline">\(5\)</span> 行，每行 <span class="math inline">\(5\)</span> 个字符。</p><p>每组数据描述了一个游戏的初始状态。</p><p>各组数据间用一个空行分隔。</p><p><strong>输出格式</strong></p><p>一共输出 <span class="math inline">\(n\)</span> 行数据，每行有一个小于等于 <span class="math inline">\(6\)</span> 的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。</p><p>对于某一个游戏初始状态，若 <span class="math inline">\(6\)</span> 步以内无法使所有灯变亮，则输出 <span class="math inline">\(−1\)</span>。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0&lt;n≤500\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">00111</span><br><span class="line">01011</span><br><span class="line">10001</span><br><span class="line">11010</span><br><span class="line">11100</span><br><span class="line"></span><br><span class="line">11101</span><br><span class="line">11101</span><br><span class="line">11110</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h3 id="解析-3">解析</h3><p>易发现三个简单性质：</p><ol type="1"><li>每个位置至多只会被点击一次</li><li>若固定了第一行，则满足题意的点击方案至多只有 1 种 当第 i 行某一位为 1 时，若前 i 行已被固定，只能点击第 i+1 行该位置上的数字才能使第 i 行的这一位变成 0 从上到下使用归纳法可得上述结论</li><li>点击的先后顺序不影响最终结果</li></ol><p>根据上述性质而生的枚举策略：先确定第一行的状态，共 <span class="math inline">\(2^5=32\)</span> 种可能</p><p>然后根据第 i 行确定的状态，递推出第 i+1 行的方案</p><p>最后检查最后一行的状态是否合法，即可确定该方案是否合法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">5</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> g[N][N], b[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> d = <span class="number">0</span>; d &lt; <span class="number">5</span>; d ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x = i + dx[d], y = j + dy[d];</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= n || y &lt; <span class="number">0</span> || y &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">        g[x][y] ^= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ ) cin &gt;&gt; b[i];</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> op = <span class="number">0</span>, cnt; cnt = <span class="number">0</span>, op &lt; <span class="number">1</span> &lt;&lt; n; op ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(g, b, <span class="keyword">sizeof</span> g);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">if</span> (op &gt;&gt; i &amp; <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">turn</span>(<span class="number">0</span>, i), cnt ++ ;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++ )</span><br><span class="line">                <span class="keyword">if</span> (g[i - <span class="number">1</span>][j] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                    <span class="built_in">turn</span>(i, j), cnt ++ ;</span><br><span class="line">        <span class="keyword">if</span> (cnt &gt; <span class="number">6</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">if</span> (g[n - <span class="number">1</span>][i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; (res == <span class="number">-1</span> || res &gt; cnt))</span><br><span class="line">            res = cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="奇怪的汉诺塔">奇怪的汉诺塔</h2><h3 id="题目描述-4">题目描述</h3><p>汉诺塔问题，条件如下：</p><ol type="1"><li>这里有 A、B、C 和 D 四座塔。</li><li>这里有 <span class="math inline">\(n\)</span> 个圆盘，<span class="math inline">\(n\)</span> 的数量是恒定的。</li><li>每个圆盘的尺寸都不相同。</li><li>所有的圆盘在开始时都堆叠在塔 A 上，且圆盘尺寸从塔顶到塔底逐渐增大。</li><li>我们需要将所有的圆盘都从塔 A 转移到塔 D 上。</li><li>每次可以移动一个圆盘，当塔为空塔或者塔顶圆盘尺寸大于被移动圆盘时，可将圆盘移至这座塔上。</li></ol><p>请你求出将所有圆盘从塔 A 移动到塔 D，所需的最小移动次数是多少。</p><p><strong>输入格式</strong></p><p>没有输入</p><p><strong>输出格式</strong></p><p>对于每一个整数 <span class="math inline">\(n\)</span>，输出一个满足条件的最小移动次数，每个结果占一行。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤12\)</span></p><h3 id="解析-4">解析</h3><p>易知 3 根柱子的情况下，汉诺塔的递推公式为：</p><p><span class="math display">\[d[n] = 2 * d[n - 1] - 1\]</span></p><p>即考虑最后一步：</p><ol type="1"><li>先把 <span class="math inline">\(n-1\)</span> 个盘子用 B、C 两柱 轮流操作，从 A柱 移到 B柱</li><li>再把最下面最大的底盘从 A柱 移到 C柱</li><li>最后将 B柱 剩余部分用A、C 两柱 轮流操作，从 B柱 移到 C柱</li></ol><p>接着我们用 3柱 情况推导 4柱 情况</p><ol type="1"><li>先把 <span class="math inline">\(i\)</span> 个盘子用 B、C、D 三柱 轮流操作，从 A柱 移到 B柱</li><li>再把 <span class="math inline">\(n - i - 1\)</span> 个盘子用 C、D 两柱 轮流操作，从 A柱 移到 C柱</li><li>然后把最下面最大的底盘从 A柱 移到 D柱</li><li>接着用 A、D 两柱 轮流操作，把 C柱 上 <span class="math inline">\(n - i - 1\)</span> 个盘子从 C柱 移到 D柱</li><li>最后用 A、C、D 三柱 轮流操作，把 B柱 上 <span class="math inline">\(i\)</span> 个盘子从 B柱 移到 D柱</li></ol><p>有递推式：</p><p><span class="math display">\[f[n] = \min \{2 * (f[i] + d[n - i - 1]) + 1\} = \min \{2 * f[i] + d[n - i]\}\]</span></p><p>根据上述推导，继续套循环递推，可以解时间允许条件下的任意 <span class="math inline">\(n\)</span> 柱 <span class="math inline">\(m\)</span> 盘的问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> f[<span class="number">15</span>], d[<span class="number">15</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">1</span>; n &lt;= <span class="number">12</span>; n ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        d[n] = <span class="number">2</span> * d[n - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">            f[n] = <span class="built_in">min</span>(f[n], <span class="number">2</span> * f[i] + d[n - i]);</span><br><span class="line">        cout &lt;&lt; f[n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="约数之和">约数之和</h2><h3 id="题目描述-5">题目描述</h3><p>假设现在有两个自然数 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span>，<span class="math inline">\(S\)</span> 是 <span class="math inline">\(A^B\)</span> 的所有约数之和</p><p>请你求出 <span class="math inline">\(S \bmod 9901\)</span> 的值</p><p><strong>输入格式</strong></p><p>在一行中输入用空格隔开的两个整数 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span></p><p><strong>输出格式</strong></p><p>输出一个整数，代表 <span class="math inline">\(S \bmod 9901\)</span> 的值</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0≤A,B≤5×10^7\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><p><strong>注意</strong>: <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span> 不会同时为 <span class="math inline">\(0\)</span></p><h3 id="解析-5">解析</h3><p>考虑直接模拟，有 <span class="math inline">\(A = p_1^{c_1} \cdot p_2^{c_2} \cdots p_n^{c_n}\)</span>，由此易得 <span class="math inline">\(A^B = p_1^{Bc_1} \cdot p_2^{Bc_2} \cdots p_n^{Bc_n}\)</span></p><p>由乘法分配律，易得 <span class="math inline">\(A^B\)</span> 的所有约数之和为：</p><p><span class="math display">\[S = (1 + p_1 + \cdot + p_{1}^{Bc_1}) \cdot (1 + p_2 + \cdot + p_{2}^{Bc_2}) \cdots (1 + p_n + \cdot + p_{n}^{Bc_n})\]</span></p><p>如果直接模拟这个过程，根据公式去求解 <span class="math inline">\(S\)</span>，直接迭代求，显然复杂度会爆掉</p><p>易想到的一个优化是对每一个括号用等比数列求和公式，但是公式中有除法，在模运算下做等效除法需要求逆元</p><p>不过本题的模数 <span class="math inline">\(9901\)</span> 是质数，可以用 <strong>费马小定理</strong> 结合 <strong>快速幂</strong> 求逆元，否则就要用 <strong>BSGS</strong> 了</p><p>不妨换一种思路考虑本题，采用 <strong>分治</strong> 的思想来求解 <span class="math inline">\(\mathrm{sum}(p, c) = 1 + p + \cdots + p^c\)</span>，不妨设 <span class="math inline">\(c\)</span> 为奇数，则</p><p><span class="math display">\[\begin{aligned}\mathrm{sum}(p, c + 1) &amp;= \mathrm{sum}(p, c) + p^{c+1}\\\\\mathrm{sum}(p, c)&amp;= (1 + \cdots + p^{\frac{c-1}{2}}) +(p^{\frac{c+1}{2}} + \cdots + p^c)\\\\&amp;= \mathrm{sum}(p, \frac{c-1}{2}) + p^{\frac{c+1}{2}} \cdot \mathrm{sum}(p, \frac{c-1}{2})\\\\&amp;= \mathrm{sum}(p, \frac{c-1}{2}) \cdot (1 + p^{\frac{c+1}{2}})\end{aligned}\]</span></p><p><strong>状态空间</strong> 的 <strong>问题边界</strong> 为 <span class="math inline">\(\mathrm{sum}(p, 0) = 1\)</span></p><p>利用该分治思想，求解本问题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!c) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (c &amp; <span class="number">1</span>) <span class="keyword">return</span> (<span class="built_in">calc</span>(p, c / <span class="number">2</span>) * (<span class="built_in">power</span>(p, (c + <span class="number">1</span>) / <span class="number">2</span>) % mod + <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">power</span>(p, c) + <span class="built_in">calc</span>(p, c - <span class="number">1</span>)) % mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分形之城">分形之城</h2><h3 id="题目描述-6">题目描述</h3><p>城市的规划在城市建设中是个大问题。</p><p>不幸的是，很多城市在开始建设的时候并没有很好的规划，城市规模扩大之后规划不合理的问题就开始显现。</p><p>而这座名为 Fractal 的城市设想了这样的一个规划方案，如下图所示：</p><p><img src="https://www.acwing.com/media/article/image/2019/01/07/19_1ac25efe11-city.png" /></p><p>当城区规模扩大之后，Fractal 的解决方案是把和原来城区结构一样的区域按照图中的方式建设在城市周围，提升城市的等级。</p><p>对于任意等级的城市，我们把正方形街区从左上角开始按照道路标号。</p><p>虽然这个方案很烂，Fractal 规划部门的人员还是想知道，如果城市发展到了等级 <span class="math inline">\(N\)</span>，编号为 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span> 的两个街区的直线距离是多少。</p><p>街区的距离指的是街区的中心点之间的距离，每个街区都是边长为 <span class="math inline">\(10\)</span> 米的正方形。</p><p><strong>输入格式</strong></p><p>第一行输入正整数 <span class="math inline">\(n\)</span>，表示测试数据的数目。</p><p>以下 <span class="math inline">\(n\)</span> 行，输入 <span class="math inline">\(n\)</span> 组测试数据，每组一行。</p><p>每组数据包括三个整数 <span class="math inline">\(N\)</span>,<span class="math inline">\(A\)</span>,<span class="math inline">\(B\)</span>，表示城市等级以及两个街区的编号，整数之间用空格隔开。</p><p><strong>输出格式</strong></p><p>一共输出 <span class="math inline">\(n\)</span> 行数据，每行对应一组测试数据的输出结果，结果四舍五入到整数。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤N≤31\)</span>, <span class="math inline">\(1≤A,B≤2^{2N}\)</span>, <span class="math inline">\(1≤n≤1000\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 </span><br><span class="line">1 1 2 </span><br><span class="line">2 16 1 </span><br><span class="line">3 4 33 </span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10 </span><br><span class="line">30 </span><br><span class="line">50 </span><br></pre></td></tr></table></figure><h3 id="解析-6">解析</h3><p>显然，<span class="math inline">\(n\)</span> 级城市由四座 <span class="math inline">\(n-1\)</span> 级城市组成，其中左上的 <span class="math inline">\(n-1\)</span> 级城市顺时针旋转了90度再左右翻转，左下的 <span class="math inline">\(n-1\)</span> 级城市逆时针旋转了90度再左右翻转，其余两座 <span class="math inline">\(n-1\)</span> 级城市没有发生变化。</p><p>因此，在求解 <span class="math inline">\(\mathrm{calc}(n, m)\)</span> 时，因为 <span class="math inline">\(n-1\)</span> 级城市有 <span class="math inline">\(2^{2n-2}\)</span> 座房屋</p><p>所以可以先递归求解 <span class="math inline">\(\mathrm{calc}(n-1, n \bmod 2^{2n-2})\)</span>，找出在 <span class="math inline">\(n-1\)</span> 级城市中，目标的位置</p><p>记为 <span class="math inline">\((x,y)\)</span> 再根据 <span class="math inline">\(m\)</span> 推断出目标所在的 <span class="math inline">\(n-1\)</span> 级城市的编号，并根据该编号对 <span class="math inline">\((x,y)\)</span> 进行坐标变换</p><p>四个编号的具体变换：(从0开始编号，<span class="math inline">\(n-1\)</span>级城市边长为<span class="math inline">\(2^{n-1}\)</span>)</p><ol type="1"><li>处于左上角的 <span class="math inline">\(n-1\)</span> 级城市<ol type="1"><li>顺时针旋转90度，坐标变为：<span class="math inline">\((y, 2^{n-1} - x - 1)\)</span></li><li>左右翻转，坐标变为：<span class="math inline">\((y, x)\)</span></li><li>绝对位置上不用移动，坐标变为：<span class="math inline">\((y,x)\)</span></li></ol></li><li>处于右上角的 <span class="math inline">\(n-1\)</span> 级城市<ol type="1"><li>绝对位置上向右移一个 <span class="math inline">\(n-1\)</span> 级城市单位，坐标变为：<span class="math inline">\((x, y + 2^{n-1})\)</span></li></ol></li><li>处于右下角的 <span class="math inline">\(n-1\)</span> 级城市<ol type="1"><li>绝对位置上向右下移一个 <span class="math inline">\(n-1\)</span> 级城市单位，坐标变为：<span class="math inline">\((x + 2^{n-1}, y + 2^{n-1})\)</span></li></ol></li><li>处于左下角的 <span class="math inline">\(n-1\)</span> 级城市<ol type="1"><li>逆时针旋转90度，坐标变为：<span class="math inline">\((2^{n-1} - 1 - y, x)\)</span></li><li>左右翻转，坐标变为：<span class="math inline">\((2^{n-1} - 1 - y, 2^{n-1} - 1 - x)\)</span></li><li>绝对位置上向下移一个 <span class="math inline">\(n-1\)</span> 级城市单位，坐标变为：<span class="math inline">\((2^{n} - 1 - y, 2^{n-1} - 1 - x)\)</span></li></ol></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">pair&lt;<span class="keyword">long</span> <span class="keyword">long</span>, <span class="keyword">long</span> <span class="keyword">long</span>&gt; <span class="title">calc</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">long</span> <span class="keyword">long</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!n) <span class="keyword">return</span> &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> len = <span class="number">1ll</span> &lt;&lt; (n - <span class="number">1</span>), cnt = <span class="number">1ll</span> &lt;&lt; (<span class="number">2</span> * n - <span class="number">2</span>);</span><br><span class="line">    pair&lt;<span class="keyword">long</span> <span class="keyword">long</span>, <span class="keyword">long</span> <span class="keyword">long</span>&gt; pos = <span class="built_in">calc</span>(n - <span class="number">1</span>, m % cnt);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x = pos.x, y = pos.y;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> z = m / cnt;</span><br><span class="line">    <span class="keyword">if</span> (z == <span class="number">0</span>) <span class="keyword">return</span> &#123;y, x&#125;;</span><br><span class="line">    <span class="keyword">if</span> (z == <span class="number">1</span>) <span class="keyword">return</span> &#123;x, y + len&#125;;</span><br><span class="line">    <span class="keyword">if</span> (z == <span class="number">2</span>) <span class="keyword">return</span> &#123;x + len, y + len&#125;;</span><br><span class="line">    <span class="keyword">if</span> (z == <span class="number">3</span>) <span class="keyword">return</span> &#123;<span class="number">2</span> * len - <span class="number">1</span> - y, len - <span class="number">1</span> - x&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《算法竞赛进阶指南》0x01 位运算</title>
      <link href="/Algorithm/lydguid/z0x01_%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
      <url>/Algorithm/lydguid/z0x01_%E4%BD%8D%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://graphics.stanford.edu/~seander/bithacks.html">Bit Twiddling Hacks</a></p></blockquote><h1 id="位运算基础概念">位运算基础概念</h1><p>基本的位运算共 6 种，分别为按位与、按位或、按位异或、按位取反、左移和右移</p><table><thead><tr class="header"><th>运算</th><th>运算符</th><th>解释</th></tr></thead><tbody><tr class="odd"><td>与</td><td><code>&amp;</code></td><td>只有两个对应位都为 <span class="math inline">\(1\)</span> 时才为 <span class="math inline">\(1\)</span></td></tr><tr class="even"><td>或</td><td><code>|</code></td><td>只要两个对应位有一个 <span class="math inline">\(1\)</span> 时就为 <span class="math inline">\(1\)</span></td></tr><tr class="odd"><td>异或</td><td><code>^</code></td><td>只有两个对应位不同时才为 <span class="math inline">\(1\)</span></td></tr><tr class="even"><td>取反</td><td><code>~</code></td><td>对二进制表示的每一位取反（有符号数的符号位也会取反）</td></tr><tr class="odd"><td>左移</td><td><code>&lt;&lt;</code></td><td>对二进制表示向左移动 <span class="math inline">\(1\)</span> 位所得的值</td></tr><tr class="even"><td>右移</td><td><code>&gt;&gt;</code></td><td>对二进制表示向右移动 <span class="math inline">\(1\)</span> 位所得的值</td></tr></tbody></table><h2 id="运算符优先级">运算符优先级</h2><table><thead><tr class="header"><th>加减</th><th>移位</th><th>比较大小</th><th>位与</th><th>异或</th><th>位或</th></tr></thead><tbody><tr class="odd"><td><code>+ -</code></td><td><code>&lt;&lt; &gt;&gt;</code></td><td><code>&gt; &lt; == !=</code></td><td><code>&amp;</code></td><td><code>^</code></td><td><code>|</code></td></tr></tbody></table><h2 id="二进制常用操作">二进制常用操作</h2><table><thead><tr class="header"><th>操作</th><th>运算</th></tr></thead><tbody><tr class="odd"><td>取出整数 n 在二进制表示下的第 k 位</td><td><code>(n &gt;&gt; k) &amp; 1</code></td></tr><tr class="even"><td>取出整数 n 在二进制表示下的第 0 ~ k-1 位 (后 k 位)</td><td><code>n &amp; ((1 &lt;&lt; k) - 1)</code></td></tr><tr class="odd"><td>把整数 n 在二进制表示下的第 k 位取反</td><td><code>n xor (1 &lt;&lt; k)</code></td></tr><tr class="even"><td>对整数 n 在二进制表示下的第 k 位赋值 1</td><td><code>n | (1 &lt;&lt; k)</code></td></tr><tr class="odd"><td>对整数 n 在二进制表示下的第 k 位赋值 0</td><td><code>n &amp; (~(1 &lt;&lt; k))</code></td></tr></tbody></table><h1 id="位运算的应用">位运算的应用</h1><p>基本分类：</p><ol type="1"><li>高效地进行某些运算，代替其他低效的方式</li><li>表示集合（常用于 <strong>状态压缩DP</strong>）</li><li>题目本来就要求进行位运算</li></ol><h2 id="的幂次相关">2 的幂次相关</h2><h3 id="将一个数乘除-2-的非负整数次幂">将一个数乘（除） 2 的非负整数次幂</h3><p>向下取整，而非向零取整</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mulPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> <span class="comment">// 计算 n*(2^m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &lt;&lt; m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> <span class="comment">// 计算 n/(2^m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> n &gt;&gt; m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断一个数是不是-2-的非负整数次幂">判断一个数是不是 2 的非负整数次幂</h3><p>二进制表示中只有一位 1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">0</span> &amp;&amp; (n &amp; (n - <span class="number">1</span>)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对-2-的非负整数次幂取模">对 2 的非负整数次幂取模</h3><p>保留那一位以内的所有二进制</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">modPowerOfTwo</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &amp; (mod - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模拟集合操作">模拟集合操作</h2><table><thead><tr class="header"><th>操作</th><th>集合表示</th><th>位运算语句</th></tr></thead><tbody><tr class="odd"><td>交集</td><td><span class="math inline">\(a \cap b\)</span></td><td><code>a &amp; b</code></td></tr><tr class="even"><td>并集</td><td><span class="math inline">\(a \cup b\)</span></td><td><code>a | b</code></td></tr><tr class="odd"><td>补集</td><td><span class="math inline">\(\overline{a}\)</span></td><td><code>~a</code></td></tr><tr class="even"><td>差集</td><td><span class="math inline">\(a \setminus b\)</span></td><td><code>a &amp; (~b)</code></td></tr><tr class="odd"><td>对称差</td><td><span class="math inline">\(a \Delta b\)</span></td><td><code>a ^ b</code></td></tr></tbody></table><h3 id="子集遍历">子集遍历</h3><p>时间复杂度：<span class="math inline">\(O(2^{popcount(u)})\)</span></p><p>而遍历一个集合所有子集的子集，时间复杂度为 <span class="math inline">\(O(3^n)\)</span> （每个元素只有三中状态）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 遍历 u 的非空子集</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> s = u; s; s = (s - <span class="number">1</span>) &amp; u)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// s 是 u 的一个非空子集</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="成对变换">成对变换</h2><ol type="1"><li><span class="math inline">\(n\)</span> 为奇数时，<span class="math inline">\(n \oplus 1 = n - 1\)</span></li><li><span class="math inline">\(n\)</span> 为偶数时，<span class="math inline">\(n \oplus 1 = n + 1\)</span></li></ol><p>因此，“0与1”、“2与3”、“4与5”、... 关于 <span class="math inline">\(\oplus\)</span> 是成对变换的</p><p>常用于 <strong>图论</strong> 中，<strong>无向图</strong> 用 <strong>链式前向星</strong> 存图时，找 <strong>反向边</strong></p><h2 id="lowbit-运算">lowbit 运算</h2><p>获得一个二进制表示数的最低位是 1 的位:</p><p><span class="math display">\[\mathrm{lowbit}(x) = x \&amp; -x = x \&amp; (\sim x + 1)\]</span></p><p><strong>lowbit运算</strong> 可以找出整数二进制表示下的所有是 1 的位</p><p><strong>lowbit运算</strong> 也是 <strong>树状数组</strong> 实现中的一个基本运算</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> u &amp; -u;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="习题">习题</h1><h2 id="ab">a^b</h2><h3 id="题目描述">题目描述</h3><p>求 <span class="math inline">\(a\)</span> 的 <span class="math inline">\(b\)</span> 次方对 <span class="math inline">\(p\)</span> 取模的值。</p><p><strong>输入格式</strong></p><p>三个整数 <span class="math inline">\(a\)</span>,<span class="math inline">\(b\)</span>,<span class="math inline">\(p\)</span> ,在同一行用空格隔开。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示 <span class="math inline">\(a^b \bmod p\)</span> 的值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(0≤a,b≤10^9\)</span></p><p><span class="math inline">\(1≤p≤10^9\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 7</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="解析">解析</h3><p>快速幂模板</p><p>时间复杂度：<span class="math inline">\(O(\log_2 b)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span> % p;</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = (<span class="keyword">long</span> <span class="keyword">long</span>) res * a % p;</span><br><span class="line">        a = (<span class="keyword">long</span> <span class="keyword">long</span>) a * a % p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位整数乘法">64位整数乘法</h2><h3 id="题目描述-1">题目描述</h3><p>求 <span class="math inline">\(a\)</span> 乘 <span class="math inline">\(b\)</span> 对 <span class="math inline">\(p\)</span> 取模的值。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(a\)</span>，第二行输入整数 <span class="math inline">\(b\)</span>，第三行输入整数 <span class="math inline">\(p\)</span>。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示 <span class="math inline">\(a * b \bmod p\)</span> 的值。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤a,b,p≤10^{18}\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>： <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure></p><h3 id="解析一">解析一</h3><p>龟速乘模板</p><p>时间复杂度：<span class="math inline">\(O(\log_2 b)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">mul</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a, <span class="keyword">long</span> <span class="keyword">long</span> b, <span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; b; b &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = (res + a) % p;</span><br><span class="line">        a = a * <span class="number">2</span> % p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解析二">解析二</h3><p>公式：<span class="math inline">\(a * b \bmod p = a * b - \lfloor{\dfrac{a * b}{p}}\rfloor * p\)</span></p><p>时间复杂度：<span class="math inline">\(O(1)\)</span></p><p>虽然 <span class="math inline">\(a * b\)</span> 和 <span class="math inline">\(\lfloor{\dfrac{a * b}{p}}\rfloor * p\)</span> 都很大，但易知他们的差在 <span class="math inline">\(0\)</span> ~ <span class="math inline">\(p-1\)</span> 之间</p><p>因此，我们只需关注他们的低位即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="function">ull <span class="title">mul</span><span class="params">(ull a, ull b, ull p)</span> </span>&#123;</span><br><span class="line">a %= p, b %= p;  <span class="comment">// 当a,b一定在0~p之间时，此行不必要</span></span><br><span class="line">ull c = (<span class="keyword">long</span> <span class="keyword">double</span>)a * b / p;</span><br><span class="line">ull x = a * b, y = c * p;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = (<span class="keyword">long</span> <span class="keyword">long</span>)(x % p) - (<span class="keyword">long</span> <span class="keyword">long</span>)(y % p);</span><br><span class="line"><span class="keyword">if</span> (ans &lt; <span class="number">0</span>) ans += p;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最短hamilton路径">最短Hamilton路径</h2><h3 id="题目描述-2">题目描述</h3><p>给定一张 <span class="math inline">\(n\)</span> 个点的带权无向图，点从 <span class="math inline">\(0\)</span> ∼ <span class="math inline">\(n−1\)</span> 标号，求起点 <span class="math inline">\(0\)</span> 到终点 <span class="math inline">\(n−1\)</span> 的最短 Hamilton 路径。</p><p>Hamilton 路径的定义是从 <span class="math inline">\(0\)</span> 到 <span class="math inline">\(n−1\)</span> 不重不漏地经过每个点恰好一次。</p><p><strong>输入格式</strong></p><p>第一行输入整数 <span class="math inline">\(n\)</span>。</p><p>接下来 <span class="math inline">\(n\)</span> 行每行 <span class="math inline">\(n\)</span> 个整数，其中第 <span class="math inline">\(i\)</span> 行第 <span class="math inline">\(j\)</span> 个整数表示点 <span class="math inline">\(i\)</span> 到 <span class="math inline">\(j\)</span> 的距离（记为 <span class="math inline">\(a[i,j]\)</span>）。</p><p>对于任意的 <span class="math inline">\(x\)</span>,<span class="math inline">\(y\)</span>,<span class="math inline">\(z\)</span>，数据保证 <span class="math inline">\(a[x,x]=0\)</span>，<span class="math inline">\(a[x,y]=a[y,x]\)</span> 并且 <span class="math inline">\(a[x,y]+a[y,z]≥a[x,z]\)</span>。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最短 Hamilton 路径的长度。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(1≤n≤20\)</span>，<span class="math inline">\(0≤a[i,j]≤10^7\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">0 2 4 5 1</span><br><span class="line">2 0 6 5 3</span><br><span class="line">4 6 0 8 3</span><br><span class="line">5 5 8 0 5</span><br><span class="line">1 3 3 5 0</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">18</span><br></pre></td></tr></table></figure><h3 id="解析-1">解析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> f[<span class="number">1</span> &lt;&lt; <span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hamilton</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> weight[<span class="number">20</span>][<span class="number">20</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(f));</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1</span> &lt;&lt; n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j ++ ) <span class="keyword">if</span> (i &gt;&gt; j &amp; <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k ++ ) <span class="keyword">if</span> (i &gt;&gt; k &amp; <span class="number">1</span>)</span><br><span class="line">                f[i][j] = <span class="built_in">min</span>(f[i][j], f[i ^ <span class="number">1</span> &lt;&lt; j][k] + weight[k][j]);</span><br><span class="line">    <span class="keyword">return</span> f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="起床困难综合症">起床困难综合症</h2><h3 id="题目描述-3">题目描述</h3><p>21 世纪，许多人得了一种奇怪的病：起床困难综合症，其临床表现为：起床难，起床后精神不佳。</p><p>作为一名青春阳光好少年，atm 一直坚持与起床困难综合症作斗争。</p><p>通过研究相关文献，他找到了该病的发病原因： 在深邃的太平洋海底中，出现了一条名为 drd 的巨龙，它掌握着睡眠之精髓，能随意延长大家的睡眠时间。</p><p>正是由于 drd 的活动，起床困难综合症愈演愈烈， 以惊人的速度在世界上传播。</p><p>为了彻底消灭这种病，atm 决定前往海底，消灭这条恶龙。</p><p>历经千辛万苦，atm 终于来到了 drd 所在的地方，准备与其展开艰苦卓绝的战斗。</p><p>drd 有着十分特殊的技能，他的防御战线能够使用一定的运算来改变他受到的伤害。</p><p>具体说来，drd 的防御战线由 n 扇防御门组成。</p><p>每扇防御门包括一个运算 <span class="math inline">\(op\)</span> 和一个参数 <span class="math inline">\(t\)</span>，其中运算一定是 <span class="math inline">\(OR,XOR,AND\)</span> 中的一种，参数则一定为非负整数。</p><p>如果还未通过防御门时攻击力为 <span class="math inline">\(x\)</span>，则其通过这扇防御门后攻击力将变为 <span class="math inline">\(x op t\)</span>。</p><p>最终 drd 受到的伤害为对方初始攻击力 <span class="math inline">\(x\)</span> 依次经过所有 <span class="math inline">\(n\)</span> 扇防御门后转变得到的攻击力。</p><p>由于 atm 水平有限，他的初始攻击力只能为 <span class="math inline">\(0\)</span> 到 <span class="math inline">\(m\)</span> 之间的一个整数（即他的初始攻击力只能在 <span class="math inline">\(0,1,…,m\)</span> 中任选，但在通过防御门之后的攻击力不受 <span class="math inline">\(m\)</span> 的限制）。</p><p>为了节省体力，他希望通过选择合适的初始攻击力使得他的攻击能让 drd 受到最大的伤害，请你帮他计算一下，他的一次攻击最多能使 drd 受到多少伤害。</p><p><strong>输入格式</strong></p><p>第 1 行包含 2 个整数，依次为 <span class="math inline">\(n,m\)</span>，表示 drd 有 <span class="math inline">\(n\)</span> 扇防御门，atm 的初始攻击力为 <span class="math inline">\(0\)</span> 到 <span class="math inline">\(m\)</span> 之间的整数。</p><p>接下来 <span class="math inline">\(n\)</span> 行，依次表示每一扇防御门。每行包括一个字符串 <span class="math inline">\(op\)</span> 和一个非负整数 <span class="math inline">\(t\)</span>，两者由一个空格隔开，且 <span class="math inline">\(op\)</span> 在前，<span class="math inline">\(t\)</span> 在后，<span class="math inline">\(op\)</span> 表示该防御门所对应的操作，<span class="math inline">\(t\)</span> 表示对应的参数。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示 atm 的一次攻击最多使 drd 受到多少伤害。</p><p><strong>数据范围</strong></p><p><span class="math inline">\(2 \le n \le 10^5\)</span>，<span class="math inline">\(2 \le m \le 10^9\)</span>，<span class="math inline">\(0 \le t \le 10^9\)</span></p><p><span class="math inline">\(op \in \{OR, XOR, AND\}\)</span></p><p><strong>输入样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 10</span><br><span class="line">AND 5</span><br><span class="line">OR 6</span><br><span class="line">XOR 7</span><br></pre></td></tr></table></figure><p><strong>输出样例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><strong>样例解释</strong></p><p>atm 可以选择的初始攻击力为 <span class="math inline">\(0,1,…,10\)</span>。</p><p>假设初始攻击力为 <span class="math inline">\(4\)</span>，最终攻击力经过了如下计算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 AND 5 = 4</span><br><span class="line"></span><br><span class="line">4 OR 6 = 6</span><br><span class="line"></span><br><span class="line">6 XOR 7 = 1</span><br></pre></td></tr></table></figure><p>类似的，我们可以计算出初始攻击力为 <span class="math inline">\(1,3,5,7,9\)</span> 时最终攻击力为 <span class="math inline">\(0\)</span>，初始攻击力为 <span class="math inline">\(0,2,4,6,8,10\)</span> 时最终攻击力为 <span class="math inline">\(1\)</span>，因此 atm 的一次攻击最多使 drd 受到的伤害值为 <span class="math inline">\(1\)</span>。</p><h3 id="解析-2">解析</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, one = (<span class="number">1</span> &lt;&lt; <span class="number">30</span>) - <span class="number">1</span>, non = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++ )</span><br><span class="line">&#123;</span><br><span class="line">    string op; <span class="keyword">int</span> t; cin &gt;&gt; op &gt;&gt; t;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="string">&quot;AND&quot;</span>) one &amp;= t, non &amp;= t;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;XOR&quot;</span>) one ^= t, non ^= t;</span><br><span class="line">    <span class="keyword">else</span> one |= t, non |= t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">30</span>; i &gt;= <span class="number">0</span>; i -- )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (non &gt;&gt; i &amp; <span class="number">1</span>) res += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (one &gt;&gt; i &amp; <span class="number">1</span> &amp;&amp; m &gt;= <span class="number">1</span> &lt;&lt; i)</span><br><span class="line">    &#123;</span><br><span class="line">        m -= <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">        res += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法竞赛进阶指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法竞赛进阶指南 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing Django 框架课</title>
      <link href="/Engineer/acw_django/"/>
      <url>/Engineer/acw_django/</url>
      
        <content type="html"><![CDATA[<h1 id="python3教程-ஐ">Python3教程 ஐ</h1><p><a href="https://docs.python.org/zh-cn/3/tutorial/index.html">Python3官方Tutorial</a></p><h1 id="配置dockergit环境与项目创建-ஐ">配置docker、git环境与项目创建 ஐ</h1><h2 id="配置-docker-环境">配置 docker 环境</h2><p>与先前在 <strong>linux基础课</strong> 里完成对于 <strong>dock_lesson</strong> 容器的配置完全一样</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先将 y 总给的镜像 scp 到自己租的服务器上</span></span><br><span class="line">scp django_lesson_1_0.tar server_baidu:</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录到自己的服务器上</span></span><br><span class="line">ssh server_baidu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将该镜像加载出来</span></span><br><span class="line">docker load -i django_lesson_1_0.tar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用该镜像 django_lesson 创建并启动成容器 django_server</span></span><br><span class="line"><span class="comment"># 同时将该容器的端口 22(ssh登录服务端口) 和 8000（Django调试端口）</span></span><br><span class="line"><span class="comment"># 映射到服务器的 20000 与 8000 端口上</span></span><br><span class="line">docker run -p 20000:22 -p 8000:8000 --name django_server -itd django_lesson:1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入容器内</span></span><br><span class="line">docker attach django_server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建接下来要用的用户 acs 并给予 sudo 权限</span></span><br><span class="line">adduser acs</span><br><span class="line">usermode -aG sudo acs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后回到 Ac-Terminal 下配置 ssh 到容器下的免密登录</span></span><br><span class="line">........</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把bash、vim、tmux的配置文件上传到django服务器下</span></span><br><span class="line">scp .bashrc .vimrc .tmux.conf django:</span><br></pre></td></tr></table></figure><p>然后用 <strong>Django-admin</strong> 新建一个 <strong>Django</strong> 项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">acs@79ab5005fd7a:~$ django-admin --version</span><br><span class="line">3.2.8</span><br><span class="line">acs@79ab5005fd7a:~$ django-admin startproject acapp</span><br><span class="line">acs@79ab5005fd7a:~$ tree .</span><br><span class="line">.</span><br><span class="line">`-- acapp</span><br><span class="line">    |-- acapp</span><br><span class="line">    |   |-- __init__.py</span><br><span class="line">    |   |-- asgi.py</span><br><span class="line">    |   |-- settings.py</span><br><span class="line">    |   |-- urls.py</span><br><span class="line">    |   `-- wsgi.py</span><br><span class="line">    `-- manage.py</span><br><span class="line"></span><br><span class="line">2 directories, 6 files</span><br></pre></td></tr></table></figure><h2 id="配置-git-环境">配置 git 环境</h2><p>在对项目进行 git 提交前，先配置好 git.acwing 与 服务器的密钥交互</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br><span class="line">cat .ssh/id_rsa.pub</span><br><span class="line"><span class="comment"># 复制密钥，提交到 git 服务器的 ssh 密钥中</span></span><br></pre></td></tr></table></figure><p>然后对应上远程仓库即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 常规流程，不多解释了</span></span><br><span class="line">git config --global user.name <span class="string">&quot;colopen&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;zhaoxiucong@126.com&quot;</span></span><br><span class="line"></span><br><span class="line">git init</span><br><span class="line">git remote add origin git@git.acwing.com:colopen/acapp.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h2 id="配置-django-项目">配置 Django 项目</h2><h3 id="启动初始项目">启动初始项目</h3><p>先直接启动项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure><p>直接登录到对应 <code>ip:socket</code> 下后，会看到标题提示字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid HTTP_HOST header: &#x27;120.48.18.165:8000&#x27;. You may need to add &#x27;120.48.18.165&#x27; to ALLOWED_HOSTS.</span><br></pre></td></tr></table></figure><p>要求我们把 <code>120.48.18.165</code> 参数添加到 <code>ALLOWED_HOSTS</code> 下</p><p>先找出 <code>ALLOWED_HOSTS</code> 在哪个文件下，然后加进去即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出 ALLOWED_HOSTS 在哪个文件下</span></span><br><span class="line">$ ag ALLOWED_HOSTS</span><br><span class="line"></span><br><span class="line">&gt; acapp/settings.py</span><br><span class="line">&gt; 28:ALLOWED_HOSTS = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 ag命令 找到了该函数在 acapp/settings.py 下</span></span><br><span class="line"></span><br><span class="line">$ vim acapp/settings.py</span><br><span class="line"></span><br><span class="line">******</span><br><span class="line">ALLOWED_HOSTS = [<span class="string">&quot;120.48.18.165&quot;</span>]</span><br><span class="line">******</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存后退出，再从浏览器登入</span></span><br></pre></td></tr></table></figure><p>首页标题显示如下，这表示我们成功了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The install worked successfully! Congratulations!</span><br></pre></td></tr></table></figure><h3 id="gitignore的作用">【*.gitignore的作用】</h3><p>考虑把当前项目，提交到 <code>git</code> 服务器</p><p>执行一次 <code>git status</code> 后，发现会提示我们把 <code>__pycache__</code> 缓存文件也提交</p><blockquote><p><strong>工程常识</strong>：<strong>缓存文件</strong>，<strong>可执行文件</strong>，<strong>编译文件</strong> 不要传到自己的 <code>git</code> 项目里</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">&gt; Untracked files:</span><br><span class="line">&gt;   (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">&gt;       acapp/__pycache__/</span><br><span class="line">&gt;       ......</span><br></pre></td></tr></table></figure><p>为了不让 <code>git</code> 每次去额外检测缓存的 <code>cache</code> 文件，额外编写一个 <code>.gitignore</code> 文件，格式如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式：**/文件名</span></span><br><span class="line">**/__pycache__</span><br></pre></td></tr></table></figure><p>再调用一次 <code>git status</code> 就不会提示要 <code>add</code> 到 <strong>暂存区</strong> 了</p><p>编写 <code>.gitignore</code> 也是需要掌握的一项技能</p><h3 id="创建管理员登录页面">创建管理员登录页面</h3><p>直接调用封装好的命令，就会在当前目录下创建一个 <code>game</code> 文件夹</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py startapp game</span><br><span class="line">$ tree .</span><br><span class="line">&gt; .</span><br><span class="line">&gt; |-- acapp</span><br><span class="line">&gt; |   |-- __init__.py</span><br><span class="line">&gt; |   |-- __pycache__</span><br><span class="line">&gt; |   |   |-- __init__.cpython-38.pyc</span><br><span class="line">&gt; |   |   |-- settings.cpython-38.pyc</span><br><span class="line">&gt; |   |   |-- urls.cpython-38.pyc</span><br><span class="line">&gt; |   |   `-- wsgi.cpython-38.pyc</span><br><span class="line">&gt; |   |-- asgi.py</span><br><span class="line">&gt; |   |-- settings.py</span><br><span class="line">&gt; |   |-- urls.py</span><br><span class="line">&gt; |   `-- wsgi.py</span><br><span class="line">&gt; |-- db.sqlite3</span><br><span class="line">&gt; |-- game</span><br><span class="line">&gt; |   |-- __init__.py</span><br><span class="line">&gt; |   |-- admin.py          <span class="comment"># 管理员页面</span></span><br><span class="line">&gt; |   |-- apps.py           <span class="comment"># 用的不多</span></span><br><span class="line">&gt; |   |-- migrations</span><br><span class="line">&gt; |   |   `-- __init__.py</span><br><span class="line">&gt; |   |-- models.py         <span class="comment"># 定义网站里的数据库表</span></span><br><span class="line">&gt; |   |-- tests.py</span><br><span class="line">&gt; |   `-- views.py          <span class="comment"># 视图，即函数</span></span><br><span class="line">&gt; `-- manage.py</span><br></pre></td></tr></table></figure><p>在运行服务器的同时，我们也会看到几行红字警告：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You have 18 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.</span><br><span class="line">Run &#x27;python manage.py migrate&#x27; to apply them.</span><br></pre></td></tr></table></figure><p>意识大致是有 18 个数据库的修改没有 <code>apply</code>，直接复制执行他要求我们执行的代码即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py migrate</span><br></pre></td></tr></table></figure><p>数据库修改完成后，打开 <code>ip:socket/admin</code> 就会进入 <strong>管理员登录</strong> 页面了</p><p>然后我们用指令创建一个 <strong>管理员用户</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py createsuperuser</span><br><span class="line">&gt; Username (leave blank to use <span class="string">&#x27;acs&#x27;</span>): admin</span><br><span class="line">&gt; Email address: </span><br><span class="line">&gt; Password: 123456</span><br><span class="line">&gt; Password (again): 123456</span><br><span class="line">&gt; Superuser created successfully.</span><br></pre></td></tr></table></figure><p>然后利用该 <strong>管理员用户</strong> 登录 <code>admin</code> 页面，即可成功登陆</p><h3 id="创建用户登录页面">创建用户登录页面</h3><p><code>game</code> 下的各个文件作用：</p><ol type="1"><li><code>templates</code> 目录：管理 <code>html</code> 文件</li><li><code>urls</code> 目录：管理路由，即链接与函数的对应关系</li><li><code>views</code> 目录：管理 <code>http</code> 函数</li><li><code>models</code> 目录：管理数据库数据</li></ol><p>现在我们要实现一个路由重定向：</p><p><code>url</code> 输入网址 -&gt; <code>acapp.urls</code> -&gt; <code>game.urls</code> -&gt; <code>game.views.index</code> -&gt; 展示页面</p><p><strong>game.views</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">    line1 = <span class="string">&#x27;&lt;h1 style=&quot;text-align: center&quot;&gt; 第一个网页 &lt;/h1&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(line1)</span><br></pre></td></tr></table></figure><p><strong>game.urls</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views <span class="keyword">import</span> index</span><br><span class="line"></span><br><span class="line">urlpatterns = [ </span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>acapp.urls</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [ </span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, include(<span class="string">&#x27;game.urls&#x27;</span>)),</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">] </span><br></pre></td></tr></table></figure><p>然后直接打开 <code>ip:socket</code> 可以直接显示 <code>index</code> 返回的网页</p><h1 id="创建菜单界面-ஐ">创建菜单界面 ஐ</h1><p><strong>项目系统设计</strong></p><ul><li><code>menu</code> : 菜单页面</li><li><code>playground</code> : 游戏界面</li><li><code>settings</code> : 设置界面</li></ul><p><strong>项目文件结构</strong></p><ul><li><code>templates</code> 目录：管理 <code>html</code> 文件</li><li><code>urls</code> 目录：管理路由，即链接与函数的对应关系</li><li><code>views</code> 目录：管理 <code>http</code> 函数</li><li><code>models</code> 目录：管理数据库数据</li><li><code>static</code> 目录：管理静态文件，比如：<ul><li><code>css</code> : 对象的格式，比如位置、长宽、颜色、背景、字体大小等</li><li><code>js</code> : 对象的逻辑，比如对象的创建与销毁、事件函数、移动、变色等</li><li><code>image</code> : 图片</li><li><code>audio</code> : 声音</li><li>…</li></ul></li><li><code>consumers</code> 目录：管理 <code>websocket</code> 函数</li></ul><p><strong>本节课用到的素材地址</strong></p><ul><li>背景图片<ul><li>下载方式 : <code>wget --output-document=自定义图片名称 图片地址</code></li></ul></li><li><code>jquery</code> 库 :<ul><li><code>&lt;link rel="stylesheet" href="https://cdn.acwing.com/static/jquery-ui-dist/jquery-ui.min.css"&gt;</code></li><li><code>&lt;script src="https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js"&gt;&lt;/script&gt;</code></li></ul></li></ul><h2 id="构建好项目的框架">构建好项目的框架</h2><ol type="1"><li><strong>新建好 <code>templates、urls、views、models</code> 三个文件夹</strong></li><li><strong>新建好 <code>static</code> 静态文件夹下 <code>css、js、image、audio</code> 四个文件夹</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ rm urls.py views.py models.py</span><br><span class="line">$ mkdir urls views models templates static</span><br><span class="line">$ <span class="built_in">cd</span> static</span><br><span class="line">$ mkdir css js image audio</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了让其他的python文件可以import当前文件夹，需要先在每个文件夹下初始化一个 __init__.py文件</span></span><br><span class="line">$ touch models/__init__.py</span><br><span class="line">$ touch urls/__init__.py</span><br><span class="line">$ touch views/__init__.py</span><br></pre></td></tr></table></figure><p><strong>修改项目的 UTC 时间为 CN 时间</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim /acapp/settings.py</span><br><span class="line"></span><br><span class="line">******</span><br><span class="line">TIME_ZONE = <span class="string">&#x27;Asia/Shanghai&#x27;</span> <span class="comment"># 原来默认是 UTC</span></span><br><span class="line">******</span><br></pre></td></tr></table></figure><p><strong>将新创建的 <code>game</code> 下的 <code>apps.py</code> 中的 <code>GameConfig</code> 加到 <code>settings.py</code> 下</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ vim /acapp/settings.py</span><br><span class="line"></span><br><span class="line">******</span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">  <span class="string">&#x27;game.apps.GameConfig&#x27;</span>,</span><br><span class="line">  ......</span><br><span class="line">]</span><br><span class="line">******</span><br></pre></td></tr></table></figure><p><strong>声明将静态文件路径 <code>STATIC_ROOT</code> 和 <code>MEDIA_ROOT</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ vim /acapp/settings.py</span><br><span class="line"></span><br><span class="line">******</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line">MEDIA_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;media&#x27;</span>)</span><br><span class="line">MEDIA_URL = <span class="string">&#x27;/media/&#x27;</span></span><br><span class="line">******</span><br></pre></td></tr></table></figure><p><strong><code>image</code> 文件管理</strong></p><p><code>image</code> 文件一般放于 <code>game/static/image</code> 文件夹下</p><p>为了方便管理，对应每个模块，分别用不同的文件夹来进行分类管理</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mdkir menu playground settings</span><br></pre></td></tr></table></figure><p>然后我们在 <code>game/static/image/menu</code> 下载一个图片，作为 <code>menu</code> 模块的背景图</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> menu</span><br><span class="line">$ wget --output-document=background.gif https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_match%2F0%2F11156556256%2F0.jpg&amp;refer=http%3A%2F%2Finews.gtimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg</span><br><span class="line">$ rm wget-log <span class="comment"># 删掉没有用的 wget 日志</span></span><br></pre></td></tr></table></figure><p>顺便也可以测试一下之前在 <strong>全局设置</strong> 中加的 <strong>静态文件url</strong></p><p>在浏览器键入 <code>ip:socket/static/image/menu/background.gif</code> 可以成功在浏览器中看到图片</p><p><strong><code>css</code> 文件管理</strong></p><p>一般一个工程，只有一个 <code>css</code> 文件就足够了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> css</span><br><span class="line">$ touch game.css</span><br></pre></td></tr></table></figure><p><strong><code>js</code> 文件管理</strong></p><p>一般一个工程会有很多个 <code>.js</code> 源文件，为了加快网络的传输，也为了每次写新的 <code>.js</code> 文件不用每个 <code>html</code> 都额外引入一次</p><p>考虑用一个 <code>src</code> 源文件夹来存储所有的 <code>.js</code> 源文件</p><p>然后用 <code>dist</code> 文件夹来存放由 <code>src</code> 下所有源文件整合生成的一个目标 <code>.js</code> 文件</p><p>这样既实现了快速传输的好处，也方便了后续编写 <code>html</code> 文件时，引入 <code>.js</code> 的便利</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> js</span><br><span class="line">$ mkdir dist src</span><br><span class="line">$ <span class="built_in">cd</span> mkdir src</span><br><span class="line">$ mkdir menu playground settings</span><br><span class="line">$ touch zbase.js  <span class="comment"># 总的 js 文件，命名以 z 开头会自动在字典序最后</span></span><br></pre></td></tr></table></figure><p>创建一个脚本实现上述 <strong>整合的功能</strong></p><p><code>~/acapp/scripts/compress_game_js.sh</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">JS_PATH=/home/acs/acapp/game/static/js/</span><br><span class="line">JS_PATH_DIST=<span class="variable">$&#123;JS_PATH&#125;</span>dist/</span><br><span class="line">JS_PATH_SRC=<span class="variable">$&#123;JS_PATH&#125;</span>src/</span><br><span class="line"></span><br><span class="line">find <span class="variable">$JS_PATH_SRC</span> -<span class="built_in">type</span> f -name <span class="string">&#x27;*.js&#x27;</span> | sort | xargs cat &gt; <span class="variable">$&#123;JS_PATH_DIST&#125;</span>game.js</span><br></pre></td></tr></table></figure><p><strong><code>html</code> 文件管理</strong></p><p>在 <code>templates</code> 文件夹下创建 <code>menu、playground、settings、multiends</code> 四个文件夹，用于存储三个模块和终端的 <code>html</code> 文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir menu playround settings multiends</span><br></pre></td></tr></table></figure><p>在 <code>multiends</code> 下创建 <code>web.html</code> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Django 中引入全局setting里的变量 static 的语法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery-ui-dist/jquery-ui.min.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.acwing.com/static/jquery/js/jquery-3.3.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述两句引入 jQuery 库 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用引入的变量 static 的语法如下 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% static &#x27;css/game.css&#x27; %&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;% static &#x27;js/dist/game.js&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分别引入 css 文件和总的 js 文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ac_game_12345678&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> ac_game = <span class="keyword">new</span> AcGame(<span class="string">&quot;ac_game_12345678&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>编写 <code>js/src/zbase.js</code> 文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">id</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>views</code>视图管理</strong></p><p>在 <code>views</code> 文件夹下新建三个模块的视图文件夹</p><p>同样为了能够被 <code>import</code> 到，分别初始化 <code>__init__.py</code> 文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> views</span><br><span class="line">$ mkdir menu playground settings</span><br><span class="line">$ touch menu/__init__.py</span><br><span class="line">$ touch playground/__init__.py</span><br><span class="line">$ touch settings/__init__.py</span><br></pre></td></tr></table></figure><p>然后写一个 <code>index.py</code> 文件，目的是在 <code>web</code> 端被访问时，返回上面写的 <code>web.html</code> 文件</p><p><strong><code>index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>(<span class="params">request</span>):</span></span><br><span class="line">  <span class="keyword">return</span> render(request, <span class="string">&quot;multiends/web.html&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong><code>urls</code>路由管理</strong></p><p>这部分比较绕，首先需要对将要实现的访问路由有一个概览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">                                     /-- &quot;&quot; -- index</span><br><span class="line">                                    / -- &quot;menu/&quot; -- menu.index</span><br><span class="line">             / &quot;&quot; --&gt; &quot;game.url&quot; --&gt; </span><br><span class="line">            /                       \ -- &quot;playground/&quot; -- playround.index</span><br><span class="line">id:scoket -&gt;                         \-- &quot;settings/&quot; -- settings.index</span><br><span class="line">            \</span><br><span class="line">             \ &quot;/admin&quot; -- 到达管理员页面</span><br></pre></td></tr></table></figure><p>接下来我们就是要实现这样一个路由规则</p><p>首先在 <code>urls</code> 下创建三个文件夹 <code>menu、playground、settings</code></p><p>并且分贝在三个文件夹下创建初始化的 <code>__init__.py</code> 文件，模板参考如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>首先修改我们的 <strong>路由起点</strong> 文件 : <code>~/acapp/acapp/urls.py</code></p><p>实现我们的第一个分支</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">  path(<span class="string">&#x27;&#x27;</span>, include(<span class="string">&#x27;game.urls.index&#x27;</span>)),</span><br><span class="line">  path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>根据我们的路由图，抵达第二个分支，修改第二个分支的文件 : <code>~/acapp/game/urls/index.py</code></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line"><span class="keyword">from</span> game.views.index <span class="keyword">import</span> index</span><br><span class="line"></span><br><span class="line">urlpatterns = [ </span><br><span class="line">    path(<span class="string">&quot;&quot;</span>, index, name=<span class="string">&quot;index&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;menu/&quot;</span>, include(<span class="string">&quot;game.urls.menu.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;playground/&quot;</span>, include(<span class="string">&quot;game.urls.playground.index&quot;</span>)),</span><br><span class="line">    path(<span class="string">&quot;settings/&quot;</span>, include(<span class="string">&quot;game.urls.settings.index&quot;</span>))</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这样就完全实现我们期望的 <strong>路由规则</strong> 了</p><h2 id="创建菜单-menu-界面">创建菜单 <code>menu</code> 界面</h2><h3 id="搭建菜单-menu-界面的框架">搭建菜单 <code>menu</code> 界面的框架</h3><p>我们采用的 <strong>前后端分离式</strong> 开发，所有的 <strong>html</strong> 渲染都要求在前端完成</p><p>开发流程就是，现在 <strong>html</strong> 里创建好一个有 <strong>id</strong> 的 <strong>div</strong></p><p>然后利用 <strong>js</strong> 文件，捕获到该 <strong>div</strong>，并进行 <strong>渲染</strong></p><p>因此，该模块的目的就很明确了</p><p>先前，在 <strong>multiends</strong> 的 <strong>web.html</strong> 文件里设置了一个 <strong>id</strong> 为 <strong>ac_game_12345678</strong> 的 <strong>div</strong></p><p>然后在 <strong>js / src</strong> 完成该对象的创建</p><blockquote><p>将每一个结构写成一个 <strong>class</strong></p></blockquote><p><strong><code>/templates/multiends/web.html</code></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;ac_game_12345678&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> ac_game = <span class="keyword">new</span> AcGame(<span class="string">&quot;ac_game_12345678&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong><code>js/src/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">id</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id; </span><br><span class="line">        <span class="built_in">this</span>.$ac_game = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line">        <span class="built_in">this</span>.menu = <span class="keyword">new</span> AcGameMenu(<span class="built_in">this</span>);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameMenu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.$menu = $(<span class="string">` </span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$menu); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>css/game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/static/image/menu/background.gif&#x27;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的 <strong>代码逻辑</strong> 如下：</p><ol type="1"><li><code>html</code> 页面执行到 <code>js</code> 代码，利用 <code>AcGame类</code> 创建对象 <code>ac_game</code> 同时传递参数 <code>div的id</code></li><li><code>AcGame</code> 开始执行构造函数，在构造函数中，捕获 <code>html</code> 标签，并利用 <code>AcGameMenu类</code> 创建对象 <code>menu</code>，并将整个对象作为参数下传</li><li><code>AcGameMenu</code> 开始执行构造函数，然后创建 <code>html</code> 代码，加到捕获到的 <code>html</code> 代码下</li><li>最终成功渲染出背景图片</li></ol><h3 id="设置菜单-menu-页面的内容">设置菜单 <code>menu</code> 页面的内容</h3><p>主要内容就是在主页面中，显示：单人模式、多人模式、设置，三个按钮的选项</p><p>比较简单，就不多解释了</p><p><strong><code>js/src/menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameMenu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.$menu = $(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-menu-field&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-single-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            单人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-multi-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            多人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-settings-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            设置</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$menu);</span><br><span class="line">        <span class="built_in">this</span>.$single_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-single-mode&#x27;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$multi_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-multi-mode&#x27;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$settings_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-settings-mode&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>css/game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-menu</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/static/image/menu/background.gif&#x27;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">40vh</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">19vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">18vw</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">6vh</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1vh</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">39</span>, <span class="number">21</span>, <span class="number">28</span>, <span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.5vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-menu-field-item</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">100ms</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加-单人模式-监听函数-打开游戏界面-功能">添加 '单人模式' 监听函数 —— 打开游戏界面 功能</h3><p>如何添加 <strong>html</strong> 标签的监听函数，这里不多做解释</p><p>不会的小伙伴可以去学一下基本的 <strong>JavaScript</strong> 和 <strong>jQuery</strong></p><p>说明一下这里要实现的 <strong>逻辑</strong>：</p><ol type="1"><li>点击 '单人模式' 按钮触发 <code>click</code> 事件，随即触发监听函数，开始执行</li><li>关闭 <code>menu</code> 页面</li><li>打开 <code>playground</code> 页面</li></ol><p>因此，我们先简易的实现一个 <code>playground</code> 页面，方便调试该功能</p><p><strong><code>js/src/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.$playground = $(<span class="string">`&lt;div&gt;游戏界面&lt;/div&gt;`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.hide();</span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$playground);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        <span class="built_in">this</span>.$playground.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hide</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//关闭 playground 界面</span></span><br><span class="line">        <span class="built_in">this</span>.$playground.hide();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再实现 监听函数功能之前，先在 <code>/src/zbase.js</code> 即主 <code>js</code> 文件下，利用 <code>AcGamePlayground</code> 类创建好 <code>playground</code> 对象</p><p>这样我们就能在前端，渲染出两个界面了，分别是：<code>menu</code> 和 <code>playground</code></p><p><strong><code>js/src/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">id</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.$ac_game = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line">        <span class="built_in">this</span>.menu = <span class="keyword">new</span> AcGameMenu(<span class="built_in">this</span>);</span><br><span class="line">        <span class="comment">// 把 playground 对象也建好，这样我们就同时有两个界面了</span></span><br><span class="line">        <span class="built_in">this</span>.playground = <span class="keyword">new</span> AcGamePlayground(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;                    </span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们开始实现 <code>ac-game-menu-field-item-single-mode</code> 标签的 <code>click</code> 事件的监听函数</p><p>其功能之前讲过了，就是关闭 <code>menu</code> 页面，打开 <code>playground</code> 页面</p><p><strong><code>js/src/menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameMenu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.$menu = $(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-menu&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-menu-field&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-single-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            单人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-multi-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            多人模式</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-menu-field-item ac-game-menu-field-item-settings-mode&quot;&gt;</span></span><br><span class="line"><span class="string">            设置</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$menu);</span><br><span class="line">        <span class="built_in">this</span>.$single_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-single-mode&#x27;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$multi_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-multi-mode&#x27;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$settings_mode = <span class="built_in">this</span>.$menu.find(<span class="string">&#x27;.ac-game-menu-field-item-settings-mode&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.$single_mode.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            outer.hide();   <span class="comment">// 关闭主页面</span></span><br><span class="line">            outer.root.playground.show();   <span class="comment">// 打开游戏界面</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//显示menu界面</span></span><br><span class="line">        <span class="built_in">this</span>.$menu.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hide</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//隐藏menu界面</span></span><br><span class="line">        <span class="built_in">this</span>.$menu.hide();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们到 <code>id:socket</code> 下查看，发现功能成功实现了 w</p><p>下课 ~~</p><h1 id="创建游戏界面-ஐ">创建游戏界面 ஐ</h1><h2 id="前端的模块化引入">前端的模块化引入</h2><p>这属于上节课的疑难杂症，由于在 <code>html</code> 代码部分，是将整个 <code>game.js</code> 文件引入</p><p>这样会导致在 <code>game.js</code> 中定义的变量，会变成整个网页的 <strong>全局变量</strong>（之后可能会引起变量重名的诸多问题）</p><p>因此，我们考虑使用 <strong>模块化引入</strong> 的功能，让网页只引入在 <strong>html</strong> 中需要的部分</p><p><strong>修改 <code>web.html</code></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 首先，先删掉上面整个引入 game.js 的部分 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 然后，下方创建对象的部分，先使用模块化引入 --&gt;</span></span><br><span class="line">......</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">import</span> &#123;AcGame&#125; <span class="keyword">from</span> <span class="string">&quot;&#123;% static &#x27;js/dist/game.js&#x27; %&#125;&quot;</span></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> ac_game = <span class="keyword">new</span> AcGame(<span class="string">&quot;ac_game_12345678&quot;</span>)</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>此外，还有修改引入的类，在前面加上 <code>export</code>，如下修改 <code>js/src/zbase.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，在全局中，只会出现引入的模块，其他的 <code>.js</code> 代码不会出现在全局中</p><h2 id="构建游戏界面框架">构建游戏界面框架</h2><p>文件框架在上一节已经完全搭建好了</p><p>这里要完成的是对 <strong>游戏界面画布</strong> 的构建，十分简单</p><p>给画布的 <strong>div block</strong> 一个 <strong>class</strong> 叫 <strong>ac-game-playground</strong>，然后在 <strong>game.css</strong> 中进行设置</p><p><strong><code>static/js/src/playground/=zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">    <span class="built_in">this</span>.$playground = $(<span class="string">`&lt;div class=&quot;ac-game-playground&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p><strong><code>game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="selector-class">.ac-game-playground</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h2 id="实现游戏引擎框架">实现游戏引擎框架</h2><p>首先，需要对这部分有一个基本的认识</p><p>游戏中，物体在移动，其实现原理是：每一个动作都会渲染多张图片出来，然后图片快速的切换，从而实现动的过程</p><p>因此，需要先实现一个游戏引擎的基类 <strong><code>AcGameObject</code></strong> ，使得每帧能渲染一张图片出来</p><p>该基类需要具备的功能有：</p><ol type="1"><li><code>start()</code> 在游戏开始的第一帧时需要执行的任务（一般是创建对象）</li><li><code>update()</code> 在游戏开始后的每一帧均会执行的任务（一般是渲染当前对象的各种状态）</li><li><code>on_destroy()</code> 删掉该物体前需要执行的任务（一般是删掉动画，或者给对手加分）</li><li><code>destroy()</code> 删掉该物体</li></ol><p>根据上述逻辑，我们就可以基本搭建出来一个游戏引擎的基类了，具体如下：</p><p><strong><code>/static/js/playground/ac_game_object/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> AC_GAME_OBJECTS = [];   <span class="comment">//用于记录当前画布中，需要渲染的对象有哪些</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        AC_GAME_OBJECTS.push(<span class="built_in">this</span>);  <span class="comment">//将当前新建的对象，加入到全局的画布中去，参与渲染</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.has_called_start = <span class="literal">false</span>;  <span class="comment">//是否执行过 start 函数</span></span><br><span class="line">        <span class="built_in">this</span>.timedelta = <span class="number">0</span>;             <span class="comment">//当前帧距离上一帧的时间间隔</span></span><br><span class="line">        <span class="comment">// 该数据记录是为了后续计算速度等参数的</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;   <span class="comment">//只会在第一帧执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;  <span class="comment">//每一帧均会执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">on_destroy</span>(<span class="params"></span>)</span> &#123;  <span class="comment">//在被销毁前执行一次</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">destroy</span>(<span class="params"></span>)</span> &#123; <span class="comment">//删掉该物体</span></span><br><span class="line">        <span class="built_in">this</span>.on_destroy();  <span class="comment">//删掉该物体前，执行删前的操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在全局渲染物体中，找到该物体，并将其删掉</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; AC_GAME_OBJECTS.length; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (AC_GAME_OBJECTS[i] === <span class="built_in">this</span>) &#123;  <span class="comment">//三等号，在js里额外加了一层类型相等约束</span></span><br><span class="line">                AC_GAME_OBJECTS.splice(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> last_timestamp;</span><br><span class="line"><span class="keyword">let</span> AC_GAME_ANIMATION = <span class="function"><span class="keyword">function</span>(<span class="params">timestamp</span>) </span>&#123;  <span class="comment">// 回调函数，实现：每一帧重绘时，都会执行一遍</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; AC_GAME_OBJECTS.length; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = AC_GAME_OBJECTS[i];</span><br><span class="line">        <span class="keyword">if</span> (!obj.has_called_start) &#123; <span class="comment">//如果还未执行初始帧动作，就先执行</span></span><br><span class="line">            obj.start();</span><br><span class="line">            obj.has_called_start = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;  <span class="comment">//执行过初始帧，就执行每一帧的任务</span></span><br><span class="line">            obj.timedelta = timestamp - last_timestamp;</span><br><span class="line">            obj.update();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    last_timestamp = timestamp; <span class="comment">//更新最后一次时间戳</span></span><br><span class="line">    requestAnimationFrame(AC_GAME_ANIMATION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">requestAnimationFrame(AC_GAME_ANIMATION);   <span class="comment">// js提供的api，其功能如下官方文档所示</span></span><br></pre></td></tr></table></figure><blockquote><p><code>window.requestAnimationFrame(callback)</code> 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。 参数 <code>callback</code> : 下一次重绘之前更新动画帧所调用的函数(即上面所说的回调函数)。该回调函数会被传入 <code>DOMHighResTimeStamp</code> 参数，该参数与 <code>performance.now()</code> 的返回值相同，它表示 <code>requestAnimationFrame()</code> 开始去执行回调函数的时刻。</p></blockquote><blockquote><p>接下来所有的一切游戏，都是基于这个引擎的基类完成的</p></blockquote><h2 id="实现游戏地图功能">实现游戏地图功能</h2><p>目标：实现一个每一秒都在渲染的纯黑背景</p><p>虽然现阶段要实现的地图较为简单，但为了后期的拓展性，故还是考虑新建一个文件夹来完成</p><p>然后在 <code>js</code> 中，已经封装好了一个 <code>canvas</code> 的 <code>api</code> 来帮助实现背景画布，直接调用即可</p><p>先铺开画布，然后设置为黑色</p><p><strong><code>static/js/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="comment">// $(&#x27;.playground&#x27;)对象已经在 css 文件里渲染出高宽了</span></span><br><span class="line">        <span class="comment">// 现在把他的高宽存下来，往下传递</span></span><br><span class="line">        <span class="built_in">this</span>.width = <span class="built_in">this</span>.$playground.width();</span><br><span class="line">        <span class="built_in">this</span>.weight = <span class="built_in">this</span>.$playground.height();</span><br><span class="line">        <span class="built_in">this</span>.game_map = <span class="keyword">new</span> GameMap(<span class="built_in">this</span>);</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>static/js/playground/game-map/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameMap</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;    <span class="comment">//继承自游戏引擎基类</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();    <span class="comment">//自函数功能：调用基类的构造函数</span></span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.$canvas = $(<span class="string">`&lt;canvas&gt;&lt;/canvas&gt;`</span>); <span class="comment">//创建一个canvas的jQuery对象，就是我们要实现的画布</span></span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.$canvas[<span class="number">0</span>].getContext(<span class="string">&#x27;2d&#x27;</span>); <span class="comment">//jQuery对象是一个数组，第一个索引是html对象</span></span><br><span class="line">        <span class="comment">//设置画布的宽高</span></span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.width = <span class="built_in">this</span>.playground.width;</span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.height = <span class="built_in">this</span>.playground.height;</span><br><span class="line">        <span class="built_in">this</span>.playground.$playground.append(<span class="built_in">this</span>.$canvas);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;  <span class="comment">//游戏地图每帧都要渲染</span></span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="string">&quot;rgba(0, 0, 0, 0.2)&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.ctx.canvas.width, <span class="built_in">this</span>.ctx.canvas.height);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="实现玩家显示功能">实现玩家显示功能</h1><p>毛坯版玩家显示，每个玩家定义成一个圆，然后渲染在前端</p><p>需要对于玩家类定义多个参数，以方便日后拓展：</p><ol type="1"><li><code>x</code> 当前位置的横坐标</li><li><code>y</code> 当前位置的纵坐标</li><li><code>radius</code> 当前的半径</li><li><code>speed</code> 当前的速度</li><li><code>is_me</code> 该对象是否是当前玩家操控的对象（一是区别于 bot，二是区别于 日后联机的其他玩家）</li></ol><p><strong><code>static/js/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ......</span><br><span class="line">        <span class="built_in">this</span>.players = [];  <span class="comment">// 存放当前游戏中的所有玩家</span></span><br><span class="line">        <span class="comment">//将玩家加入游戏中</span></span><br><span class="line">        <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span>, <span class="built_in">this</span>.height / <span class="number">2</span>, <span class="built_in">this</span>.height * <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="built_in">this</span>.height * <span class="number">0.15</span>, <span class="literal">true</span>));</span><br><span class="line">        ......</span><br><span class="line">    &#125;</span><br><span class="line">    .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>static/js/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground, x, y, radius, color, speed, is_me</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="comment">//把信息都存下来</span></span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.playground.game_map.ctx;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">        <span class="built_in">this</span>.is_me = is_me;</span><br><span class="line">        <span class="comment">//用于浮点数运算</span></span><br><span class="line">        <span class="built_in">this</span>.eps = <span class="number">0.1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;  <span class="comment">//渲染一个圆</span></span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">on_destroy</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现玩家移动功能">实现玩家移动功能</h2><p>移动的实现逻辑很简单，就是让每帧渲染的圆的位置发生移动即可</p><p>上述简单逻辑的实现如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">....</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.vx = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">this</span>.vy = <span class="number">1</span>;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.x += x;</span><br><span class="line">        <span class="built_in">this</span>.y += y;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们来实现一个向鼠标点击位置移动的功能</p><p>这就需要设置一个 <code>click</code> 事件的监听函数，分别传递：</p><ol type="1"><li>鼠标点击事件</li><li>鼠标点击位置的横坐标</li><li>鼠标点击位置的纵坐标</li></ol><p>然后开始让圆的位置逐步向鼠标点击位置进行移动</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.is_me) &#123;   <span class="comment">//对于用户玩家，加上监听函数</span></span><br><span class="line">        <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">    <span class="comment">//把鼠标右键调出菜单栏的功能关掉</span></span><br><span class="line">    <span class="built_in">this</span>.playground.game_map.$canvas.on(<span class="string">&quot;contextmenu&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//把右键控制移动功能加上</span></span><br><span class="line">    <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 左键:1 中键:2 右键:3</span></span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">3</span>) &#123;</span><br><span class="line">            outer.move_to(e.clientX, e.clientY);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，我们来实现移动功能的函数 <code>move_to(tx, ty)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.vx = <span class="number">0</span>;    <span class="comment">//x方向上的移动速度</span></span><br><span class="line">    <span class="built_in">this</span>.vy = <span class="number">0</span>;    <span class="comment">//y方向上的移动速度</span></span><br><span class="line">    <span class="built_in">this</span>.move_length = <span class="number">0</span>;   <span class="comment">//剩余移动距离</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">get_dist (x1, y1, x2, y2) &#123; <span class="comment">//求两点的欧几里得距离</span></span><br><span class="line">    <span class="keyword">let</span> dx = x2 - x1;</span><br><span class="line">    <span class="keyword">let</span> dy = y2 - y1;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(dx * dx + dy * dy);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">move_to</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 计算移动距离</span></span><br><span class="line">    <span class="built_in">this</span>.move_length = <span class="built_in">this</span>.get_dist(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, tx, ty);</span><br><span class="line">    <span class="comment">// 计算移动角度，api接口：atan2(dy, dx)</span></span><br><span class="line">    <span class="keyword">let</span> angle = <span class="built_in">Math</span>.atan2(ty - <span class="built_in">this</span>.y, tx - <span class="built_in">this</span>.x);</span><br><span class="line">    <span class="comment">// 位移 1 个单位长度（向着矢量方向移动到单位圆上）</span></span><br><span class="line">    <span class="built_in">this</span>.vx = <span class="built_in">Math</span>.cos(angle);  <span class="comment">//极直互化</span></span><br><span class="line">    <span class="built_in">this</span>.vy = <span class="built_in">Math</span>.sin(angle);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">//浮点数精度运算</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.move_length &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">        <span class="built_in">this</span>.move_length = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.vx = <span class="built_in">this</span>.vy = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 计算单位帧里的移动距离</span></span><br><span class="line">        <span class="keyword">let</span> moved = <span class="built_in">Math</span>.min(<span class="built_in">this</span>.move_length, <span class="built_in">this</span>.speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>);</span><br><span class="line">        <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx * moved;</span><br><span class="line">        <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy * moved;</span><br><span class="line">        <span class="comment">// 还要减掉移动的距离</span></span><br><span class="line">        <span class="built_in">this</span>.move_length -= moved;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.render();</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这样就实现了玩家的移动功能了，可以登录 <code>id:socket</code> 调试该功能</p><h1 id="实现火球技能的功能">实现火球技能的功能</h1><p>火球对象的建立与玩家基本一致，直接照搬，在从细节上改改即可</p><p><strong><code>js/src/playground/skill/fireball/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FireBall</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground, player, x, y, radius, vx, vy, color, speed, move_length, damage</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.playground.game_map.ctx;</span><br><span class="line">        <span class="built_in">this</span>.player = player;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.vx = vx;</span><br><span class="line">        <span class="built_in">this</span>.vy = vy;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">        <span class="built_in">this</span>.move_length = move.length;</span><br><span class="line">        <span class="built_in">this</span>.damage = damage;</span><br><span class="line">        <span class="built_in">this</span>.eps = <span class="number">0.1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.move_length &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">            <span class="built_in">this</span>.destroy();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> moved = <span class="built_in">Math</span>.min(<span class="built_in">this</span>.move_length, <span class="built_in">this</span>.speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>);</span><br><span class="line">            <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx * moved;</span><br><span class="line">            <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy * moved;</span><br><span class="line">            <span class="built_in">this</span>.move_length -= moved;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span> * Pi, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>然后在玩家身上实现发火球的功能</p><p>基本实现逻辑：当前选中了火球技能，鼠标左键点击一处，向该处发射一个火球</p><p>因此，为了知道用户是否选择了技能，需要加一个键盘触发事件监听函数，然后加一个鼠标左键触发事件监听函数</p><p>然后发射一个火球即可</p><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.cur_skill = <span class="literal">null</span>;  <span class="comment">//记录当前选择的技能</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 左键:1 中键:2 右键:3</span></span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">3</span>) &#123;</span><br><span class="line">            outer.move_to(e.clientX, e.clientY);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;     <span class="comment">//鼠标左键事件</span></span><br><span class="line">            <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;fireball&quot;</span>) &#123;   <span class="comment">//当前已经选中火球技能</span></span><br><span class="line">                outer.shoot_fireball(e.clientX, e.clientY);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        outer.cur_skill = <span class="literal">null</span>; <span class="comment">//清空当前技能</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="built_in">window</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">81</span>) &#123;       <span class="comment">//键盘按下事件</span></span><br><span class="line">            outer.cur_skill = <span class="string">&quot;fireball&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">shoot_fireball</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//确定火球的参数</span></span><br><span class="line">    <span class="keyword">let</span> x = <span class="built_in">this</span>.x, y = <span class="built_in">this</span>.y; <span class="comment">//火球发射点就是当前玩家的位置</span></span><br><span class="line">    <span class="keyword">let</span> radius = <span class="built_in">this</span>.playground.height * <span class="number">0.01</span>;</span><br><span class="line">    <span class="keyword">let</span> angle = <span class="built_in">Math</span>.atan2(ty - <span class="built_in">this</span>.y, tx - <span class="built_in">this</span>.x);</span><br><span class="line">    <span class="keyword">let</span> vx = <span class="built_in">Math</span>.cos(angle), vy = <span class="built_in">Math</span>.sin(angle);</span><br><span class="line">    <span class="keyword">let</span> color = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> speed = <span class="built_in">this</span>.playground.height * <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">let</span> move_length = <span class="built_in">this</span>.playground.height * <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">let</span> damage = <span class="built_in">this</span>.playground.height * <span class="number">0.01</span>;</span><br><span class="line">    <span class="keyword">new</span> FireBall(<span class="built_in">this</span>.playground, <span class="built_in">this</span>, x, y, radius, vx, vy, color, speed, move_length, damage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就成功实现了玩家发射火球的功能了</p><h2 id="实现单人模式下的人机功能">实现单人模式下的人机功能</h2><p>先创建好 5 个人机</p><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建好 5 个人机</span></span><br><span class="line"><span class="keyword">for</span> (len i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">    <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span>, <span class="built_in">this</span>.height / <span class="number">2</span>, <span class="built_in">this</span>.height * <span class="number">0.05</span>, <span class="string">&quot;blue&quot;</span>, <span class="built_in">this</span>.height * <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样创建出来的 5 个人机是不会行动的</p><p>我们写一个简易的 Ai 程序，让他们也会移动</p><p>这里实现的逻辑是：每次随机一个目的地，向目的地移动，然后再随机一个目的地，循环下去</p><p>根据该逻辑，修改两个函数即可</p><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.is_me) &#123;   <span class="comment">//对于用户玩家，加上监听函数</span></span><br><span class="line">        <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> tx = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.width;</span><br><span class="line">        <span class="keyword">let</span> ty = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.height;</span><br><span class="line">        <span class="built_in">this</span>.move_to(tx, ty);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"> <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.move_length &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">        <span class="built_in">this</span>.move_length = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.vx = <span class="built_in">this</span>.vy = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.is_me) &#123;   <span class="comment">//如果是人机，停下来时再随机一个方向前进</span></span><br><span class="line">            <span class="keyword">let</span> tx = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.width;</span><br><span class="line">            <span class="keyword">let</span> ty = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.height;</span><br><span class="line">            <span class="built_in">this</span>.move_to(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">on_destroy</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.playground.players.length; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.playground.players[i] === <span class="built_in">this</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.playground.players.splice(i, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现技能命中效果碰撞检测功能">实现技能命中效果（碰撞检测功能）</h2><p>实现逻辑：检测两个圆的中心距离是否小于两个圆的半径之和</p><p>小于等于时，代表发生碰撞，开始执行命中效果：</p><ol type="1"><li>被击中用户掉血</li><li>被击中用户收到向后击退效果</li></ol><p>碰撞检测写在火球类里，击退效果写在玩家类里</p><p><strong><code>fireball/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (...) &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 碰撞检测</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.playground.players.length; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = <span class="built_in">this</span>.playground.players[i];</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.player !== player &amp;&amp; <span class="built_in">this</span>.is_collision(player)) &#123;  <span class="comment">// 碰撞发生一定是在非施法者身上</span></span><br><span class="line">                <span class="built_in">this</span>.attack(player);    <span class="comment">//火球命中，目标玩家执行击退效果</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">this</span>.render();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_dist</span>(<span class="params">x1, y1, x2, y2</span>)</span> &#123;  <span class="comment">//获得两点的欧几里得距离</span></span><br><span class="line">        <span class="keyword">let</span> dx = x2 - x1;</span><br><span class="line">        <span class="keyword">let</span> dy = y2 - y1;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(dx * dx + dy * dy);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="title">is_collision</span>(<span class="params">player</span>)</span> &#123;  <span class="comment">//检测两个圆的中心距离是否小于两个圆的半径之和</span></span><br><span class="line">    <span class="keyword">let</span> distance = <span class="built_in">this</span>.get_dist(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, player.x, player.y);</span><br><span class="line">    <span class="keyword">if</span> (distance &lt; (<span class="built_in">this</span>.radius + player.radius))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">attack</span>(<span class="params">player</span>)</span> &#123;    <span class="comment">//火球命中，目标玩家执行击退效果</span></span><br><span class="line">    <span class="keyword">let</span> angle = <span class="built_in">Math</span>.atan2(player.y - <span class="built_in">this</span>.y, player.x - <span class="built_in">this</span>.x);   <span class="comment">//计算角度</span></span><br><span class="line">    player.is_attacked(angle, <span class="built_in">this</span>.damage); <span class="comment">//火球命中，目标玩家执行击退效果</span></span><br><span class="line">    <span class="built_in">this</span>.destroy(); <span class="comment">//火球命中后，自然消失</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写击退效果时，有几个细节要注意</p><p>被击退的时候，原来的移动速度应该置为 0，当前的移动应该转为向被击中方向上的移动</p><p><strong><code>player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">is_attacked</span>(<span class="params">angle, damage</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.radius -= damage;  <span class="comment">//受伤，半径减少</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.radius &lt; <span class="number">10</span>) &#123; <span class="comment">//当半径小于10像素时，代表死亡</span></span><br><span class="line">        <span class="built_in">this</span>.destroy();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//开始执行击退效果</span></span><br><span class="line">    <span class="built_in">this</span>.damage_vx = <span class="built_in">Math</span>.cos(angle);</span><br><span class="line">    <span class="built_in">this</span>.damage_vy = <span class="built_in">Math</span>.sin(angle);</span><br><span class="line">    <span class="built_in">this</span>.damage_speed = damage * <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.speed *= <span class="number">0.5</span>;  <span class="comment">//被击中以后移动速度减半</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.damage_speed &gt; <span class="built_in">this</span>.eps) &#123;   <span class="comment">//当前仍处于击退效果中</span></span><br><span class="line">        <span class="built_in">this</span>.vx = <span class="built_in">this</span>.vy = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.move_length = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">this</span>.x += <span class="built_in">this</span>.damage_vx * <span class="built_in">this</span>.damage_speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">this</span>.y += <span class="built_in">this</span>.damage_vy * <span class="built_in">this</span>.damage_speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">this</span>.damage_speed *= <span class="built_in">this</span>.friction; <span class="comment">// 击退速度乘以摩擦系数，已达到削减的目的</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="被击中以后的粒子效果特效">被击中以后的粒子效果特效</h2><p>实现逻辑：被击中以后，在玩家附近随机生成一些粒子小球</p><p>因此我们要先实现 <strong>粒子小球</strong> 对象</p><p><strong><code>static/js/src/playground/particle/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Particle</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground, x, y, radius, vx, vy, color, speed</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.playground.game_map.ctx;</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.radius = radius;</span><br><span class="line">        <span class="built_in">this</span>.vx = vx;</span><br><span class="line">        <span class="built_in">this</span>.vy = vy;</span><br><span class="line">        <span class="built_in">this</span>.color = color;</span><br><span class="line">        <span class="built_in">this</span>.speed = speed;</span><br><span class="line">        <span class="built_in">this</span>.friction = <span class="number">0.9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.speed &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">            <span class="built_in">this</span>.destroy;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.x += <span class="built_in">this</span>.vx * <span class="built_in">this</span>.speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">this</span>.y += <span class="built_in">this</span>.vy * <span class="built_in">this</span>.speed * <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">this</span>.speed *= <span class="built_in">this</span>.friction;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>然后我们在被击退功能模块，实现生成粒子小球的效果</p><ul><li>粒子小球释放弧度为 <span class="math inline">\([0, 2 \pi)\)</span> 的随机数<ul><li>粒子小球的 x, y 分量比率根据弧度来设定</li></ul></li><li>粒子小球的起始坐标应与玩家的坐标相同</li><li>粒子小球的颜色与玩家颜色相同</li><li>粒子小球的速度为玩家移动速度的 <span class="math inline">\(10\)</span> 倍</li></ul><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">is_attacked</span>(<span class="params">angle, damage</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 粒子小球效果</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> + <span class="built_in">Math</span>.random() * <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="built_in">this</span>.x, y = <span class="built_in">this</span>.y;</span><br><span class="line">        <span class="keyword">let</span> radius = <span class="built_in">this</span>.radius * <span class="built_in">Math</span>.random() * <span class="number">0.1</span>;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="number">2</span> * <span class="built_in">Math</span>.PI * <span class="built_in">Math</span>.random();</span><br><span class="line">        <span class="keyword">let</span> vx = <span class="built_in">Math</span>.cos(angle), vy = <span class="built_in">Math</span>.sin(angle);</span><br><span class="line">        <span class="keyword">let</span> color = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="keyword">let</span> speed = <span class="built_in">this</span>.speed * <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">new</span> Particle(<span class="built_in">this</span>.playground, x, y, radius, vx, vy, color, speed);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="一些小优化">一些小优化</h2><h3 id="人机随机颜色">人机随机颜色</h3><p><strong><code>js/src/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    <span class="comment">//创建好 5 个人机</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">        <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span>, <span class="built_in">this</span>.height / <span class="number">2</span>, <span class="built_in">this</span>.height * <span class="number">0.05</span>, <span class="built_in">this</span>.get_random_color(), <span class="built_in">this</span>.height * <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">get_random_color</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> colors = [<span class="string">&quot;blue&quot;</span>, <span class="string">&quot;red&quot;</span>, <span class="string">&quot;pink&quot;</span>, <span class="string">&quot;grey&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">    <span class="keyword">return</span> colors[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">5</span>)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="人机ai随机攻击操作">人机AI随机攻击操作</h3><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">constructor</span> (<span class="params">...</span>) &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.spent_time = <span class="number">0</span>;    <span class="comment">// 初始人机冷却攻击时间</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.spent_time += <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">this</span>.is_me &amp;&amp; <span class="built_in">this</span>.spent_time &gt; <span class="number">4</span> &amp;&amp; <span class="built_in">Math</span>.random() * <span class="number">180</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="built_in">this</span>.playground.players[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.players.length)];</span><br><span class="line">        <span class="built_in">this</span>.shoot_fireball(player.x, player.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="部署nginx与对接acapp-ஐ">部署nginx与对接acapp ஐ</h1><h2 id="增加容器的映射端口-80-与-443">增加容器的映射端口 : 80 与 443</h2><blockquote><p>给运行中的容器，开通端口，是一件非常麻烦的事情 一个比较好的解决方案 : 先把容器保存成镜像，再删掉容器，然后用镜像生成新的容器，同时打开需要的端口</p></blockquote><p>第一步，登录容器，关闭所有运行中的任务</p><p>第二步，登录运行容器的服务器，然后执行 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker commit CONTAINER_NAME django_lesson:1.1  <span class="comment"># 将容器保存成镜像，将CONTAINER_NAME替换成容器名称</span></span><br><span class="line">docker stop CONTAINER_NAME  <span class="comment"># 关闭容器</span></span><br><span class="line">docker rm CONTAINER_NAME <span class="comment"># 删除容器</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用保存的镜像重新创建容器</span></span><br><span class="line"></span><br><span class="line">docker run -p 20000:22 -p 8000:8000 -p 80:80 -p 443:443 --name CONTAINER_NAME -itd django_lesson:1.1</span><br></pre></td></tr></table></figure><p>第三步，去云服务器控制台，在安全组配置中开放80和443端口。</p><h2 id="创建acapp获取域名nginx配置文件及https证书">创建AcApp，获取域名、nginx配置文件及https证书</h2><p>打开 <strong>AcWing应用中心</strong> ，点击 “<strong>创建应用</strong>” 的按钮</p><p>系统分配的域名、nginx配置文件及https证书在如下位置 :</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/12/1_7dff276143-QQ%E5%9B%BE%E7%89%8720211112144041.png" /></p><p>在 <code>服务器IP</code> 一栏填入自己服务器的ip地址。</p><p>将 <code>nginx.conf</code> 中的内容写入服务器 <code>/etc/nginx/nginx.conf</code> 文件中。如果 <code>django</code> 项目路径与配置文件中不同，注意修改路径。 将 <code>acapp.key</code> 中的内容写入服务器 <code>/etc/nginx/cert/acapp.key</code> 文件中。 将 <code>acapp.pem</code> 中的内容写入服务器<code>/etc/nginx/cert/acapp.pem</code> 文件中。</p><p>然后启动nginx服务 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx start</span><br><span class="line">&gt;  * Starting nginx nginx                              [ OK ]</span><br></pre></td></tr></table></figure><h2 id="修改django项目的配置">修改django项目的配置</h2><p>打开 <code>settings.py</code> 文件 :</p><ul><li>将分配的域名添加到 <code>ALLOWED_HOSTS</code> 列表中 (注意只需要添加 <code>https://</code> 后面的部分)</li><li>令 <code>DEBUG = False</code></li></ul><p>归档 <code>static</code> 文件 :</p><ul><li><code>python3 manage.py collectstatic</code></li></ul><blockquote><p>归档的目的是让 <code>static</code> 文件夹复制到 <code>BASIC_DIR</code> 下（之前在全局配置里改过的）</p></blockquote><h2 id="配置uwsgi">配置uwsgi</h2><blockquote><p>原来访问我们的 <code>Django</code> 项目，要通过访问网站的 <code>8000</code> 端口 配置好 <code>uwsgi</code>后，就可以直接通过 <code>nginx</code> 直接访问域名即可</p></blockquote><p>在 <code>django</code> 项目中添加uwsgi的配置文件 : <code>scripts/uwsgi.ini</code> ，内容如下 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">socket          = 127.0.0.1:8000</span><br><span class="line"><span class="built_in">chdir</span>           = /home/acs/acapp</span><br><span class="line">wsgi-file       = acapp/wsgi.py</span><br><span class="line">master          = <span class="literal">true</span></span><br><span class="line">processes       = 2</span><br><span class="line">threads         = 5</span><br><span class="line">vacuum          = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>启动 <code>uwsgi</code> 服务 :</p><p>要事先关闭原来开启的 <code>django</code> 项目，然后再用 <code>uwsgi</code> 命令启动 <code>django</code> 项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ uwsgi --ini scripts/uwsgi.ini</span><br></pre></td></tr></table></figure><h2 id="使分配的域名生效">使分配的域名生效</h2><p>填写完服务器 <code>IP</code> 之后，点 “<strong>保存</strong>” 或者 “<strong>提交</strong>” 按钮，均可使分配的域名生效</p><p>提交后点”打开应用”按钮，即可预览自己所写的应用</p><h2 id="发布应用">发布应用</h2><p>等项目调试完之后，可以申请发布应用。审核通过后，你的acapp应用就可以与大家见面啦！</p><h2 id="针对-acapp-的优化">针对 acapp 的优化</h2><h3 id="打包脚本优化">打包脚本优化</h3><p>由于现在 <strong>发布版本的脚本文件</strong> 用的是打包在根目录里的 <strong>static</strong> 文件夹</p><p>每次修改好 <strong>static</strong> 文件夹后，不太需要对 <strong>js</strong> 文件打包，还需要对 <strong>static</strong> 文件夹打包</p><p>不放把 "将static文件夹打包" 的 <strong>shell</strong> 代码一起加入 <strong>js</strong> 打包脚本中，从而实现一键打包</p><p><strong><code>scripts/compress_game_js.sh</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">JS_PATH=/home/acs/acapp/game/static/js/</span><br><span class="line">JS_PATH_DIST=<span class="variable">$&#123;JS_PATH&#125;</span>dist/</span><br><span class="line">JS_PATH_SRC=<span class="variable">$&#123;JS_PATH&#125;</span>src/</span><br><span class="line"></span><br><span class="line">find <span class="variable">$JS_PATH_SRC</span> -<span class="built_in">type</span> f -name <span class="string">&#x27;*.js&#x27;</span> | sort | xargs cat &gt; <span class="variable">$&#123;JS_PATH_DIST&#125;</span>game.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> | python3 manage.py collectstatic</span><br></pre></td></tr></table></figure><h3 id="鼠标点击事件的相对偏移">鼠标点击事件的相对偏移</h3><p>由于写游戏界面的时候，玩家移动是按照鼠标相对于当前整个浏览器取的位置参数 <code>e.clientX</code></p><p>而 <code>acapp</code> 里，每个应用是一个小窗口，鼠标点击位置的参数应当是 相对于整个游戏窗口的位置参数</p><p>所有会导致出现，点击的位置与移动的位置不同，这里需要做出小优化</p><p>优化的逻辑 :</p><ol type="1"><li><span class="math inline">\(clientX - \text{窗口左侧到浏览器左侧的距离} = \text{玩家的目标} X\)</span></li><li><span class="math inline">\(clientY - \text{窗口上侧到浏览器上侧的距离} = \text{玩家的目标} Y\)</span></li></ol><p>这就要用到一个 <code>js</code> 的 <code>API</code> 了 : <code>getBoundingClientRect()</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">rectObject = object.getBoundingClientRect();</span><br><span class="line"> </span><br><span class="line">rectObject.top : 元素上边到视窗上边的距离;</span><br><span class="line">rectObject.right : 元素右边到视窗左边的距离;</span><br><span class="line">rectObject.bottom : 元素下边到视窗上边的距离;</span><br><span class="line">rectObject.left : 元素左边到视窗左边的距离;</span><br><span class="line">rectObject.width : 是元素自身的宽</span><br><span class="line">rectObject.height : 是元素自身的高</span><br></pre></td></tr></table></figure><p><strong><code>player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//创建 rect 对象</span></span><br><span class="line">        <span class="keyword">const</span> rect = outer.ctx.canvas.getBoundingClientRect();</span><br><span class="line">        <span class="keyword">if</span> (e.which === <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">//调整偏移量</span></span><br><span class="line">            outer.move_to(e.clientX - rect.left, e.clientY - rect.top);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;fireball&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">//调整偏移量</span></span><br><span class="line">                outer.shoot_fireball(e.clientX - rect.left, e.clientY - rect.top);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="将菜单界面重新设为主界面">将菜单界面重新设为主界面</h3><p><strong><code>js/zbase.js</code></strong> 的注释取消，使之创建出 <strong>menu</strong> 对象</p><p><strong><code>js/playground/zbase.js</code></strong> 的注释取消，并设置逻辑，让 <strong>playground</strong> 打开后，才进行游戏界面初始化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.$playground = $(<span class="string">`&lt;div class=&quot;ac-game-playground&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.hide();    <span class="comment">//初始时隐藏</span></span><br><span class="line">        <span class="comment">// 游戏界面生成代码在下面展示 playground 时执行</span></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        <span class="built_in">this</span>.$playground.show();</span><br><span class="line">        <span class="comment">//开始生成游戏界面</span></span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$playground);</span><br><span class="line">        <span class="built_in">this</span>.width = <span class="built_in">this</span>.$playground.width();</span><br><span class="line">        <span class="built_in">this</span>.height = <span class="built_in">this</span>.$playground.height();</span><br><span class="line">        <span class="built_in">this</span>.game_map = <span class="keyword">new</span> GameMap(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.players = [];  <span class="comment">// 存放当前游戏中的所有玩家</span></span><br><span class="line">        <span class="comment">//将玩家加入游戏中</span></span><br><span class="line">        <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span>, <span class="built_in">this</span>.height / <span class="number">2</span>, <span class="built_in">this</span>.height * <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="built_in">this</span>.height * <span class="number">0.15</span>, <span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建好 5 个人机</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">            <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span>, <span class="built_in">this</span>.height / <span class="number">2</span>, <span class="built_in">this</span>.height * <span class="number">0.05</span>, <span class="built_in">this</span>.get_random_color(), <span class="built_in">this</span>.height * <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调整-css-文件适应窗口">调整 css 文件，适应窗口</h2><p>在设置 web 网页的时候，有些设置了绝对值，可能对于窗口化的 acapp 显示效果差</p><p>将他们修改成相对数值</p><p><strong><code>game.css</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">.ac-game-menu-field &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">top</span>: <span class="number">40</span>%;</span><br><span class="line">    left: <span class="number">20</span>%;</span><br><span class="line">&#125;</span><br><span class="line">.ac-game-menu-field-item &#123;</span><br><span class="line">    <span class="attr">height</span>: 6vh;</span><br><span class="line">    ...</span><br><span class="line">    font-size: 4vh;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="用户系统-ஐ">用户系统 ஐ</h1><h2 id="前期准备工作">前期准备工作</h2><p>做开发，先开启调试模式，如果不开启，服务器一旦运行错误，就只返回 <code>Error</code> 报错</p><p><strong><code>settings.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后创建一个超级用户，方便进入到后台管理 <code>admin</code> 页面</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py createsuperuser</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后登陆到管理员页面：<code>http://xxxxx/admin/</code></p><p>不过 <code>django</code> 自带的 <code>User</code> 表并不能满足我们的需求，因此我们需要自己额外建表</p><h2 id="创建用户表">创建用户表</h2><p>所有的数据表都存在 <code>models</code> 里</p><p>我们在 <code>models</code> 里创建一个 <code>player</code> 文件夹，用于存储所有的 <code>player</code> 相关的表</p><p>然后对文件夹初始化 <code>__init__.py</code>，接着扩充成一个我们需要的数据表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> models</span><br><span class="line">$ mkdir player</span><br><span class="line">$ <span class="built_in">cd</span> player</span><br><span class="line">$ touch __init__.py</span><br><span class="line">$ vim player.py</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>(<span class="params">models.Model</span>):</span> <span class="comment"># Player 类继承自 Model 类</span></span><br><span class="line">    user = models.OneToOneField(User, on_delete=models.CASCADE)</span><br><span class="line">    <span class="comment"># 说明Player是从User表扩充过来的，每一个player都与一个user是一一对应关联关系</span></span><br><span class="line">    <span class="comment"># 后一个参数是指，当user被删除后，对应的player也要被删除</span></span><br><span class="line">    <span class="comment"># （感觉就是外键的意思）</span></span><br><span class="line">    photo = models.URLField(max_length=<span class="number">256</span>, blank=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 用于存储用户的头像的url</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 指定每个player数据展示在前台的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(self.user)    <span class="comment"># 展示用户的用户名</span></span><br></pre></td></tr></table></figure><p>将定义的表，注册到后台 <code>admin</code> 页面中</p><p><strong><code>game/admin.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"></span><br><span class="line">admin.site.register(Player)</span><br></pre></td></tr></table></figure><p>然后将创建的数据表更新到 <code>django</code> 的数据库中去</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py makemigrations</span><br><span class="line">&gt; Migrations <span class="keyword">for</span> <span class="string">&#x27;game&#x27;</span>:</span><br><span class="line">&gt;   game/migrations/0001_initial.py</span><br><span class="line">&gt;     - Create model Player</span><br><span class="line">$ </span><br><span class="line">$ python3 manage.py migrate</span><br><span class="line">&gt; Operations to perform:</span><br><span class="line">&gt;   Apply all migrations: admin, auth, contenttypes, game, sessions</span><br><span class="line">&gt; Running migrations:</span><br><span class="line">&gt;   Applying game.0001_initial... OK</span><br></pre></td></tr></table></figure><p>然后重启一下服务，就可以在管理员页面看到新建的数据库了</p><h2 id="实现客户端的类型判别acapp-or-web">实现客户端的类型判别（ACAPP or WEB）</h2><p>由于我们实现的项目是前后端分离类型，因此对于不同的客户端，前端要控制生成不同的页面</p><p>为了增强扩展性，故这里要实现客户端类型的判别</p><p><strong>y总</strong> 已经提前写好了 <strong>ACAPP</strong> 的接口，如果用户用的是 <strong>ACAPP</strong> 访问，则在新建对象 <strong>ac_game</strong> 时，会额外传递一个参数</p><p>我们只需按照这个接口去完成扩充即可</p><blockquote><p>之后写小程序之类的同理，额外传一个接口</p></blockquote><p><strong><code>js/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">id, AcWingOS</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.$ac_game = $(<span class="string">&#x27;#&#x27;</span> + id);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.AcWingOS = AcWingOS;   <span class="comment">//如果是acapp端，该变量就会带着一系列y总提供的接口</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.menu = <span class="keyword">new</span> AcGameMenu(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.playground = <span class="keyword">new</span> AcGamePlayground(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构建登录功能框架">构建登录功能框架</h2><p>基本逻辑 : 用户访问页面 -&gt; 进入登录页面 -&gt; 提交登录信息 -&gt; 核对登录信息 -&gt; 返回登陆结果和其他信息</p><p>每实现一个函数，就需要实现三个部分：</p><ol type="1"><li><code>views</code> : 实现具体的调用数据库的逻辑</li><li><code>urls</code> : 实现一个路由</li><li><code>js</code> : 前端实现GET上述接口的过程</li></ol><p>欲实现流程 : 1. 用户访问网站，通过先前完成的路由，访问到 <code>web.html</code> 2. <code>web.html</code> 中的 <code>js</code> 部分创建了一个 <code>AcGame</code> 对象 3. <code>AcGame</code> 对象创建的过程中，生成了 <code>Settings</code> 对象 4. <code>Settings</code> 对象创建完成后，调用 <code>Settings.start()</code> 函数 5. <code>Settings.start()</code> 函数调用了 <code>Settings.getinfo()</code> 函数 6. <code>Settings.getinfo()</code> 函数中执行了 <code>ajax</code> 向 <code>getinfo</code> 接口发起一个含参数 <code>platform</code> 的 <code>GET</code> 请求 7. 通过 <code>urls</code> 路由的实现，最终定位到 <code>views/settings/getinfo.py</code> 文件的 <code>getinfo(request)</code> 函数 8. 根据传递过来的 <code>platform</code> 函数，实现不同的 <code>JsonResponse</code> 返回 9. <code>Settings.getinfo()</code> 接受到了 <code>response</code> 完成上述基本逻辑</p><h3 id="views">views</h3><p><strong><code>views/settings/getinfo.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getinfo_acapp</span>(<span class="params">request</span>):</span></span><br><span class="line">    player = Player.objects.<span class="built_in">all</span>()[<span class="number">0</span>]    <span class="comment"># 取出数据库中第一个用户(调试该功能)</span></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: player.user.username,</span><br><span class="line">        <span class="string">&#x27;photo&#x27;</span>: player.photo,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getinfo_web</span>(<span class="params">request</span>):</span></span><br><span class="line">    player = Player.objects.<span class="built_in">all</span>()[<span class="number">0</span>]    <span class="comment"># 取出数据库中第一个用户(调试该功能)</span></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: player.user.username,</span><br><span class="line">        <span class="string">&#x27;photo&#x27;</span>: player.photo,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getinfo</span>(<span class="params">request</span>):</span>   <span class="comment"># 处理请求</span></span><br><span class="line">    platform = request.GET.get(<span class="string">&#x27;platform&#x27;</span>)  <span class="comment"># 根据请求的平台不同，进行不同返回处理</span></span><br><span class="line">    <span class="keyword">if</span> platform == <span class="string">&quot;ACAPP&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> getinfo_acapp(request)</span><br><span class="line">    <span class="keyword">elif</span> platform == <span class="string">&quot;WEB&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> getinfo_web(request)</span><br></pre></td></tr></table></figure><h3 id="urls">urls</h3><p><strong><code>urls/settings/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.getinfo <span class="keyword">import</span> getinfo</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;getinfo/&quot;</span>, getinfo, name=<span class="string">&quot;settings_getinfo&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>路由建立好以后，访问 <code>xxxx/settings/getinfo</code>，可以看到 <code>getinfo.py</code> 返回的 <code>JSON</code> 类型的 <code>JSONResponse</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;result&quot;: &quot;success&quot;, &quot;username&quot;: &quot;zxc&quot;, &quot;photo&quot;: &quot;https://cdn.acwing.com/media/user/profile/photo/55909_lg_c33d84c566.jpeg&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="js">js</h3><p>网页刚访问时，应先将 <strong>menu</strong> 关闭，然后打开登录界面，随意先修改一个让 <strong>menu</strong> 初始关闭</p><p><strong><code>static/js/src/menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameMenu</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$menu.hide();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p><strong><code>static/js/src/settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.root = root;</span><br><span class="line">        <span class="built_in">this</span>.platform = <span class="string">&quot;WEB&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.root.AcWingOS == <span class="string">&quot;ACAPP&quot;</span>) <span class="built_in">this</span>.platform = <span class="string">&quot;ACAPP&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.getinfo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">register</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//打开注册界面</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">login</span>(<span class="params"></span>)</span> &#123;       <span class="comment">//打开登录界面</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getinfo</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/getinfo/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">platform</span>: outer.platform,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(resp);</span><br><span class="line">                <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;    <span class="comment">//登录成功，关闭登录界面，打开主菜单</span></span><br><span class="line">                    outer.hide();</span><br><span class="line">                    outer.root.menu.show();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    outer.login();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hide</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后不要忘记在 <code>根js</code> 下创建对象</p><p><strong><code>static/js/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">AcGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">id, AcWingOS</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.settings = <span class="keyword">new</span> Settings(<span class="built_in">this</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样基本框架就完成了</p><h3 id="完善-http-请求的函数">完善 <code>HTTP</code> 请求的函数</h3><p>如果用户未登录，返回信息 "not login"；如果用户登录，返回信息 "success" 以及用户名和头像</p><p><strong><code>views/setting/getinfo.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getinfo_web</span>(<span class="params">request</span>):</span></span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated:   <span class="comment"># 未登录</span></span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;not login&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">else</span>:                           <span class="comment"># 已登录</span></span><br><span class="line">        player = Player.objects.get(user=user)</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: player.user.username,</span><br><span class="line">            <span class="string">&#x27;photo&#x27;</span>: player.photo,</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><p>注意前后台是一个登录系统，因此要先退掉后台，再测试</p><h2 id="将用户头像渲染到玩家上">将用户头像渲染到玩家上</h2><p>将返回的 <code>JsonResponse</code> 存到 <code>Settings</code> 类的变量中</p><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.username = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.photo = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">getinfo</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                ...</span><br><span class="line">                <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    outer.username = resp.username;</span><br><span class="line">                    outer.photo = resp.photo;</span><br><span class="line">                    ...</span><br><span class="line">                &#125;</span><br><span class="line">                ..</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在 <code>Player</code> 里把用户的头像渲染到对应的玩家上</p><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.img = <span class="keyword">new</span> Image();</span><br><span class="line">        <span class="built_in">this</span>.img.src = <span class="built_in">this</span>.playground.root.settings.photo;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.is_me) &#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.save();</span><br><span class="line">            <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.radius, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">            <span class="built_in">this</span>.ctx.stroke();</span><br><span class="line">            <span class="built_in">this</span>.ctx.clip();</span><br><span class="line">            <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.img, <span class="built_in">this</span>.x - <span class="built_in">this</span>.radius, <span class="built_in">this</span>.y - <span class="built_in">this</span>.radius, </span><br><span class="line">                               <span class="built_in">this</span>.radius * <span class="number">2</span>, <span class="built_in">this</span>.radius * <span class="number">2</span>);</span><br><span class="line">            <span class="built_in">this</span>.ctx.restore();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, <span class="built_in">this</span>.radius, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">            <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">            <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现登录界面的前端">实现登录界面的前端</h2><p>先完成登录界面显示的逻辑</p><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">register</span>(<span class="params"></span>)</span> &#123;  <span class="comment">// 打开注册界面</span></span><br><span class="line">        <span class="built_in">this</span>.$login.hide();</span><br><span class="line">        <span class="built_in">this</span>.$register.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">login</span>(<span class="params"></span>)</span> &#123;  <span class="comment">// 打开登录界面</span></span><br><span class="line">        <span class="built_in">this</span>.$register.hide();</span><br><span class="line">        <span class="built_in">this</span>.$login.show();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">hide</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$settings.hide();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$settings.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现前端的基础框架">实现前端的基础框架</h3><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$settings = $(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class=&quot;ac-game-settings&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-settings-login&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-title&quot;&gt;</span></span><br><span class="line"><span class="string">            登录</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-username&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-submit&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;button&gt;登录&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-error-message&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-option&quot;&gt;</span></span><br><span class="line"><span class="string">            注册</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-acwing&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img width=&quot;30&quot; src=&quot;https://app165.acapp.acwing.com.cn/static/image/settings/acwing_logo.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                AcWing一键登录</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div class=&quot;ac-game-settings-register&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-title&quot;&gt;</span></span><br><span class="line"><span class="string">            注册</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-username&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password ac-game-settings-password-first&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-password ac-game-settings-password-second&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;input type=&quot;password&quot; placeholder=&quot;确认密码&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-submit&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;ac-game-settings-item&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;button&gt;注册&lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-error-message&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-option&quot;&gt;</span></span><br><span class="line"><span class="string">            登录</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;ac-game-settings-acwing&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;img width=&quot;30&quot; src=&quot;https://app165.acapp.acwing.com.cn/static/image/settings/acwing_logo.png&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;br&gt;</span></span><br><span class="line"><span class="string">            &lt;div&gt;</span></span><br><span class="line"><span class="string">                AcWing一键登录</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login = <span class="built_in">this</span>.$settings.find(<span class="string">&quot;.ac-game-settings-login&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login_username = <span class="built_in">this</span>.$login.find(<span class="string">&quot;.ac-game-settings-username input&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login_password = <span class="built_in">this</span>.$login.find(<span class="string">&quot;.ac-game-settings-password input&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login_submit = <span class="built_in">this</span>.$login.find(<span class="string">&quot;.ac-game-settings-submit button&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login_error_message = <span class="built_in">this</span>.$login.find(<span class="string">&quot;.ac-game-settings-error-message&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$login_register = <span class="built_in">this</span>.$login.find(<span class="string">&quot;.ac-game-settings-option&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">this</span>.$login.hide();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.$register = <span class="built_in">this</span>.$settings.find(<span class="string">&quot;.ac-game-settings-register&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_username = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-username input&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_password = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-password-first input&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_password_confirm = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-password-second input&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_submit = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-submit button&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_error_message = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-error-message&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.$register_login = <span class="built_in">this</span>.$register.find(<span class="string">&quot;.ac-game-settings-option&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.$register.hide();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$settings);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应的 <strong>css</strong> 文件部分：</p><p><strong><code>css/game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ac-game-settings</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;/static/image/menu/background.gif&quot;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-login</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">41vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-title</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">3vh</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">2vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-username</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-password</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-submit</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-acwing</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">7vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-item</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-item</span> &gt; <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">3vh</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-item</span> &gt; <span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">3vh</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#4CAF50</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-error-message</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0.8vh</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">1vw</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-option</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">1vw</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-acwing</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-acwing</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5vh</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-settings-register</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">49vh</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.7</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现登录注册的相互切换">实现登录/注册的相互切换</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.getinfo();</span><br><span class="line">        <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.add_listening_events_login();</span><br><span class="line">        <span class="built_in">this</span>.add_listening_events_register();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events_login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.$login_register.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.register();   <span class="comment">//跳到注册界面</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events_register</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.$register_login.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.login();      <span class="comment">//跳到登录界面</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现登录功能">实现登录功能</h2><p><strong><code>views/settings/login.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> authenticate, login</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signin</span>(<span class="params">request</span>):</span></span><br><span class="line">    data = request.GET</span><br><span class="line">    username = data.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    password = data.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    user = authenticate(username=username, password=password)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名或密码不正确&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    login(request, user)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong><code>urls/settings/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.getinfo <span class="keyword">import</span> getinfo</span><br><span class="line"><span class="keyword">from</span> game.views.settings.login <span class="keyword">import</span> signin</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;getinfo/&quot;</span>, getinfo, name=<span class="string">&quot;settings_getinfo&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;login/&quot;</span>, signin, name=<span class="string">&quot;settings_login&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events_login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$login_submit.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.login_on_remote();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">login_on_remote</span>(<span class="params"></span>)</span> &#123;     <span class="comment">//在远程服务器上登录</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> username = <span class="built_in">this</span>.$login_username.val();</span><br><span class="line">        <span class="keyword">let</span> password = <span class="built_in">this</span>.$login_password.val();</span><br><span class="line">        <span class="built_in">this</span>.$login_error_message.empty();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/login/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">username</span>: username,</span><br><span class="line">                <span class="attr">password</span>: password,</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(resp);</span><br><span class="line">                <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    location.reload();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    outer.$login_error_message.html(resp.result);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现登出功能">实现登出功能</h2><p><strong><code>views/settings/logout.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> logout</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">signout</span>(<span class="params">request</span>):</span></span><br><span class="line">    user = request.user</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> user.is_authenticated:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    logout(request)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong><code>urls/settings/index.py</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">from</span> game.views.settings.logout <span class="keyword">import</span> signout</span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    path(<span class="string">&quot;logout/&quot;</span>, signout, name=<span class="string">&quot;settings_logout&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="title">login_on_remote</span>(<span class="params"></span>)</span> &#123;     <span class="comment">//在远程服务器上登录</span></span><br><span class="line">    <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">let</span> username = <span class="built_in">this</span>.$login_username.val();</span><br><span class="line">    <span class="keyword">let</span> password = <span class="built_in">this</span>.$login_password.val();</span><br><span class="line">    <span class="built_in">this</span>.$login_error_message.empty();</span><br><span class="line"></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/login/&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="attr">username</span>: username,</span><br><span class="line">            <span class="attr">password</span>: password,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(resp);</span><br><span class="line">            <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                location.reload();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                outer.$login_error_message.html(resp.result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>再顺便将 <strong>menu</strong> 菜单页面里的 <code>设置</code> 按钮也绑定上登出功能</p><p><strong><code>menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.$settings_mode.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        outer.root.settings.logout_on_remote();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现注册功能">实现注册功能</h2><p><strong><code>views/settings/logout.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>(<span class="params">request</span>):</span></span><br><span class="line">    data = request.GET</span><br><span class="line">    username = data.get(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;&quot;</span>).strip()</span><br><span class="line">    password = data.get(<span class="string">&quot;password&quot;</span>, <span class="string">&quot;&quot;</span>).strip()</span><br><span class="line">    password_confirm = data.get(<span class="string">&quot;password_confirm&quot;</span>, <span class="string">&quot;&quot;</span>).strip()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> username <span class="keyword">or</span> <span class="keyword">not</span> password:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名或密码不能为空&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">if</span> password != password_confirm:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;两个密码不一致&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="keyword">if</span> User.objects.<span class="built_in">filter</span>(username=username).exists():</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;用户名已存在&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    user = User(username=username)</span><br><span class="line">    user.set_password(password)</span><br><span class="line">    user.save()</span><br><span class="line">    Player.objects.create(user=user, photo=<span class="string">&quot;https://cdn.acwing.com/media/user/profile/photo/42832_lg_f999efc3c8.png&quot;</span>)</span><br><span class="line">    login(request, user)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong><code>urls/settings/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">from</span> game.views.settings.register <span class="keyword">import</span> register</span><br><span class="line">...</span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    path(<span class="string">&quot;register/&quot;</span>, register, name=<span class="string">&quot;settings_register&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong><code>settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="function"><span class="title">add_listening_events_register</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">this</span>.$register_submit.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        outer.register_on_remote();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="title">register_on_remote</span>(<span class="params"></span>)</span> &#123;  <span class="comment">//在远程服务器上注册</span></span><br><span class="line">    <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">let</span> username = <span class="built_in">this</span>.$register_username.val();</span><br><span class="line">    <span class="keyword">let</span> password = <span class="built_in">this</span>.$register_password.val();</span><br><span class="line">    <span class="keyword">let</span> password_confirm = <span class="built_in">this</span>.$register_password_confirm.val();</span><br><span class="line">    <span class="built_in">this</span>.$register_error_message.empty();</span><br><span class="line"></span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/register/&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="attr">username</span>: username,</span><br><span class="line">            <span class="attr">password</span>: password,</span><br><span class="line">            <span class="attr">password_confirm</span>: password_confirm,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(resp);</span><br><span class="line">            <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                location.reload();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                outer.$register_error_message.html(resp.result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>成功实现注册功能，完美 w ~</p><h1 id="web端acwing一键登录-ஐ">web端AcWing一键登录 ஐ</h1><p>业务流程如下所示：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/25/1_1ddf070e4d-weboauth2.png" /></p><h2 id="在django中集成redis">在Django中集成Redis</h2><p><strong>1. 安装 <code>django_redis</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django_redis</span><br></pre></td></tr></table></figure><p><strong>2. 配置 <code>settings.py</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CACHES = &#123; </span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django_redis.cache.RedisCache&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;LOCATION&#x27;</span>: <span class="string">&#x27;redis://127.0.0.1:6379/1&#x27;</span>,</span><br><span class="line">        <span class="string">&quot;OPTIONS&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;CLIENT_CLASS&quot;</span>: <span class="string">&quot;django_redis.client.DefaultClient&quot;</span>,</span><br><span class="line">        &#125;,  </span><br><span class="line">    &#125;,  </span><br><span class="line">&#125;</span><br><span class="line">USER_AGENTS_CACHE = <span class="string">&#x27;default&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>3. 启动 <code>redis-server</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo redis-server /etc/redis/redis.conf</span><br></pre></td></tr></table></figure><h3 id="在-django-后台里操纵-reids">在 <code>django</code> 后台里操纵 <code>reids</code></h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py shell<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [1]: from django.core.cache import cache # 引入redis</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [2]: cache.keys(&#x27;</span>*<span class="string">&#x27;)                     # 查询redis里所有的关键字</span></span><br><span class="line"><span class="string">Out[2]: []</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [3]: cache.set(&#x27;</span>yxc<span class="string">&#x27;, 1, 5)              # 插入一个key-val，存在 5 s</span></span><br><span class="line"><span class="string">Out[3]: True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [4]: cache.keys(&#x27;</span>*<span class="string">&#x27;)                     # 查询redis里所有的关键字</span></span><br><span class="line"><span class="string">Out[4]: [&#x27;</span>yxc<span class="string">&#x27;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [5]: cache.set(&#x27;</span>yxc<span class="string">&#x27;, 2, None)           # 插入一个key-val，不会过期</span></span><br><span class="line"><span class="string">Out[5]: True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [6]: cache.set(&#x27;</span>abc<span class="string">&#x27;, 3, None)</span></span><br><span class="line"><span class="string">Out[6]: True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [7]: cache.keys(&#x27;</span>y*<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[7]: [&#x27;</span>yxc<span class="string">&#x27;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [8]: cache.has_key(&#x27;</span>abc<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[8]: True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [9]: cache.has_key(&#x27;</span>abcd<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[9]: False</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [10]: cache.get(&#x27;</span>yxc<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[10]: 2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [11]: cache.delete(&#x27;</span>yxc<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[11]: True</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [12]: cache.keys(&#x27;</span>*<span class="string">&#x27;)</span></span><br><span class="line"><span class="string">Out[12]: [&#x27;</span>abc<span class="string">&#x27;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In [13]:</span></span><br></pre></td></tr></table></figure><h2 id="扩充player表">扩充Player表</h2><p>为了实现一键登录，需要额外存储一个 <code>openid</code> 来标识每一个 <code>Player</code> 绑定的 <code>AcWing</code> 账号</p><p><strong><code>models/player.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    openid = models.CharField(default=<span class="string">&quot;&quot;</span>, max_length=<span class="number">256</span>, blank=<span class="literal">True</span>, null=<span class="literal">True</span>)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>然后更新数据库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python3 manage.py makemigrations</span><br><span class="line">$ python3 manage.py migrate</span><br></pre></td></tr></table></figure><h2 id="申请授权码code">申请授权码code</h2><p>请求地址：<code>https://www.acwing.com/third_party/api/oauth2/web/authorize/</code></p><p>参考示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求方法：GET</span><br><span class="line">https://www.acwing.com/third_party/api/oauth2/web/authorize/?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;scope=SCOPE&amp;state=STATE</span><br></pre></td></tr></table></figure><p>参数说明</p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>appid</td><td>是</td><td>应用的唯一id，可以在AcWing编辑AcApp的界面里看到</td></tr><tr class="even"><td>redirect_uri</td><td>是</td><td>接收授权码的地址。需要用 <code>urllib.parse.quote</code> 对链接进行处理</td></tr><tr class="odd"><td>scope</td><td>是</td><td>申请授权的范围。目前只需填 <code>userinfo</code></td></tr><tr class="even"><td>state</td><td>否</td><td>用于判断请求和回调的一致性，授权成功后后原样返回。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数</td></tr></tbody></table><p>返回说明</p><p>用户同意授权后会重定向到 <code>redirect_uri</code> ，返回参数为 <code>code</code> 和 <code>state</code> 。 链接格式如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redirect_uri?code=CODE&amp;state=STATE</span><br></pre></td></tr></table></figure><p>如果用户拒绝授权，则不会发生重定向。</p><h3 id="views-1">views</h3><blockquote><p>创建新的 <code>views</code> 和 <code>urls</code> 时不要忘记初始化一个 <code>__init__.py</code> 文件</p></blockquote><p><strong><code>views/settings/acwing/web/apply_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_state</span>():</span>    <span class="comment"># 随机8位数字</span></span><br><span class="line">    ress = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        res += <span class="built_in">str</span>(randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 传递的四个参数</span></span><br><span class="line">    appid = <span class="string">&quot;1117&quot;</span></span><br><span class="line">    redirect_uri = quote(<span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/acwing/web/receive_code/&quot;</span>)</span><br><span class="line">    scope = <span class="string">&quot;userinfo&quot;</span></span><br><span class="line">    state = get_state()</span><br><span class="line"></span><br><span class="line">    cache.<span class="built_in">set</span>(state, <span class="literal">True</span>, <span class="number">7200</span>)    <span class="comment"># 把随机的状态码存入 redis 中，有效期 2 小时</span></span><br><span class="line"></span><br><span class="line">    apply_code_url = <span class="string">&quot;https://www.acwing.com/third_party/api/oauth2/web/authorize/&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;apply_code_url&#x27;</span>: apply_code_url + <span class="string">&quot;?appid=%s&amp;redirect_uri=%s&amp;scope=%s&amp;state=%s&quot;</span> % (appid, redirect_uri, scope, state)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong><code>views/settings/acwing/web/receive_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">receive_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="urls-1">urls</h3><p>创建一个新的文件夹，然后建立路由</p><p><strong><code>urls/settings/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    ...</span><br><span class="line">    path(<span class="string">&quot;acwing/&quot;</span>, include(<span class="string">&quot;game.urls.settings.acwing.index&quot;</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong><code>urls/settings/acwing/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.web.apply_code <span class="keyword">import</span> apply_code</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.web.receive_code <span class="keyword">import</span> receive_code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;web/apply_code/&quot;</span>, apply_code, name=<span class="string">&quot;settings_acwing_web_apply_code&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;web/receive_code/&quot;</span>, receive_code, name=<span class="string">&quot;settings_acwing_web_receive_code&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="js-1">js</h3><p><strong><code>js/settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$acwing_login = <span class="built_in">this</span>.$settings.find(<span class="string">&#x27;.ac-game=settings-acwing img&#x27;</span>); </span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$acwing_login.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.acwing_login();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">acwing_login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/acwing/web/apply_code/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(resp);</span><br><span class="line">                <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    <span class="built_in">window</span>.location.replace(resp.apply_code_url);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="申请授权令牌-access_token-和用户的-openid">申请授权令牌 <code>access_token</code> 和用户的 <code>openid</code></h2><p>请求地址：<code>https://www.acwing.com/third_party/api/oauth2/access_token/</code></p><p>参考示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求方法：GET</span><br><span class="line">https://www.acwing.com/third_party/api/oauth2/access_token/?appid=APPID&amp;secret=APPSECRET&amp;code=CODE</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><table><thead><tr class="header"><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>appid</td><td>是</td><td>应用的唯一id，可以在AcWing编辑AcApp的界面里看到</td></tr><tr class="even"><td>secret</td><td>是</td><td>应用的秘钥，可以在AcWing编辑AcApp的界面里看到</td></tr><tr class="odd"><td>code</td><td>是</td><td>第一步中获取的授权码</td></tr></tbody></table><p><strong>返回说明</strong></p><p>申请成功示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attr">&quot;access_token&quot;</span>: <span class="string">&quot;ACCESS_TOKEN&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;expires_in&quot;</span>: <span class="number">7200</span>, </span><br><span class="line">    <span class="attr">&quot;refresh_token&quot;</span>: <span class="string">&quot;REFRESH_TOKEN&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;openid&quot;</span>: <span class="string">&quot;OPENID&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;scope&quot;</span>: <span class="string">&quot;SCOPE&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>申请失败示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errcode&quot;</span>: <span class="number">40001</span>,</span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;code expired&quot;</span>,  # 授权码过期</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>返回参数说明</strong></p><table><thead><tr class="header"><th>参数</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>access_token</td><td>授权令牌，有效期2小时</td></tr><tr class="even"><td>expires_in</td><td>授权令牌还有多久过期，单位（秒）</td></tr><tr class="odd"><td>refresh_token</td><td>用于刷新access_token的令牌，有效期30天</td></tr><tr class="even"><td>openid</td><td>用户的id。每个AcWing用户在每个acapp中授权的openid是唯一的,可用于识别用户。</td></tr><tr class="odd"><td>scope</td><td>用户授权的范围。目前范围为userinfo，包括用户名、头像</td></tr></tbody></table><p><strong>刷新access_token的有效期</strong></p><p><code>access_token</code> 的有效期为2小时，时间较短。<code>refresh_token</code> 的有效期为30天，可用于刷新 <code>access_token</code>。刷新结果有两种：</p><p>如果 <code>access_token</code> 已过期，则生成一个新的 <code>access_token</code> 。 如果 <code>access_token</code> 未过期，则将当前的 <code>access_token</code> 的有效期延长为2小时。</p><p>参考示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求方法：GET</span><br><span class="line">https://www.acwing.com/third_party/api/oauth2/refresh_token/?appid=APPID&amp;refresh_token=REFRESH_TOKEN</span><br></pre></td></tr></table></figure><p>返回结果的格式与申请 <code>access_token</code> 相同。</p><h3 id="views-2">views</h3><p><strong><code>views/settings/acwing/web/receive_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">receive_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    data = request.GET</span><br><span class="line">    code = data.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    state = data.get(<span class="string">&#x27;state&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cache.has_key(state):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br><span class="line">    cache.delete(state)</span><br><span class="line"></span><br><span class="line">    apply_access_token_url = <span class="string">&quot;https://www.acwing.com/third_party/api/oauth2/access_token/&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;appid&#x27;</span>: <span class="string">&quot;1117&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;secret&#x27;</span>: <span class="string">&quot;79021fb1f2344bb6a191237ece84d874&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;code&#x27;</span>: code</span><br><span class="line">    &#125;</span><br><span class="line">    access_token_res = requests.get(apply_access_token_url, params=params).json()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(access_token_res)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="申请用户信息">申请用户信息</h2><p>请求地址：<code>https://www.acwing.com/third_party/api/meta/identity/getinfo/</code></p><p>参考示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求方法：GET</span><br><span class="line">https://www.acwing.com/third_party/api/meta/identity/getinfo/?access_token=ACCESS_TOKEN&amp;openid=OPENID</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><table><thead><tr class="header"><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>access_token</td><td>是</td><td>第二步中获取的授权令牌</td></tr><tr class="even"><td>openid</td><td>是</td><td>第二步中获取的用户openid</td></tr></tbody></table><p><strong>返回说明</strong></p><p>申请成功示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;username&#x27;: <span class="string">&quot;USERNAME&quot;</span>,</span><br><span class="line">    &#x27;photo&#x27;: <span class="string">&quot;https:cdn.acwing.com/xxxxx&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>申请失败示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;errcode&#x27;: <span class="string">&quot;40004&quot;</span>,</span><br><span class="line">    &#x27;errmsg&#x27;: <span class="string">&quot;access_token expired&quot;</span>  # 授权令牌过期</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="views-3">views</h3><p><strong><code>views/settings/acwing/web/receive_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">receive_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    data = request.GET</span><br><span class="line">    code = data.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    state = data.get(<span class="string">&#x27;state&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cache.has_key(state):</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br><span class="line">    cache.delete(state)</span><br><span class="line"></span><br><span class="line">    apply_access_token_url = <span class="string">&quot;https://www.acwing.com/third_party/api/oauth2/access_token/&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;appid&#x27;</span>: <span class="string">&quot;1117&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;secret&#x27;</span>: <span class="string">&quot;79021fb1f2344bb6a191237ece84d874&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;code&#x27;</span>: code</span><br><span class="line">    &#125;</span><br><span class="line">    access_token_res = requests.get(apply_access_token_url, params=params).json()</span><br><span class="line"></span><br><span class="line">    access_token = access_token_res[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">    openid = access_token_res[<span class="string">&#x27;openid&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    players = Player.objects.<span class="built_in">filter</span>(openid=openid)</span><br><span class="line">    <span class="keyword">if</span> players.exists():    <span class="comment"># 如果acw账户对应用户已经存在，直接登录</span></span><br><span class="line">        login(request, players[<span class="number">0</span>].user)</span><br><span class="line">        <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br><span class="line"></span><br><span class="line">    get_userinfo_url = <span class="string">&quot;https://www.acwing.com/third_party/api/meta/identity/getinfo/&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;access_token&quot;</span>: access_token,</span><br><span class="line">        <span class="string">&quot;openid&quot;</span>: openid</span><br><span class="line">    &#125;</span><br><span class="line">    userinfo_res = requests.get(get_userinfo_url, params=params).json()</span><br><span class="line">    username = userinfo_res[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">    photo = userinfo_res[<span class="string">&#x27;photo&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> User.objects.<span class="built_in">filter</span>(username=username).exists():  <span class="comment"># 如果重名，额外添加数字填充</span></span><br><span class="line">        username += <span class="built_in">str</span>(randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line"></span><br><span class="line">    user = User.objects.create(username=username)</span><br><span class="line">    player = Player.objects.create(user=user, photo=photo, openid=openid)</span><br><span class="line"></span><br><span class="line">    login(request, user)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&quot;index&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="acapp端acwing一键登录-ஐ">AcApp端AcWing一键登录 ஐ</h1><p>业务流程如下所示：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/25/1_1ddf070e4d-weboauth2.png" /></p><h2 id="申请授权码-code">申请授权码 <code>code</code></h2><p>请求授权码的API：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AcWingOS.api.oauth2.authorize(appid, redirect_uri, scope, state, callback);</span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><table><colgroup><col style="width: 33%" /><col style="width: 33%" /><col style="width: 33%" /></colgroup><thead><tr class="header"><th>参数</th><th>是否必须</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>appid</td><td>是</td><td>应用的唯一id，可以在AcWing编辑AcApp的界面里看到</td></tr><tr class="even"><td>redirect_uri</td><td>是</td><td>接收授权码的地址。需要用 <code>urllib.parse.quote</code> 对链接进行处理。</td></tr><tr class="odd"><td>scope</td><td>是</td><td>申请授权的范围。目前只需填userinfo</td></tr><tr class="even"><td>state</td><td>是</td><td>用于判断请求和回调的一致性，授权成功后后原样返回。该参数可用于防止csrf攻击（跨站请求伪造攻击），建议第三方带上该参数，可设置为简单的随机数</td></tr><tr class="odd"><td>callback</td><td>是</td><td>redirect_uri返回后的回调函数</td></tr></tbody></table><p><strong>返回说明</strong></p><p>用户同意授权后，会将 <code>code</code> 和 <code>state</code> 传递给 <code>redirect_uri</code></p><p>如果用户拒绝授权，则将会收到如下错误码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    errcode: <span class="string">&quot;40010&quot;</span></span><br><span class="line">    errmsg: <span class="string">&quot;user reject&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>申请授权令牌 <code>access_token</code> 和用户的 <code>openid</code> 以及 申请用户信息 都与先前 web 端一键登录相同</p></blockquote><h3 id="views-4">views</h3><blockquote><p>创建新的 <code>views</code> 和 <code>urls</code> 时不要忘记初始化一个 <code>__init__.py</code> 文件</p></blockquote><p><strong><code>views/settings/acwing/acapp/apply_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_state</span>():</span>    <span class="comment"># 随机8位数字</span></span><br><span class="line">    res = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">        res += <span class="built_in">str</span>(randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">apply_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="comment"># 传递的四个参数</span></span><br><span class="line">    appid = <span class="string">&quot;1117&quot;</span></span><br><span class="line">    redirect_uri = quote(<span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/acwing/web/receive_code/&quot;</span>)</span><br><span class="line">    scope = <span class="string">&quot;userinfo&quot;</span></span><br><span class="line">    state = get_state()</span><br><span class="line"></span><br><span class="line">    cache.<span class="built_in">set</span>(state, <span class="literal">True</span>, <span class="number">7200</span>)    <span class="comment"># 把随机的状态码存入 redis 中，有效期 2 小时</span></span><br><span class="line"></span><br><span class="line">    apply_code_url = <span class="string">&quot;https://www.acwing.com/third_party/api/oauth2/web/authorize/&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;   <span class="comment"># 此处与先前不同</span></span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;appid&#x27;</span>: appid,</span><br><span class="line">        <span class="string">&#x27;redirect_uri&#x27;</span>: redirect_uri,</span><br><span class="line">        <span class="string">&#x27;scope&#x27;</span>: scope,</span><br><span class="line">        <span class="string">&#x27;state&#x27;</span>: state,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p><strong><code>views/settings/acwing/acapp/receive_code.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> redirect</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">receive_code</span>(<span class="params">request</span>):</span></span><br><span class="line">    data = request.GET</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;errcode&quot;</span> <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;apply failed&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;errcode&#x27;</span>: data[<span class="string">&#x27;errcode&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;errmsg&#x27;</span>: data[<span class="string">&#x27;errmsg&#x27;</span>],</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    code = data.get(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    state = data.get(<span class="string">&#x27;state&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> cache.has_key(state):</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;state not exists&quot;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    cache.delete(state)</span><br><span class="line"></span><br><span class="line">    apply_access_token_url = <span class="string">&quot;https://www.acwing.com/third_party/api/oauth2/access_token/&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&#x27;appid&#x27;</span>: <span class="string">&quot;1117&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;secret&#x27;</span>: <span class="string">&quot;79021fb1f2344bb6a191237ece84d874&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;code&#x27;</span>: code</span><br><span class="line">    &#125;</span><br><span class="line">    access_token_res = requests.get(apply_access_token_url, params=params).json()</span><br><span class="line"></span><br><span class="line">    access_token = access_token_res[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">    openid = access_token_res[<span class="string">&#x27;openid&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    players = Player.objects.<span class="built_in">filter</span>(openid=openid)</span><br><span class="line">    <span class="keyword">if</span> players.exists():    <span class="comment"># 如果acw账户对应用户已经存在，直接登录</span></span><br><span class="line">        player = players[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">            <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: player.user.username,</span><br><span class="line">            <span class="string">&#x27;photo&#x27;</span>: player.photo,</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">    get_userinfo_url = <span class="string">&quot;https://www.acwing.com/third_party/api/meta/identity/getinfo/&quot;</span></span><br><span class="line">    params = &#123;</span><br><span class="line">        <span class="string">&quot;access_token&quot;</span>: access_token,</span><br><span class="line">        <span class="string">&quot;openid&quot;</span>: openid</span><br><span class="line">    &#125;</span><br><span class="line">    userinfo_res = requests.get(get_userinfo_url, params=params).json()</span><br><span class="line">    username = userinfo_res[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">    photo = userinfo_res[<span class="string">&#x27;photo&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> User.objects.<span class="built_in">filter</span>(username=username).exists():  <span class="comment"># 如果重名，额外添加数字填充</span></span><br><span class="line">        username += <span class="built_in">str</span>(randint(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line"></span><br><span class="line">    user = User.objects.create(username=username)</span><br><span class="line">    player = Player.objects.create(user=user, photo=photo, openid=openid)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;</span><br><span class="line">        <span class="string">&#x27;result&#x27;</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: player.user.username,</span><br><span class="line">        <span class="string">&#x27;photo&#x27;</span>: player.photo,</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h3 id="urls-2">urls</h3><p><strong><code>urls/settings/acwing/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.web.apply_code <span class="keyword">import</span> apply_code <span class="keyword">as</span> web_apply_code</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.web.receive_code <span class="keyword">import</span> receive_code <span class="keyword">as</span> _web_receive_code</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.acapp.apply_code <span class="keyword">import</span> apply_code <span class="keyword">as</span> acapp_apply_code</span><br><span class="line"><span class="keyword">from</span> game.views.settings.acwing.acapp.receive_code <span class="keyword">import</span> receive_code <span class="keyword">as</span> acapp_receive_code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;web/apply_code/&quot;</span>, web_apply_code, name=<span class="string">&quot;settings_acwing_web_apply_code&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;web/receive_code/&quot;</span>, web_receive_code, name=<span class="string">&quot;settings_acwing_web_receive_code&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;acapp/apply_code/&quot;</span>, acapp_apply_code, name=<span class="string">&quot;settings_acwing_acapp_apply_code&quot;</span>),</span><br><span class="line">    path(<span class="string">&quot;acapp/receive_code/&quot;</span>, acapp_receive_code, name=<span class="string">&quot;settings_acwing_acapp_receive_code&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="js-2">js</h3><p><strong><code>js/src/settings/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Settings</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.platform === <span class="string">&quot;ACAPP&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.getinfo_acapp();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.getinfo_web();</span><br><span class="line">            <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">acapp_login</span>(<span class="params">appid, redirect_uri, scope, state</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.root.AcWingOS.api.oauth2.authorize(appid, redirect_uri, scope, state, <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(resp);</span><br><span class="line">            <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                outer.username = resp.username;</span><br><span class="line">                outer.photo = resp.photo;</span><br><span class="line">                outer.hide();</span><br><span class="line">                outer.root.menu.show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">getinfo_acapp</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;https://app1117.acapp.acwing.com.cn/settings/acwing/acapp/apply_code/&quot;</span>,</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (resp.result === <span class="string">&quot;success&quot;</span>) &#123;</span><br><span class="line">                    outer.acapp_login(resp.appid, resp.redirect_uri, resp.scope, resp.state);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实现联机对战-ஐ">实现联机对战 ஐ</h1><h2 id="统一长度单位">统一长度单位</h2><p>由于联机对战的时候，每个用户的客户端长宽不一样</p><p>在之前完成的游戏界面里，我们会根据当前客户端的大小，进行渲染</p><p>但是在联机对战的时候，应当让所有玩家的游戏界面保持同步才可以</p><p>所有，就引入了 <strong>统一长度单位</strong> 的目标</p><h3 id="地图渲染">地图渲染</h3><h4 id="地图-169-等比例缩放">地图 16:9 等比例缩放</h4><p>实现逻辑：根据当前用户的客户端大小，统一渲染成 <strong>16:9</strong> 的游戏界面，且随着用户调整窗口大小，也动态调整</p><p><strong><code>js/src/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">root</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.root.$ac_game.append(<span class="built_in">this</span>.$playground);<span class="comment">// 未来可能会多次 show 因此把创建场景挪到这里</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.resize();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">resize</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.width = <span class="built_in">this</span>.$playground.width();</span><br><span class="line">        <span class="built_in">this</span>.height = <span class="built_in">this</span>.$playground.height();</span><br><span class="line">        <span class="keyword">let</span> unit = <span class="built_in">Math</span>.min(<span class="built_in">this</span>.width / <span class="number">16</span>, <span class="built_in">this</span>.height / <span class="number">9</span>);  <span class="comment">// 以最小的作为基准，渲染</span></span><br><span class="line">        <span class="built_in">this</span>.width = unit * <span class="number">16</span>;</span><br><span class="line">        <span class="built_in">this</span>.height = unit * <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.resize();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.scale = <span class="built_in">this</span>.height;   <span class="comment">// resize时，其他元素的渲染大小都以当前渲染的高度为基准，存为 scale 变量</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.game_map) <span class="built_in">this</span>.game_map.resize();  <span class="comment">//如果此时地图已创建，则resize一下</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        <span class="built_in">this</span>.$playground.show();</span><br><span class="line">        <span class="built_in">this</span>.resize();</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/game_map/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameMap</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">resize</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.width = <span class="built_in">this</span>.playground.width;</span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.height = <span class="built_in">this</span>.playground.height;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="地图居中">地图居中</h4><p>直接把 <strong>canvas</strong> 元素，用相对位置居中即可</p><p><strong><code>css/game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="selector-class">.ac-game-playground</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attribute">background-color</span>: grey;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ac-game-playground</span> &gt; <span class="selector-tag">canvas</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="解决地图-resize-时会出现渐变成黑色的情况">解决地图 resize 时，会出现渐变成黑色的情况</h4><p>原由是因为我们的实现逻辑是：每帧会渲染一层半透明的黑色背景</p><p>也就造就了一开始会出现灰屏的情况，解决方法很简单，直接 resize 完，强制涂一层不透明的黑色即可</p><p><strong><code>js/src/playground/game_map/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameMap</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">resize</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.width = <span class="built_in">this</span>.playground.width;</span><br><span class="line">        <span class="built_in">this</span>.ctx.canvas.height = <span class="built_in">this</span>.playground.height;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="string">&quot;rgba(0, 0, 0, 1)&quot;</span>;    <span class="comment">// resize 完，涂一层不透明的即可</span></span><br><span class="line">        <span class="built_in">this</span>.ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">this</span>.ctx.canvas.width, <span class="built_in">this</span>.ctx.canvas.height);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="元素渲染">元素渲染</h3><p>地图随着尺寸等比例放大缩小的同时，地图内的其他元素也应与背景一同等比例放大缩小</p><p>因此，我们只需把元素全部设为相对大小即可，用我们先前设置的 playground.scale 值即可</p><h4 id="玩家-player">玩家 Player</h4><p>初始化的时候，转为传递 <strong>scale</strong> 的比例值</p><p><strong><code>js/src/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span> / <span class="built_in">this</span>.scale, <span class="number">0.5</span>, <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="number">0.15</span>, <span class="literal">true</span>));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">            <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span> / <span class="built_in">this</span>.scale, <span class="number">0.5</span>, <span class="number">0.05</span>, <span class="built_in">this</span>.get_random_color(), <span class="number">0.15</span>, <span class="literal">false</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.is_me) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> tx = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.width / <span class="built_in">this</span>.playground.scale;</span><br><span class="line">            <span class="keyword">let</span> ty = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.height / <span class="built_in">this</span>.playground.scale;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (e.which === <span class="number">3</span>) &#123;</span><br><span class="line">                outer.move_to((e.clientX - rect.left) / outer.playground.scale, (e.clientY - rect.top) / outer.playground.scale);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;fireball&quot;</span>) &#123;</span><br><span class="line">                    outer.shoot_fireball((e.clientX - rect.left) / outer.playground.scale, (e.clientY - rect.top) / outer.playground.scale);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">shoot_fireball</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="built_in">this</span>.x, y = <span class="built_in">this</span>.y;</span><br><span class="line">        <span class="keyword">let</span> radius = <span class="number">0.01</span>;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="built_in">Math</span>.atan2(ty - <span class="built_in">this</span>.y, tx - <span class="built_in">this</span>.x);</span><br><span class="line">        <span class="keyword">let</span> vx = <span class="built_in">Math</span>.cos(angle), vy = <span class="built_in">Math</span>.sin(angle);</span><br><span class="line">        <span class="keyword">let</span> color = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> speed = <span class="number">0.5</span>;</span><br><span class="line">        <span class="keyword">let</span> move_length = <span class="number">1.0</span>;</span><br><span class="line">        <span class="keyword">let</span> damage = <span class="number">0.01</span>;</span><br><span class="line">        <span class="keyword">new</span> FireBall(<span class="built_in">this</span>.playground, <span class="built_in">this</span>, x, y, radius, vx, vy, color, speed, move_length, damage);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.update_move();</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update_move</span>(<span class="params"></span>)</span> &#123; <span class="comment">//更新玩家移动</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.is_me &amp;&amp; <span class="built_in">this</span>.spent_time &gt; <span class="number">4</span> &amp;&amp; <span class="built_in">Math</span>.random() * <span class="number">180</span> &lt; <span class="number">1</span>) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.damage_speed &gt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.move_length &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">                ...</span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">this</span>.is_me) &#123;</span><br><span class="line">                    <span class="keyword">let</span> tx = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.width / <span class="built_in">this</span>.playground.scale;</span><br><span class="line">                    <span class="keyword">let</span> ty = <span class="built_in">Math</span>.random() * <span class="built_in">this</span>.playground.height / <span class="built_in">this</span>.playground.scale;</span><br><span class="line">                    ...</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ...</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scale = <span class="built_in">this</span>.playground.scale;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.is_me) &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x * scale, <span class="built_in">this</span>.y * scale, <span class="built_in">this</span>.radius * scale, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">            ...</span><br><span class="line">            <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.img, (<span class="built_in">this</span>.x - <span class="built_in">this</span>.radius) * scale, (<span class="built_in">this</span>.y - <span class="built_in">this</span>.radius) * scale, <span class="built_in">this</span>.radius * <span class="number">2</span> * scale, <span class="built_in">this</span>.radius * <span class="number">2</span> * scale);</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x * scale, <span class="built_in">this</span>.y * scale, <span class="built_in">this</span>.radius * scale, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="火球-fireball">火球 Fireball</h4><p><strong><code>js/src/playground/skill/fireball/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fireball</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scale = <span class="built_in">this</span>.playground.scale;</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x * scale, <span class="built_in">this</span>.y * scale, <span class="built_in">this</span>.radius * scale, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="粒子-particle">粒子 particle</h4><p><strong><code>js/src/playground/particle/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Particle</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scale = <span class="built_in">this</span>.playground.scale;</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(<span class="built_in">this</span>.x * scale, <span class="built_in">this</span>.y * scale, <span class="built_in">this</span>.radius * scale, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="built_in">this</span>.color;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="增加联机对战模式">增加“联机对战”模式</h2><p>为了区分：用户自己，机器人，联机玩家</p><p>需要把 <code>is_me</code> 改成字符串，用以表示不同 <strong>Player</strong></p><p><strong><code>menu/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameMenu</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$single_mode.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            outer.hide();</span><br><span class="line">            outer.root.playground.show(<span class="string">&quot;single mode&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">this</span>.$multi_mode.click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.hide();</span><br><span class="line">            outer.root.playground.show(<span class="string">&quot;multi mode&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Playground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span> / <span class="built_in">this</span>.scale, <span class="number">0.5</span>, <span class="number">0.05</span>, <span class="string">&quot;white&quot;</span>, <span class="number">0.15</span>, <span class="string">&quot;me&quot;</span>, <span class="built_in">this</span>.root.settings.username, <span class="built_in">this</span>.root.settings.photo)));</span><br><span class="line">        <span class="keyword">if</span> (mode === <span class="string">&quot;single mode&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++ ) &#123;</span><br><span class="line">                <span class="built_in">this</span>.players.push(<span class="keyword">new</span> Player(<span class="built_in">this</span>, <span class="built_in">this</span>.width / <span class="number">2</span> / <span class="built_in">this</span>.scale, <span class="number">0.5</span>, <span class="number">0.05</span>, <span class="built_in">this</span>.get_random_color(), <span class="number">0.15</span>, <span class="string">&quot;robot&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground, x, y, radius, color, speed, character, username, photo</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.character = character;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">        <span class="built_in">this</span>.photo = photo;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character !== <span class="string">&quot;robot&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.img = <span class="keyword">new</span> Image();</span><br><span class="line">            <span class="built_in">this</span>.img.src = <span class="built_in">this</span>.photo;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">//同理，根据对应的逻辑，修改后面所有的 is_me 为 character</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置django_channels">配置django_channels</h2><p><strong>django_channels</strong> 就是基于 <strong>wss</strong> 协议的一种实现</p><p><strong>wss</strong> 是 <strong>web-socker</strong> 协议的安全模式，支持 <strong>C/S</strong> 下的双向通信（HTTP协议只支持单向通信）</p><h3 id="安装-channels_redis">安装 <code>channels_redis</code></h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install channels_redis</span><br></pre></td></tr></table></figure><h3 id="配置-acappasgi.py">配置 <code>acapp/asgi.py</code></h3><p>内容如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> channels.auth <span class="keyword">import</span> AuthMiddlewareStack</span><br><span class="line"><span class="keyword">from</span> channels.routing <span class="keyword">import</span> ProtocolTypeRouter, URLRouter</span><br><span class="line"><span class="keyword">from</span> django.core.asgi <span class="keyword">import</span> get_asgi_application</span><br><span class="line"><span class="keyword">from</span> game.routing <span class="keyword">import</span> websocket_urlpatterns</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class="string">&#x27;acapp.settings&#x27;</span>)</span><br><span class="line"></span><br><span class="line">application = ProtocolTypeRouter(&#123;</span><br><span class="line">    <span class="string">&quot;http&quot;</span>: get_asgi_application(),</span><br><span class="line">    <span class="string">&quot;websocket&quot;</span>: AuthMiddlewareStack(URLRouter(websocket_urlpatterns))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="配置-acappsettings.py">配置 <code>acapp/settings.py</code></h3><p>在 <code>INSTALLED_APPS</code> 中添加 <code>channels</code> ，添加后如下所示：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [ </span><br><span class="line">    <span class="string">&#x27;channels&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;game.apps.GameConfig&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.admin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.auth&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.contenttypes&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.messages&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.contrib.staticfiles&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后在文件末尾添加：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ASGI_APPLICATION = <span class="string">&#x27;acapp.asgi.application&#x27;</span></span><br><span class="line">CHANNEL_LAYERS = &#123;</span><br><span class="line">    <span class="string">&quot;default&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;BACKEND&quot;</span>: <span class="string">&quot;channels_redis.core.RedisChannelLayer&quot;</span>,</span><br><span class="line">        <span class="string">&quot;CONFIG&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;hosts&quot;</span>: [(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>)],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-gamerouting.py">配置 <code>game/routing.py</code></h3><p>这一部分的作用相当于 <code>http</code> 的 <code>urls</code></p><p>内容如下：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line">websocket_urlpatterns = [</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="编写-gameconsumers">编写 <code>game/consumers</code></h3><p>这一部分的作用相当于 <code>http</code> 的 <code>views</code></p><p>参考示例：</p><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> channels.generic.websocket <span class="keyword">import</span> AsyncWebsocketConsumer</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">connect</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.accept()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;accept&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        self.room_name = <span class="string">&quot;room&quot;</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_add(self.room_name, self.channel_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">disconnect</span>(<span class="params">self, close_code</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;disconnect&#x27;</span>)</span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_discard(self.room_name, self.channel_name);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">self, text_data</span>):</span></span><br><span class="line">        data = json.loads(text_data)</span><br><span class="line">        <span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><h3 id="启动-django_channels">启动 <code>django_channels</code></h3><p>在 <code>~/acapp</code> 目录下执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">daphne -b 0.0.0.0 -p 5015 acapp.asgi:application</span><br></pre></td></tr></table></figure><h3 id="建立-wss-连接">建立 WSS 连接</h3><h4 id="路由-routing">路由 routing</h4><p><strong><code>game/routing.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> game.consumers.multiplayer.index <span class="keyword">import</span> MultiPlayer</span><br><span class="line"></span><br><span class="line">websocket_urlpatterns = [</span><br><span class="line">    path(<span class="string">&quot;wss/multiplayer/&quot;</span>, MultiPlayer.as_asgi(), name=<span class="string">&quot;wss_multiplayer&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="前端js">前端js</h4><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (mode === <span class="string">&quot;single mode&quot;</span>) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mps = <span class="keyword">new</span> MultiPlayerSocket(<span class="built_in">this</span>);</span><br><span class="line">            <span class="built_in">this</span>.mps.ws.onopen = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                outer.mps.send_create_player();</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/socket/multiplayer/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ws = <span class="keyword">new</span> WebSocket(<span class="string">&quot;wss://app1117.acapp.acwing.com.cn/wss/multiplayer/&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">send_create_player</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;hello acapp server&#x27;</span>,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_create_player</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写同步函数">编写同步函数</h2><p>一共需要完成四个通信：</p><p>（通信的逻辑基本都是现在本地完成，然后将结果返回给服务器，服务器再分发给其他客户端，达成同步）</p><ol type="1"><li><strong>create-player</strong> : 在所有玩家的游戏界面，创建一个新加入的玩家</li><li><strong>move-to</strong> : 在所有玩家的游戏界面，讲一个角色移动到一个位置</li><li><strong>shoot-fireball</strong> : 在所有玩家的游戏界面，让一个角色发射一个火球</li><li><strong>attack</strong> : 在所有玩家的游戏界面，让一个角色被攻击</li></ol><p>一场游戏里，所有的元素（玩家，火球等）都需要唯一的标识，来方便同步</p><p>为此，我们可以直接修改一下游戏引擎，对于每个元素都创建我们需要的唯一标识</p><p><strong><code>playground/ac-game-object/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.uuid = <span class="built_in">this</span>.create_uuid();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">create_uuid</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">let</span> x = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">10</span>));   <span class="comment">//[0, 10)</span></span><br><span class="line">            res += x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (mode === <span class="string">&quot;single mode&quot;</span>) &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.mps = <span class="keyword">new</span> MultiPlayerSocket(<span class="built_in">this</span>);</span><br><span class="line">            <span class="built_in">this</span>.mps.uuid = <span class="built_in">this</span>.players[<span class="number">0</span>].uuid;</span><br><span class="line">            <span class="built_in">this</span>.mps.ws.onopen = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                outer.mps.send_create_player();</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/socket/multiplayer/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">send_create_player</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&#x27;create_player&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，利用通信的方式，使得每个窗口内，逻辑上相同的元素，其 <code>uid</code> 也相同即可</p><p>原则是：哪个窗口创建的元素，就用他创建时的 <code>uid</code> 作为整个项目运行时的 <code>uid</code></p><p>然后，我们打算用 <strong>redis</strong> 来实现存储每个游戏房间，以及元素，并初始默认设定每个房间上限 3 人</p><h3 id="create-player">create-player</h3><h4 id="后端">后端</h4><p><strong><code>settings.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">ROOM_CAPACITY = <span class="number">3</span></span><br></pre></td></tr></table></figure><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> channels.generic.websocket <span class="keyword">import</span> AsyncWebsocketConsumer</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">connect</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.room_name = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):   <span class="comment"># 上限 1k 个房间</span></span><br><span class="line">            name = <span class="string">&quot;room-%d&quot;</span> % (i)</span><br><span class="line">            <span class="comment"># 当前房间为空，或房间内玩家人数不到 ROOM_CAPACITY</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> cache.has_key(name) <span class="keyword">or</span> <span class="built_in">len</span>(cache.get(name)) &lt; settings.ROOM_CAPACITY:</span><br><span class="line">                self.room_name = name</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.room_name:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> self.accept()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cache.has_key(self.room_name):   <span class="comment"># 如果房间不存在，则新建房间</span></span><br><span class="line">            cache.<span class="built_in">set</span>(self.room_name, [], <span class="number">3600</span>) <span class="comment"># 有效期 1 小时</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> cache.get(self.room_name):    <span class="comment"># 对该房间已存在的用户，创建到新加入的用户的游戏界面中</span></span><br><span class="line">            <span class="keyword">await</span> self.send(text_data=json.dumps(&#123;</span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;create_player&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: player[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: player[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;photo&#x27;</span>: player[<span class="string">&#x27;photo&#x27;</span>],</span><br><span class="line">            &#125;))</span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_add(self.room_name, self.channel_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">disconnect</span>(<span class="params">self, close_code</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;disconnect&#x27;</span>)</span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_discard(self.room_name, self.channel_name);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">create_player</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        players = cache.get(self.room_name)</span><br><span class="line">        players.append(&#123;</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: data[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;photo&#x27;</span>: data[<span class="string">&#x27;photo&#x27;</span>],</span><br><span class="line">        &#125;)</span><br><span class="line">        cache.<span class="built_in">set</span>(self.room_name, players, <span class="number">3600</span>) <span class="comment"># 更新房间存在时间为 1 小时（最后一次加入一名玩家时）</span></span><br><span class="line">        <span class="comment"># 群发消息更新</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">            self.room_name,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_create_player&quot;</span>,  <span class="comment"># 群发该消息后，作为客户端接受者，所接受用的函数名</span></span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;create_player&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: data[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;photo&#x27;</span>: data[<span class="string">&#x27;photo&#x27;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">group_create_player</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.send(text_data=json.dumps(data))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">self, text_data</span>):</span></span><br><span class="line">        data = json.loads(text_data)</span><br><span class="line">        event = data[<span class="string">&#x27;event&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> event == <span class="string">&quot;create_player&quot;</span>:</span><br><span class="line">            <span class="keyword">await</span> self.create_player(data)</span><br></pre></td></tr></table></figure><h4 id="前端">前端</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.ws = <span class="keyword">new</span> WebSocket(<span class="string">&quot;wss://app1117.acapp.acwing.com.cn/wss/multiplayer/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.receive();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(e.data);</span><br><span class="line">            <span class="keyword">let</span> uuid = data.uuid;</span><br><span class="line">            <span class="keyword">if</span> (uuid === outer.uuid) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> event = data.event;</span><br><span class="line">            <span class="keyword">if</span> (event === <span class="string">&quot;create_player&quot;</span>) &#123;</span><br><span class="line">                outer.receive_create_player(uuid, data.username, data.photo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">send_create_player</span>(<span class="params">username, photo</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&#x27;create_player&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: username,</span><br><span class="line">            <span class="string">&#x27;photo&#x27;</span>: photo,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_create_player</span>(<span class="params">uuid, username, photo</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="keyword">new</span> Player(</span><br><span class="line">            <span class="built_in">this</span>.playground,</span><br><span class="line">            <span class="built_in">this</span>.playground.width / <span class="number">2</span> / <span class="built_in">this</span>.playground.scale,</span><br><span class="line">            <span class="number">0.5</span>,</span><br><span class="line">            <span class="number">0.05</span>,</span><br><span class="line">            <span class="string">&quot;white&quot;</span>,</span><br><span class="line">            <span class="number">0.15</span>,</span><br><span class="line">            <span class="string">&quot;enemy&quot;</span>,</span><br><span class="line">            username,</span><br><span class="line">            photo,</span><br><span class="line">        );</span><br><span class="line">        player.uuid = uuid;</span><br><span class="line">        <span class="built_in">this</span>.playground.players.push(player);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="redis-调试语句">redis 调试语句</h4><p>打开 shell 交互</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 manage.py shell</span><br></pre></td></tr></table></figure><p>然后用 py3 交互进行 cache 调试</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clear</span>():</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> cache.keys(<span class="string">&#x27;*&#x27;</span>):</span><br><span class="line">        cache.delete(key)</span><br><span class="line"></span><br><span class="line">cache.keys(<span class="string">&#x27;*&#x27;</span>) <span class="comment"># 查询当前 redis 中所有 key</span></span><br><span class="line"></span><br><span class="line">cache.get(<span class="string">&#x27;room-1&#x27;</span>) <span class="comment"># 查询当前 redis 中 key 为 room-1 的值</span></span><br></pre></td></tr></table></figure><p>到目前为止，便可以在不同的窗口渲染同一批玩家了</p><h3 id="move-to">move-to</h3><h4 id="前端-1">前端</h4><p>客户端的通信的发出和接受函数</p><p><strong><code>js/src/playground/</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">receive</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (event === <span class="string">&quot;move_to&quot;</span>) &#123;</span><br><span class="line">                outer.receive_move_to(uuid, data.tx, data.ty);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">send_move_to</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&#x27;move_to&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;tx&#x27;</span>: tx,</span><br><span class="line">            <span class="string">&#x27;ty&#x27;</span>: ty,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">get_player</span>(<span class="params">uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> players = <span class="built_in">this</span>.playground.players;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; players.length; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">let</span> player = players[i];</span><br><span class="line">            <span class="keyword">if</span> (player.uuid === uuid) &#123;</span><br><span class="line">                <span class="keyword">return</span> player;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_move_to</span>(<span class="params">uuid, tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="built_in">this</span>.get_player(uuid);</span><br><span class="line">        <span class="keyword">if</span> (player) &#123;</span><br><span class="line">            player.move_to(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了让游戏界面中对于要移动的元素做出移动动作，需要对 <code>move_to</code> 函数做出一些修改</p><p>首先要标识出当前为多人模式，然后模式为多人模式时，每次移动都会触发一次通信</p><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.mode = mode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      ...</span><br><span class="line">       <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">           ...</span><br><span class="line">           <span class="keyword">if</span> (e.which === <span class="number">3</span>) &#123;</span><br><span class="line">               <span class="keyword">let</span> tx = (e.clientX - rect.left) / outer.playground.scale;</span><br><span class="line">               <span class="keyword">let</span> ty = (e.clientY - rect.top) / outer.playground.scale;</span><br><span class="line">               outer.move_to(tx, ty);</span><br><span class="line">               <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                   outer.playground.mps.send_move_to(tx, ty);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           ...</span><br><span class="line">   &#125;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端-1">后端</h4><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">move_to</span>(<span class="params">self, data</span>):</span></span><br><span class="line">    <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">        self.room_name,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;move_to&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;tx&#x27;</span>: data[<span class="string">&#x27;tx&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;ty&#x27;</span>: data[<span class="string">&#x27;ty&#x27;</span>],</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">group_send_event</span>(<span class="params">self, data</span>):</span></span><br><span class="line">    <span class="keyword">await</span> self.send(text_data=json.dumps(data))</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">self, text_data</span>):</span></span><br><span class="line">    data = json.loads(text_data)</span><br><span class="line">    event = data[<span class="string">&#x27;event&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> event == <span class="string">&quot;create_player&quot;</span>:</span><br><span class="line">        <span class="keyword">await</span> self.create_player(data)</span><br><span class="line">    <span class="keyword">elif</span> event == <span class="string">&quot;move_to&quot;</span>:</span><br><span class="line">        <span class="keyword">await</span> self.move_to(data)</span><br></pre></td></tr></table></figure><h3 id="shoot-fireball">shoot-fireball</h3><h4 id="优化一下火球元素">优化一下火球元素</h4><p>用一个数组来存一个玩家发射的所有火球，以便于子弹消失时，将他们找出并对应删掉</p><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground, x, y, radius, color, speed, character, username, photo</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.fireballs = [];    <span class="comment">//存该用户发射的所有火球</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> tx = (e.clientX - rect.left) / outer.playground.scale;</span><br><span class="line">                <span class="keyword">let</span> ty = (e.clientY - rect.top) / outer.playground.scale;</span><br><span class="line">                <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;fireball&quot;</span>) &#123;</span><br><span class="line">                    <span class="keyword">let</span> fireball = outer.shoot_fireball(tx, ty);</span><br><span class="line">                    <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                        outer.playground.mps.send_shoot_fireball(tx, ty, fireball.uuid);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="built_in">window</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.which === <span class="number">81</span>) &#123;           <span class="comment">//键盘按下q事件</span></span><br><span class="line">                outer.cur_skill = <span class="string">&quot;fireball&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">shoot_fireball</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fireball = <span class="keyword">new</span> FireBall(<span class="built_in">this</span>.playground, <span class="built_in">this</span>, x, y, radius, vx, vy, color, speed, move_length, damage);</span><br><span class="line">        <span class="built_in">this</span>.fireballs.push(fireball);</span><br><span class="line">        <span class="keyword">return</span> fireball;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">destroy_fireball</span>(<span class="params">uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.fireballs.length; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">let</span> fireball = <span class="built_in">this</span>.fireballs[i];</span><br><span class="line">            <span class="keyword">if</span> (fireball.uuid == uuid) &#123;</span><br><span class="line">                fireball.destroy();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p><strong><code>playground/skill/fireball/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FireBall</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">on_destory</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> fireballs = <span class="built_in">this</span>.player.fireballs;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; fireballs.length; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">if</span> (fireballs[i] === <span class="built_in">this</span>) &#123;</span><br><span class="line">                fireballs.splice(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/socket/multiplayer/</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">send_shoot_fireball</span>(<span class="params">tx, ty, ball_uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&#x27;move_to&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;tx&#x27;</span>: tx,</span><br><span class="line">            <span class="string">&#x27;ty&#x27;</span>: ty,</span><br><span class="line">            <span class="string">&#x27;ball_uuid&#x27;</span>: ball_uuid;</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_shoot_fireball</span>(<span class="params">uuid, tx, ty, ball_uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="built_in">this</span>.get_player(uuid);</span><br><span class="line">        <span class="keyword">if</span> (player) &#123;</span><br><span class="line">            <span class="keyword">let</span> fireball = player.shoot_fireball(tx, ty);</span><br><span class="line">            fireball.uuid = ball_uuid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端-2">后端</h4><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">shoot_fireball</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">            self.room_name,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;shoot_fireball&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;tx&#x27;</span>: data[<span class="string">&#x27;tx&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;ty&#x27;</span>: data[<span class="string">&#x27;ty&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;ball_uuid&#x27;</span>: data[<span class="string">&#x27;ball_uuid&#x27;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">receive</span>(<span class="params">self, text_data</span>):</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">elif</span> event == <span class="string">&quot;shoot_fireball&quot;</span>:</span><br><span class="line">            <span class="keyword">await</span> self.shoot_fireball(data)</span><br></pre></td></tr></table></figure><h3 id="attack">attack</h3><p>为了只让一个客户端进行攻击命中的判断，因此只有发出方的火球才做碰撞检测</p><p>其他客户端对于该火球只有动画效果</p><p>又由于碰撞检测是在一台客户端上进行的，因此多端之间可能会存在同步上的延迟</p><p>为此的解决方法是：碰撞检测成功时，强制把被击中玩家移动到发起方客户端中的位置，以避免击中延迟上发生的事情</p><h4 id="前端-2">前端</h4><p><strong><code>playground/skill/fireball/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FireBall</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.move_length &lt; <span class="built_in">this</span>.eps) &#123;</span><br><span class="line">            <span class="built_in">this</span>.destroy();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.update_move();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.player.character !== <span class="string">&quot;enemy&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.update_attack();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">attack</span>(<span class="params">player</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.playground.mps.send_attack(player.uuid, player.x, player.y, angle, <span class="built_in">this</span>.damage, <span class="built_in">this</span>.uuid);</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">receive_attack</span>(<span class="params">x, y, angle, damage, ball_uuid, attacker</span>)</span> &#123;</span><br><span class="line">        attacker.destroy_fireball(ball_uuid);</span><br><span class="line">        <span class="built_in">this</span>.x = x;</span><br><span class="line">        <span class="built_in">this</span>.y = y;</span><br><span class="line">        <span class="built_in">this</span>.is_attacked(angle, damage);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/socket/multiplayer/</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">send_attack</span>(<span class="params">attackee_uuid, x, y, angle, damage, ball_uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;attack&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;attackee_uuid&#x27;</span>: attackee_uuid,</span><br><span class="line">            <span class="string">&#x27;x&#x27;</span>: x,</span><br><span class="line">            <span class="string">&#x27;y&#x27;</span>: y,</span><br><span class="line">            <span class="string">&#x27;angle&#x27;</span>: angle,</span><br><span class="line">            <span class="string">&#x27;damage&#x27;</span>: damage,</span><br><span class="line">            <span class="string">&#x27;ball_uuid&#x27;</span>: ball_uuid,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_attack</span>(<span class="params">uuid, attackee_uuid, x, y, angle, damage, ball_uuid</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> attacker = <span class="built_in">this</span>.get_player(uuid);</span><br><span class="line">        <span class="keyword">let</span> attackee = <span class="built_in">this</span>.get_player(attackee_uuid);</span><br><span class="line">        <span class="keyword">if</span> (attacker &amp;&amp; attackee) &#123;</span><br><span class="line">            attackee.receive_attack(x, y, angle, damage, ball_uuid, attacker);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后端-3">后端</h4><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">attack</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">            self.room_name,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;attack&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;x&#x27;</span>: data[<span class="string">&#x27;x&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;y&#x27;</span>: data[<span class="string">&#x27;y&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;angle&#x27;</span>: data[<span class="string">&#x27;angle&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;damage&#x27;</span>: data[<span class="string">&#x27;damage&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;ball_uuid&#x27;</span>: data[<span class="string">&#x27;ball_uuid&#x27;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="游戏的小优化">游戏的小优化</h2><h3 id="多人模式下游戏没有开始前玩家不可以移动">多人模式下游戏没有开始前，玩家不可以移动</h3><p>为此我们先引入一个状态机：<code>'waiting' -&gt; 'fighting' -&gt; 'over'</code> 来标识当前游戏进行的状态</p><p>然后用一个 <code>notice_board</code> 计分板在前端显示出来</p><p>实现的逻辑就是：游戏初始时为 <code>waiting</code> 状态，房间内人数满 3 人时，才会进入 <code>fighting</code>，角色死亡时为 <code>over</code></p><p>且发射火球，移动等行为，当且仅当玩家状态为 <code>fighting</code> 时，才可以做</p><p>然后设定火球技能的 cd 为 3 秒，且在游戏进入 <code>fighting</code> 时，先自动进入 cd 状态</p><p>这样就实现了初始 3 秒内，任何玩家不可攻击</p><p><strong><code>js/src/playground/notice_board/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NoticeBoard</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.playground.game_map.ctx;</span><br><span class="line">        <span class="built_in">this</span>.text = <span class="string">&quot;已就绪：0人&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">write</span>(<span class="params">text</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.text = text;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.render();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.ctx.font = <span class="string">&quot;20px serif&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillStyle = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.ctx.textAlign = <span class="string">&quot;center&quot;</span>;</span><br><span class="line">        <span class="built_in">this</span>.ctx.fillText(<span class="built_in">this</span>.text, <span class="built_in">this</span>.playground.width / <span class="number">2</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.state = <span class="string">&quot;waiting&quot;</span>;     <span class="comment">//waiting -&gt; fighting -&gt; over</span></span><br><span class="line">        <span class="built_in">this</span>.notice_board = <span class="keyword">new</span> NoticeBoard(<span class="built_in">this</span>);</span><br><span class="line">        <span class="built_in">this</span>.player_count = <span class="number">0</span>;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (outer.playground.state !== <span class="string">&quot;fighting&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="built_in">window</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (outer.playground.state !== <span class="string">&quot;fighting&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.playground.player_count ++ ;</span><br><span class="line">        <span class="built_in">this</span>.playground.notice_board.write(<span class="string">&quot;已就绪：&quot;</span> + <span class="built_in">this</span>.playground.player_count + <span class="string">&quot;人&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.playground.player_count &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.playground.state = <span class="string">&quot;fighting&quot;</span>;</span><br><span class="line">            <span class="built_in">this</span>.playground.notice_board.write(<span class="string">&quot;Fighting&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="技能cd">技能CD</h3><p>给火球技能设置 3s 的 cd，实现逻辑很简单，设定一个 cool_time 变量，每次渲染的时候减去上次渲染的时间间隔</p><p>然后 cool_time 为 0 时，技能才可以成功释放</p><p>另外修改冷却时间，只用修改自己的即可</p><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.fireball_coldtime = <span class="number">3</span>; <span class="comment">// 单位：s</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;</span><br><span class="line">                ...</span><br><span class="line">                <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;fireball&quot;</span>) &#123;</span><br><span class="line">                    ...</span><br><span class="line">                    <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                        outer.playground.mps.send_shoot_fireball(tx, ty, fireball.uuid);</span><br><span class="line">                    &#125;</span><br><span class="line">                    outer.fireball_coldtime = <span class="number">3</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="built_in">window</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">if</span> (outer.fireball_coldtime &gt;= outer.eps)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span> &amp;&amp; <span class="built_in">this</span>.playground.state === <span class="string">&quot;fighting&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.update_coldtime();</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update_coldtime</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.fireball_coldtime -= <span class="built_in">this</span>.timedelta / <span class="number">1000</span>;</span><br><span class="line">        <span class="built_in">this</span>.fireball_coldtime = <span class="built_in">Math</span>.max(<span class="number">0</span>, <span class="built_in">this</span>.fireball_coldtime);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用图片来渲染技能cd">用图片来渲染技能CD</h3><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.fireball_coldtime = <span class="number">3</span>; <span class="comment">// 单位：s</span></span><br><span class="line">            <span class="built_in">this</span>.fireball_img = <span class="keyword">new</span> Image();</span><br><span class="line">            <span class="built_in">this</span>.fireball_img.src = <span class="string">&quot;https://cdn.acwing.com/media/article/image/2021/12/02/1_9340c86053-fireball.png&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span> &amp;&amp; <span class="built_in">this</span>.playground.state === <span class="string">&quot;fighting&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.render_skill_coldtime();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="function"><span class="title">render_skill_coldtime</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> scale = <span class="built_in">this</span>.playground.scale;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="number">1.5</span>, y = <span class="number">0.9</span>, r = <span class="number">0.04</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 渲染技能图标</span></span><br><span class="line">        <span class="built_in">this</span>.ctx.save();</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(x * scale, y * scale, r * scale, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.stroke();</span><br><span class="line">        <span class="built_in">this</span>.ctx.clip();</span><br><span class="line">        <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.fireball_img, (x - r) * scale, (y - r) * scale, r * <span class="number">2</span> * scale, r * <span class="number">2</span> * scale);</span><br><span class="line">        <span class="built_in">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 渲染冷却指示</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.fireball_coldtime &gt;= <span class="built_in">this</span>.eps)&#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">            <span class="built_in">this</span>.ctx.moveTo(x * scale, y * scale);</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(x * scale, y * scale, r * scale, <span class="number">0</span> - <span class="built_in">Math</span>.PI / <span class="number">2</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span> * (<span class="number">1</span> - <span class="built_in">this</span>.fireball_coldtime / <span class="number">3</span>) - <span class="built_in">Math</span>.PI / <span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="built_in">this</span>.ctx.lineTo(x * scale, y * scale);</span><br><span class="line">            <span class="built_in">this</span>.ctx.fillStyle = <span class="string">&quot;rgba(0, 0, 255, 0.6)&quot;</span>;</span><br><span class="line">            <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h3 id="添加一个闪现技能">添加一个闪现技能</h3><h4 id="单机部分">单机部分</h4><p><strong><code>js/src/playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">...</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span>) &#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="built_in">this</span>.blink_coldtime = <span class="number">5</span>;</span><br><span class="line">            <span class="built_in">this</span>.blink_img = <span class="keyword">new</span> Image();</span><br><span class="line">            <span class="built_in">this</span>.blink_img.src = <span class="string">&quot;https://cdn.acwing.com/media/article/image/2021/12/02/1_daccabdc53-blink.png&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">1</span>) &#123;</span><br><span class="line">                ...</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (outer.cur_skill === <span class="string">&quot;blink&quot;</span>) &#123;</span><br><span class="line">                    outer.blink(tx, ty);</span><br><span class="line">                    <span class="comment">// 同步函数</span></span><br><span class="line">                    <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                        outer.playground.mps.send_blink(tx, ty);</span><br><span class="line">                    &#125;</span><br><span class="line">                    outer.blink_coldtime = <span class="number">5</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            outer.cur_skill = <span class="literal">null</span>; <span class="comment">//清空当前技能</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="built_in">window</span>).keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">70</span>) &#123;    <span class="comment">//f键</span></span><br><span class="line">                <span class="keyword">if</span> (outer.blink_coldtime &gt;= outer.eps) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                outer.cur_skill = <span class="string">&quot;blink&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">blink</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> d = <span class="built_in">this</span>.get_dist(<span class="built_in">this</span>.x, <span class="built_in">this</span>.y, tx, ty);</span><br><span class="line">        d = <span class="built_in">Math</span>.min(d, <span class="number">0.5</span>);</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="built_in">Math</span>.atan2(ty - <span class="built_in">this</span>.y, tx - <span class="built_in">this</span>.x);</span><br><span class="line">        <span class="built_in">this</span>.x += d * <span class="built_in">Math</span>.cos(angle);</span><br><span class="line">        <span class="built_in">this</span>.y += d * <span class="built_in">Math</span>.sin(angle);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.move_length = <span class="number">0</span>;   <span class="comment">//闪现完停下来</span></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">render_skill_coldtime</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        x = <span class="number">1.62</span>, y = <span class="number">0.9</span>, r = <span class="number">0.04</span>;</span><br><span class="line">        <span class="comment">// 闪现技能</span></span><br><span class="line">        <span class="comment">// 渲染技能图标</span></span><br><span class="line">        <span class="built_in">this</span>.ctx.save();</span><br><span class="line">        <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">        <span class="built_in">this</span>.ctx.arc(x * scale, y * scale, r * scale, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>, <span class="literal">false</span>);</span><br><span class="line">        <span class="built_in">this</span>.ctx.stroke();</span><br><span class="line">        <span class="built_in">this</span>.ctx.clip();</span><br><span class="line">        <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.blink_img, (x - r) * scale, (y - r) * scale, r * <span class="number">2</span> * scale, r * <span class="number">2</span> * scale);</span><br><span class="line">        <span class="built_in">this</span>.ctx.restore();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 渲染冷却指示</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.blink_coldtime &gt;= <span class="built_in">this</span>.eps)&#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.beginPath();</span><br><span class="line">            <span class="built_in">this</span>.ctx.moveTo(x * scale, y * scale);</span><br><span class="line">            <span class="built_in">this</span>.ctx.arc(x * scale, y * scale, r * scale, <span class="number">0</span> - <span class="built_in">Math</span>.PI / <span class="number">2</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span> * (<span class="number">1</span> - <span class="built_in">this</span>.blink_coldtime / <span class="number">5</span>) - <span class="built_in">Math</span>.PI / <span class="number">2</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="built_in">this</span>.ctx.lineTo(x * scale, y * scale);</span><br><span class="line">            <span class="built_in">this</span>.ctx.fillStyle = <span class="string">&quot;rgba(0, 0, 255, 0.6)&quot;</span>;</span><br><span class="line">            <span class="built_in">this</span>.ctx.fill();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="联机部分">联机部分</h4><p><strong><code>js/src/playground/socket/multiplayer/</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">send_blink</span>(<span class="params">tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;blink&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;tx&#x27;</span>: tx,</span><br><span class="line">            <span class="string">&#x27;ty&#x27;</span>: ty,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_blink</span>(<span class="params">uuid, tx, ty</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> player = <span class="built_in">this</span>.get_player(uuid);</span><br><span class="line">        <span class="keyword">if</span> (player) &#123;</span><br><span class="line">            player.blink(tx, ty);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">blink</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">            self.room_name,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;blink&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;tx&#x27;</span>: data[<span class="string">&#x27;tx&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;ty&#x27;</span>: data[<span class="string">&#x27;ty&#x27;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><p>大功告成 =w=</p><h1 id="实现聊天系统-ஐ">实现聊天系统 ஐ</h1><h2 id="优化键盘绑定事件">优化键盘绑定事件</h2><p>这部分算是之前的遗留问题，先前的 <code>keydown</code> 监听事件绑定在了 <code>window</code> 上会出现一个问题</p><p>如果在一个浏览器内打开多个 ACAPP，此时按下键位触发 <code>keydown</code> 事件，会被浏览器内所有的 <code>ACAPP</code> 都捕获到</p><p>之前影响不大，但对此次要实现的聊天系统就有着致命的影响，即打开一个 ACAPP 的聊天栏，其他都会被打开</p><p>所有我们要将 <code>keydown</code> 监听事件绑定到 <code>canvas</code> 上</p><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (outer.playground.state !== <span class="string">&quot;fighting&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (e.which === <span class="number">81</span>) &#123;           <span class="comment">//键盘按下q事件</span></span><br><span class="line">                <span class="keyword">if</span> (outer.fireball_coldtime &gt;= outer.eps) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                outer.cur_skill = <span class="string">&quot;fireball&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">70</span>) &#123;    <span class="comment">//f键</span></span><br><span class="line">                <span class="keyword">if</span> (outer.blink_coldtime &gt;= outer.eps) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                outer.cur_skill = <span class="string">&quot;blink&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/game-map/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GameMap</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$canvas = $(<span class="string">`&lt;canvas tabindex=0&gt;&lt;/canvas&gt;`</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$canvas.focus();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="本地前端">本地前端</h2><p>要实现两个部分： 1. 文本输入框（让用户输入要发送的信息） 2. 历史记录显示框（之前用户发送的信息的显示框）</p><p>欲实现逻辑：用户按下 <code>&lt;Enter&gt;</code> 后，游戏界面弹出文本输入框，然后聚焦于文本输入框，且同时弹出历史记录显示框 3 秒</p><p>然后用户输入信息后，按下 <code>&lt;Enter&gt;</code> 后发出信息，接着信息会显示在历史记录显示框最下方，并弹出历史记录显示框 3 秒</p><p><strong><code>playground/chat_field/zbase.js</code></strong></p><p>chat field 负责管理 文本输入框 和 历史记录显示框</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatField</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.$history = $(<span class="string">`&lt;div class=&quot;ac-game-chat-field-history&quot;&gt;&lt;/div&gt;`</span>);</span><br><span class="line">        <span class="built_in">this</span>.$input = $(<span class="string">`&lt;input type=&quot;text&quot; class=&quot;ac-game-chat-field-input&quot;&gt;`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.$history.hide();</span><br><span class="line">        <span class="built_in">this</span>.$input.hide();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.func_id = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.playground.$playground.append(<span class="built_in">this</span>.$history);</span><br><span class="line">        <span class="built_in">this</span>.playground.$playground.append(<span class="built_in">this</span>.$input);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.add_listening_events();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.$input.keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.which === <span class="number">27</span>) &#123;   <span class="comment">//ESC</span></span><br><span class="line">                outer.hide_input();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">13</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> username = outer.playground.root.settings.username;</span><br><span class="line">                <span class="keyword">let</span> text = outer.$input.val();</span><br><span class="line">                <span class="keyword">if</span> (text) &#123;</span><br><span class="line">                    outer.$input.val(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                    outer.add_message(username, text);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">show_history</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.$history.fadeIn();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.func_id) <span class="built_in">clearTimeout</span>(<span class="built_in">this</span>.func_id);</span><br><span class="line">        <span class="built_in">this</span>.func_id = <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.$history.fadeOut();</span><br><span class="line">            outer.func_id = <span class="literal">null</span>;</span><br><span class="line">        &#125;, <span class="number">3000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render_message</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> $(<span class="string">`&lt;div&gt;<span class="subst">$&#123;message&#125;</span>&lt;/div&gt;`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">add_message</span>(<span class="params">username, text</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.show_history();</span><br><span class="line">        <span class="keyword">let</span> message = <span class="string">`[<span class="subst">$&#123;username&#125;</span>] <span class="subst">$&#123;text&#125;</span>`</span>;</span><br><span class="line">        <span class="built_in">this</span>.$history.append(<span class="built_in">this</span>.render_message(message));</span><br><span class="line">        <span class="built_in">this</span>.$history.scrollTop(<span class="built_in">this</span>.$history[<span class="number">0</span>].scrollHeight);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">show_input</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.show_history();</span><br><span class="line">        <span class="built_in">this</span>.$input.show();</span><br><span class="line">        <span class="built_in">this</span>.$input.focus();    <span class="comment">//输入时，聚焦于输入框</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">hide_input</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.$input.hide();</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.focus();   <span class="comment">//退出时，聚焦回游戏界面</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/zbase.js</code></strong></p><p>把它创建出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.chat_field = <span class="keyword">new</span> ChatField(<span class="built_in">this</span>);</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>playground/player/zbase.js</code></strong></p><p>添加监听事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.playground.game_map.$canvas.keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (e.which === <span class="number">13</span>) &#123;   <span class="comment">// enter (显示对话框)</span></span><br><span class="line">                <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                    outer.playground.chat_field.show_input();</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">27</span>) &#123;    <span class="comment">//esc（关闭对话框）</span></span><br><span class="line">                <span class="keyword">if</span> (outer.playground.mode === <span class="string">&quot;multi mode&quot;</span>) &#123;</span><br><span class="line">                    outer.playground.char_field.hide_input();</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>game.css</code></strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="selector-class">.ac-game-chat-field-history</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">66%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">32%</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-chat-field-history</span>::-webkit-scrollbar &#123;</span><br><span class="line">    width: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ac-game-chat-field-input</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">86%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3vh</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">2vh</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">222</span>,<span class="number">225</span>,<span class="number">230</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="联机聊天窗">联机聊天窗</h2><p>经过前几节课的洗礼，这个就很简单了，不需要看视频相信也可以独立完成</p><h3 id="前端-3">前端</h3><p><strong><code>playground/chat_field/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChatField</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.$input.keydown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (e.which === <span class="number">13</span>) &#123;</span><br><span class="line">                ...</span><br><span class="line">                <span class="keyword">if</span> (text) &#123;</span><br><span class="line">                    ...</span><br><span class="line">                    outer.playground.mps.send_message(text);</span><br><span class="line">                &#125;</span><br><span class="line">                ...</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>js/src/playground/socket/multiplayer/</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayerSocket</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">send_message</span>(<span class="params">text</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">this</span>.ws.send(<span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">            <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;message&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;uuid&#x27;</span>: outer.uuid,</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: outer.playground.root.settings.username,</span><br><span class="line">            <span class="string">&#x27;text&#x27;</span>: text,</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">receive_message</span>(<span class="params">username, text</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.playground.chat_field.add_message(username, text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后端-4">后端</h3><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">message</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.channel_layer.group_send(</span><br><span class="line">            self.room_name,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;message&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: data[<span class="string">&#x27;uuid&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: data[<span class="string">&#x27;username&#x27;</span>],</span><br><span class="line">                <span class="string">&#x27;text&#x27;</span>: data[<span class="string">&#x27;text&#x27;</span>],</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure><h1 id="实现匹配系统-ஐ">实现匹配系统 ஐ</h1><p>本章节内容是利用 thrift 创建客户端-服务端交互的接口</p><p>然后利用该接口完成一个匹配系统</p><p>匹配系统由一个消息队列 + 生产者-消费者模型 + 匹配池 完成</p><p>基本与 Linux基础课 里的部分完全一致，因此不会做过多笔记和阐述</p><p>当时我们是拿 cpp 来写的，写了差不多 200 行，整整就是一个大模拟题啊 hh</p><p>本节会拿 py 来实现，差不多 140 行即可</p><p><strong><code>thrift</code> 接口文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">namespace py match_service</span><br><span class="line"></span><br><span class="line">service Match &#123;</span><br><span class="line">    i32 add_player(1: i32 score, 2: string uuid, 3: string username, 4: string photo, 5: string channel_name),</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后用该源文件生成接口文件，不再做过多阐述</p><h2 id="服务端">服务端</h2><p>配置 <code>asgi.py</code> 让服务端进程可以调用客户端进程里的函数</p><p><strong><code>acapp/acapp/asgi.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line">os.environ.setdefault(<span class="string">&#x27;DJANGO_SETTINGS_MODULE&#x27;</span>, <span class="string">&#x27;acapp.settings&#x27;</span>)</span><br><span class="line">django.setup()</span><br><span class="line">...</span><br><span class="line"><span class="keyword">from</span> channels.layers <span class="keyword">import</span> get_channel_layer</span><br><span class="line">channel_layer = get_channel_layer()</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong><code>acapp/match_system/src/main.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.insert(<span class="number">0</span>, glob.glob(<span class="string">&#x27;../../&#x27;</span>)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> match_server.match_service <span class="keyword">import</span> Match</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TSocket</span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TTransport</span><br><span class="line"><span class="keyword">from</span> thrift.protocol <span class="keyword">import</span> TBinaryProtocol</span><br><span class="line"><span class="keyword">from</span> thrift.server <span class="keyword">import</span> TServer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> acapp.asgi <span class="keyword">import</span> channel_layer</span><br><span class="line"><span class="keyword">from</span> asgiref.sync <span class="keyword">import</span> async_to_sync</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line">queue = Queue()  <span class="comment"># 消息队列</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, score, uuid, username, photo, channel_name</span>):</span></span><br><span class="line">        self.score = score</span><br><span class="line">        self.uuid = uuid</span><br><span class="line">        self.username = username</span><br><span class="line">        self.photo = photo</span><br><span class="line">        self.channel_name = channel_name</span><br><span class="line">        self.waiting_time = <span class="number">0</span>  <span class="comment"># 等待时间</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pool</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.players = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_player</span>(<span class="params">self, player</span>):</span></span><br><span class="line">        self.players.append(player)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_match</span>(<span class="params">self, a, b</span>):</span></span><br><span class="line">        dt = <span class="built_in">abs</span>(a.score - b.score)</span><br><span class="line">        a_max_dif = a.waiting_time * <span class="number">50</span></span><br><span class="line">        b_max_dif = b.waiting_time * <span class="number">50</span></span><br><span class="line">        <span class="keyword">return</span> dt &lt;= a_max_dif <span class="keyword">and</span> dt &lt;= b_max_dif</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">match_success</span>(<span class="params">self, ps</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Match Success: %s %s %s&quot;</span> % (ps[<span class="number">0</span>].username, ps[<span class="number">1</span>].username, ps[<span class="number">2</span>].username))</span><br><span class="line">        room_name = <span class="string">&quot;room-%s-%s-%s&quot;</span> % (ps[<span class="number">0</span>].uuid, ps[<span class="number">1</span>].uuid, ps[<span class="number">2</span>].uuid)</span><br><span class="line">        players = []</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> ps:</span><br><span class="line">            async_to_sync(channel_layer.group_add)(room_name, p.channel_name)</span><br><span class="line">            players.append(&#123;</span><br><span class="line">                <span class="string">&#x27;uuid&#x27;</span>: p.uuid,</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: p.username,</span><br><span class="line">                <span class="string">&#x27;photo&#x27;</span>: p.photo,</span><br><span class="line">                <span class="string">&#x27;hp&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">            &#125;)</span><br><span class="line">        cache.<span class="built_in">set</span>(room_name, players, <span class="number">3600</span>)  <span class="comment"># 有效时间：1小时</span></span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> ps:</span><br><span class="line">            async_to_sync(channel_layer.group_send)(</span><br><span class="line">                room_name,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&#x27;type&#x27;</span>: <span class="string">&quot;group_send_event&quot;</span>,</span><br><span class="line">                    <span class="string">&#x27;event&#x27;</span>: <span class="string">&quot;create_player&quot;</span>,</span><br><span class="line">                    <span class="string">&#x27;uuid&#x27;</span>: p.uuid,</span><br><span class="line">                    <span class="string">&#x27;username&#x27;</span>: p.username,</span><br><span class="line">                    <span class="string">&#x27;photo&#x27;</span>: p.photo,</span><br><span class="line">                &#125;</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increase_waiting_time</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> self.players:</span><br><span class="line">            player.waiting_time += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">match</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="built_in">len</span>(self.players) &gt;= <span class="number">3</span>:</span><br><span class="line">            self.players = <span class="built_in">sorted</span>(self.players, key=<span class="keyword">lambda</span> p: p.score)</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(self.players) - <span class="number">2</span>):</span><br><span class="line">                a, b, c = self.players[i], self.players[i + <span class="number">1</span>], self.players[i + <span class="number">2</span>]</span><br><span class="line">                <span class="keyword">if</span> self.check_match(a, b) <span class="keyword">and</span> self.check_match(a, c) <span class="keyword">and</span> self.check_match(b, c):</span><br><span class="line">                    self.match_success([a, b, c])</span><br><span class="line">                    self.players = self.players[:i] + self.players[i + <span class="number">3</span>:]</span><br><span class="line">                    flag = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        self.increase_waiting_time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MatchHandler</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_player</span>(<span class="params">self, score, uuid, username, photo, channel_name</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Add Player: %s %d&quot;</span> % (username, score))</span><br><span class="line">        player = Player(score, uuid, username, photo, channel_name)</span><br><span class="line">        queue.put(player)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_player_from_queue</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> queue.get_nowait()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">worker</span>():</span></span><br><span class="line">    pool = Pool()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        player = get_player_from_queue()</span><br><span class="line">        <span class="keyword">if</span> player:</span><br><span class="line">            pool.add_player(player)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            pool.match()</span><br><span class="line">            sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    handler = MatchHandler()</span><br><span class="line">    processor = Match.Processor(handler)</span><br><span class="line">    transport = TSocket.TServerSocket(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">9090</span>)</span><br><span class="line">    tfactory = TTransport.TBufferedTransportFactory()</span><br><span class="line">    pfactory = TBinaryProtocol.TBinaryProtocolFactory()</span><br><span class="line"></span><br><span class="line">    server = TServer.TThreadedServer(</span><br><span class="line">        processor, transport, tfactory, pfactory)</span><br><span class="line"></span><br><span class="line">    Thread(target=worker, daemon=<span class="literal">True</span>).start()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Starting the server...&#x27;</span>)</span><br><span class="line">    server.serve()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;done.&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="客户端">客户端</h2><p>扩展数据库表，让其可以存放 rank分 的信息</p><p><strong><code>game/models/player/player.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    score = models.IntegerField(default=<span class="number">1500</span>)</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> channels.generic.websocket <span class="keyword">import</span> AsyncWebsocketConsumer</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"><span class="keyword">from</span> django.core.cache <span class="keyword">import</span> cache</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> thrift <span class="keyword">import</span> Thrift</span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TSocket</span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TTransport</span><br><span class="line"><span class="keyword">from</span> thrift.protocol <span class="keyword">import</span> TBinaryProtocol</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> match_system.src.match_server.match_service <span class="keyword">import</span> Match</span><br><span class="line"><span class="keyword">from</span> game.models.player.player <span class="keyword">import</span> Player</span><br><span class="line"><span class="keyword">from</span> channels.db <span class="keyword">import</span> database_sync_to_async</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">connect</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">await</span> self.accept()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">disconnect</span>(<span class="params">self, close_code</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.room_name:</span><br><span class="line">            <span class="keyword">await</span> self.channel_layer.group_discard(self.room_name, self.channel_name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">create_player</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        self.room_name = <span class="literal">None</span></span><br><span class="line">        self.uuid = data[<span class="string">&#x27;uuid&#x27;</span>]</span><br><span class="line">        <span class="comment"># Make socket</span></span><br><span class="line">        transport = TSocket.TSocket(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">9090</span>)</span><br><span class="line">        <span class="comment"># Buffering is critical. Raw sockets are very slow</span></span><br><span class="line">        transport = TTransport.TBufferedTransport(transport)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Wrap in a protocol</span></span><br><span class="line">        protocol = TBinaryProtocol.TBinaryProtocol(transport)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Create a client to use the protocol encoder</span></span><br><span class="line">        client = Match.Client(protocol)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">db_get_player</span>():</span></span><br><span class="line">            <span class="keyword">return</span> Player.objects.get(user__username=data[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        player = <span class="keyword">await</span> database_sync_to_async(db_get_player)()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Connect!</span></span><br><span class="line">        transport.<span class="built_in">open</span>()</span><br><span class="line"></span><br><span class="line">        client.add_player(player.score, data[<span class="string">&#x27;uuid&#x27;</span>], data[<span class="string">&#x27;username&#x27;</span>], data[<span class="string">&#x27;photo&#x27;</span>], self.channel_name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Close!</span></span><br><span class="line">        transport.close()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">group_send_event</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.room_name:</span><br><span class="line">            keys = cache.keys(<span class="string">&#x27;*%s*&#x27;</span> % (self.uuid))</span><br><span class="line">            <span class="keyword">if</span> keys:</span><br><span class="line">                self.room_name = keys[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">await</span> self.send(text_data=json.dumps(data))</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h1 id="项目收尾-ஐ">项目收尾 ஐ</h1><h2 id="加密压缩js代码">加密、压缩js代码</h2><p>安装 <code>terser</code> :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install npm</span><br><span class="line">sudo npm install terser -g</span><br></pre></td></tr></table></figure><p><code>terser</code> 不仅支持文件输入，也支持标准输入。结果会输出到标准输出中。</p><p>使用方式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">terser xxx.js -c -m</span><br></pre></td></tr></table></figure><p>我们将整合 <code>js</code> 文件的脚本修改一下即可：</p><p><strong><code>scripts/compress_game_js.sh</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">JS_PATH=/home/acs/acapp/game/static/js/</span><br><span class="line">JS_PATH_DIST=<span class="variable">$&#123;JS_PATH&#125;</span>dist/</span><br><span class="line">JS_PATH_SRC=<span class="variable">$&#123;JS_PATH&#125;</span>src/</span><br><span class="line"></span><br><span class="line">find <span class="variable">$JS_PATH_SRC</span> -<span class="built_in">type</span> f -name <span class="string">&#x27;*.js&#x27;</span> | sort | xargs cat | terser -c -m &gt; <span class="variable">$&#123;JS_PATH_DIST&#125;</span>game.js</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> | python3 manage.py collectstatic</span><br></pre></td></tr></table></figure><h2 id="清理监听函数">清理监听函数</h2><p>在AcAPP关闭之前触发的事件可以通过如下api添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AcWingOS.api.window.on_close(func);</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>同一个页面中，多个acapp引入的js代码只会加载一次，因此 <code>AC_GAME_OBJECTS</code> 等全局变量是同一个页面、同一个 <code>acapp</code> 的所有窗口共用的。</li><li>各自创建的局部变量是独立的，比如 <code>new AcGame()</code> 创建出的对象各个窗口是独立的。</li></ul><p>我们给每一个窗口创建一个 <code>uid</code> 然后根据不同的 <code>uid</code> 进行事件解绑</p><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">create_uuid</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">let</span> x = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">10</span>));   <span class="comment">//[0, 10)</span></span><br><span class="line">            res += x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> uuid = <span class="built_in">this</span>.create_uuid();</span><br><span class="line">        $(<span class="built_in">window</span>).on(<span class="string">`resize.<span class="subst">$&#123;uuid&#125;</span>`</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.resize();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.root.AcWingOS) &#123;</span><br><span class="line">            outer.root.AcWingOS.api.window.on_close(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="built_in">window</span>).off(<span class="string">`resize.<span class="subst">$&#123;uuid&#125;</span>`</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写每局游戏的结束界面">编写每局游戏的结束界面</h2><p>单独创建一个结束界面，然后游戏结束的时候渲染出该结束界面即可</p><p>因为结束界面要覆盖在游戏界面之上，因此我们需要先修改一下游戏引擎，添加一个 <code>late_update</code></p><p>在每一帧渲染的内容最后再渲染，从而实现结束界面叠加在游戏界面之上的效果</p><p><strong><code>ac_game_object/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">late_update</span>(<span class="params"></span>)</span> &#123; <span class="comment">//每一帧均会执行一次，且在所有 update 执行完后才执行</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">let</span> AC_GAME_ANIMATION = <span class="function"><span class="keyword">function</span>(<span class="params">timestamp</span>) </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; AC_GAME_OBJECTS.length; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">let</span> obj = AC_GAME_OBJECTS[i];</span><br><span class="line">        obj.late_update();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后我们做一个渲染出结束界面的类</p><p><strong><code>playground/score_board/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ScoreBoard</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">playground</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>();</span><br><span class="line">        <span class="built_in">this</span>.playground = playground;</span><br><span class="line">        <span class="built_in">this</span>.ctx = <span class="built_in">this</span>.playground.game_map.ctx;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.state = <span class="literal">null</span>;  <span class="comment">// win-胜利；lose-失败</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.win_img = <span class="keyword">new</span> Image();</span><br><span class="line">        <span class="built_in">this</span>.win_img.src = <span class="string">&quot;https://cdn.acwing.com/media/article/image/2021/12/17/1_8f58341a5e-win.png&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.lose_img = <span class="keyword">new</span> Image();</span><br><span class="line">        <span class="built_in">this</span>.lose_img.src = <span class="string">&quot;https://cdn.acwing.com/media/article/image/2021/12/17/1_9254b5f95e-lose.png&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">start</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">add_listening_events</span>(<span class="params"></span>)</span> &#123;    <span class="comment">//点击后，返回主页面</span></span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="keyword">let</span> $canvas = <span class="built_in">this</span>.playground.game_map.$canvas;</span><br><span class="line"></span><br><span class="line">        $canvas.on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.playground.hide();</span><br><span class="line">            outer.playground.root.menu.show();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">win</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.state = <span class="string">&quot;win&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.add_listening_events();</span><br><span class="line">        &#125;, <span class="number">1000</span>);   <span class="comment">//1秒后监听点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">lose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.state = <span class="string">&quot;lose&quot;</span>;</span><br><span class="line">        <span class="keyword">let</span> outer = <span class="built_in">this</span>;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            outer.add_listening_events();</span><br><span class="line">        &#125;, <span class="number">1000</span>);   <span class="comment">//1秒后监听点击事件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">late_update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.render();  <span class="comment">//渲染在图层最上方</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">render</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> len = <span class="built_in">this</span>.playground.height / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.state === <span class="string">&quot;win&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.win_img, <span class="built_in">this</span>.playground.width / <span class="number">2</span> - len / <span class="number">2</span>, <span class="built_in">this</span>.playground.height / <span class="number">2</span> - len / <span class="number">2</span>, len, len);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.state === <span class="string">&quot;lose&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.ctx.drawImage(<span class="built_in">this</span>.lose_img, <span class="built_in">this</span>.playground.width / <span class="number">2</span> - len / <span class="number">2</span>, <span class="built_in">this</span>.playground.height / <span class="number">2</span> - len / <span class="number">2</span>, len, len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过游戏结束的逻辑判断，渲染结束界面，同时在结束并返回主菜单的时候，重置游戏元素</p><p>游戏元素重置</p><p><strong><code>playground/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AcGamePlayground</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">show</span>(<span class="params">mode</span>)</span> &#123;    <span class="comment">//打开 playground 界面</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.score_board = <span class="keyword">new</span> ScoreBoard(<span class="built_in">this</span>);</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">hide</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">//清空所有游戏元素</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">this</span>.players &amp;&amp; <span class="built_in">this</span>.players.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.players[<span class="number">0</span>].destroy();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.game_map) &#123;</span><br><span class="line">            <span class="built_in">this</span>.game_map.destroy();</span><br><span class="line">            <span class="built_in">this</span>.game_map = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.notice_board) &#123;</span><br><span class="line">            <span class="built_in">this</span>.notice_board.destroy();</span><br><span class="line">            <span class="built_in">this</span>.notice_board = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.score_board) &#123;</span><br><span class="line">            <span class="built_in">this</span>.score_board.destroy();</span><br><span class="line">            <span class="built_in">this</span>.score_board = <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.$playground.empty();   <span class="comment">//清空所有html标签</span></span><br><span class="line">        <span class="built_in">this</span>.$playground.hide();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>游戏结束的逻辑判断</p><p><strong><code>playground/player/zbase.js</code></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> <span class="keyword">extends</span> <span class="title">AcGameObject</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">update</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="built_in">this</span>.update_win();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">update_win</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 竞赛状态，且只有一名玩家，且改名玩家就是我，则胜利</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.playground.state === <span class="string">&quot;fighting&quot;</span> &amp;&amp; <span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span> &amp;&amp; <span class="built_in">this</span>.playground.players.length === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.playground.state = <span class="string">&quot;over&quot;</span>;</span><br><span class="line">            <span class="built_in">this</span>.playground.score_board.win();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="function"><span class="title">on_destroy</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 我死亡，且游戏处于竞赛状态，则失败</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.character === <span class="string">&quot;me&quot;</span> &amp;&amp; <span class="built_in">this</span>.playground.state === <span class="string">&quot;fighting&quot;</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.playground.state = <span class="string">&quot;over&quot;</span></span><br><span class="line">            <span class="built_in">this</span>.playground.score_board.lose();</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更新战绩">更新战绩</h2><p>这里我们完全交给后端来判断</p><p>在处理广播的 <code>attack</code> 信息的时候，先前我们额外留了一个参数 <code>hp</code></p><p>围绕该 <code>hp</code> 进行续写，若当前房间内 <code>hp</code> 大于 0 的玩家少于等于 1 个</p><p>则对于所有 <code>hp</code> 为 0 的玩家减 rank 分，大于 0 的玩家加 rank 分</p><p><strong><code>consumers/multiplayer/index.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiPlayer</span>(<span class="params">AsyncWebsocketConsumer</span>):</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">attack</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.room_name:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        players = cache.get(self.room_name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> players:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">            <span class="keyword">if</span> player[<span class="string">&#x27;uuid&#x27;</span>] == data[<span class="string">&#x27;attackee_uuid&#x27;</span>]:</span><br><span class="line">                player[<span class="string">&#x27;hp&#x27;</span>] -= <span class="number">25</span></span><br><span class="line"></span><br><span class="line">        remain_cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">            <span class="keyword">if</span> player[<span class="string">&#x27;hp&#x27;</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                remain_cnt += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> remain_cnt &gt; <span class="number">1</span>:  <span class="comment"># 继续进行游戏</span></span><br><span class="line">            <span class="keyword">if</span> self.room_name:</span><br><span class="line">                cache.<span class="built_in">set</span>(self.room_name, players, <span class="number">3600</span>)</span><br><span class="line">        <span class="keyword">else</span>:   <span class="comment"># 结算 </span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">db_update_player_score</span>(<span class="params">username, score</span>):</span></span><br><span class="line">                player = Player.objects.get(user__username=username)</span><br><span class="line">                player.score += score</span><br><span class="line">                player.save()</span><br><span class="line">            <span class="keyword">for</span> player <span class="keyword">in</span> players:</span><br><span class="line">                <span class="keyword">if</span> player[<span class="string">&#x27;hp&#x27;</span>] &lt;= <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">await</span> database_sync_to_async(db_update_player_score)(player[<span class="string">&#x27;username&#x27;</span>], -<span class="number">5</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">await</span> database_sync_to_async(db_update_player_score)(player[<span class="string">&#x27;username&#x27;</span>], <span class="number">10</span>)</span><br><span class="line">        ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="添加favicon.ico">添加favicon.ico</h2><p>这是修正一个小 BUG，之前 web 端一直没有网页显示图标，这里给他加上去</p><p><strong><code>game/templates/multiends/web.html</code></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.acwing.com/media/article/image/2021/12/17/1_be4c11ce5f-acapp.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 互联网工程项目教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AcWing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing Linux 基础课</title>
      <link href="/Engineer/acw_linux/"/>
      <url>/Engineer/acw_linux/</url>
      
        <content type="html"><![CDATA[<h1 id="常用文件管理命令-ஐ">常用文件管理命令 ஐ</h1><blockquote><p>environment： AC-Terminal</p></blockquote><h2 id="常用命令介绍">常用命令介绍</h2><ol type="1"><li><code>ctrl c</code>：<strong>取消命令，并且换行</strong></li><li><code>ctrl u</code>：<strong>清空本行命令</strong></li><li><code>tab</code>：<strong>可以补全命令和文件名</strong> 如果补全不了快速按两下tab键，可以显示备选选项</li><li><code>ls</code>：<strong>列出当前目录下所有文件</strong><ol type="1"><li>蓝色的是文件夹</li><li>白色的是普通文件</li><li>绿色的是可执行文件</li></ol></li><li><code>pwd</code>：<strong>显示当前路径</strong></li><li><code>cd XXX</code>：<strong>进入 <code>XXX</code> 目录下</strong> <code>cd ..</code>： <strong>返回上层目录</strong></li><li><code>cp XXX YYY</code>： <strong>将 <code>XXX</code> 文件复制成 <code>YYY</code></strong> <code>XXX</code> 和 <code>YYY</code> 可以是一个路径，比如 <code>../dir_c/a.txt</code>，表示上层目录下的 <code>dir_c</code> 文件夹下的文件 <code>a.txt</code></li><li><code>mkdir XXX</code>：<strong>创建目录 <code>XXX</code></strong></li><li><code>rm XXX</code>：<strong>删除普通文件</strong> <code>rm XXX -r</code>：<strong>删除文件夹</strong></li><li><code>mv XXX YYY</code>：<strong>将 <code>XXX</code> 文件移动到<code>YYY</code></strong> 和 <code>cp</code> 命令一样，<code>XXX</code> 和<code>YYY</code> 可以是一个路径 <strong>重命名也是用这个命令</strong></li><li><code>touch XXX</code>： <strong>创建一个文件</strong></li><li><code>cat XXX</code>： <strong>展示文件 <code>XXX</code> 中的内容</strong></li><li><strong>复制文本</strong> <strong>windows/Linux</strong> 下：<code>Ctrl + insert</code> <strong>Mac</strong> 下：<code>command + c</code></li><li><strong>粘贴文本</strong> <strong>windows/Linux</strong> 下：<code>Shift + insert</code> <strong>Mac</strong> 下：<code>command + v</code></li></ol><h2 id="ac-terminal的lab操作指南">AC-Terminal的lab操作指南</h2><ol type="1"><li><code>homework 1 create</code> 可以重新创建所有 <code>lesson_1</code> 的作业</li><li><code>homework 1 create id</code> 可以单独创建 <code>lesson_1</code> 的第 <code>id</code> 个作业 e.g. <code>homework 1 create 0</code> 可以只重新创建 <code>lesson_1</code> 的第 <code>0</code> 个作业</li><li><code>homework 1 test</code> 可以评测 <code>lesson_1</code> 的所有作业</li><li><code>homework 1 show</code> 可以显示第 <code>1</code> 个作业的要求</li></ol><h2 id="作业">作业</h2><p><strong>0.进入homework_0文件夹，分别创建文件夹dir_a, dir_b, dir_c</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_0</span><br><span class="line">mkdir dir_a dir_b dir_c</span><br></pre></td></tr></table></figure><p><strong>1.进入homework_1文件夹，将a.txt, b.txt, c.txt 分别复制成: a.txt.bak, b.txt.bak, c.txt.bak</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_1</span><br><span class="line">cp a.txt a.txt.bak</span><br><span class="line">cp b.txt b.txt.bak</span><br><span class="line">cp c.txt c.txt.bak</span><br></pre></td></tr></table></figure><p><strong>2.进入homework_2文件夹，将a.txt, b.txt, c.txt 分别重命名为: a_new.txt, b_new.txt, c_new.txt</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_2</span><br><span class="line">mv a.txt a_new.txt</span><br><span class="line">mv b.txt b_new.txt</span><br><span class="line">mv c.txt c_new.txt</span><br></pre></td></tr></table></figure><p><strong>3.进入homework_3文件夹，将dir_a文件夹下的a.txt, b.txt, c.txt分别移动到文件夹dir_b下</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_3</span><br><span class="line">mv dir_a/* dir_b/</span><br></pre></td></tr></table></figure><p><strong>4.进入homework_4文件夹，将普通文件a.txt, b.txt, c.txt删除</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_4</span><br><span class="line">rm a.txt b.txt c.txt</span><br></pre></td></tr></table></figure><p><strong>5.进入homework_5文件夹，将文件夹dir_a, dir_b, dir_c删除</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_5</span><br><span class="line">rm * -r</span><br></pre></td></tr></table></figure><p><strong>6.进入homework_6文件夹，查看task.txt的内容，并按其指示进行操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_6</span><br><span class="line">cat task.txt</span><br><span class="line">mkdir dir_a</span><br><span class="line">mv task.txt dir_a/done.txt</span><br></pre></td></tr></table></figure><p><strong>7.进入homework_7文件夹，创建文件夹dir_0, dir_1, dir_2，</strong> 1. <strong>将a.txt, b.txt, c.txt复制到dir_0下，重命名为a0.txt, b0.txt, c0.txt;</strong> 2. <strong>将a.txt, b.txt, c.txt复制到dir_1下，重命名为a1.txt, b1.txt, c1.txt;</strong> 3. <strong>将a.txt, b.txt, c.txt复制到dir_2下，重命名为a2.txt, b2.txt, c2.txt;</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_7</span><br><span class="line">mkdir dir_0 dir_1 dir_2</span><br><span class="line">cp a.txt dir_0/a0.txt</span><br><span class="line">cp a.txt dir_1/a1.txt</span><br><span class="line">cp a.txt dir_2/a2.txt</span><br><span class="line">cp b.txt dir_0/b0.txt</span><br><span class="line">cp b.txt dir_1/b1.txt</span><br><span class="line">cp b.txt dir_2/b2.txt</span><br><span class="line">cp c.txt dir_0/c0.txt</span><br><span class="line">cp c.txt dir_1/c1.txt</span><br><span class="line">cp c.txt dir_2/c2.txt</span><br></pre></td></tr></table></figure><p><strong>8.进入homework_8文件夹，分别在dir_a, dir_b, dir_c文件夹下查看task.txt的内容，并分别按照指示进行操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_8</span><br><span class="line"><span class="built_in">cd</span> dir_a</span><br><span class="line">cat task.txt</span><br><span class="line">rm a.txt</span><br><span class="line"><span class="built_in">cd</span> ../dir_b/</span><br><span class="line">cat task.txt</span><br><span class="line">mv b.txt b_new.txt</span><br><span class="line"><span class="built_in">cd</span> ../dir_c/</span><br><span class="line">cat task.txt</span><br><span class="line">cp c.txt c.txt.bak</span><br></pre></td></tr></table></figure><p><strong>9.进入homework_9文件夹，将其中所有txt类型的文件删除</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_9</span><br><span class="line">rm *.txt</span><br></pre></td></tr></table></figure><h1 id="tmux与vim-ஐ">tmux与vim ஐ</h1><h2 id="tmux-教程">tmux 教程</h2><p><strong>功能:</strong></p><ol type="1"><li>分屏</li><li>允许断开Terminal连接后，继续运行进程</li></ol><p><strong>结构:</strong></p><p>一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane</p><p>实例: <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tmux:</span><br><span class="line">    session 0:</span><br><span class="line">    |   window 0:</span><br><span class="line">    |   |   pane 0</span><br><span class="line">    |   |   pane 1</span><br><span class="line">    |   |   pane 2</span><br><span class="line">    |   |   ...</span><br><span class="line">    |   window 1</span><br><span class="line">    |   window 2</span><br><span class="line">    |   ...</span><br><span class="line">    session 1</span><br><span class="line">    session 2</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><p><strong>操作:</strong></p><blockquote><p>Ac-Terminal 下前缀键被修改成了 <code>Ctrl + a</code>，一般的默认情况下是 <code>Ctrl + b</code></p></blockquote><ol type="1"><li><code>tmux</code>: 新建一个 <strong>session</strong> ，其中包含一个 <strong>window</strong> <strong>window</strong> 中包含一个 <strong>pane</strong> ，<strong>pane</strong> 里打开了一个 <strong>shell</strong> 对话框。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>%</code> : 将当前 <strong>pane</strong> 左右平分成两个 <strong>pane</strong> 。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>"</code> : 将当前 <strong>pane</strong> 上下平分成两个 <strong>pane</strong> 。</li><li><code>Ctrl + d</code>: 关闭当前 <strong>pane</strong> ； 如果当前 <strong>window</strong> 的所有 <strong>pane</strong> 均已关闭，则自动关闭 <strong>window</strong> ； 如果当前 <strong>session</strong> 的所有 <strong>window</strong> 均已关闭，则自动关闭 <strong>session</strong> 。</li><li>鼠标点击可以选 <strong>pane</strong> 。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>方向键</code> : 选择相邻的 <strong>pane</strong> 。</li><li>鼠标拖动 <strong>pane</strong> 之间的分割线，可以调整分割线的位置。</li><li>按住 <code>Ctrl + a</code> 的 <strong>同时</strong> 按 <code>方向键</code>，可以调整 <strong>pane</strong> 之间分割线的位置。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>z</code> : 将当前 <strong>pane</strong> 全屏/取消全屏。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>d</code> : <strong>挂起</strong> 当前 <strong>session</strong> 。</li><li><code>tmux a</code>: 打开之前挂起的session。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>s</code> : 选择其它 <strong>session</strong> 。 1. 方向键 —— <code>上</code>: 选择上一项 <strong>session/window/pane</strong> 2. 方向键 —— <code>下</code>: 选择下一项 <strong>session/window/pane</strong> 3. 方向键 —— <code>右</code>: 展开当前项 <strong>session/window</strong> 4. 方向键 —— <code>左</code>: 闭合当前项 <strong>session/window</strong></li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>c</code> : 在当前 <strong>session</strong> 中创建一个新的 <strong>window</strong> 。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>w</code> : 选择其他 <strong>window</strong> ，操作方法与(12)完全相同。</li><li>按下 <code>Ctrl + a</code> 后手指松开，然后按 <code>PageUp</code> : 翻阅当前 <strong>pane</strong> 内的内容。</li><li>鼠标滚轮: 翻阅当前 <code>pane</code> 内的内容。</li><li>在tmux中选中文本时，需要按住 <code>shift</code> 键。 （仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）</li><li>tmux中复制/粘贴文本的通用方式:<ol type="1"><li>按下 <code>Ctrl + a</code> 后松开手指，然后按 <code>[</code></li><li>用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板</li><li>按下 <code>Ctrl + a</code> 后松开手指，然后按 <code>]</code> ，会将剪贴板中的内容粘贴到光标处</li></ol></li></ol><h2 id="vim-教程">vim 教程</h2><p><strong>功能:</strong> 1. 命令行模式下的文本编辑器。 2. 根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。 3. 使用方式: <code>vim filename</code> 1. 如果已有该文件，则打开它。 2. 如果没有该文件，则打开个一个新的文件，并命名为 <strong>filename</strong></p><p><strong>模式:</strong> 1. <strong>一般命令模式</strong> 默认模式。 命令输入方式: 类似于打游戏放技能，按不同字符，即可进行不同操作。 可以复制、粘贴、删除文本等。 2. <strong>编辑模式</strong> 在 <strong>一般命令模式</strong> 里按下 <code>i</code> ，会进入 <strong>编辑模式</strong> 。 按下 <code>ESC</code> 会退出 <strong>编辑模式</strong> ，返回到 <strong>一般命令模式</strong> 。 3. <strong>命令行模式</strong> 在 <strong>一般命令模式</strong> 里按下 <code>:/?</code> 三个字母中的任意一个，会进入 <strong>命令行模式</strong> 。 命令行在最下面。 可以查找、替换、保存、退出、配置编辑器等。</p><p><strong>操作:</strong></p><ol type="1"><li><strong>一般模式切换到编辑模式</strong>（常用）<ol type="1"><li><code>i</code> : 在光标所处位置 <strong>直接</strong> 开始</li><li><code>a</code> : 在光标所处位置的 <strong>下一个字符</strong> 开始</li><li><code>o</code> : 在光标所处位置的 <strong>下一行</strong> 开始</li><li><code>r</code> : 取代当前光标处的字符，然后开始</li><li><code>[ESC]</code> : 退出编辑模式，回到一般模式</li></ol></li><li><strong>光标移动操作</strong><ol type="1"><li><code>h</code> 或 <code>左箭头键</code> : 光标向 <strong>左</strong> 移动 <strong>一个字符</strong></li><li><code>j</code> 或 <code>向下箭头</code> : 光标向 <strong>下</strong> 移动 <strong>一个字符</strong></li><li><code>k</code> 或 <code>向上箭头</code> : 光标向 <strong>上</strong> 移动 <strong>一个字符</strong></li><li><code>l</code> 或 <code>向右箭头</code> : 光标向 <strong>右</strong> 移动 <strong>一个字符</strong></li><li><code>n&lt;Space&gt;</code> : <strong>n</strong> 为数字，光标 <strong>向右移动这一行的n个字符</strong></li><li><code>n&lt;Enter&gt;</code> : <strong>n</strong> 为数字，光标 <strong>向下移动n行</strong></li><li><code>0</code> 或 <code>功能键[Home]</code>: 光标移动到 <strong>本行开头</strong></li><li><code>$</code> 或 <code>功能键[End]</code>: 光标移动到 <strong>本行末尾</strong></li><li><code>G</code>: 光标移动到 <strong>最后一行</strong></li><li><code>:n</code> 或 <code>nG</code> : <strong>n</strong> 为数字，光标移动到 <strong>第n行</strong></li><li><code>gg</code> : 光标移动到 <strong>第一行</strong> ，相当于 <code>1G</code></li></ol></li><li><strong>查找、替换操作</strong><ol type="1"><li><code>/word</code> : 向 <strong>光标之下</strong> <strong>寻找</strong> 第一个值为 <code>word</code> 的字符串。</li><li><code>?word</code> : 向 <strong>光标之上</strong> <strong>寻找</strong> 第一个值为 <code>word</code> 的字符串。</li><li><code>n</code> : <strong>重复</strong> 前一个 <strong>查找操作</strong></li><li><code>N</code> : <strong>反向</strong> <strong>重复</strong> 前一个 <strong>查找操作</strong></li><li><code>:n1,n2s/word1/word2/g</code> : <code>n1</code> 与 <code>n2</code> 为数字，在第 <code>n1</code> 行与 <code>n2</code> 行之间寻找 <code>word1</code> 这个字符串，并将该字符串 <strong>替换</strong> 为 <code>word2</code></li><li><code>:1,$s/word1/word2/g</code> : 将全文的 <code>word1</code> 替换为 <code>word2</code></li><li><code>:1,$s/word1/word2/gc</code> : 将全文的 <code>word1</code> 替换为 <code>word2</code> ，且在替换前 <strong>要求用户确认</strong>。</li></ol></li><li><strong>文本操作</strong>（可搭配 <code>数字+&lt;Enter&gt;/&lt;Space&gt;、0、G、$</code> 等使用，达到预期组合效果）<ol type="1"><li><code>v</code> : 选中文本</li><li><code>d</code> : <strong>删除选中的文本</strong></li><li><code>dd</code> : <strong>删除当前行</strong></li><li><code>y</code> : <strong>复制选中的文本</strong></li><li><code>yy</code> : <strong>复制当前行</strong></li><li><code>p</code> : 将复制的数据在光标的下一行/下一个位置 <strong>粘贴</strong></li><li><code>u</code> <strong>: 撤销</strong></li><li><code>Ctrl + r</code> : <strong>取消撤销</strong></li><li><code>&gt;</code> : 将选中的文本整体 <strong>向右缩进一次</strong></li><li><code>&lt;</code> : 将选中的文本整体 <strong>向左缩进一次</strong></li></ol></li><li><strong>命令行操作</strong><ol type="1"><li><code>:w</code> : <strong>保存</strong></li><li><code>:w!</code> : <strong>强制保存</strong></li><li><code>:q</code> : <strong>退出</strong></li><li><code>:q!</code> : <strong>强制退出</strong></li><li><code>:wq</code> : <strong>保存并退出</strong></li><li><code>:set paste</code> : <strong>设置成粘贴模式</strong>，<strong>取消代码自动缩进</strong></li><li><code>:set nopaste</code> : <strong>取消粘贴模式</strong>，<strong>开启代码自动缩进</strong></li><li><code>:set nu</code> : <strong>显示行号</strong></li><li><code>:set nonu</code> : <strong>隐藏行号</strong></li><li><code>:noh</code> <strong>关闭查找关键词高亮</strong></li></ol></li><li><code>gg=G</code> : <strong>将全文代码格式化</strong></li><li><code>Ctrl + q</code> : 当vim卡死时，可以 <strong>取消当前正在执行的命令</strong></li><li><strong>异常处理</strong> :<ol type="1"><li>每次用vim编辑文件时，会自动创建一个.filename.swp的临时文件。</li><li>如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种:<ol type="1"><li>找到正在打开该文件的程序，并退出</li><li>直接删掉该swp文件即可</li></ol></li></ol></li></ol><h2 id="作业-1">作业</h2><p><strong>0. 进入homework_0文件夹，创建文件names.txt，并顺次将下列姓名写入该文件，每个名字占一行。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_0</span><br><span class="line">vim names.txt</span><br><span class="line">输入 i 进入编辑模式</span><br><span class="line">依次输入各个单词</span><br><span class="line">按ESC返回一般命令模式</span><br><span class="line">按 :wq 保存并退出</span><br></pre></td></tr></table></figure><p><strong>1. 进入homework_1文件夹，打开problem.txt，并依次删除下列字符：</strong></p><ol type="1"><li><strong>最后一行第101个字符</strong></li><li><strong>第3行第8个字符</strong></li><li><strong>第1行第30个字符</strong></li><li><strong>第16行第55个字符</strong></li><li><strong>第9行第80个字符</strong></li></ol><p><strong>最后保存文件并退出</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_1</span><br><span class="line">vim problem.txt</span><br><span class="line"></span><br><span class="line">[1] 最后一行第101个字符：G101&lt;Space&gt;i&lt;Backspace&gt;ESC</span><br><span class="line">[2] 第3行第8个字符：3G8&lt;Space&gt;i&lt;Backspace&gt;ESC</span><br><span class="line">[3] 第1行第30个字符：gg30&lt;Space&gt;i&lt;Backspace&gt;ESC</span><br><span class="line">[4] 第16行第55个字符：:16&lt;Enter&gt;55&lt;Space&gt;i&lt;Backspace&gt;ESC</span><br><span class="line">[5] 第9行第80个字符：9G80&lt;Space&gt;i&lt;Backspace&gt;ESC</span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>2. 进入homework_2文件夹，打开problem.txt，并依次执行如下操作：</strong> 1. <strong>在第1个"two"的后面添加"abc"</strong> 2. <strong>在第2个"two"的前面添加"def"</strong> 3. <strong>将第3个"two"后面的连续12个字符删掉</strong> 4. <strong>将第4个"two"所在的行删掉</strong></p><p><strong>最后保存文件并退出。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_2</span><br><span class="line">vim problem.txt</span><br><span class="line"></span><br><span class="line">输入/two依次查找每个two</span><br><span class="line">[1] 在第1个<span class="string">&quot;two&quot;</span>的后面添加<span class="string">&quot;abc&quot;</span>  按i进入编辑模式添加即可</span><br><span class="line">[2] 在第2个<span class="string">&quot;two&quot;</span>的前面添加<span class="string">&quot;def&quot;</span>  按i进入编辑模式添加即可</span><br><span class="line">[3] 将第3个<span class="string">&quot;two&quot;</span>后面的连续12个字符删掉  按i进入编辑模式，然后直接删即可</span><br><span class="line">[4] 将第4个<span class="string">&quot;two&quot;</span>所在的行删掉  输入dd即可</span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>3. 进入homework_3文件夹，打开problem.txt，并依次执行如下操作：</strong></p><ol type="1"><li><strong>将第5行至第15行中所有 <code>of</code> 替换成 <code>OF</code></strong></li><li><strong>将全文中所有的 <code>the</code> 替换成 <code>THE</code></strong></li><li><strong>将第偶数个 <code>is</code>替换成 <code>IS</code>，第奇数个 <code>is</code>不变(下标从1开始)</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_3</span><br><span class="line">vim problem.txt</span><br><span class="line"></span><br><span class="line">[1] 将第5行至第15行中所有of替换成OF  :5,15s/of/OF/g</span><br><span class="line">[2] 将全文中所有的the替换成THE  :1,<span class="variable">$s</span>/the/THE/g</span><br><span class="line">[3] 将第偶数个is替换成IS，第奇数个is不变(下标从1开始)  :1,<span class="variable">$s</span>/is/IS/gc  然后ny交替按即可</span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>4. 进入homework_4文件夹，打开problem.txt，并依次执行如下操作：</strong></p><ol type="1"><li><strong>删除第11行</strong></li><li><strong>将所删除的行粘贴到文件最后一行的下一行</strong></li><li><strong>复制第5行</strong></li><li><strong>将所复制的行粘贴到文件当前最后一行的下一行</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_4</span><br><span class="line">vim problem.txt</span><br><span class="line"></span><br><span class="line">[1] 删除第11行  11Gdd</span><br><span class="line">[2] 将所删除的行粘贴到文件最后一行的下一行  Gp</span><br><span class="line">[3] 复制第5行  5Gyy</span><br><span class="line">[4] 将所复制的行粘贴到文件当前最后一行的下行  Gp</span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>5. 进入homework_5文件夹，打开problem.txt，并依次执行如下操作：</strong></p><ol type="1"><li><strong>删除第11行第15个字符（包含该字符）至第13行第5个字符（包含该字符）</strong></li><li><strong>将所删除的内容粘贴到文件末尾（注意不要另起一行）</strong></li><li><strong>复制第5行第88个字符（包含该字符）至第7行第6个字符（包含该字符）</strong></li><li><strong>将所复制的内容粘贴到当前文件末尾（注意不要另起一行）</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_5</span><br><span class="line">vim problem.txt</span><br><span class="line"></span><br><span class="line">[1] 删除第11行第15个字符（包含该字符）至第13行第5个字符（包含该字符）  11G14&lt;Space&gt;v13G5&lt;Space&gt;d</span><br><span class="line">[2] 将所删除的内容粘贴到文件末尾（注意不要另起一行）  G<span class="variable">$p</span></span><br><span class="line">[3] 复制第5行第88个个字符（包含该字符）至第7行第6个字符（包含该字符）  5G87&lt;Space&gt;v7G6&lt;Space&gt;y</span><br><span class="line">[4] 将所复制的内容粘贴到当前文件末尾（注意不要另起一行） G<span class="variable">$p</span></span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>6. 进入homework_6文件夹，并依次执行如下操作：</strong></p><ol type="1"><li>清空source0.cpp</li><li>将source1.cpp中的第1-3行和第12-24行复制到source0.cpp中</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_6</span><br><span class="line">vim source0.cpp</span><br><span class="line"></span><br><span class="line">ggdG  <span class="comment"># 删掉全文</span></span><br><span class="line"></span><br><span class="line">Ctrl + a + <span class="string">&quot;   # 在tmux中打开一个新的pane</span></span><br><span class="line"><span class="string">vim source1.cpp</span></span><br><span class="line"><span class="string">:set nonu  删掉行号</span></span><br><span class="line"><span class="string">使用tmux的复制模式(Ctrl-a, [)复制source1.cpp的第1-3行</span></span><br><span class="line"><span class="string">选择source0.cpp所在的pane</span></span><br><span class="line"><span class="string">:set paste 进入粘贴模式</span></span><br><span class="line"><span class="string">i进入编辑模式</span></span><br><span class="line"><span class="string">使用tmux的粘贴模式(Ctrl-a, ])粘贴内容。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">同理操作source1.cpp的第12-24行</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">保存source0.cpp  :wq</span></span><br><span class="line"><span class="string">退出source1.cpp  :q</span></span><br></pre></td></tr></table></figure><p><strong>7. 进入homework_7文件夹，格式化source.cpp</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_7</span><br><span class="line">vim source.cpp</span><br><span class="line"></span><br><span class="line">gg=G  全文格式化</span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>8. 进入homework_8文件夹，打开source.cpp，并依次执行如下操作：</strong></p><ol type="1"><li><strong>将第15-21行向右缩进2次</strong></li><li><strong>将第22-23行向左缩进1次</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework_8</span><br><span class="line">vim source.cpp</span><br><span class="line"></span><br><span class="line">15Gv21G <span class="comment"># 选中15-21行</span></span><br><span class="line">&gt; <span class="comment"># 向右缩进一次</span></span><br><span class="line"><span class="comment"># 同理再缩进一次</span></span><br><span class="line"></span><br><span class="line">22Gv23G <span class="comment"># 选中22-23行</span></span><br><span class="line">&lt; <span class="comment"># 向左缩进一次</span></span><br><span class="line"></span><br><span class="line">:wq&lt;Enter&gt;</span><br></pre></td></tr></table></figure><p><strong>9. 进入homework_9文件夹，打开链接：https://www.acwing.com/activity/content/code/content/1694465/</strong> <strong>新建文件source.cpp，将链接中的代码抄进source.cpp文件中。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> homework/lesson_2/homework_9</span><br><span class="line">vim source.cpp</span><br><span class="line">i</span><br><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    int a, b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; <span class="string">a + b &lt;&lt; endl;</span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:wq&lt;Enter&gt;</span></span><br></pre></td></tr></table></figure><h1 id="shell语法-ஐ">shell语法 ஐ</h1><h2 id="概论">概论</h2><p>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。</p><p>Shell 既是一种命令语言，又是一种程序设计语言。</p><p>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。</p><p>Ken Thompson 的 sh 是第一种 Unix Shell，Windows Explorer 是一个典型的图形界面 Shell。</p><p><strong>脚本示例</strong></p><p>新建一个test.sh文件，内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure><p><strong>运行方式</strong></p><p>作为可执行文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh  <span class="comment"># 使脚本具有可执行权限</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh  <span class="comment"># 当前路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure><p>用解释器执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ bash test.sh</span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure><h2 id="注释">注释</h2><p><strong>单行注释</strong></p><p>每行中 <code>#</code> 之后的内容均是注释。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一行注释</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello World&#x27;</span>  <span class="comment">#  这也是注释</span></span><br></pre></td></tr></table></figure><p><strong>多行注释</strong></p><p>格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>其中EOF可以换成其它任意字符串。例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">abc</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">第一行注释</span><br><span class="line">第二行注释</span><br><span class="line">第三行注释</span><br><span class="line">!</span><br></pre></td></tr></table></figure><h2 id="变量">变量</h2><p><strong>定义变量</strong></p><p>定义变量，不需要加$符号，例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name1=<span class="string">&#x27;yxc&#x27;</span>  <span class="comment"># 单引号定义字符串</span></span><br><span class="line">name2=<span class="string">&quot;yxc&quot;</span>  <span class="comment"># 双引号定义字符串</span></span><br><span class="line">name3=yxc    <span class="comment"># 也可以不加引号，同样表示字符串</span></span><br></pre></td></tr></table></figure><p><strong>使用变量</strong></p><p>使用变量，需要加上 <code>$</code> 符号，或者 <code>$&#123;&#125;</code> 符号。花括号是可选的，主要为了帮助解释器识别变量边界。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出yxc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>  <span class="comment"># 输出yxc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>acwing  <span class="comment"># 输出yxcacwing</span></span><br></pre></td></tr></table></figure><p><strong>只读变量</strong></p><p>使用 <code>readonly</code> 或者 <code>declare</code> 可以将变量变为只读。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name  <span class="comment"># 两种写法均可</span></span><br><span class="line"></span><br><span class="line">name=abc  <span class="comment"># 会报错，因为此时name只读</span></span><br></pre></td></tr></table></figure><p><strong>删除变量</strong></p><p><code>unset</code> 可以删除变量。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">unset</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出空行</span></span><br></pre></td></tr></table></figure><p><strong>变量类型</strong></p><ol type="1"><li>自定义变量（局部变量） 子进程不能访问的变量</li><li>环境变量（全局变量） 子进程可以访问的变量</li></ol><p>自定义变量改成环境变量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ name=yxc  <span class="comment"># 定义变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name  <span class="comment"># 第一种方法</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> -x name  <span class="comment"># 第二种方法</span></span><br></pre></td></tr></table></figure><p>环境变量改为自定义变量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name=yxc  <span class="comment"># 定义环境变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> +x name  <span class="comment"># 改为自定义变量</span></span><br></pre></td></tr></table></figure><p><strong>字符串</strong></p><p>字符串可以用单引号，也可以用双引号，也可以不用引号。</p><p>单引号与双引号的区别：</p><ol type="1"><li>单引号中的内容会原样输出，不会执行、不会取变量</li><li>双引号中的内容可以执行、可以取变量</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=yxc  <span class="comment"># 不用引号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello, $name \&quot;hh\&quot;&#x27;</span>  <span class="comment"># 单引号字符串，输出 hello, $name \&quot;hh\&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello, <span class="variable">$name</span> \&quot;hh\&quot;&quot;</span>  <span class="comment"># 双引号字符串，输出 hello, yxc &quot;hh&quot;</span></span><br></pre></td></tr></table></figure><p>获取字符串长度</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;yxc&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure><p>提取子串</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;hello, yxc&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:0:5&#125;</span>  <span class="comment"># 提取从0开始的5个字符</span></span><br></pre></td></tr></table></figure><h2 id="默认变量">默认变量</h2><p><strong>文件参数变量</strong></p><p>在执行 shell 脚本时，可以向脚本传递参数。</p><p><code>$1</code> 是第一个参数，<code>$2</code> 是第二个参数，以此类推。特殊的，<code>$0</code> 是文件名（包含路径）。例如：</p><p>创建文件 <code>test.sh</code> ：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件名：&quot;</span><span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数：&quot;</span><span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数：&quot;</span><span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数：&quot;</span><span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第四个参数：&quot;</span><span class="variable">$4</span></span><br></pre></td></tr></table></figure><p>然后执行该脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh 1 2 3 4</span><br><span class="line">文件名：./test.sh</span><br><span class="line">第一个参数：1</span><br><span class="line">第二个参数：2</span><br><span class="line">第三个参数：3</span><br><span class="line">第四个参数：4</span><br><span class="line">其它参数相关变量</span><br></pre></td></tr></table></figure><p><strong>其它参数相关变量</strong></p><table><thead><tr class="header"><th>参数</th><th>说明</th></tr></thead><tbody><tr class="odd"><td><code>$#</code></td><td>代表文件传入的参数个数，如上例中值为4</td></tr><tr class="even"><td><code>$*</code></td><td>由所有参数构成的用空格隔开的字符串，等价上例中的<code>"$1 $2 $3 $4"</code></td></tr><tr class="odd"><td><code>$@</code></td><td>每个参数分别用双引号括起来的字符串，等价上例中的<code>"$1" "$2" "$3" "$4"</code></td></tr><tr class="even"><td><code>$$</code></td><td>脚本当前运行的进程ID</td></tr><tr class="odd"><td><code>$?</code></td><td>上一条命令的退出状态（exit code）。0表示正常退出，其他值表示错误</td></tr><tr class="even"><td><code>$(command)</code></td><td>返回 <code>command</code> 这条命令的stdout（可嵌套）</td></tr><tr class="odd"><td>` <code>command</code> `</td><td>返回 <code>command</code> 这条命令的stdout（不可嵌套）</td></tr></tbody></table><h2 id="expr命令">expr命令</h2><p><code>expr</code> 命令用于求表达式的值，格式为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">expr 表达式</span><br></pre></td></tr></table></figure><p><strong>表达式说明</strong>：</p><ul><li>用空格隔开每一项</li><li>用反斜杠放在shell特定的字符前面（发现表达式运行错误时，可以试试转义）</li><li>对包含空格和其他特殊字符的字符串要用引号括起来</li><li>expr会在 <code>stdout</code> 中输出结果。如果为逻辑关系表达式，则结果为真，<code>stdout</code> 为 <code>1</code>，否则为 <code>0</code>。</li><li>expr的 <code>exit code</code> ：如果为逻辑关系表达式，则结果为真，<code>exit code</code> 为 <code>0</code> ，否则为 <code>1</code>。</li></ul><p><strong>字符串表达式</strong></p><ul><li><code>length STRING</code> : 返回STRING的长度</li><li><code>index STRING CHARSET</code> : <code>CHARSET</code> 中任意单个字符在 <code>STRING</code> 中最前面的字符位置，下标从 <code>1</code> 开始。 如果在 <code>STRING</code> 中完全不存在 <code>CHARSET</code> 中的字符，则返回 <code>0</code>。</li><li><code>substr STRING POSITION LENGTH</code> : 返回 <code>STRING</code> 字符串中从 <code>POSITION</code> 开始，长度最大为 <code>LENGTH</code> 的子串。 如果 <code>POSITION</code> 或 <code>LENGTH</code> 为负数，<code>0</code> 或非数值，则返回空字符串。</li></ul><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr length <span class="string">&quot;<span class="variable">$str</span>&quot;</span>`  <span class="comment"># ``不是单引号，表示执行该命令，输出12</span></span><br><span class="line"><span class="built_in">echo</span> `expr index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> aWd`  <span class="comment"># 输出7，下标从1开始</span></span><br><span class="line"><span class="built_in">echo</span> `expr substr <span class="string">&quot;<span class="variable">$str</span>&quot;</span> 2 3`  <span class="comment"># 输出 ell</span></span><br></pre></td></tr></table></figure><p><strong>整数表达式</strong></p><p><code>expr</code> 支持普通的算术操作，算术表达式优先级低于字符串表达式，高于逻辑关系表达式。</p><ul><li><p><code>+ -</code> 加减运算。两端参数会转换为整数，如果转换失败则报错。</p></li><li><p><code>* / %</code> 乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。</p></li><li><p><code>()</code> 可以该表优先级，但需要用反斜杠转义</p></li></ul><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> + <span class="variable">$b</span>`  <span class="comment"># 输出7</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> - <span class="variable">$b</span>`  <span class="comment"># 输出-1</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \* <span class="variable">$b</span>`  <span class="comment"># 输出12，*需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> / <span class="variable">$b</span>`  <span class="comment"># 输出0，整除</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> % <span class="variable">$b</span>` <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `expr \( <span class="variable">$a</span> + 1 \) \* \( <span class="variable">$b</span> + 1 \)`  <span class="comment"># 输出20，值为(a + 1) * (b + 1)</span></span><br></pre></td></tr></table></figure><p><strong>逻辑关系表达式</strong></p><ul><li><p><code>|</code> 如果第一个参数非空且非0，则返回第一个参数的值，否则返回第二个参数的值，但要求第二个参数的值也是非空或非0，否则返回0。如果第一个参数是非空或非0时，不会计算第二个参数。</p></li><li><p><code>&amp;</code> 如果两个参数都非空且非0，则返回第一个参数，否则返回0。如果第一个参为0或为空，则不会计算第二个参数。</p></li><li><p><code>&lt; &lt;= = == != &gt;= &gt;</code> 比较两端的参数，如果为true，则返回1，否则返回0。”==”是”=”的同义词。”expr”首先尝试将两端参数转换为整数，并做算术比较，如果转换失败，则按字符集排序规则做字符比较。</p></li><li><p><code>()</code> 可以该表优先级，但需要用反斜杠转义</p></li></ul><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \&gt; <span class="variable">$b</span>`  <span class="comment"># 输出0，&gt;需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出1，也可以将特殊字符用引号引起来</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> <span class="string">&#x27;&gt;=&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \&lt;\= <span class="variable">$b</span>`  <span class="comment"># 输出1</span></span><br><span class="line"></span><br><span class="line">c=0</span><br><span class="line">d=5</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$c</span> \&amp; <span class="variable">$d</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \&amp; <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$c</span> \| <span class="variable">$d</span>`  <span class="comment"># 输出5</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \| <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure><h2 id="read-命令">read 命令</h2><p><code>read</code> 命令用于从标准输入中读取单行数据。当读到文件结束符时，<code>exit code</code> 为 <code>1</code> ，否则为 <code>0</code> 。</p><p>参数说明</p><ul><li><code>-p</code> : 后面可以接提示信息</li><li><code>-t</code> ：后面跟秒数，定义输入字符的等待时间，超过等待时间后会自动忽略此命令</li></ul><p>实例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> name  <span class="comment"># 读入name的值</span></span><br><span class="line">acwing yxc  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">acwing yxc  <span class="comment">#标准输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> -p <span class="string">&quot;Please input your name: &quot;</span> -t 30 name  <span class="comment"># 读入name的值，等待时间30秒</span></span><br><span class="line">Please input your name: acwing yxc  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">acwing yxc  <span class="comment"># 标准输出</span></span><br></pre></td></tr></table></figure><h2 id="echo命令">echo命令</h2><p><code>echo</code> 用于输出字符串。命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> STRING</span><br></pre></td></tr></table></figure><p><strong>显示普通字符串</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello AC Terminal&quot;</span></span><br><span class="line"><span class="built_in">echo</span> Hello AC Terminal  <span class="comment"># 引号可以省略</span></span><br></pre></td></tr></table></figure><p><strong>显示转义字符</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;Hello AC Terminal\&quot;&quot;</span>  <span class="comment"># 注意只能使用双引号，如果使用单引号，则不转义</span></span><br><span class="line"><span class="built_in">echo</span> \&quot;Hello AC Terminal\&quot;  <span class="comment"># 也可以省略双引号</span></span><br></pre></td></tr></table></figure><p><strong>显示变量</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>&quot;</span>  <span class="comment"># 输出 My name is yxc</span></span><br></pre></td></tr></table></figure><p><strong>显示换行</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi\n&quot;</span>  <span class="comment"># -e 开启转义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;acwing&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hi</span><br><span class="line"></span><br><span class="line">acwing</span><br></pre></td></tr></table></figure><p><strong>显示不换行</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi \c&quot;</span> <span class="comment"># -e 开启转义 \c 不换行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;acwing&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi acwing</span><br></pre></td></tr></table></figure><p><strong>显示结果定向至文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt; output.txt  <span class="comment"># 将内容以覆盖的方式输出到output.txt中</span></span><br></pre></td></tr></table></figure><p><strong>原样输出字符串</strong>，不进行转义或取变量(用单引号)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=acwing</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$name\&quot;&#x27;</span></span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span>\&quot;</span><br></pre></td></tr></table></figure><p><strong>显示命令的执行结果</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> `date`</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wed Sep 1 11:45:33 CST 2021</span><br></pre></td></tr></table></figure><h2 id="printf命令">printf命令</h2><p><code>printf</code> 命令用于格式化输出，类似于 C/C++ 中的 <code>printf</code> 函数。</p><p>默认不会在字符串末尾添加换行符。</p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> format-string [arguments...]</span><br></pre></td></tr></table></figure><p><strong>用法示例</strong></p><p>脚本内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%10d.\n&quot;</span> 123  <span class="comment"># 占10位，右对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10.2f.\n&quot;</span> 123.123321  <span class="comment"># 占10位，保留2位小数，左对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;My name is %s\n&quot;</span> <span class="string">&quot;yxc&quot;</span>  <span class="comment"># 格式化输出字符串</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d * %d = %d\n&quot;</span>  2 3 `expr 2 \* 3` <span class="comment"># 表达式的值作为参数</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">       123.</span><br><span class="line">123.12    .</span><br><span class="line">My name is yxc</span><br><span class="line">2 * 3 = 6</span><br></pre></td></tr></table></figure><h2 id="test命令与判断符号">test命令与判断符号[ ]</h2><p><strong>逻辑运算符<code>&amp;&amp;</code>和<code>||</code></strong></p><ul><li><p><code>&amp;&amp;</code> 表示与，<code>||</code> 表示或</p></li><li><p>二者具有短路原则： <code>expr1 &amp;&amp; expr2</code> ：当 <code>expr1</code> 为假时，直接忽略 <code>expr2</code> <code>expr1 || expr2</code> ：当 <code>expr1</code> 为真时，直接忽略 <code>expr2</code></p></li><li><p>表达式的 <code>exit code</code> 为 <code>0</code> ，表示真；为 <code>非零</code>，表示假。（<strong>与C/C++中的定义相反</strong>）</p></li></ul><p><strong>test命令</strong></p><p>在命令行中输入 <code>man test</code>，可以查看test命令的用法。</p><p><code>test</code> 命令用于判断文件类型，以及对变量做比较。</p><p><code>test</code> 命令用 <code>exit code</code> 返回结果，而不是使用 <code>stdout</code>。<code>0</code> 表示 <code>真</code>，<code>非0</code> 表示 <code>假</code>。</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> 2 -lt 3  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ ls  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test2.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure><p><strong>文件类型判断</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -e filename  <span class="comment"># 判断文件是否存在</span></span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>测试参数</th><th>代表意义</th></tr></thead><tbody><tr class="odd"><td><code>-e</code></td><td>文件是否存在</td></tr><tr class="even"><td><code>-f</code></td><td>是否为文件</td></tr><tr class="odd"><td><code>-d</code></td><td>是否为目录</td></tr></tbody></table><p><strong>文件权限判断</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename  <span class="comment"># 判断文件是否可读</span></span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>测试参数</th><th>代表意义</th></tr></thead><tbody><tr class="odd"><td><code>-r</code></td><td>文件是否可读</td></tr><tr class="even"><td><code>-w</code></td><td>文件是否可写</td></tr><tr class="odd"><td><code>-x</code></td><td>文件是否可执行</td></tr><tr class="even"><td><code>-s</code></td><td>是否为非空文件</td></tr></tbody></table><p><strong>整数间的比较</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> <span class="variable">$a</span> -eq <span class="variable">$b</span>  <span class="comment"># a是否等于b</span></span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>测试参数</th><th>代表意义</th></tr></thead><tbody><tr class="odd"><td><code>-eq</code></td><td>a是否等于b</td></tr><tr class="even"><td><code>-ne</code></td><td>a是否不等于b</td></tr><tr class="odd"><td><code>-gt</code></td><td>a是否大于b</td></tr><tr class="even"><td><code>-lt</code></td><td>a是否小于b</td></tr><tr class="odd"><td><code>-ge</code></td><td>a是否大于等于b</td></tr><tr class="even"><td><code>-le</code></td><td>a是否小于等于b</td></tr></tbody></table><p><strong>字符串比较</strong></p><table><thead><tr class="header"><th>测试参数</th><th>代表意义</th></tr></thead><tbody><tr class="odd"><td><code>test -z STRING</code></td><td>判断<code>STRING</code>是否为空，如果为空，则返回true</td></tr><tr class="even"><td><code>test -n STRING</code></td><td>判断<code>STRING</code>是否非空，如果非空，则返回true（-n可以省略）</td></tr><tr class="odd"><td><code>test str1 == str2</code></td><td>判断<code>str1</code>是否等于<code>str2</code></td></tr><tr class="even"><td><code>test str1 != str2</code></td><td>判断<code>str1</code>是否不等于<code>str2</code></td></tr></tbody></table><p><strong>多重条件判定</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename -a -x filename</span><br></pre></td></tr></table></figure><table><thead><tr class="header"><th>测试参数</th><th>代表意义</th></tr></thead><tbody><tr class="odd"><td><code>-a</code></td><td>两条件是否同时成立</td></tr><tr class="even"><td><code>-o</code></td><td>两条件是否至少一个成立</td></tr><tr class="odd"><td><code>!</code></td><td>取反。如 <code>test ! -x file</code> ，当 <code>file</code> 不可执行时，返回true</td></tr></tbody></table><p><strong>判断符号[ ]</strong></p><p><code>[ ]</code> 与 <code>test</code> 用法几乎一模一样，更常用于 <code>if</code> 语句中。另外 <code>[[]]</code>是 <code>[]</code>的加强版，支持的特性更多。</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[ 2 -lt 3 ]  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ls  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">acs@9e0ebfcd82d7:~$ [ -e test.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ [ -e test2.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><code>[]</code>内的每一项都要用空格隔开</li><li>中括号内的变量，最好用双引号括起来</li><li>中括号内的常数，最好用单或双引号括起来</li></ul><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;acwing yxc&quot;</span></span><br><span class="line">[ <span class="variable">$name</span> == <span class="string">&quot;acwing yxc&quot;</span> ]  <span class="comment"># 错误，等价于 [ acwing yxc == &quot;acwing yxc&quot; ]，参数太多</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;acwing yxc&quot;</span> ]  <span class="comment"># 正确</span></span><br></pre></td></tr></table></figure><h2 id="判断语句">判断语句</h2><p><strong>if…then形式</strong></p><p>类似于C/C++中的if-else语句。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>case…esac形式</strong></p><p>类似于C/C++中的switch语句。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> $变量名称 <span class="keyword">in</span></span><br><span class="line">    值1)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;  <span class="comment"># 类似于C/C++中的break</span></span><br><span class="line">    值2)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line">    *)  <span class="comment"># 类似于C/C++中的default</span></span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="循环语句">循环语句</h2><p><strong>for…in…do…done</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> val1 val2 val3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例1，输出<code>a 2 cc</code>，每个元素一行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a 2 cc</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例2，输出当前路径下的所有文件名，每个文件名一行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for file in `ls`</span><br><span class="line">do</span><br><span class="line">    echo $file</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>示例3，输出 <code>1-10</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 10)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例4，使用 <code>&#123;1..10&#125;</code> 或者 <code>&#123;a..z&#125;</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;a..z&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>for ((…;…;…)) do…done</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((expression; condition; expression))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例，输出 <code>1-10</code> ，每个数占一行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=1; i&lt;=10; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>while…do…done循环</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>示例，文件结束符为 <code>Ctrl+d</code> ，输入文件结束符后 <code>read</code> 指令返回 <code>false</code> 。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><strong>死循环的处理方式</strong></p><p>如果 AC Terminal 可以打开该程序，则输入 <code>Ctrl+c</code> 即可。</p><p>否则可以直接关闭进程：</p><p>使用 <code>top</code> 命令找到进程的 <code>PID</code></p><p>输入 <code>kill -9 PID</code> 即可关掉此进程</p><h2 id="函数">函数</h2><p><code>bash</code> 中的函数类似于 C/C++ 中的函数</p><p>但 <code>return</code> 的返回值与 C/C++ 不同，返回的是 <code>exit code</code>，取值为<code>0-255</code>， <code>0</code> 表示正常结束。</p><p>如果想获取函数的输出结果，可以通过 <code>echo</code> 输出到 <code>stdout</code> 中</p><p>然后通过 <code>$(function_name)</code> 来获取<code>stdout</code> 中的结果。</p><p>函数的 <code>return</code> 值可以通过 <code>$?</code> 来获取。</p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">function</span>] <span class="function"><span class="title">func_name</span></span>() &#123;  <span class="comment"># function关键字可以省略</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>不获取 return值 和 stdout值</strong></p><p>示例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello yxc</span><br></pre></td></tr></table></figure><p><strong>获取 return值 和stdout值</strong></p><p>不写return时，默认return 0。</p><p>示例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 123</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output=$(func)</span><br><span class="line">ret=$?</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;output = <span class="variable">$output</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;return = <span class="variable">$ret</span>&quot;</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">output = Hello yxc</span><br><span class="line"><span class="built_in">return</span> = 123</span><br></pre></td></tr></table></figure><p><strong>函数的输入参数</strong></p><p>在函数内，<code>$1</code> 表示第一个输入参数，<code>$2</code> 表示第二个输入参数，依此类推。</p><p>注意：函数内的 <code>$0</code> 仍然是文件名，而不是函数名。</p><p>示例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;  <span class="comment"># 递归计算 $1 + ($1 - 1) + ($1 - 2) + ... + 0</span></span><br><span class="line">    word=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;y&#x27;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;要进入func(<span class="variable">$1</span>)函数吗？请输入y/n：&quot;</span> word</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$word</span>&quot;</span> == <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -le 0 ] </span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">    sum=$(func $(expr <span class="variable">$1</span> - 1))</span><br><span class="line">    <span class="built_in">echo</span> $(expr <span class="variable">$sum</span> + <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(func 10)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure><p><strong>函数内的局部变量</strong></p><p>可以在函数内定义局部变量，作用范围仅在当前函数内。</p><p>可以在递归函数中定义局部变量。</p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">local</span> 变量名=变量值</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func    <span class="comment"># 第一次在函数内调用（有）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 第二次在函数外调用（无）</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yxc</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一行为函数内的 <code>name</code> 变量，第二行为函数外调用 <code>name</code> 变量，会发现此时该变量不存在。</p><h2 id="exit命令">exit命令</h2><p><code>exit</code> 命令用来退出当前 <code>shell</code> 进程，并返回一个退出状态；使用 <code>$?</code> 可以接收这个退出状态。</p><p><code>exit</code> 命令可以接受一个整数值作为参数，代表退出状态。如果不指定，默认状态值是 <code>0</code>。</p><p><code>exit</code> 退出状态只能是一个介于 <code>0~255</code> 之间的整数，其中只有 <code>0</code> 表示成功，其它值都表示失败。</p><blockquote><p><code>return</code> 和 <code>exit</code> 的共同之处都是返回 <code>exit code</code>，区别是 <code>return</code> 结束当前函数，<code>exit</code> 结束整个<code>shell</code> 脚本</p></blockquote><p>示例：</p><p>创建脚本 <code>test.sh</code> ，内容如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]  <span class="comment"># 如果传入参数个数等于1，则正常退出；否则非正常退出。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments not valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>执行该脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh acwing</span><br><span class="line">arguments valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> $?  <span class="comment"># 传入一个参数，则正常退出，exit code为0</span></span><br><span class="line">0</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh </span><br><span class="line">arguments not valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> $?  <span class="comment"># 传入参数个数不是1，则非正常退出，exit code为1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="文件重定向">文件重定向</h2><p>每个进程默认打开3个文件描述符：</p><ul><li><code>stdin</code> 标准输入，从命令行读取数据，文件描述符为 <code>0</code></li><li><code>stdout</code> 标准输出，向命令行输出数据，文件描述符为 <code>1</code></li><li><code>stderr</code> 标准错误输出，向命令行输出数据，文件描述符为 <code>2</code></li></ul><p>可以用文件重定向将这三个文件重定向到其他文件中。</p><p><strong>重定向命令列表</strong></p><table><thead><tr class="header"><th>命令</th><th>说明</th></tr></thead><tbody><tr class="odd"><td><code>command &gt; file</code></td><td>将<code>stdout</code>重定向到<code>file</code>中</td></tr><tr class="even"><td><code>command &lt; file</code></td><td>将<code>stdin</code>重定向到<code>file</code>中</td></tr><tr class="odd"><td><code>command &gt;&gt; file</code></td><td>将<code>stdout</code>以追加方式重定向到<code>file</code>中</td></tr><tr class="even"><td><code>command n&gt; file</code></td><td>将文件描述符<code>n</code>重定向到<code>file</code>中</td></tr><tr class="odd"><td><code>command n&gt;&gt; file</code></td><td>将文件描述符<code>n</code>以追加方式重定向到<code>file</code>中</td></tr></tbody></table><p><strong>输入和输出重定向</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hello \c&quot;</span> &gt; output.txt  <span class="comment"># 将stdout重定向到output.txt中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;World&quot;</span> &gt;&gt; output.txt  <span class="comment"># 将字符串追加到output.txt中</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> str &lt; output.txt  <span class="comment"># 从output.txt中读取字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span>  <span class="comment"># 输出结果：Hello World</span></span><br></pre></td></tr></table></figure><p><strong>同时重定向stdin和stdout</strong></p><p>创建bash脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> a</span><br><span class="line"><span class="built_in">read</span> b</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(expr <span class="string">&quot;<span class="variable">$a</span>&quot;</span> + <span class="string">&quot;<span class="variable">$b</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p>创建input.txt，里面的内容为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test.sh  <span class="comment"># 添加可执行权限</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh &lt; input.txt &gt; output.txt  <span class="comment"># 从input.txt中读取内容，将输出写入output.txt中</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ cat output.txt  <span class="comment"># 查看output.txt中的内容</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="引入外部脚本">引入外部脚本</h2><p>类似于 C/C++ 中的 <code>include</code> 操作，<code>bash</code> 也可以引入其他文件中的代码。</p><p>语法格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. filename  <span class="comment"># 注意点和文件名之间有一个空格</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> filename</span><br></pre></td></tr></table></figure><p>示例 创建 <code>test1.sh</code> ，内容为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">name=yxc  <span class="comment"># 定义变量name</span></span><br></pre></td></tr></table></figure><p>然后创建 <code>test2.sh</code>，内容为：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> test1.sh <span class="comment"># 或 . test1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> My name is: <span class="variable">$name</span>  <span class="comment"># 可以使用test1.sh中的变量</span></span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ chmod +x test2.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test2.sh </span><br><span class="line">My name is: yxc</span><br></pre></td></tr></table></figure><h2 id="作业-2">作业</h2><p><strong>0. 进入 <code>homework_0</code> 文件夹，编写自动完成 <code>lesson_1</code> 作业的脚本 <code>helper.sh</code> 。要求：</strong></p><ol type="1"><li><strong>当前目录下仅包含 <code>helper.sh</code></strong></li><li><strong>helper.sh具有可执行权限</strong></li><li><strong>在任意路径依次执行下列命令后，<code>lesson_1</code> 的作业可以得到满分：</strong><ol type="1"><li><code>homework 1 create</code></li><li><code>/home/acs/homework/lesson_3/homework_0/helper.sh</code></li></ol></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_0</span></span><br><span class="line"></span><br><span class="line">dir0=<span class="string">&quot;/home/acs/homework/lesson_1/homework_0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mkdir <span class="string">&quot;<span class="variable">$&#123;dir0&#125;</span>/dir_<span class="variable">$&#123;i&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_1</span></span><br><span class="line"></span><br><span class="line">dir1=<span class="string">&quot;/home/acs/homework/lesson_1/homework_1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cp <span class="string">&quot;<span class="variable">$&#123;dir1&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir1&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt.bak&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_2</span></span><br><span class="line"></span><br><span class="line">dir2=<span class="string">&quot;/home/acs/homework/lesson_1/homework_2&quot;</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mv <span class="string">&quot;<span class="variable">$&#123;dir2&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir2&#125;</span>/<span class="variable">$&#123;i&#125;</span>_new.txt&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_3</span></span><br><span class="line"></span><br><span class="line">dir3=<span class="string">&quot;/home/acs/homework/lesson_1/homework_3&quot;</span></span><br><span class="line"></span><br><span class="line">mv <span class="variable">$&#123;dir3&#125;</span>/dir_a/* <span class="variable">$&#123;dir3&#125;</span>/dir_b/</span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_4</span></span><br><span class="line"></span><br><span class="line">dir4=<span class="string">&quot;/home/acs/homework/lesson_1/homework_4&quot;</span></span><br><span class="line"></span><br><span class="line">rm <span class="variable">$&#123;dir4&#125;</span>/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_5</span></span><br><span class="line"></span><br><span class="line">dir5=<span class="string">&quot;/home/acs/homework/lesson_1/homework_5&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_6</span></span><br><span class="line"></span><br><span class="line">dir6=<span class="string">&quot;/home/acs/homework/lesson_1/homework_6&quot;</span></span><br><span class="line"></span><br><span class="line">mkdir <span class="variable">$&#123;dir6&#125;</span>/dir_a</span><br><span class="line">mv <span class="string">&quot;<span class="variable">$&#123;dir6&#125;</span>/task.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir6&#125;</span>/dir_a/done.txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_7</span></span><br><span class="line"></span><br><span class="line">dir7=<span class="string">&quot;/home/acs/homework/lesson_1/homework_7&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 0 2)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    mkdir <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/dir_<span class="variable">$&#123;i&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cp <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/dir_0/<span class="variable">$&#123;i&#125;</span>0.txt&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cp <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/dir_1/<span class="variable">$&#123;i&#125;</span>1.txt&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a b c</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    cp <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/<span class="variable">$&#123;i&#125;</span>.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir7&#125;</span>/dir_2/<span class="variable">$&#123;i&#125;</span>2.txt&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_8</span></span><br><span class="line"></span><br><span class="line">dir8=<span class="string">&quot;/home/acs/homework/lesson_1/homework_8&quot;</span></span><br><span class="line"></span><br><span class="line">rm <span class="string">&quot;<span class="variable">$&#123;dir8&#125;</span>/dir_a/a.txt&quot;</span></span><br><span class="line"></span><br><span class="line">mv <span class="string">&quot;<span class="variable">$&#123;dir8&#125;</span>/dir_b/b.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir8&#125;</span>/dir_b/b_new.txt&quot;</span></span><br><span class="line"></span><br><span class="line">cp <span class="string">&quot;<span class="variable">$&#123;dir8&#125;</span>/dir_c/c.txt&quot;</span> <span class="string">&quot;<span class="variable">$&#123;dir8&#125;</span>/dir_c/c.txt.bak&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># homework_9</span></span><br><span class="line"></span><br><span class="line">dir9=<span class="string">&quot;/home/acs/homework/lesson_1/homework_9&quot;</span></span><br><span class="line"></span><br><span class="line">rm <span class="variable">$&#123;dir9&#125;</span>/*.txt</span><br></pre></td></tr></table></figure><p><strong>1. 进入 <code>homework_1</code> 文件夹，编写脚本 <code>check_file.sh</code>。要求：</strong> 1. <strong>当前目录下仅包含 <code>check_file.sh</code> 。</strong> 2. <strong><code>check_file.sh</code> 具有可执行权限。</strong> 3. <strong><code>check_file.sh</code> 接收一个传入参数。格式为 <code>./check_file.sh file</code></strong> 4. <strong>判断传递参数，分别在标准输出中输出如下内容（不包括双引号）：</strong> 1. <strong>如果传入参数个数不是 <code>1</code> ，则输出一行：<code>"arguments not valid"</code>，然后退出，退出状态等于 <code>1</code>。</strong> 2. <strong>如果 <code>file</code> 文件不存在，则输出一行：<code>"not exist"</code>，然后退出，退出状态等于 <code>2</code> 。</strong> 3. <strong>如果 <code>file</code> 文件存在，则输出分别进行如下 5 个判断，然后退出，退出状态等于 <code>0</code> 。</strong> 1. <strong>如果 <code>file</code> 为普通文件，则输出一行：<code>"regular file"</code></strong> 2. <strong>如果 <code>file</code> 为目录（文件夹），则输出一行：<code>"directory"</code></strong> 3. <strong>如果 <code>file</code> 具有可读权限，则输出一行：<code>"readable"</code></strong> 4. <strong>如果 <code>file</code> 具有可写权限，则输出一行：<code>"writable"</code></strong> 5. <strong>如果 <code>file</code> 具有可执行权限，则输出一行：<code>"executable"</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments not valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -e <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;not exist&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;regular file&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;directory&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -r <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;readable&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -w <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;writable&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -x <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;executable&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>2. 进入 <code>homework_2</code> 文件夹，编写脚本 <code>main.sh</code>。要求：</strong></p><ol type="1"><li><strong>当前目录下仅包含 <code>main.sh</code></strong></li><li><strong><code>main.sh</code> 具有可执行权限</strong></li><li><strong>该文件从 <code>stdin</code> (标准输入)中读取一个整数 <code>n</code></strong></li><li><strong>在 <code>stdout</code> (标准输出)输出斐波那契数列的第 <code>n</code> 项。即：<code>a[0] = 1, a[1] = 1, a[i] = a[i - 1] + a[i - 2]</code>, 求 <code>a[n]</code></strong></li><li><strong>数据保证 <code>0 &lt;= n &lt;= 20</code>，脚本不需要判断 <code>n</code> 的合法性。</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> n</span><br><span class="line"></span><br><span class="line">a=1</span><br><span class="line">b=1</span><br><span class="line">c=1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i = 2; i &lt;= n; i ++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    c=`expr <span class="variable">$a</span> + <span class="variable">$b</span>`</span><br><span class="line">    a=<span class="variable">$b</span></span><br><span class="line">    b=<span class="variable">$c</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$c</span> </span><br></pre></td></tr></table></figure><p><strong>3. 进入 <code>homework_3</code> 文件夹，编写脚本 <code>main.sh</code>。要求：</strong></p><ol type="1"><li><strong>当前目录下仅包含 <code>main.sh</code></strong></li><li><strong><code>main.sh</code> 具有可执行权限</strong></li><li><strong>该文件从 <code>stdin</code> (标准输入)中读取两行整数 <code>n</code> 和 <code>m</code></strong></li><li><strong>在 <code>stdout</code> (标准输出)中输出 <code>1~n</code> 的按字典序从小到大的顺序数第 <code>m</code> 个全排列，输出一行，用空格隔开所有数，行末可以有多余空格</strong></li><li><strong>数据保证 <code>1 &lt;= n &lt;= 10, 1 &lt;= m &lt;= min(100, n!)</code>，脚本不需要判断数据的合法性</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> n</span><br><span class="line"><span class="built_in">read</span> m</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((i = 1; i &lt;= n; i ++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    st[<span class="variable">$i</span>]=0</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">dfs</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -eq <span class="variable">$n</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        m=`expr <span class="variable">$m</span> - 1`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$m</span> -eq 0 ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$&#123;a[*]&#125;</span></span><br><span class="line">            <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="built_in">return</span> 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> i=0</span><br><span class="line">    <span class="keyword">for</span> ((i = 1; i &lt;= n; i ++ ))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$&#123;st[$i]&#125;</span> -eq 0 ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            a[<span class="variable">$1</span>]=<span class="variable">$i</span></span><br><span class="line">            st[<span class="variable">$i</span>]=1</span><br><span class="line">            <span class="keyword">if</span> dfs `expr <span class="variable">$1</span> + 1` </span><br><span class="line">            <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            st[<span class="variable">$i</span>]=0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dfs 0</span><br></pre></td></tr></table></figure><p><strong>4. 进入 <code>homework_4</code> 文件夹，编写脚本 <code>main.sh</code> 。要求：</strong></p><ol type="1"><li><strong>当前目录下仅包含 <code>main.sh</code></strong></li><li><strong><code>main.sh</code> 具有可执行权限</strong></li><li><strong><code>main.sh</code> 接收两个传入参数。格式为 <code>./main.sh input_file output_file</code></strong></li><li><strong>从 <code>input_file</code> 中读取一个正整数 <code>n</code>，然后将前 <code>n</code> 个正整数的平方和写入 <code>output_file</code> 中</strong></li><li><strong>数据保证 <code>1 &lt;= n &lt;= 100</code>，脚本不需要判断所有数据的合法性</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> n &lt; <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">s=0</span><br><span class="line"><span class="keyword">for</span> ((i = 1; i &lt;= n; i ++ ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    a=`expr <span class="variable">$i</span> \* <span class="variable">$i</span>`</span><br><span class="line">    s=`expr <span class="variable">$s</span> + <span class="variable">$a</span>`</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$s</span> &gt; <span class="variable">$2</span></span><br></pre></td></tr></table></figure><h1 id="ssh-ஐ">ssh ஐ</h1><h2 id="ssh登录">ssh登录</h2><p><strong>基本用法</strong></p><p>远程登录服务器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@hostname</span><br></pre></td></tr></table></figure><ul><li><code>user</code>: 用户名</li><li><code>hostname</code>: IP地址或域名</li></ul><p>第一次登录时会提示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host <span class="string">&#x27;123.57.47.211 (123.57.47.211)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:iy237yysfCe013/l+kpDGfEG9xxHxm0dnxnAbJTPpG8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span></span><br></pre></td></tr></table></figure><p>输入 <code>yes</code>，然后回车即可。</p><p>这样会将该服务器的信息记录在 <code>~/.ssh/known_hosts</code> 文件中。</p><p>然后输入密码即可登录到远程服务器中。</p><hr /><p>默认登录端口号为22。如果想登录某一特定端口：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@hostname -p 22</span><br></pre></td></tr></table></figure><hr /><p><strong>配置文件</strong></p><p>创建文件 <code>~/.ssh/config</code></p><p>然后在文件中输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Host myserver1</span><br><span class="line">    HostName IP地址或域名</span><br><span class="line">    User 用户名</span><br><span class="line"></span><br><span class="line">Host myserver2</span><br><span class="line">    HostName IP地址或域名</span><br><span class="line">    User 用户名</span><br></pre></td></tr></table></figure><p>之后再使用服务器时，可以直接使用别名 <code>myserver1、myserver2</code></p><p><strong>密钥登录</strong></p><p>创建密钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>然后一直回车即可。</p><p>执行结束后，<code>~/.ssh/</code> 目录下会多两个文件：</p><ul><li><code>id_rsa</code> ：私钥</li><li><code>id_rsa.pub</code> ：公钥</li></ul><p>之后想免密码登录哪个服务器，就将公钥传给哪个服务器即可。</p><p>例如，想免密登录myserver服务器。则将公钥中的内容，复制到 <code>myserver</code> 中的 <code>~/.ssh/authorized_keys</code> 文件里即可。</p><p>也可以使用如下命令一键添加公钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id myserver</span><br></pre></td></tr></table></figure><p><strong>执行命令</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@hostname <span class="built_in">command</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@hostname ls -a</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单引号中的$i可以求值</span></span><br><span class="line">ssh myserver <span class="string">&#x27;for ((i = 0; i &lt; 10; i ++ )) do echo $i; done&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=1</span><br><span class="line">ssh myserver  <span class="string">&quot;echo <span class="variable">$a</span>&quot;</span></span><br><span class="line">ssh myserver  <span class="string">&#x27;echo $a&#x27;</span></span><br></pre></td></tr></table></figure><p>双引号是在本地服务器进行转义了，所以传过去命令不是 <code>echo $a</code>，而是 <code>echo 1</code> 单引号传过去的是 <code>echo $a</code></p></blockquote><h2 id="scp传文件">scp传文件</h2><p><strong>基本用法</strong></p><p>命令格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure><blockquote><p>【注意】myserver 是默认定位到用户家目录下的</p></blockquote><p>将 <code>source</code> 路径下的文件复制到 <code>destination</code> 中</p><p><strong>一次复制多个文件</strong>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp source1 source2 destination</span><br></pre></td></tr></table></figure><p>复制文件夹：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r ~/tmp myserver:/home/acs/</span><br></pre></td></tr></table></figure><p>将本地家目录中的 <code>tmp</code> 文件夹复制到 <code>myserver</code> 服务器中的 <code>/home/acs/</code> 目录下。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r ~/tmp myserver:homework/</span><br></pre></td></tr></table></figure><p>将本地家目录中的 <code>tmp</code> 文件夹复制到 <code>myserver</code> 服务器中的 <code>~/homework/</code> 目录下。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r myserver:homework .</span><br></pre></td></tr></table></figure><p>将 <code>myserver</code> 服务器中的 <code>~/homework/</code> 文件夹复制到本地的当前路径下。</p><p>指定服务器的端口号：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -P 22 source1 source2 destination</span><br></pre></td></tr></table></figure><blockquote><p>注意： <code>scp</code> 的 <code>-r -P</code> 等参数尽量加在 <code>source</code> 和 <code>destination</code> 之前。</p></blockquote><p>使用 <code>scp</code> 配置其他服务器的 <code>vim</code> 和 <code>tmux</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp ~/.vimrc ~/.tmux.conf myserver:</span><br></pre></td></tr></table></figure><h2 id="作业-3">作业</h2><p><strong>获取ssh教程配套的远程服务器账号的信息</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">homework 4 getinfo</span><br></pre></td></tr></table></figure><p><strong>0. 进入 <code>homework_0</code> 文件夹，要求：</strong></p><ol type="1"><li><strong>该文件夹内容为空</strong></li><li><strong>配置服务器账号的密钥登陆方式。服务器信息可以通过如下命令获得：</strong><ol type="1"><li><strong><code>homework 4 getinfo</code></strong></li><li><strong>将服务器账号的名称（Host）配置成：myserver</strong></li></ol></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得服务器信息</span></span><br><span class="line">acs@7854cf6acd7f:~$ homework 4 getinfo</span><br><span class="line">User: acs_2</span><br><span class="line">HostName: 123.57.47.211</span><br><span class="line">Password: dff1704d</span><br></pre></td></tr></table></figure><p><strong>配置服务器别名</strong></p><p>在 <code>~/.ssh</code> 目录下创建文件：<code>config</code></p><p>内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host myserver</span><br><span class="line">    HostName 123.57.47.211</span><br><span class="line">    User acs_2</span><br></pre></td></tr></table></figure><p><strong>配置密钥登录</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>然后将 <code>id_rsa.pub</code> 内容全部复制到 <code>myserver</code> 中的 <code>~/.ssh/authorized_keys</code> 文件里</p><p>或者通过如下方式一键生成：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id myserver</span><br></pre></td></tr></table></figure><p><strong>1. 进入 <code>homework_1</code> 文件夹，下列描述中的“本地”均表示当前文件夹。要求：</strong></p><ol type="1"><li><strong>在 <code>myserver</code> 服务器上创建并清空文件夹：<code>~/homework/lesson_4/homework_1/</code></strong></li><li><strong>将本地的 <code>main.cpp</code> 文件上传到 <code>myserver</code> 中的 <code>~/homework/lesson_4/homework_1/</code> 目录中</strong></li><li><strong>在本地创建文件夹 <code>dir</code></strong></li><li><strong>将 <code>myserver</code> 中的 <code>/etc/lsb-release</code> 文件复制到 <code>dir</code> 中</strong></li></ol><p><strong>在myserver端</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建并清空文件夹</span></span><br><span class="line">mkdir ~/homework/lesson_4/homework_1/ -p</span><br></pre></td></tr></table></figure><p><strong>在本地</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp到服务器</span></span><br><span class="line">scp main.cpp myserver:homework/lesson_4/homework_1</span><br><span class="line"><span class="comment"># 从服务器上cp下来</span></span><br><span class="line">mkdir dir</span><br><span class="line">scp myserver:/etc/lsb-release dir</span><br></pre></td></tr></table></figure><p><strong>2. 进入 <code>homework_2</code> 文件夹，下列描述中的“本地”均表示当前文件夹，要求：</strong></p><ol type="1"><li><strong>在 <code>myserver</code> 服务器上创建并清空文件夹：<code>~/homework/lesson_4/homework_2/</code></strong></li><li><strong>将本地的 <code>dir</code> 文件夹上传到 <code>myserver</code> 中的 <code>~/homework/lesson_4/homework_2/</code> 目录中</strong></li></ol><p><strong>在myserver端</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建并清空文件夹</span></span><br><span class="line">mkdir ~/homework/lesson_4/homework_2</span><br></pre></td></tr></table></figure><p><strong>在本地</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cp到服务器</span></span><br><span class="line">scp -r dir  myserver:homework/lesson_4/homework_2</span><br></pre></td></tr></table></figure><p><strong>3. 进入 <code>homework_3</code> 文件夹，下列描述中的“本地”均表示当前文件夹，要求：</strong></p><ol type="1"><li><strong>在本地创建文件夹 <code>dir</code></strong></li><li><strong>将 <code>myserver</code> 中的 <code>/var/lib/locales/supported.d</code> 文件夹下载到本地 <code>dir</code> 文件夹中</strong></li></ol><p><strong>在本地</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从服务器上cp下来</span></span><br><span class="line">mkdir dir</span><br><span class="line">scp -r myserver:/var/lib/locales/supported.d dir</span><br></pre></td></tr></table></figure><p><strong>4. 进入 <code>homework_4</code> 文件夹，编写脚本 <code>remote_mkdir.sh</code> 和 <code>remote_rmdir.sh</code> ，要求：</strong></p><ol type="1"><li><strong>在 <code>myserver</code> 服务器上创建并清空文件夹：<code>~/homework/lesson_4/homework_4/</code></strong></li><li><strong>本地目录下仅包含 <code>remote_mkdir.sh</code> 和 <code>remote_rmdir.sh</code></strong></li><li><strong><code>remote_mkdir.sh</code> 和 <code>remote_rmdir.sh</code> 具有可执行权限</strong></li><li><strong><code>remote_mkdir.sh</code> 接收一个传入参数。格式为 <code>./remote_mkdir.sh directory_name</code></strong> <strong>该操作可以在 <code>myserver</code> 服务器上的 <code>~/homework/lesson_4/homework_4/</code> 目录下，创建一个名为<code>directory_name</code> 的文件夹</strong></li><li><strong><code>remote_rmdir.sh</code> 接收一个传入传输。格式为 <code>./remote_rmdir.sh directory_name</code></strong> <strong>该操作可以将 <code>myserver</code> 服务器上的 <code>~/homework/lesson_4/homework_4/</code> 目录下的名为 <code>directory_name</code> 的文件夹删掉</strong></li><li><strong>注意：传入的文件参数可能包含空格。两个脚本均不需要判断传入参数的合法性</strong></li></ol><p><strong>remote_mkdir.sh</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">ssh myserver mkdir <span class="string">&quot;homework/lesson_4/homework_4/&#x27;<span class="variable">$1</span>&#x27;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>remote_rmdir.sh</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">ssh myserver rm -r <span class="string">&quot;homework/lesson_4/homework_4/&#x27;<span class="variable">$1</span>&#x27;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="git-ஐ">git ஐ</h1><p>代码托管平台：<a href="git.acwing.com">git.acwing.com</a></p><h2 id="git基本概念">git基本概念</h2><ul><li><strong>工作区</strong>：仓库的目录。工作区是独立于各个分支的。</li><li><strong>暂存区</strong>：数据暂时存放的区域，类似于工作区写入版本库前的缓存区。暂存区是独立于各个分支的。</li><li><strong>版本库</strong>：存放所有已经提交到本地仓库的代码版本</li><li><strong>版本结构</strong>：树结构，树中每个节点代表一个代码版本。</li></ul><h2 id="git常用命令">git常用命令</h2><h3 id="git-注册信息">git 注册信息</h3><p><code>git config --global user.name xxx</code> : 设置全局用户名，信息记录在 <code>~/.gitconfig</code> 文件中</p><p><code>git config --global user.email xxx@xxx.com</code> : 设置全局邮箱地址，信息记录在 <code>~/.gitconfig</code> 文件中</p><h3 id="git-单分支基本指令">git 单分支基本指令</h3><p><code>git init</code> : 将当前目录配置成 <code>git</code> 仓库，信息记录在隐藏的 <code>.git</code> 文件夹中</p><p><code>git add XX</code> : 将 <code>XX</code> 文件添加到 <strong>暂存区</strong></p><p><code>git add .</code> : 将所有待加入 <strong>暂存区</strong> 的文件加入 <strong>暂存区</strong> (<code>.</code> 可以用 <code>*</code> 代替)</p><p><code>git rm --cached XX</code> : 将文件从 <strong>仓库索引目录</strong> 中 <strong>删掉</strong></p><p><code>git commit -m "给自己看的备注信息"</code> : 将 <strong>暂存区</strong> 的内容 <strong>提交</strong> 到 <strong>当前分支</strong></p><p><code>git status</code> : 查看仓库 <strong>状态</strong></p><p><code>git diff XX</code> : 查看 <code>XX</code> 文件相对于 <strong>暂存区</strong> <strong>修改了哪些内容</strong></p><h3 id="git-单分支版本切换指令">git 单分支版本切换指令</h3><p><code>git log</code> : 查看当前分支的 <strong>所有版本</strong></p><p><code>git reflog</code> : 查看 <strong>HEAD指针</strong> 的 <strong>移动历史</strong>（<strong>包括被回滚的版本</strong>，这是回滚后再回来的方法）</p><p><code>git reset --hard HEAD^</code> 或 <code>git reset --hard HEAD~</code> : 将代码库 <strong>回滚</strong> 到 <strong>上一个版本</strong></p><p><code>git reset --hard HEAD^^</code> : 往上 <strong>回滚</strong> <strong>两次</strong>，以此类推（几个 <code>^</code> 就回滚几次）</p><p><code>git reset --hard HEAD~100</code> : 往上 <strong>回滚</strong> <strong>100个版本</strong>，以此类推（<code>~n</code> 回滚 <code>n</code> 次）</p><p><code>git reset --hard 版本号</code> : <strong>回滚</strong> 到某一特定版本</p><p><code>git checkout — XX</code> 或 <code>git restore XX</code> : 将 <code>XX</code> 文件 <strong>尚未加入暂存区</strong> 的修改 <strong>全部撤销</strong></p><h3 id="git-单分支与远程仓库交互的指令">git 单分支与远程仓库交互的指令</h3><p><code>git remote add origin git@git.acwing.com:xxx/XXX.git</code> : 将本地仓库关联到远程仓库</p><p><code>git push -u</code> (第一次需要-u以后不需要) : 将当前分支推送到远程仓库</p><p><code>git push origin branch_name</code> : 将本地的 <strong>某个分支</strong> 推送到远程仓库</p><p><code>git clone git@git.acwing.com:xxx/XXX.git</code> : 将远程仓库 <code>XXX</code> <strong>下载</strong> 到当前目录下</p><h3 id="git-多分支管理指令">git 多分支管理指令</h3><p><code>git branch</code> : 查看 <strong>所有分支</strong> 和 <strong>当前所处分支</strong></p><p><code>git branch branch_name</code> : <strong>创建</strong> 新分支</p><p><code>git checkout -b branch_name</code> : <strong>创建并切换</strong> 到 <code>branch_name</code> 这个分支</p><p><code>git checkout branch_name</code> : <strong>切换</strong> 到 <code>branch_name</code> 这个分支</p><p><code>git merge branch_name</code> : 将分支 <code>branch_name</code> <strong>合并</strong> 到 <strong>当前分支</strong> 上</p><h3 id="git-多分支与远程仓库交互的指令">git 多分支与远程仓库交互的指令</h3><p><code>git branch -d branch_name</code> : <strong>删除</strong> <strong>本地仓库</strong> 的 <code>branch_name</code> <strong>分支</strong></p><p><code>git push -d origin branch_name</code> : <strong>删除</strong> <strong>远程仓库</strong> 的 <code>branch_name</code> <strong>分支</strong></p><p><code>git push --set-upstream origin branch_name</code> : 设置 <strong>本地仓库</strong> 的 <code>branch_name</code> 分支与 <strong>远程仓库</strong> 的 <code>branch_name</code> 分支 <strong>对应</strong></p><p><code>git branch --set-upstream-to=origin/branch_name1 branch_name2</code> : 将 <strong>远程仓库</strong> 的 <code>branch_name1</code> 分支与 <strong>本地仓库</strong> 的 <code>branch_name2</code> 分支 <strong>对应</strong></p><p><code>git pull</code> : 将 <strong>远程仓库</strong> 的 <strong>当前分支</strong> 与 <strong>本地仓库</strong> 的 <strong>当前分支</strong> <strong>合并</strong></p><p><code>git pull origin branch_name</code> : 将 <strong>远程仓库</strong> 的 <code>branch_name</code> 分支与 <strong>本地仓库</strong> 的当前分支 <strong>合并</strong></p><p><code>git checkout -t origin/branch_name</code> : 将 <strong>远程仓库</strong> 的 <code>branch_name</code> 分支拉取到 <strong>本地仓库</strong></p><h3 id="git-stash暂存">git stash暂存</h3><p><code>git stash</code> : 将 <strong>工作区</strong> 和 <strong>暂存区</strong> 中 <strong>尚未提交</strong> 的修改存入 <strong>栈</strong> 中</p><p><code>git stash apply</code> : 将 <strong>栈顶</strong> 存储的修改 <strong>恢复</strong> 到 <strong>当前分支</strong> ，但 <strong>不删除</strong> 栈顶元素</p><p><code>git stash drop</code> : <strong>删除</strong> <strong>栈顶</strong> 存储的修改</p><p><code>git stash pop</code> : 将 <strong>栈顶</strong> 存储的修改 <strong>恢复</strong> 到当前分支，<strong>同时删除</strong> 栈顶元素</p><p><code>git stash list</code> : <strong>查看</strong> 栈中 <strong>所有元素</strong></p><h2 id="作业-4">作业</h2><blockquote><p>创建好作业后，先进入文件夹 <code>/home/acs/homework/lesson_5/</code></p></blockquote><p><strong>0. 在当前目录下创建文件夹 <code>homework</code> ，并将 <code>homework</code> 目录配置成 <code>git</code> 仓库。后续作业均在 <code>homework</code> 目录下操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir homework</span><br><span class="line"><span class="built_in">cd</span> homework</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><p><strong>1. 创建文件readme.txt，内容包含一行：111，将修改提交一个 <code>commit</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch readme.txt</span><br><span class="line"><span class="built_in">echo</span> 111 &gt; readme.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add 111&quot;</span></span><br></pre></td></tr></table></figure><p><strong>2. 在 <code>readme.txt</code> 文件末尾新增一行：<code>222</code> 将修改提交一个 <code>commit</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 222 &gt;&gt; readme.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add 222&quot;</span></span><br></pre></td></tr></table></figure><p><strong>3. 创建文件夹：<code>problem1</code> 和 <code>problem2</code></strong></p><ol type="1"><li><strong>创建文件 <code>problem1/main.cpp</code> 。文件内容为下述链接中的代码：<a href="https://www.acwing.com/problem/content/submission/code_detail/7834813/">Code</a></strong></li><li><strong>创建文件 <code>problem2/main.cpp</code> 。文件内容为下述链接中的代码：<a href="https://www.acwing.com/problem/content/submission/code_detail/7834819/">Code</a></strong></li></ol><p><strong>将修改提交一个commit</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir problem1</span><br><span class="line">mkdir problem2</span><br><span class="line"></span><br><span class="line">vim problem1/main.cpp</span><br><span class="line"><span class="comment"># 一顿操作复制黏贴</span></span><br><span class="line">vim problem2/main.cpp</span><br><span class="line"><span class="comment"># 一顿操作再复制黏贴</span></span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add problem1 problem2&quot;</span></span><br></pre></td></tr></table></figure><p><strong>4. 删除文件夹 <code>problem2</code>；创建文件夹 <code>problem3</code>；创建文件 <code>problem3/main.cpp</code></strong></p><p><strong>文件内容为下述链接中的代码：<a href="https://www.acwing.com/problem/content/submission/code_detail/7834841/">Code</a></strong></p><p><strong>将readme.txt中最后一行222删掉，然后添加一行333；将修改提交一个commit；</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rm -r problem2</span><br><span class="line">mkdir problem3</span><br><span class="line">vim problem3/main.cpp</span><br><span class="line"><span class="comment"># 一顿操作复制黏贴</span></span><br><span class="line">vim readme.txt</span><br><span class="line">***</span><br><span class="line">111</span><br><span class="line">333</span><br><span class="line">***</span><br><span class="line">git .</span><br><span class="line">git commit -m <span class="string">&quot;add problem3 333&quot;</span></span><br></pre></td></tr></table></figure><p><strong>5. 在 <a href="https://git.acwing.com/">AcWing Git</a> 上注册账号并创建仓库，仓库名称为 <code>homework</code></strong></p><p><strong>将本地 <code>git</code> 仓库上传到 <code>AC Git</code> 云端仓库</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@git.acwing.com:colopen/homework.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p><strong>6. 创建并切换至新分支 <code>dev</code></strong></p><p><strong>在 <code>readme.txt</code> 文件中添加一行 <code>444</code>；将修改提交一个 <code>commit</code>；将 <code>dev</code> 分支推送至 <code>AC Git</code>远程仓库</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一种方法，创建切换两步走</span></span><br><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br><span class="line"><span class="comment"># 另一种方法，直接创建并切换</span></span><br><span class="line">git checkout -b dev</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 444 &gt;&gt; readme.txt</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;add 444&quot;</span></span><br><span class="line">git push origin dev</span><br></pre></td></tr></table></figure><p><strong>7. 切换回 <code>master</code> 分支，在 <code>readme.txt</code> 文件中添加一行 <code>555</code>，将修改提交一个 <code>commit</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line"><span class="built_in">echo</span> 555 &gt;&gt; readme.txt</span><br><span class="line">git .</span><br><span class="line">git commit -m <span class="string">&quot;add 555&quot;</span></span><br></pre></td></tr></table></figure><p><strong>8. 将 <code>dev</code> 分支合并到 <code>master</code> 分支</strong></p><p><strong>手动处理冲突，使 <code>readme</code> 文件最终内容包含 4 行：<code>111、333、555、444</code></strong></p><p><strong>将修改提交一个 <code>commit</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">git merge dev  <span class="comment"># 将dev分支合并到当前分支</span></span><br><span class="line"></span><br><span class="line">vim readme.txt</span><br><span class="line"></span><br><span class="line">***</span><br><span class="line">111</span><br><span class="line">333</span><br><span class="line">555</span><br><span class="line">444</span><br><span class="line">***</span><br><span class="line"></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;fix conflicts&quot;</span></span><br></pre></td></tr></table></figure><p><strong>9. 将 <code>master</code> 分支的版本库 <code>push</code> 到 <code>AC Git</code> 云端仓库</strong></p><p><strong>登录 <code>myserver</code> 服务器（4. ssh作业中配置的服务器）；</strong></p><p><strong>创建并清空文件夹：<code>~/homework/lesson_5/</code></strong></p><p><strong>将 <code>AC Git</code> 云端仓库 <code>clone</code> 到 <code>~/homework/lesson_5/</code> 中</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br><span class="line"></span><br><span class="line">ssh myserver</span><br><span class="line"></span><br><span class="line">mkdir ~/homework/lesson_5</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ~/homework/lesson_5</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> git@git.acwing.com:colopen/homework.git</span><br></pre></td></tr></table></figure><h1 id="thrift-ஐ">thrift ஐ</h1><p><code>thrift</code> 是一种接口描述语言和二进制通讯协议，它被用来定义和创建跨语言的服务。</p><p>它被当作一个远程过程调用（<code>RPC</code>）框架来使用，是由Facebook为“大规模跨语言服务开发”而开发的。</p><h2 id="查阅-thrift-官方文档">查阅 thrift 官方文档</h2><p><a href="https://thrift.apache.org/">thrift 官网</a> -&gt; <a href="https://thrift.apache.org/tutorial/">Tutorial</a> -&gt; <a href="https://git-wip-us.apache.org/repos/asf?p=thrift.git;a=blob_plain;f=tutorial/tutorial.thrift">tutorial.thrift</a></p><p><strong>thrift基础数据类型</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//The first thing to know about are types. The available types in Thrift are:</span></span><br><span class="line"><span class="keyword">bool</span>        <span class="comment">//Boolean, one byte</span></span><br><span class="line"><span class="built_in">i8</span> (byte)   <span class="comment">//Signed 8-bit integer</span></span><br><span class="line">i16         <span class="comment">//Signed 16-bit integer</span></span><br><span class="line">i32         <span class="comment">//Signed 32-bit integer</span></span><br><span class="line">i64         <span class="comment">//Signed 64-bit integer</span></span><br><span class="line"><span class="keyword">double</span>      <span class="comment">//64-bit floating point value</span></span><br><span class="line">string      <span class="comment">//String</span></span><br><span class="line">binary      <span class="comment">//Blob (byte array)</span></span><br><span class="line">map&lt;t1,t2&gt;  <span class="comment">//Map from one type to another</span></span><br><span class="line">list&lt;t1&gt;    <span class="comment">//Ordered list of one type</span></span><br><span class="line">set&lt;t1&gt;     <span class="comment">//Set of unique elements of one type</span></span><br></pre></td></tr></table></figure><p><strong>声明要转化的语言</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Thrift files can namespace, package, or prefix their output in various</span></span><br><span class="line"><span class="comment"> * target languages.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> cl tutorial</span><br><span class="line"><span class="keyword">namespace</span> cpp tutorial</span><br><span class="line"><span class="keyword">namespace</span> d tutorial</span><br><span class="line"><span class="keyword">namespace</span> dart tutorial</span><br><span class="line"><span class="keyword">namespace</span> java tutorial</span><br><span class="line"><span class="keyword">namespace</span> php tutorial</span><br><span class="line"><span class="keyword">namespace</span> perl tutorial</span><br><span class="line"><span class="keyword">namespace</span> haxe tutorial</span><br><span class="line"><span class="keyword">namespace</span> netstd tutorial</span><br></pre></td></tr></table></figure><p><strong>结构体定义</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Structs are the basic complex data structures. They are comprised of fields</span></span><br><span class="line"><span class="comment"> * which each have an integer identifier, a type, a symbolic name, and an</span></span><br><span class="line"><span class="comment"> * optional default value.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Fields can be declared &quot;optional&quot;, which ensures they will not be included</span></span><br><span class="line"><span class="comment"> * in the serialized output if they aren&#x27;t set.  Note that this requires some</span></span><br><span class="line"><span class="comment"> * manual management in some languages.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Work</span> &#123;</span></span><br><span class="line">  <span class="number">1</span>: i32 num1 = <span class="number">0</span>,</span><br><span class="line">  <span class="number">2</span>: i32 num2,</span><br><span class="line">  <span class="number">3</span>: Operation op,</span><br><span class="line">  <span class="number">4</span>: optional string comment,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Service定义</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Ahh, now onto the cool part, defining a service. Services just need a name</span></span><br><span class="line"><span class="comment"> * and can optionally inherit from another service using the extends keyword.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">service Calculator extends shared.SharedService &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * A method definition looks like C code. It has a return type, arguments,</span></span><br><span class="line"><span class="comment">   * and optionally a list of exceptions that it may throw. Note that argument</span></span><br><span class="line"><span class="comment">   * lists and exception lists are specified using the exact same syntax as</span></span><br><span class="line"><span class="comment">   * field lists in struct or exception definitions.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">ping</span><span class="params">()</span>,</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   i32 <span class="title">add</span><span class="params">(<span class="number">1</span>:i32 num1, <span class="number">2</span>:i32 num2)</span>,</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   i32 <span class="title">calculate</span><span class="params">(<span class="number">1</span>:i32 logid, <span class="number">2</span>:Work w)</span> <span class="title">throws</span> <span class="params">(<span class="number">1</span>:InvalidOperation ouch)</span>,</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="function">    * This method has a oneway modifier. That means the client only makes</span></span></span><br><span class="line"><span class="comment"><span class="function">    * a request and does not listen for any response at all. Oneway methods</span></span></span><br><span class="line"><span class="comment"><span class="function">    * must be void.</span></span></span><br><span class="line"><span class="comment"><span class="function">    */</span></span></span><br><span class="line"><span class="function">   oneway <span class="keyword">void</span> <span class="title">zip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="用-thrift-实现一个基本的匹配系统-接口">用 thrift 实现一个基本的匹配系统 接口</h2><blockquote><p>thrift 是一种接口描述语言，用简便的 <code>thrift</code> 语言写完以后，可以用命令快速生成任何语言的文件</p></blockquote><p><strong>基本框架</strong></p><ol type="1"><li>游戏应用端（Python3）<ol type="1"><li>客户端：与 匹配系统服务器 的服务端交互</li></ol></li><li>匹配系统服务器（C++）<ol type="1"><li>服务端：与 游戏应用端 的客户端交互</li><li>客户端：与 数据存储服务器 的服务端交互</li></ol></li><li>数据存储服务器（已经实现）<ol type="1"><li>服务端：与 匹配系统服务器 的客户端交互</li></ol></li></ol><h3 id="初始化-git-仓库">初始化 git 仓库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkdir thrift_lesson</span><br><span class="line"><span class="built_in">cd</span> thrift_lesson</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line">mkdir thrift        <span class="comment"># 存放 thrift 源文件</span></span><br><span class="line">mkdir game          <span class="comment"># 实现 游戏应用端 的 客户端 功能</span></span><br><span class="line">mkdir match_system  <span class="comment"># 实现 匹配系统服务器 的 服务端 和 客户端 功能</span></span><br><span class="line"></span><br><span class="line">touch readme.md</span><br><span class="line"><span class="comment"># 远程创建好git上的repo</span></span><br><span class="line">git remote add origin git@git.acwing.com:colopen/thrift_lesson.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;init repo&quot;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="实现-游戏应用端-与-匹配系统服务器-的交互">实现 游戏应用端 与 匹配系统服务器 的交互</h3><p><strong>创建 match.thrift 接口文件</strong></p><p>用于实现 游戏应用端 与 匹配系统服务器 交互的 service</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> cpp match_service <span class="comment">//声明转换为C++语言</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">User</span> &#123;</span>   <span class="comment">//定义结构体 User</span></span><br><span class="line">    <span class="number">1</span>: i32 id, </span><br><span class="line">    <span class="number">2</span>: string name,</span><br><span class="line">    <span class="number">3</span>: i32 score</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">service Match &#123; <span class="comment">//定义service服务</span></span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * user: 添加的用户信息</span></span><br><span class="line"><span class="comment">     * info: 附加信息</span></span><br><span class="line"><span class="comment">     * 在匹配池中添加一个名用户</span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line"></span><br><span class="line">    <span class="function">i32 <span class="title">add_user</span><span class="params">(<span class="number">1</span>: User user, <span class="number">2</span>: string info)</span>,</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="comment">/** </span></span></span><br><span class="line"><span class="comment"><span class="function">     * user: 删除的用户信息</span></span></span><br><span class="line"><span class="comment"><span class="function">     * info: 附加信息</span></span></span><br><span class="line"><span class="comment"><span class="function">     * 从匹配池中删除一名用户</span></span></span><br><span class="line"><span class="comment"><span class="function">     */</span>  </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    i32 <span class="title">remove_user</span><span class="params">(<span class="number">1</span>: User user, <span class="number">2</span>: string info)</span>,</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="匹配系统服务器的客户端">匹配系统服务器的客户端</h4><p><strong>运行 match.thrift 接口文件在匹配系统服务器端生成 C++ 源文件</strong></p><p>进入 <code>match_system</code> 中新建文件夹 <code>src</code> （之后所有的 <strong>匹配服务器</strong> 源文件放在 <code>src</code> 下）</p><p>并在 <code>src</code> 文件夹中运行 <code>thrift</code> 脚本生成 C++ 版本的文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原始的thrift生成文件语法：thrift -r --gen &lt;language&gt; &lt;Thrift filename&gt;</span></span><br><span class="line">mkdir match_system/src</span><br><span class="line"><span class="built_in">cd</span> match_system/src</span><br><span class="line">thrift -r --gen cpp ../../thrift/match.thrift</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将该文件夹重命名为 match_server（区别于之后要此处生成的client server）</span></span><br><span class="line"><span class="comment"># match_server 与 游戏应用端交互 ; client_server 与 数据存储服务器交互</span></span><br><span class="line">mv gen-cpp match_server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 Match_server.skeleton.cpp 移动到当前 src 目录下并重命名为 main.cpp</span></span><br><span class="line"><span class="comment"># 方便之后调试 main.cpp 文件，其他的源文件仍被存放在 src 文件夹下</span></span><br><span class="line">mv match_server/Match_server.skeleton.cpp main.cpp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 由于移动了 main.cpp 故需要修改一下 main.cpp 中头文件里关于 Math.cpp 的引用路径</span></span><br><span class="line"><span class="comment"># 之后写 client_server 同理</span></span><br></pre></td></tr></table></figure><p>生成完成后的工作区状态如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">acs@7854cf6acd7f:~/thrift_lesson$ tree</span><br><span class="line">.</span><br><span class="line">|-- game</span><br><span class="line">|-- match_system</span><br><span class="line">|   `-- src</span><br><span class="line">|       |--main.cpp</span><br><span class="line">|       `-- match_server</span><br><span class="line">|           |-- Match.cpp</span><br><span class="line">|           |-- Match.h</span><br><span class="line">|           |-- match_types.cpp</span><br><span class="line">|           `-- match_types.h</span><br><span class="line">|-- readme.md</span><br><span class="line">`-- thrift</span><br><span class="line">    `-- match.thrift</span><br><span class="line"></span><br><span class="line">5 directories, 7 files</span><br></pre></td></tr></table></figure><p>编译并运行 cpp 文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 编译 所有的 .cpp 文件生成 .o 文件</span></span><br><span class="line"><span class="comment"># g++ -c [文件1.cpp] [文件2.cpp] ...</span></span><br><span class="line">g++ -c main.cpp match_server/*.cpp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 链接 所有的 .o 文件生成可执行文件 .exe</span></span><br><span class="line"><span class="comment"># g++ [文件1.o] [文件2.o] ... -o [需要额外添加的动态库]</span></span><br><span class="line"><span class="comment"># 此处需要额外添加 -lthrift 的 thrift 动态库</span></span><br><span class="line">g++ *.o -o main -lthrift</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 运行 可执行文件</span></span><br><span class="line">./main</span><br></pre></td></tr></table></figure><p>将 <strong>非编译文件</strong> 和 <strong>非可执行文件</strong> 提交到 <code>git</code> 中去（好的工程习惯）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git restore --stage *.o     <span class="comment"># .o文件是编译文件，不加入暂存区里</span></span><br><span class="line">git restore --stage main    <span class="comment"># main是可执行文件，不加入暂存区里</span></span><br><span class="line">git commit -m <span class="string">&quot;add match server&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h4 id="游戏应用端的客户端">游戏应用端的客户端</h4><p><strong>运行 match.thrift 在游戏应用端生成 python3 源文件</strong></p><p>同上，在 game 文件夹下实现 游戏应用端 的 客户端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原始的thrift生成文件语法：thrift -r --gen &lt;language&gt; &lt;Thrift filename&gt;</span></span><br><span class="line">mkdir game/src</span><br><span class="line"><span class="built_in">cd</span> game/src</span><br><span class="line">thrift -r --gen py ../../thrift/match.thrift</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将该文件夹重命名为 match_client</span></span><br><span class="line"><span class="comment"># 不过这里不改也无所谓，游戏应用端只有匹配的客户端</span></span><br><span class="line">mv gen-py match_client</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删掉 Match_remote </span></span><br><span class="line"><span class="comment"># 该文件是用 py 实现 服务端 时用的文件</span></span><br><span class="line"><span class="comment"># 此处我们只需要实现 客户端 功能，因此他没有作用，不妨删掉，让文档简洁一点</span></span><br><span class="line">rm match_client/match/Match-remote</span><br></pre></td></tr></table></figure><p>利用官网提供的模板，编写 客户端 文件 <code>client.py</code></p><p><a href="https://thrift.apache.org/tutorial/py.html">官网模板</a></p><p><strong><code>client.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先删去开头三行声明</span></span><br><span class="line"><span class="comment"># 此处修改路径，以及Calculator 为 Match</span></span><br><span class="line"><span class="comment"># 此处修改 ttypes 路径 以及 User 类</span></span><br><span class="line"><span class="keyword">from</span> match_client.match <span class="keyword">import</span> Match</span><br><span class="line"><span class="keyword">from</span> match_client.match.ttypes <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> thrift <span class="keyword">import</span> Thrift</span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TSocket</span><br><span class="line"><span class="keyword">from</span> thrift.transport <span class="keyword">import</span> TTransport</span><br><span class="line"><span class="keyword">from</span> thrift.protocol <span class="keyword">import</span> TBinaryProtocol</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment"># Make socket</span></span><br><span class="line">    transport = TSocket.TSocket(<span class="string">&#x27;localhost&#x27;</span>, <span class="number">9090</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Buffering is critical. Raw sockets are very slow</span></span><br><span class="line">    transport = TTransport.TBufferedTransport(transport)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Wrap in a protocol</span></span><br><span class="line">    protocol = TBinaryProtocol.TBinaryProtocol(transport)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Create a client to use the protocol encoder</span></span><br><span class="line">    client = Match.Client(protocol)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Connect!</span></span><br><span class="line">    transport.<span class="built_in">open</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 调试语句</span></span><br><span class="line">    user = User(<span class="number">1</span>, <span class="string">&#x27;yxc&#x27;</span>, <span class="number">1500</span>)</span><br><span class="line">    client.add_user(user, <span class="string">&quot;&quot;</span>) </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Close!</span></span><br><span class="line">    transport.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用 main 函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main() </span><br></pre></td></tr></table></figure><p>将 <strong>非编译文件</strong> 和 <strong>非可执行文件</strong> 提交到 <code>git</code> 中去（好的工程习惯）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git restore --stage *.pyc   <span class="comment"># .pyc文件是编译文件，不加入暂存区里</span></span><br><span class="line">git restore --stage *.swp   <span class="comment"># .swp文件是缓存文件，不加入暂存区里（vim没关时会生成）</span></span><br><span class="line">git commit -m <span class="string">&quot;add client&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p><strong>重写 <code>client.py</code> 使之能不断从终端里读入信息</strong></p><p><strong><code>client.py</code></strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用 python 在终端读入信息需要引入 stdin</span></span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> stdin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将原来的通信 main 函数改写成operate函数，每次需要的时候调用一次建立通信传递信息</span></span><br><span class="line"><span class="comment"># 目的是可以一直不断处理信息</span></span><br><span class="line"><span class="comment"># 然后重写 main 函数，使之能不断从终端读入信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">operate</span>(<span class="params">op, user_id, user_name, score</span>):</span></span><br><span class="line">    <span class="comment"># ...........................</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 针对 op 参数，分别进行 &quot;增加&quot; 与 &quot;删出&quot; 操作</span></span><br><span class="line">    user = User(user_id, user_name, score)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> op == <span class="string">&quot;add&quot;</span>:</span><br><span class="line">        client.add_user(user, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        client.remove_user(user, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># ...........................</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> stdin:</span><br><span class="line">        op, user_id, user_name, score = line.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        operate(op, <span class="built_in">int</span>(user_id), user_name, <span class="built_in">int</span>(score))</span><br></pre></td></tr></table></figure><h4 id="在匹配服务器里给-匹配系统-开一个-线程">在匹配服务器里给 匹配系统 开一个 线程</h4><p>运用到了 <strong>操作系统</strong> 里的 <strong>PV 原语</strong> 以及 <strong>生产者-消费者</strong> 模型</p><p>重写 <code>match_system/main.cpp</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This autogenerated skeleton file illustrates how to build a server.</span></span><br><span class="line"><span class="comment">// You should copy it to another filename to avoid overwriting it.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;match_server/Match.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/protocol/TBinaryProtocol.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/server/TSimpleServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/transport/TServerSocket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/transport/TBufferTransports.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thread&gt;</span>               <span class="comment">// 需要线程，引入头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mutex&gt;</span>                <span class="comment">// 互斥信号量</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;condition_variable&gt;</span>   <span class="comment">// 条件变量，用于 阻塞和唤醒 线程</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span>                <span class="comment">// 用于模拟消息队列</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ::apache::thrift;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ::apache::thrift::protocol;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ::apache::thrift::transport;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> ::apache::thrift::server;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>  ::match_service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Task</span> //消息队列中的元素</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    User user;</span><br><span class="line">    string type;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">MessageQueue</span> //消息队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    queue&lt;Task&gt; q;          <span class="comment">//消息队列本体</span></span><br><span class="line">    mutex m;                <span class="comment">//互斥信号量</span></span><br><span class="line">    condition_variable cv;  <span class="comment">//条件变量，用于阻塞唤醒线程</span></span><br><span class="line">&#125;message_queue;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pool</span>  // 模拟匹配池</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save_result</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span>  <span class="comment">// 记录成功匹配的信息</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Match Result: %d %d\n&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">()</span>    <span class="comment">// 匹配池中的第一、第二个用户进行匹配</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (users.<span class="built_in">size</span>() &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> a = users[<span class="number">0</span>], b = users[<span class="number">1</span>];</span><br><span class="line">            users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>());</span><br><span class="line">            users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>());</span><br><span class="line"></span><br><span class="line">            <span class="built_in">save_result</span>(a.id, b.id);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(User user)</span> <span class="comment">// 向匹配池中加入用户</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        users.<span class="built_in">push_back</span>(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(User user)</span>  <span class="comment">// 从匹配池中删除用户</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">uint32_t</span> i = <span class="number">0</span>; i &lt; users.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (users[i].id == user.id)</span><br><span class="line">            &#123;</span><br><span class="line">                users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>() + i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    vector&lt;User&gt; users; <span class="comment">// 匹配池中的用户，用 vector 记录</span></span><br><span class="line">&#125;pool;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MatchHandler</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> MatchIf &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        <span class="built_in">MatchHandler</span>() &#123;</span><br><span class="line">            <span class="comment">// Your initialization goes here</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">int32_t</span> <span class="title">add_user</span><span class="params">(<span class="keyword">const</span> User&amp; user, <span class="keyword">const</span> std::string&amp; info)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Your implementation goes here</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;add_user\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="function">unique_lock&lt;mutex&gt; <span class="title">lck</span><span class="params">(message_queue.m)</span></span>;    <span class="comment">// 访问临界区(消息队列)，先上锁</span></span><br><span class="line">            message_queue.q.<span class="built_in">push</span>(&#123;user, <span class="string">&quot;add&quot;</span>&#125;);        <span class="comment">// 把新消息加入消息队列</span></span><br><span class="line">            message_queue.cv.<span class="built_in">notify_all</span>();              <span class="comment">// 唤醒阻塞的线程</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">int32_t</span> <span class="title">remove_user</span><span class="params">(<span class="keyword">const</span> User&amp; user, <span class="keyword">const</span> std::string&amp; info)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// Your implementation goes here</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;remove_user\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="function">unique_lock&lt;mutex&gt; <span class="title">lck</span><span class="params">(message_queue.m)</span></span>;    <span class="comment">// 访问临界区(消息队列)，先上锁</span></span><br><span class="line">            message_queue.q.<span class="built_in">push</span>(&#123;user, <span class="string">&quot;remove&quot;</span>&#125;);     <span class="comment">// 把新消息加入消息队列</span></span><br><span class="line">            message_queue.cv.<span class="built_in">notify_all</span>();              <span class="comment">// 唤醒阻塞的线程</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 基于 &quot;生产者-消费者模型&quot; 的线程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">consume_task</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">unique_lock&lt;mutex&gt; <span class="title">lck</span><span class="params">(message_queue.m)</span></span>;    <span class="comment">// 访问临界区(消息队列)，先上锁</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (message_queue.q.<span class="built_in">empty</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            message_queue.cv.<span class="built_in">wait</span>(lck);     <span class="comment">//这里要阻塞进程</span></span><br><span class="line">            <span class="comment">// 避免队列为空时，一直反复运行该线程，导致一直占用临界区，而不能加入新消息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">auto</span> task = message_queue.q.<span class="built_in">front</span>();    <span class="comment">// 取出消息队列队头元素</span></span><br><span class="line">            message_queue.q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">            lck.<span class="built_in">unlock</span>();   <span class="comment">// 临界区访问结束，直接解锁</span></span><br><span class="line">            <span class="comment">// 避免后续没用到临界区信息，而长时间占用临界区的情况发生</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (task.type == <span class="string">&quot;add&quot;</span>) pool.<span class="built_in">add</span>(task.user);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (task.type == <span class="string">&quot;remove&quot;</span>) pool.<span class="built_in">remove</span>(task.user);</span><br><span class="line"></span><br><span class="line">            pool.<span class="built_in">match</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> port = <span class="number">9090</span>;</span><br><span class="line">    ::<span class="function">std::shared_ptr&lt;MatchHandler&gt; <span class="title">handler</span><span class="params">(<span class="keyword">new</span> MatchHandler())</span></span>;</span><br><span class="line">    ::<span class="function">std::shared_ptr&lt;TProcessor&gt; <span class="title">processor</span><span class="params">(<span class="keyword">new</span> MatchProcessor(handler))</span></span>;</span><br><span class="line">    ::<span class="function">std::shared_ptr&lt;TServerTransport&gt; <span class="title">serverTransport</span><span class="params">(<span class="keyword">new</span> TServerSocket(port))</span></span>;</span><br><span class="line">    ::<span class="function">std::shared_ptr&lt;TTransportFactory&gt; <span class="title">transportFactory</span><span class="params">(<span class="keyword">new</span> TBufferedTransportFactory())</span></span>;</span><br><span class="line">    ::<span class="function">std::shared_ptr&lt;TProtocolFactory&gt; <span class="title">protocolFactory</span><span class="params">(<span class="keyword">new</span> TBinaryProtocolFactory())</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">TSimpleServer <span class="title">server</span><span class="params">(processor, serverTransport, transportFactory, protocolFactory)</span></span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Start Match Server&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="function">thread <span class="title">matching_thread</span><span class="params">(consume_task)</span></span>;   <span class="comment">// 调用一个线程运行 consume_task</span></span><br><span class="line"></span><br><span class="line">    server.<span class="built_in">serve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译，运行，上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g++ -c main.cpp</span><br><span class="line">g++ *.o -o main -lthrift -pthread</span><br><span class="line"></span><br><span class="line">git add main.cpp</span><br><span class="line">git commit -m <span class="string">&quot;match-server ver:2.0&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="数据存储服务器-与-匹配系统服务器-的交互">数据存储服务器 与 匹配系统服务器 的交互</h3><p><strong>数据存储服务器的服务端</strong></p><p><code>save.thrift</code> 文件(现成)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> cpp save_service</span><br><span class="line"></span><br><span class="line">service Save &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * username: myserver的名称</span></span><br><span class="line"><span class="comment">     * password: myserver的密码的md5sum的前8位</span></span><br><span class="line"><span class="comment">     * 用户名密码验证成功会返回0，验证失败会返回1</span></span><br><span class="line"><span class="comment">     * 验证成功后，结果会被保存到myserver:homework/lesson_6/result.txt中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">i32 <span class="title">save_data</span><span class="params">(<span class="number">1</span>: string username, <span class="number">2</span>: string password, <span class="number">3</span>: i32 player1_id, <span class="number">4</span>: i32 player2_id)</span></span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><p>在 <strong>匹配系统服务器</strong> 利用 <strong>thrift</strong> 生成 <strong>C++</strong> 文件</p><p>并删掉不必要 <strong>服务端</strong> 文件，因为在该交互功能里，<strong>匹配系统服务器</strong> 是作为客户端的</p><blockquote><p>而且，一个服务器里只能有一个 main 函数执行</p></blockquote><p>只保留 <strong>客户端</strong> 文件即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> match_system/src</span><br><span class="line">thrift -r --gen cpp ../../thrift/save.thrift</span><br><span class="line">mv gen-cpp save_client</span><br><span class="line">rm save_client/Save_server.skeleton.cpp</span><br></pre></td></tr></table></figure><p>利用 md5 哈希函数获得服务器密码的 <strong>哈希值</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">homework 4 getinfo</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">User: acs_2</span><br><span class="line">HostName: 123.57.47.211</span><br><span class="line">Password: dff1704d</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">md5sum</span><br><span class="line"></span><br><span class="line">dff1704d [&lt;Enter&gt;]</span><br><span class="line">[Ctrl + D]</span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line">50c0f4b28a0b353e7b20489a1fd984e7  -</span><br><span class="line">--------------</span><br><span class="line"><span class="comment"># 哈希值前 8 位就是我们要调用服务器接口时用的密码</span></span><br></pre></td></tr></table></figure><p>从 <a href="https://thrift.apache.org/tutorial/cpp.html"><strong>thrift官网</strong></a> 复制 <strong>Client</strong> 端的模板到 <strong>main.cpp</strong> 下与 <strong>数据存储服务器</strong> 交互的函数中，然后开始修改模板里的一些参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要额外引入的头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/transport/TSocket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/transport/TTransportUtils.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要额外声明的命名空间</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span>  ::save_service;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写 save_result 内的内容，使其能够与 &quot;数据存储服务器&quot; 交互</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">save_result</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span>  <span class="comment">// 记录成功匹配的信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Match Result: %d %d\n&quot;</span>, a, b);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Client端的板子</span></span><br><span class="line">    <span class="function">std::shared_ptr&lt;TTransport&gt; <span class="title">socket</span><span class="params">(<span class="keyword">new</span> TSocket(<span class="string">&quot;123.57.47.211&quot;</span>, <span class="number">9090</span>))</span></span>;</span><br><span class="line">    <span class="function">std::shared_ptr&lt;TTransport&gt; <span class="title">transport</span><span class="params">(<span class="keyword">new</span> TBufferedTransport(socket))</span></span>;</span><br><span class="line">    <span class="function">std::shared_ptr&lt;TProtocol&gt; <span class="title">protocol</span><span class="params">(<span class="keyword">new</span> TBinaryProtocol(transport))</span></span>;</span><br><span class="line">    <span class="function">SaveClient <span class="title">client</span><span class="params">(protocol)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        transport-&gt;<span class="built_in">open</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用接口，把信息存储 &quot;数据存储服务器&quot; 中</span></span><br><span class="line">        <span class="keyword">int</span> res = client.<span class="built_in">save_data</span>(<span class="string">&quot;acs_2&quot;</span>, <span class="string">&quot;50c0f4b2&quot;</span>, a, b);</span><br><span class="line">        <span class="comment">//输出匹配结果</span></span><br><span class="line">        <span class="keyword">if</span> (!res) <span class="built_in">puts</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line"></span><br><span class="line">        transport-&gt;<span class="built_in">close</span>();</span><br><span class="line">    &#125; <span class="built_in"><span class="keyword">catch</span></span> (TException&amp; tx) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;ERROR: &quot;</span> &lt;&lt; tx.<span class="built_in">what</span>() &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译，运行，上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">g++ -c main.cpp save_client/*.cpp</span><br><span class="line">g++ *.o -o main -lthrift -pthread</span><br><span class="line">./main</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"><span class="comment"># 游戏应用端</span></span><br><span class="line">add 1 yxc 1500</span><br><span class="line">add 2 zxc 1500</span><br><span class="line"><span class="comment"># 匹配系统服务器</span></span><br><span class="line">add_user</span><br><span class="line">add_user</span><br><span class="line">Match Result: 1 2</span><br><span class="line">success</span><br><span class="line"><span class="comment"># 数据存储服务器</span></span><br><span class="line"><span class="comment">## homework/lesson_6/result.txt</span></span><br><span class="line">result: 1 2</span><br><span class="line">141da30f</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传到 git 服务器</span></span><br><span class="line">git add main.cpp</span><br><span class="line">git add ../../thrift/save.thrift</span><br><span class="line">git commit -m <span class="string">&quot;implement save-client&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="实现匹配系统-ver3.0-功能每次只匹配分差小于-50-的用户">实现匹配系统 ver3.0 功能：每次只匹配分差小于 50 的用户</h3><p>该功能的实现比较简单，基本的模拟题</p><p><strong>考虑重写 main.cpp 文件中的部分函数功能</strong></p><p>修改线程中 <strong>消息队列</strong> 为空时，不再是 <strong>阻塞</strong> 直到 <strong>唤醒</strong> 为止</p><p>让其可以每经过 1 秒就进行一次 <code>match()</code> 调用</p><p>这样做的目的是：由于我们的匹配策略发生了变化，可能匹配池中仍然有用户在等待匹配（当前匹配池各个用户分差都大于50），而消息队列此时仍为空</p><p>如果仍然采用先前的策略，可能会导致进程卡死（新用户不进去，老用户永远匹配不了）</p><blockquote><p>如果不加入 "随时间扩大匹配域" 的功能，无论改不改上述情况都会可能发生 但是为了后续实现 "随时间扩大匹配域" 功能，先做一个铺垫</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入调用 sleep 函数的头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span><span class="comment">// 用于调用 sleep 函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//修改 &quot;生产者 - 消费者模型&quot; 的线程中，关于消息队列为空时的处理</span></span><br><span class="line"><span class="keyword">if</span> (message_queue.q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 此处修改为每 1 秒进行一次匹配，而不是等到被唤醒时才匹配</span></span><br><span class="line">    lck.<span class="built_in">unlock</span>();   <span class="comment">// 直接解锁临界区资源</span></span><br><span class="line">    pool.match;     <span class="comment">//调用math()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写匹配池Pool类中的match函数，使之可以匹配分数差在 50 以内的两个用户</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">()</span>    <span class="comment">// 匹配池中的第一、第二个用户进行匹配</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (users.<span class="built_in">size</span>() &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 按照 rank分 排序</span></span><br><span class="line">        <span class="built_in">sort</span>(users.<span class="built_in">begin</span>(), users.<span class="built_in">end</span>(), [&amp;](User &amp;a, User &amp;b)&#123;</span><br><span class="line">            <span class="keyword">return</span> a.score &lt; b.score;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">uint32_t</span> i = <span class="number">1</span>; i &lt; users.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            User a = users[i - <span class="number">1</span>], b = users[i];</span><br><span class="line">            <span class="comment">// 两名玩家分数差小于50时进行匹配</span></span><br><span class="line">            <span class="keyword">if</span> (b.score - a.score &lt;= <span class="number">50</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>() + i - <span class="number">1</span>, users.<span class="built_in">begin</span>() + i); <span class="comment">//删掉用户a,b</span></span><br><span class="line">                <span class="built_in">save_result</span>(a.id, b.id);</span><br><span class="line"></span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="keyword">break</span>;    <span class="comment">// 一轮扫描后，发现没有能够匹配的用户，就停止扫描，等待下次调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译，运行，上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">g++ -c main.cpp</span><br><span class="line">g++ *.o -o main -lthrift -pthread</span><br><span class="line">./main</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"><span class="comment"># 游戏应用端</span></span><br><span class="line">add 1 yxc 2000</span><br><span class="line">add 2 zxc 1500</span><br><span class="line">add 3 cxc 1549</span><br><span class="line"><span class="comment"># 匹配系统服务器</span></span><br><span class="line">add_user</span><br><span class="line">add_user    <span class="comment"># 此处用户 yxc 与用户 zxc 没有匹配，因为分差超过50</span></span><br><span class="line">add_user</span><br><span class="line">Match Result: 2 3   <span class="comment"># 用户 zxc 与用户 cxc 分差在 50 以内，进行匹配</span></span><br><span class="line">success</span><br><span class="line"><span class="comment"># 数据存储服务器</span></span><br><span class="line"><span class="comment">## homework/lesson_6/result.txt</span></span><br><span class="line">result: 2 3</span><br><span class="line">b6281235</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传到 git 服务器</span></span><br><span class="line">git add main.cpp</span><br><span class="line">git add ../../thrift/save.thrift</span><br><span class="line">git commit -m <span class="string">&quot;match server:3.0&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="实现匹配系统-ver4.0-功能多线程">实现匹配系统 ver4.0 功能：多线程</h3><p>我也不懂，就是拉官网的模板下来改一改，也不知道效率提升了多少 QAQ</p><p>重写 <strong>main.cpp</strong> 文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入新的多线程头文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/concurrency/ThreadManager.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/concurrency/ThreadFactory.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/server/TThreadPoolServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/server/TThreadedServer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;thrift/TToString.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制模板的类 CalculatorCloneFactory 然后改一改，把所有的 Calculator 改为 Match</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MatchCloneFactory</span> :</span> <span class="keyword">virtual</span> <span class="keyword">public</span> MatchIfFactory &#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        ~<span class="built_in">MatchCloneFactory</span>() <span class="keyword">override</span> = <span class="keyword">default</span>;</span><br><span class="line">        <span class="function">MatchIf* <span class="title">getHandler</span><span class="params">(<span class="keyword">const</span> ::apache::thrift::TConnectionInfo&amp; connInfo)</span> <span class="keyword">override</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            std::shared_ptr&lt;TSocket&gt; sock = std::dynamic_pointer_cast&lt;TSocket&gt;(connInfo.transport);</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; &quot;Incoming connection\n&quot;;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; &quot;\tSocketInfo: &quot;  &lt;&lt; sock-&gt;getSocketInfo() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; &quot;\tPeerHost: &quot;    &lt;&lt; sock-&gt;getPeerHost() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; &quot;\tPeerAddress: &quot; &lt;&lt; sock-&gt;getPeerAddress() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; &quot;\tPeerPort: &quot;    &lt;&lt; sock-&gt;getPeerPort() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MatchHandler;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">releaseHandler</span><span class="params">(MatchIf* handler)</span> <span class="keyword">override</span> </span>&#123;    <span class="comment">//改为MatchIf*  </span></span><br><span class="line">            <span class="keyword">delete</span> handler;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 重写main函数，启用多线程服务器</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="function">TThreadedServer <span class="title">server</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">            std::make_shared&lt;MatchProcessorFactory&gt;(std::make_shared&lt;MatchCloneFactory&gt;()),</span></span></span><br><span class="line"><span class="params"><span class="function">            std::make_shared&lt;TServerSocket&gt;(<span class="number">9090</span>), <span class="comment">//port</span></span></span></span><br><span class="line"><span class="params"><span class="function">            std::make_shared&lt;TBufferedTransportFactory&gt;(),</span></span></span><br><span class="line"><span class="params"><span class="function">            std::make_shared&lt;TBinaryProtocolFactory&gt;())</span></span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Start Match Server&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="function">thread <span class="title">matching_thread</span><span class="params">(consume_task)</span></span>;   <span class="comment">// 调用一个线程运行 consume_task</span></span><br><span class="line"></span><br><span class="line">    server.<span class="built_in">serve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译，运行，上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">g++ -c main.cpp</span><br><span class="line">g++ *.o -o main -lthrift -pthread</span><br><span class="line">./main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传到 git 服务器</span></span><br><span class="line">git add main.cpp</span><br><span class="line">git commit -m <span class="string">&quot;match server:4.0&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h3 id="实现匹配系统-ver5.0-功能随时间扩大匹配域">实现匹配系统 ver5.0 功能：随时间扩大匹配域</h3><p>就是字面意思，模拟一下就好了</p><p>说一下 y总 的做法，用额外一个数组 <code>wt</code> 来记录每个用户的等待时间</p><p>因为在消息队列为空时，线程会每 1 秒调用一次 match 函数</p><p>然后每次调用 match 函数，会首先对 匹配池中所有用户的 wt 值自增 1</p><p>从而实现用 wt 记录每个用户的等待时间</p><p>然后，每一单位的 wt 会扩大 50分 的匹配域，从而达到模拟题意的功能</p><blockquote><p>感觉复杂度有点高 QAQ</p></blockquote><p><strong>main.cpp</strong> 修改部分</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主要修改的是 pool 类中关于 match 函数的部分</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pool</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    ....</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        User a = users[i], b = users[j];</span><br><span class="line">        <span class="keyword">int</span> diff = <span class="built_in">abs</span>(a.score - b.score);</span><br><span class="line">        <span class="keyword">int</span> a_diff_max = wt[i] * <span class="number">50</span>; </span><br><span class="line">        <span class="keyword">int</span> b_diff_max = wt[j] * <span class="number">50</span>; </span><br><span class="line">        <span class="keyword">return</span> diff &lt;= a_diff_max &amp;&amp; diff &lt;= b_diff_max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">()</span>    <span class="comment">// 匹配池中的第一、第二个用户进行匹配</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 每 1 秒调用 1 次 match，实现 wt 自增 1，从而实现使所有用户等待时间增加</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> &amp;t: wt) </span><br><span class="line">            t ++ ;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (users.<span class="built_in">size</span>() &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">uint32_t</span> i = <span class="number">0</span>; i &lt; users.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">uint32_t</span> j = i + <span class="number">1</span>; j &lt; users.<span class="built_in">size</span>(); j ++ )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">check</span>(i, j)) </span><br><span class="line">                    &#123;</span><br><span class="line">                        users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>() + j); </span><br><span class="line">                        users.<span class="built_in">erase</span>(users.<span class="built_in">begin</span>() + i); </span><br><span class="line">                        wt.<span class="built_in">erase</span>(wt.<span class="built_in">begin</span>() + j); </span><br><span class="line">                        wt.<span class="built_in">erase</span>(wt.<span class="built_in">begin</span>() + i); </span><br><span class="line"></span><br><span class="line">                        <span class="built_in">save_result</span>(users[i].id, users[j].id);</span><br><span class="line">                        flag = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (!flag) <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag) <span class="keyword">break</span>;    <span class="comment">// 一轮扫描后，发现没有能够匹配的用户，就停止扫描，等待下次调用</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    ....</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; wt; <span class="comment">//wait_time 记录每个用户的等待时间</span></span><br><span class="line">&#125;pool;</span><br></pre></td></tr></table></figure><p>编译，运行，上传</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">g++ -c main.cpp</span><br><span class="line">g++ *.o -o main -lthrift -pthread</span><br><span class="line">./main</span><br><span class="line"></span><br><span class="line">-------------</span><br><span class="line"><span class="comment"># 游戏应用端</span></span><br><span class="line">add 1 yxc 2000</span><br><span class="line">add 2 zxc 1500</span><br><span class="line"><span class="comment"># 匹配系统服务器</span></span><br><span class="line">add_user</span><br><span class="line">add_user</span><br><span class="line"><span class="comment"># 等待了 10 s</span></span><br><span class="line">Match Result: 1 2</span><br><span class="line">success</span><br><span class="line"><span class="comment"># 数据存储服务器</span></span><br><span class="line"><span class="comment">## homework/lesson_6/result.txt</span></span><br><span class="line">result: 1 2</span><br><span class="line">141da30f</span><br><span class="line">-------------</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传到 git 服务器</span></span><br><span class="line">git add main.cpp</span><br><span class="line">git commit -m <span class="string">&quot;match server:5.0&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h2 id="作业-5">作业</h2><p>本次作业为复现课上最后一个版本的内容，课程视频地址：https://www.acwing.com/video/3479/ 注意：本次作业的2个题目采用整体评测，即如果两个作业同时正确，则得100分；否则如果至少有一个作业错误，则得0分。</p><p>创建好作业后，先进入文件夹 <code>/home/acs/homework/lesson_6/</code> ，当前目录的文件结构如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">`-- thrift_lesson</span><br><span class="line">    |-- game</span><br><span class="line">    |   `-- src</span><br><span class="line">    |-- match_system</span><br><span class="line">    |   `-- src </span><br><span class="line">    |-- readme.md</span><br><span class="line">    `-- thrift</span><br><span class="line">        |-- match.thrift</span><br><span class="line">        `-- save.thrift</span><br></pre></td></tr></table></figure><p><strong>0. 进入 <code>thrift_lesson/match_system/src/</code> 目录，用cpp实现课上的match-server和save-client逻辑。</strong></p><p><strong>接口文件在thrift_lesson/thrift/中</strong>。</p><p><strong>实现后启动server，监听端口9090。</strong></p><p><strong>1. 进入 <code>thrift_lesson/game/src/</code> 目录，用 <code>python3</code> 实现课上的 <code>match-client</code> 逻辑。</strong></p><p><strong>文件名和输入格式与课上内容相同。</strong></p><blockquote><p>超详细版就在上方，可以直接查阅 这里就不写作业过程了</p></blockquote><h1 id="管道环境变量与常用命令-ஐ">管道、环境变量与常用命令 ஐ</h1><h2 id="管道">管道</h2><p><strong>概念</strong></p><p>管道类似于文件重定向，可以将前一个命令的 <code>stdout</code> 重定向到下一个命令的 <code>stdin</code>。</p><p><strong>要点</strong></p><p>管道命令仅处理 <code>stdout</code>，会忽略 <code>stderr</code>。</p><p>管道右边的命令必须能接受stdin。</p><p>多个管道命令可以串联。</p><p><strong>与文件重定向的区别</strong></p><ul><li>文件重定向左边为命令，右边为文件。</li><li>管道左右两边均为命令，左边有 <code>stdout</code>，右边有 <code>stdin</code>。</li><li><strong>举例</strong></li></ul><p>统计当前目录下所有 <code>python</code> 文件的总行数，其中 <code>find、xargs、wc</code> 等命令可以参考<a href="">常用命令</a> 这一节内容。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs cat | wc -l</span><br></pre></td></tr></table></figure><h2 id="环境变量">环境变量</h2><p><strong>概念</strong></p><p>Linux 系统中会用很多环境变量来记录配置信息。</p><p>环境变量类似于全局变量，可以被各个进程访问到。我们可以通过修改环境变量来方便地修改系统配置。</p><p><strong>查看</strong></p><p>列出当前环境下的所有环境变量 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">env  <span class="comment"># 显示当前用户的变量</span></span><br><span class="line"><span class="built_in">set</span>  <span class="comment"># 显示当前shell的变量，包括当前用户的变量;</span></span><br><span class="line"><span class="built_in">export</span>  <span class="comment"># 显示当前导出成用户变量的shell变量</span></span><br></pre></td></tr></table></figure><p>输出某个环境变量的值 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p><strong>修改</strong></p><p>环境变量的定义、修改、删除操作可以参考 <a href="">shell语法——变量</a> 这一节的内容。</p><p>为了将对环境变量的修改应用到未来所有环境下，可以将修改命令放到 <code>~/.bashrc</code> 文件中。</p><p>修改完 <code>~/.bashrc</code> 文件后，记得执行 <code>source ~/.bashrc</code>，来将修改应用到当前的 <code>bash</code> 环境下。</p><p>为何将修改命令放到 <code>~/.bashrc</code> ，就可以确保修改会影响未来所有的环境呢？</p><ul><li>每次启动 <code>bash</code>，都会先执行 <code>~/.bashrc</code>。</li><li>每次 <code>ssh</code> 登陆远程服务器，都会启动一个 <code>bash</code> 命令行给我们。</li><li>每次 <code>tmux</code> 新开一个 <code>pane</code>，都会启动一个 <code>bash</code> 命令行给我们。</li><li>所以未来所有新开的环境都会加载我们修改的内容。</li></ul><p><strong>常见环境变量</strong></p><ol type="1"><li><code>HOME</code> : 用户的家目录</li><li><code>PATH</code> : 可执行文件（命令）的存储路径。路径与路径之间用:分隔。当某个可执行文件同时出现在多个路径中时，会选择从左到右数第一个路径中的执行。下列所有存储路径的环境变量，均采用从左到右的优先顺序。</li><li><code>LD_LIBRARY_PATH</code> : 用于指定动态链接库(<code>.so</code> 文件)的路径，其内容是以冒号分隔的路径列表。</li><li><code>C_INCLUDE_PATH</code> : <code>C</code> 语言的头文件路径，内容是以冒号分隔的路径列表。</li><li><code>CPLUS_INCLUDE_PATH</code> : <code>CPP</code> 的头文件路径，内容是以冒号分隔的路径列表。</li><li><code>PYTHONPATH</code> : <code>Python</code> 导入包的路径，内容是以冒号分隔的路径列表。</li><li><code>JAVA_HOME</code> : <code>jdk</code> 的安装目录。</li><li><code>CLASSPATH</code> : 存放 <code>Java</code> 导入类的路径，内容是以冒号分隔的路径列表。</li></ol><h2 id="常用命令">常用命令</h2><blockquote><p>yxc: Linux命令非常多，本节讲解几个常用命令。其他命令依赖于大家根据实际操作环境，边用边查。</p></blockquote><h3 id="系统状况">系统状况</h3><ol type="1"><li><code>top</code> : 查看所有进程的信息（Linux的任务管理器）<ul><li>打开后，输入 <code>M</code> : 按使用内存排序</li><li>打开后，输入 <code>P</code> : 按使用CPU排序</li><li>打开后，输入 <code>q</code> : 退出</li></ul></li><li><code>df -h</code> : 查看硬盘使用情况</li><li><code>free -h</code> :查看内存使用情况</li><li><code>du -sh</code> : 查看当前目录占用的硬盘空间</li><li><code>ps aux</code> : 查看所有进程</li><li><code>kill -9 pid</code> : 杀死编号为 <code>pid</code> 的进程<ul><li>传递某个具体的信号 : kill -s SIGTERM pid</li></ul></li><li><code>netstat -nt</code> : 查看所有网络连接</li><li><code>w</code> : 列出当前登陆的用户</li><li><code>ping www.baidu.com</code> : 检查是否连网</li></ol><h3 id="文件权限">文件权限</h3><ol type="1"><li><code>chmod</code> : 修改文件权限<ol type="1"><li><code>chmod +x xxx</code> : 给xxx添加可执行权限</li><li><code>chmod -x xxx</code> : 去掉xxx的可执行权限</li><li><code>chmod 777 xxx</code> : 将xxx的权限改成777</li><li><code>chmod 777 xxx -R</code> : 递归修改整个文件夹的权限</li></ol></li></ol><h3 id="文件检索">文件检索</h3><ol type="1"><li><code>find /path/to/directory/ -name '*.py'</code> : 搜索某个文件路径下的所有 <code>*.py</code> 文件</li><li><code>grep xxx</code> : 从 <code>stdin</code> 中读入若干行数据，如果某行中包含 <code>xxx</code> ，则输出该行；否则忽略该行</li><li><code>wc</code> : 统计行数、单词数、字节数 既可以从 <code>stdin</code> 中直接读入内容；也可以在命令行参数中传入文件名列表；<ol type="1"><li><code>wc -l</code> : 统计行数</li><li><code>wc -w</code> : 统计单词数</li><li><code>wc -c</code> : 统计字节数</li></ol></li><li><code>tree</code> : 展示当前目录的文件结构<ol type="1"><li><code>tree /path/to/directory/</code> : 展示某个目录的文件结构</li><li><code>tree -a</code> : 展示隐藏文件</li></ol></li><li><code>ag xxx</code> : 搜索当前目录下的所有文件，检索 <code>xxx</code> 字符串</li><li><code>cut</code> : 分割一行内容<ul><li>从 <code>stdin</code> 中读入多行数据</li><li><code>echo $PATH | cut -d ':' -f 3,5</code> : 输出 <code>PATH</code> 用 <code>:</code> 分割后第 3、5 列数据</li><li><code>echo $PATH | cut -d ':' -f 3-5</code> : 输出 <code>PATH</code> 用 <code>:</code> 分割后第 3-5 列数据</li><li><code>echo $PATH | cut -c 3,5</code> : 输出 <code>PATH</code> 的第 3、5 个字符</li><li><code>echo $PATH | cut -c 3-5</code> : 输出 <code>PATH</code> 的第 3-5 个字符</li></ul></li><li><code>sort</code> : 将每行内容按字典序排序<ul><li>可以从 <code>stdin</code> 中读取多行数据</li><li>可以从命令行参数中读取文件名列表</li></ul></li><li><code>xargs</code> : 将 <code>stdin</code> 中的数据用空格或回车分割成命令行参数</li><li><code>find . -name '*.py' | xargs cat | wc -l</code> : 统计当前目录下所有 <code>python</code> 文件的总行数</li></ol><h3 id="查看文件内容">查看文件内容</h3><ol type="1"><li><code>more</code> : 浏览文件内容<ul><li><code>回车</code> : 下一行</li><li><code>空格</code> : 下一页</li><li><code>b</code> : 上一页</li><li><code>q</code> : 退出</li></ul></li><li><code>less</code> : 与 <code>more</code> 类似，功能更全<ul><li><code>回车</code> : 下一行</li><li><code>y</code> : 上一行</li><li><code>Page Down</code> : 下一页</li><li><code>Page Up</code> : 上一页</li><li><code>q</code> : 退出</li></ul></li><li><code>head -3 xxx</code> : 展示 <code>xxx</code> 的前 3 行内容<ul><li>同时支持从stdin读入内容</li></ul></li><li><code>tail -3 xxx</code> : 展示 <code>xxx</code> 末尾 3 行内容<ul><li>同时支持从stdin读入内容</li></ul></li></ol><h3 id="用户相关">用户相关</h3><ol type="1"><li><code>history</code> : 展示当前用户的历史操作。内容存放在 <code>~/.bash_history</code> 中</li></ol><h3 id="工具">工具</h3><ol type="1"><li><code>md5sum</code> : 计算 <code>md5</code> 哈希值<ul><li>可以从stdin读入内容</li><li>也可以在命令行参数中传入文件名列表</li></ul></li><li><code>time command</code> : 统计 <code>command</code> 命令的执行时间</li><li><code>ipython3</code> : 交互式 <code>python3</code> 环境。可以当做计算器，或者批量管理文件。<ul><li><code>! echo "Hello World"</code> : <code>!</code> 表示执行 <code>shell</code> 脚本</li></ul></li><li><code>watch -n 0.1 command</code> : 每 <code>0.1</code> 秒执行一次 <code>command</code> 命令</li><li>tar : 压缩文件<ul><li><code>tar -zcvf xxx.tar.gz /path/to/file/*</code> : 压缩</li><li><code>tar -zxvf xxx.tar.gz</code> : 解压缩</li></ul></li><li><code>diff xxx yyy</code> : 查找文件 <code>xxx</code> 与 <code>yyy</code> 的不同点</li></ol><h3 id="安装软件">安装软件</h3><ol type="1"><li><code>sudo command</code> : 以 <code>root</code> 身份执行 <code>command</code> 命令</li><li><code>apt-get install xxx</code> : 安装软件（<strong>Ubuntu</strong>）<ol type="1"><li><code>yum install xxx</code> : 安装软件（<strong>CentOS</strong>）</li></ol></li><li><code>pip install xxx --user --upgrade</code> : 安装 <code>python</code> 包<ul><li><code>pip3</code> 升级版的 <code>pip</code></li></ul></li></ol><h2 id="作业-6">作业</h2><p><strong>0. 进入 <code>homework_0</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>编写可执行 <code>shell</code> 脚本，文件名为 <code>mydu</code> ，使得在任意目录执行该脚本后，可以输出当前目录所占用的磁盘空间大小，格式化输出（例如 <code>1K, 234M, 2G</code>）</strong></li><li><strong>修改环境变量 <code>PATH</code> ，使得在任意目录下输入 <code>mydu</code> 均可执行上述脚本</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim mydu</span><br><span class="line"></span><br><span class="line">*******</span><br><span class="line"><span class="comment">#! /bin/bash</span></span><br><span class="line">du -sh</span><br><span class="line">*******</span><br><span class="line">chmod +x mydu</span><br></pre></td></tr></table></figure><p>修改环境变量 <code>$PATH</code> 方法：</p><p>在 <code>bash</code> 的配置文件 <code>~/.bashrc</code> 的最后一行加上新的环境变量：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=/home/acs/homework/lesson_7/homework_0:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>然后运行配置文件，重启 <code>bash</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p><strong>1. 进入 <code>homework_1</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>给当前目录下的所有文件添加可读权限</strong></li><li><strong>统计当前目录下共有多少个以 <code>.cpp</code> 结尾的文件，将结果写入 <code>ans.txt</code> 中</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +r *</span><br><span class="line">find . -name <span class="string">&#x27;*.cpp&#x27;</span> | wc -l &gt; ans.txt</span><br></pre></td></tr></table></figure><p><strong>2. 进入homework_2文件夹，然后：</strong></p><ol type="1"><li><strong>统计当前目录下所有 <code>cpp</code> 文件的总行数，将结果写入 <code>ans1.txt</code> 中</strong></li><li><strong>遍历当前目录下所有 <code>py</code> 文件，统计共有多少行包含字符串 <code>thrift</code> ，将结果写入 <code>ans2.txt</code> 中</strong></li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.cpp&#x27;</span> | xargs cat | wc -l &gt; ans1.txt</span><br><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs cat | grep thrift | wc -l &gt; answ.txt</span><br></pre></td></tr></table></figure><p><strong>3. 进入 <code>homework_3</code> 文件夹，然后删除当前目录下的所有 <code>py</code> 文件。</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs rm</span><br></pre></td></tr></table></figure><p><strong>4. 进入 <code>homework_4</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>当前目录下包含一个文件 <code>scores.txt</code>，文件中有若干行数据，每行数据包含用空格隔开的 3 个字段：姓名、数学成绩、算法成绩。</strong></li><li><strong>将 <code>scores.txt</code> 文件的内容以空格为分隔符分隔成 3 列，将第一列内容写入 <code>names.txt</code>，第二列内容写入 <code>mathematics.txt</code>，第三列内容写入 <code>algorithm.txt</code></strong></li></ol><p>注意：<code>scores.txt</code> 文件本身不要修改。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat scores.txt | cut -d <span class="string">&#x27; &#x27;</span> -f 1 &gt; names.txt</span><br><span class="line">cat scores.txt | cut -d <span class="string">&#x27; &#x27;</span> -f 2 &gt; mathematics.txt</span><br><span class="line">cat scores.txt | cut -d <span class="string">&#x27; &#x27;</span> -f 3 &gt; algorithm.txt</span><br></pre></td></tr></table></figure><p><strong>5. 进入 <code>homework_5</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>当前目录下包含一个文件 <code>scores.txt</code> ，文件中有若干行数据，每行数据包含用空格隔开的 3 个字段：姓名、数学成绩、算法成绩</strong></li><li><strong>将 <code>scores.txt</code> 文件的内容以空格为分隔符分隔成 3 列，将第一列内容按字典序从小到大排序后写入<code>names.txt</code></strong></li></ol><p><strong>注意：<code>scores.txt</code> 文件本身不要修改</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat scores.txt | cut -d <span class="string">&#x27; &#x27;</span> -f 1 | sort &gt; names.txt</span><br></pre></td></tr></table></figure><p><strong>6. 进入 <code>homework_6</code> 文件夹，然后将 <code>scores.txt</code> 文件的前 5 行写入 <code>top.txt</code>，后 4 行写入 <code>bottom.txt</code></strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat scores.txt | head -5 &gt; top.txt</span><br><span class="line">cat scores.txt | tail -4 &gt; bottom.txt</span><br></pre></td></tr></table></figure><p><strong>7. 进入 <code>homework_7</code> 文件夹，计算 <code>scores.txt</code> 文件的 <code>md5sum</code>，将结果写入 <code>ans.txt</code></strong></p><p><strong>注意：<code>ans.txt</code>文件中只包含长度为 32 的 <code>md5sum</code> ，不包含其他内容</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum scores.txt | cut -c 1,32 &gt; ans.txt</span><br></pre></td></tr></table></figure><p><strong>8. 进入 <code>homework_8</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>将 <code>dir_a</code> 文件夹压缩为 <code>project_a.tar.gz</code></strong></li><li><strong>将 <code>project_b.tar.gz</code> 压缩文件解压到当前目录</strong></li></ol><p><strong>注意：不要删除 <code>dir_a</code> 文件夹和 <code>project_b.tar.gz</code> 文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf project_a.tar.gz dir_a</span><br><span class="line">tar -zxvf project_b.tar.gz</span><br></pre></td></tr></table></figure><p><strong>9. 进入homework_9文件夹，然后计算 2112+3782112+378，将结果写入ans.txt中</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ipython 3</span><br><span class="line"></span><br><span class="line">Python 3.8.10 (default, Jun  2 2021, 10:49:15) </span><br><span class="line">Type <span class="string">&#x27;copyright&#x27;</span>, <span class="string">&#x27;credits&#x27;</span> or <span class="string">&#x27;license&#x27;</span> <span class="keyword">for</span> more information</span><br><span class="line">IPython 7.13.0 -- An enhanced Interactive Python. Type <span class="string">&#x27;?&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line"></span><br><span class="line">In [1]: res = 2**112 + 3**78        </span><br><span class="line"></span><br><span class="line">In [2]: ! <span class="built_in">echo</span> <span class="variable">$res</span> &gt; ans.txt</span><br></pre></td></tr></table></figure><h1 id="租云服务器及配docker环境-ஐ">租云服务器及配docker环境 ஐ</h1><h2 id="概述">概述</h2><p><strong>云平台的作用 :</strong></p><ul><li><p>存放我们的docker容器，让计算跑在云端</p></li><li><p>获得公网IP地址，让每个人可以访问到我们的服务</p></li><li>任选一个云平台即可，推荐配置 :<ul><li>1 核 2GB（后期可以动态扩容，前期配置低一些没关系）</li><li>网络带宽采用按量付费，最大带宽拉满即可（费用取决于用量，与最大带宽无关）</li><li>系统版本 : <code>ubuntu 20.04 LTS</code>（推荐用统一版本，避免后期出现配置不兼容的问题）</li></ul></li></ul><h2 id="租云服务器及安装docker">租云服务器及安装docker</h2><p>阿里云地址 : https://www.aliyun.com/</p><p><strong>创建工作用户 <code>acs</code> 并赋予 <code>sudo</code> 权限</strong></p><p>登录到新服务器。打开 <strong>AC Terminal</strong>，然后 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@xxx.xxx.xxx.xxx  <span class="comment"># xxx.xxx.xxx.xxx替换成新服务器的公网IP</span></span><br></pre></td></tr></table></figure><p><strong>创建acs用户 :</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser acs  <span class="comment"># 创建用户acs</span></span><br><span class="line">usermod -aG sudo acs  <span class="comment"># 给用户acs分配sudo权限</span></span><br></pre></td></tr></table></figure><p><strong>配置免密登录方式</strong></p><p>退回AC Terminal，然后配置acs用户的别名和免密登录，可以参考4. ssh——ssh登录</p><p><strong>配置新服务器的工作环境</strong></p><p>将 <strong>AC Terminal</strong> 的配置传到新服务器上 :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp .bashrc .vimrc .tmux.conf server_name:  <span class="comment"># server_name需要换成自己配置的别名</span></span><br></pre></td></tr></table></figure><p><strong>安装 tmux 和 docker</strong></p><p>登录自己的服务器，然后安装 <strong>tmux</strong> :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install tmux</span><br></pre></td></tr></table></figure><p>打开 <strong>tmux</strong>。（养成好习惯，所有工作都在 <strong>tmux</strong> 里进行，防止意外关闭终端后，工作进度丢失）</p><p>然后在 <strong>tmux</strong> 中根据 <a href="https://docs.docker.com/engine/install/ubuntu/">docker安装教程</a> 安装 <strong>docker</strong> 即可</p><h2 id="docker教程">docker教程</h2><p><strong>将当前用户添加到 <code>docker</code> 用户组</strong></p><p>为了避免每次使用 <code>docker</code> 命令都需要加上 <code>sudo</code> 权限，可以将当前用户加入安装中自动创建的 <code>docker</code> 用户组(可以参考<a href="https://docs.docker.com/engine/install/linux-postinstall/">官方文档</a>) :</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line">newgrp docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Verify that you can run docker commands without sudo</span></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p><strong>镜像（images）</strong></p><ol type="1"><li><code>docker pull ubuntu:20.04</code> : 拉取一个镜像</li><li><code>docker images</code> : 列出本地所有镜像</li><li><code>docker image rm ubuntu:20.04</code> 或 <code>docker rmi ubuntu:20.04</code> : 删除镜像 <code>ubuntu:20.04</code></li><li><code>docker [container] commit CONTAINER IMAGE_NAME:TAG</code> : 创建某个 <code>container</code> 的镜像</li><li><code>docker save -o ubuntu_20_04.tar ubuntu:20.04</code> : 将镜像 <code>ubuntu:20.04</code> 导出到本地文件 <code>ubuntu_20_04.tar</code> 中</li><li><code>docker load -i ubuntu_20_04.tar</code> : 将镜像 <code>ubuntu:20.04</code> 从本地文件 <code>ubuntu_20_04.tar</code> 中加载出来</li></ol><p><strong>容器(container)</strong></p><ol type="1"><li><code>docker [container] create -it ubuntu:20.04</code> : 利用镜像 <code>ubuntu:20.04</code> 创建一个容器。</li><li><code>docker ps -a</code> : 查看本地的所有容器</li><li><code>docker [container] start CONTAINER</code> : 启动容器</li><li><code>docker [container] stop CONTAINER</code> : 停止容器</li><li><code>docker [container] restart CONTAINER</code> : 重启容器</li><li><code>docker [contaienr] run -itd ubuntu:20.04</code> : 创建并启动一个容器</li><li><code>docker [container] attach CONTAINER</code> : 进入容器</li><li>先按 <code>Ctrl-p</code> ，再按 <code>Ctrl-q</code> 可以挂起容器</li><li><code>docker [container] exec CONTAINER COMMAND</code> : 在容器中执行命令</li><li><code>docker [container] rm CONTAINER</code> : 删除容器</li><li><code>docker container prune</code> : 删除所有已停止的容器</li><li><code>docker export -o xxx.tar CONTAINER</code> : 将容器 <code>CONTAINER</code> 导出到本地文件 <code>xxx.tar</code> 中</li><li><code>docker import xxx.tar image_name:tag</code> : 将本地文件 <code>xxx.tar</code> 导入成镜像，并将镜像命名为 <code>image_name:tag</code></li><li><code>docker export/import</code> 与 <code>docker save/load</code> 的区别 :<ol type="1"><li><code>export/import</code> 会丢弃历史记录和元数据信息，仅保存容器当时的快照状态</li><li><code>save/load</code> 会保存完整记录，体积更大</li></ol></li><li><code>docker top CONTAINER</code> : 查看某个容器内的所有进程</li><li><code>docker stats</code> : 查看所有容器的统计信息，包括CPU、内存、存储、网络等信息</li><li><code>docker cp xxx CONTAINER:xxx</code> 或 <code>docker cp CONTAINER:xxx xxx</code> : 在本地和容器间复制文件</li><li><code>docker rename CONTAINER1 CONTAINER2</code> : 重命名容器</li><li><code>docker update CONTAINER --memory 500MB</code> : 修改容器限制</li></ol><blockquote><p>更多可以查阅官方文档，在左上角搜索指令即可</p></blockquote><p><strong>实战</strong></p><p>进入 AC Terminal ，然后</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将镜像上传到自己租的云端服务器</span></span><br><span class="line">scp /var/lib/acwing/docker/images/docker_lesson_1_0.tar server_name:</span><br><span class="line"><span class="comment"># 登录自己的云端服务器</span></span><br><span class="line">ssh server_name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将镜像加载到本地</span></span><br><span class="line">docker load -i docker_lesson_1_0.tar</span><br><span class="line"><span class="comment"># 创建并运行docker_lesson:1.0镜像</span></span><br><span class="line"><span class="comment"># 将docker镜像的22号端口映射到服务器的20000号端口</span></span><br><span class="line">docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入创建的docker容器</span></span><br><span class="line">docker attach my_docker_server</span><br><span class="line"><span class="comment"># 设置root密码</span></span><br><span class="line">passwd</span><br></pre></td></tr></table></figure><p>去云平台控制台中修改安全组配置，放行端口 <code>20000</code></p><p>返回 <strong>AC Terminal</strong>，即可通过 <code>ssh</code> 登录自己的 <code>docker</code> 容器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@xxx.xxx.xxx.xxx -p 20000  <span class="comment"># 将xxx.xxx.xxx.xxx替换成自己租的服务器的IP地址</span></span><br></pre></td></tr></table></figure><p>然后，可以仿照上节课内容，创建工作账户 <code>acs</code></p><p>最后，可以参考 <strong>4. ssh——ssh登录</strong> 配置 <code>docker</code> 容器的别名和免密登录</p><p><strong>小Tips</strong></p><p>如果 <code>apt-get</code> 下载软件速度较慢，可以参考 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">清华大学开源软件镜像站</a> 中的内容，修改软件源。</p><h2 id="作业-7">作业</h2><p><strong>0. 进入 <code>homework_0</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>租一台云服务器</strong></li><li><strong>配置服务器别名及免密登录</strong></li><li><strong>将服务器别名写在当前目录下的 <code>server_name.txt</code> 文件中</strong></li></ol><p><strong>1. 进入 <code>homework_1</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>在租好的云服务器中安装 <code>docker</code></strong></li></ol><p><strong>2. 进入 <code>homework_2</code> 文件夹，然后：</strong></p><ol type="1"><li><strong>将 AC Terminal 中的 <code>/var/lib/acwing/docker/images/docker_lesson_1_0.tar</code> 镜像上传到租好的服务器中</strong></li><li><strong>登录到租好的服务器</strong></li><li><strong>将上传的镜像提取出来</strong></li><li><strong>创建该镜像的容器，设置端口映射：<code>20000:22</code></strong></li><li><strong>去云平台控制台中修改安全组配置，放行端口 <code>20000</code></strong></li><li><strong>进入该容器，创建新账户 <code>acs</code></strong></li><li><strong>返回 AC Terminal。配置容器中 <code>acs</code> 账户的别名及免密登录</strong></li><li><strong>将别名写在当前目录下的 <code>server_name.txt</code> 文件中</strong></li></ol><p>作业，都已经在上述 <strong>实战</strong> 里完成</p>]]></content>
      
      
      <categories>
          
          <category> 互联网工程项目教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AcWing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22届考研模拟卷(公共数学二)汇总</title>
      <link href="/graduate_exam/Math/analogue/"/>
      <url>/graduate_exam/Math/analogue/</url>
      
        <content type="html"><![CDATA[<p>现在是 2022-1-1，我简单的点评一下今年各位老师的出卷，如果读者想刷这一年的，可以作为参考</p><p>如果是刚开始刷套卷，建议先把历年真题做完，这样在刷各老师套卷的时候，难易度就多少有点自己的把握了</p><p>例如像张宇今年的八套卷和四套卷，做了几套之后我就知道没有做的必要，出的很多就不是考研范围内的东西</p><p>刷完真题后，大家可以每天上午预定 8:30 - 11:30 做一张数学卷子模拟考试状态</p><p>然后中午或下午花 1～2 个小时对整张卷子做一个总结，可以参考我的做法</p><p>对于 22 年的模拟卷，首先是难易度rank：（张8+4就不排了，没有任何难度参考性）</p><p>真题奇数年 &lt; 李林六套卷 &lt; 余丙森五套卷 &lt; 真题偶数年 ~ 李林四套卷 &lt; 合工大超越 &lt;&lt; 李艳芳三套卷</p><p>上述只是一个模糊的排名，具体每个套卷中会有一两套特别难或者特别简单的</p><p>以及今年的李艳芳三套卷的前两套出的异常难，可以不掐表做，收获还是很大的</p><blockquote><p>李艳芳虽然是最难的，但是我还是推荐刷，并且仍不推荐张宇8+4<br />因为他们难的维度不一样，李艳芳是在考研范围内，命题了很多新的设问角度，做过之后都是连连拍手<br />张宇的8+4完全就是在玩自己教的东西，什么矩阵QR分解，拉格朗日第二型...，考研就没考过，完全是他18讲自己加的<br />有些还是研一要上的《矩阵论》里的东西，对于不学竞赛只是考研的同学，不具有任何参考意义</p><p>以及有人说张宇今年压中考题的，现在拿到真题的各位，可以认真比对一下两题</p><p>首先张宇自称压中的那题，每一个辅导书上都有，那是经典的琴生不等式</p><p>而今年那道真题，是证明充要性，各位的辅导书上证明的是充分性</p><p>充分性的证明我愿称有手就行，直接令变上限积分求两次导找单调性就好了，还比张八上的泰勒展开不知道简单多少</p><p>所以并不是谁最先发微博，谁就是压中题的，还请读者保有批判的思维去看一件事</p></blockquote><p>然后说一下刷套卷的顺序</p><p>先刷真题，真题从 05 年刷到去年，可以根据需要留 1 套即可</p><blockquote><p>由于李四和合工大是12月才出，后期很可能会没时间刷，不要留超过 1 套</p></blockquote><p>然后顺序是：李六 -&gt; 张八 -&gt; 余丙森 -&gt; 李艳芳 -&gt; 张四 -&gt; 李四 -&gt; 合工大</p><p>这个难度曲线是一个双峰函数，刷完李艳芳到达第一个极大值点，之后好好总结能力会有巨大的提升</p><p>张八/四我还是写进去了，大家做的时候也可以不掐表做这两个，作为做过真题的你，这个时候应该知道哪些是根本不会考的知识点，自己也可以不必钻牛角尖，直接把那些张宇题给跳过</p><p>这一套最晚开始时间是10月，我就是这个时间开始的，看完 Ti10 之后开始从 05 年真题刷的</p><p>总而言之，加油吧同学 (<sup>w</sup>)</p><h1 id="合工大超越">合工大超越</h1><h2 id="卷一">卷一</h2><h3 id="选择题">选择题</h3><ol type="1"><li>等价无穷小，泰勒展开，凑导数定义 <span class="math display">\[\lim_{x\to0}\frac{x^2}{f(x)} = \lim_{x\to0}\frac{x}{\dfrac{f(x)-f(0)}{x-0}} = \lim_{x\to0}\frac{x}{f&#39;(0)} = 1\]</span> 可知 <span class="math inline">\(f&#39;(0) = 0\)</span>，又通过保号性易知，为极小值点 本题还可以用等式脱帽法来做，展开后就可以直接洛必达了，否则不能使用洛必达</li><li>简单题</li><li>余丙森五套卷出过，几何上易得，数学证明上做差，然后拆分区间，再换元到相同区间即可 <span class="math display">\[\begin{aligned}I - J &amp;= \int_0^{\frac{\pi}{2}}\dfrac{\cos x - \sin x}{1+x^2}dx = \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx + \int_{\frac{\pi}{4}}^{\frac{\pi}{2}}\dfrac{\cos x - \sin x}{1+x^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx + \int_{\frac{\pi}{4}}^0 \dfrac{\sin x - \cos x}{1+(\dfrac{\pi}{2} - x)^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx +\int_0^{\frac{\pi}{4}} \dfrac{\cos x - \sin x}{1+(\dfrac{\pi}{2} - x)^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}} (\cos x - \sin x) \cdot (\dfrac{1}{1+x^2}-\dfrac{1}{1+(\dfrac{\pi}{2} - x)^2})dx &gt; 0\end{aligned}\]</span></li><li>李林四套卷出过，构造辅助函数求二阶导即可</li><li>利用解的结构反向构造二阶常系数非齐次微分方程</li><li>利用可微定义，洛必达求极限</li><li>二重积分定义，建议看这个视频学习一下这类问题 <a href="https://www.bilibili.com/video/BV1c54y1D776">定积分定义求极限的题</a></li><li>二次函数不能分解的问题</li><li>感觉题目出错了，不然就是显然</li><li>简单题</li></ol><h3 id="填空题">填空题</h3><ol start="11" type="1"><li>高阶导数，泰勒展开</li><li>先代还 <span class="math inline">\(x = e^t\)</span> 再两侧同时积分即可</li><li>多元函数求一点处的导数，可以用先代再求的技巧</li><li>比较瑕点的阶</li><li>二重积分极值互化</li><li>惯性定理，利用零惯性指数为1，行列式为零</li></ol><h3 id="解答题">解答题</h3><ol start="17" type="1"><li>这题不能出现 <span class="math inline">\(f&#39;&#39;(x)\)</span> 故不能使用洛必达法则，可以在 <span class="math inline">\(x = 0\)</span> 处用泰勒展开</li><li>多元函数无条件极值，条件极值部分直接用不等式放缩即可</li><li>武老师每日一题出过，简单题</li><li>变量可分离的齐次型，解出来后是一个圆，计算量中等</li><li>二重积分，积分域对称性化简，然后极值互化做</li><li>第一问用到了特征值之和等于迹 第二问注意给的矩阵 <span class="math inline">\(A\)</span> 不是对称阵，先手动分配一下系数再正常做即可</li></ol><h2 id="卷二">卷二</h2><h3 id="选择题-1">选择题</h3><ol type="1"><li>等式脱毛法，泰勒展开都可</li><li>常用结论，求 <span class="math inline">\(x=0\)</span> 的左右导数令相等易得</li><li>利用解的结构构造齐次线性微分方程，也考了太多次了</li><li>简单题，几何直观显然</li><li>都是经典的范例，不多解释</li><li>隐函数存在定理，余五中提过了，这里再写一次：<ol type="1"><li><span class="math inline">\(F\)</span> 在点 <span class="math inline">\((x_0,y_0)\)</span> 某邻域 <span class="math inline">\(D\)</span> 内连续</li><li><span class="math inline">\(F(x_0,y_0) = 0\)</span>（通常称为初始条件）</li><li><span class="math inline">\(F\)</span> 在某邻域 <span class="math inline">\(D\)</span> 内存在连续偏导数 <span class="math inline">\(F_y(x,y)\)</span></li><li><span class="math inline">\(F_y(x_0,y_0) \ne 0\)</span> （一般是验证最后一个条件）</li></ol></li><li>先算二重积分，再解一个定积分，简单题</li><li>常用结论</li><li>说一下我的做法，由四个等式易得：</li></ol><p><span class="math display">\[\begin{cases}\alpha_1 - \alpha_2 - 2\alpha_3 + \alpha_4 = 0 \\\\-\alpha_1 + \alpha_2 - 2\alpha_3 - \alpha_4 = 0 \\\\-2\alpha_1 + \alpha_2 + \alpha_3 - 4\alpha_4 = 0 \\\\-\alpha_1 - 4\alpha_2 - \alpha_3 + \alpha_4 = 0\end{cases} \quad\Rightarrow\quad\begin{pmatrix}1 &amp; -1 &amp; -2 &amp; 1 \\\\-1 &amp; 1 &amp; -2 &amp; -5 \\\\-2 &amp; 1 &amp; 1 &amp; -4 \\\\-1 &amp; -4 &amp; -1 &amp; 1\end{pmatrix} \begin{pmatrix}\alpha_1\\\\\alpha_2\\\\\alpha_3\\\\\alpha_4\end{pmatrix} = 0\]</span></p><p>易得 <span class="math inline">\(r(A) = 3\)</span>，可得 <span class="math inline">\(r(\alpha_1,\alpha_2,\alpha_3,\alpha_4) \le 1\)</span>，又 <span class="math inline">\(r(\alpha_1,\alpha_2,\alpha_3,\alpha_4) \ge 1\)</span> 故 <span class="math inline">\(r(\alpha_1,\alpha_2,\alpha_3,\alpha_4) = 1\)</span> 10. 是一个方程组构造问题 <span class="math display">\[\begin{pmatrix}1 &amp; x_1 &amp; x_1^2 &amp; x_1^3 \\\\1 &amp; x_2 &amp; x_2^2 &amp; x_2^3\end{pmatrix}\begin{pmatrix}\alpha, \beta\end{pmatrix} = 0\]</span> 且 <span class="math inline">\(r(A) = 2\)</span>，故 <span class="math inline">\(r(\alpha, \beta) \le 2 = 4 - 2 = S - r(A)\)</span></p><h3 id="填空题-1">填空题</h3><ol start="11" type="1"><li>一点处的高阶导数，考虑泰勒展开，需要先解一个微分方程 <span class="math display">\[\begin{aligned}f(x) &amp;= \int_0^x e^{-f(t)} dt \Rightarrow f&#39;(x)e^{f(x)} = 1 \Rightarrow e^y\dfrac{dy}{dx} = 1 \Rightarrow e^y = x + C\end{aligned}\]</span> 代入初值后，易得：<span class="math inline">\(f(x) = \ln (x + 1)\)</span>，然后泰勒展开：<span class="math inline">\(f(x) = \sum\limits_{k=1}^n \dfrac{(-1)^{k-1}}{k} x^{k}\)</span> 找到第 <span class="math inline">\(n\)</span> 次幂项：<span class="math inline">\(\dfrac{(-1)^{n-1}}{n}x^n\)</span>，求 <span class="math inline">\(n\)</span> 阶导有：<span class="math inline">\((-1)^{n-1}(n-1)!\)</span> 本体难题在于一开始想到用微分方程解出原函数</li><li>反函数的二阶导数公式，先推不难</li><li>多元函数线性变换后链式求导，属于常规题</li><li>二重积分极值互化，变上限积分洛必达求极限</li><li>曲率半径公式</li><li>常用的伴随矩阵秩的公式：<span class="math inline">\(r(A^*) = \begin{cases} n &amp; r(A) = n \\\\ 1 &amp; r(A) = n - 1 \\\\ 0 &amp; r(A) \le n - 1 \end{cases}\)</span></li></ol><h3 id="解答题-1">解答题</h3><ol start="17" type="1"><li>换元什么手段都用不了，直接想到了二重积分换序，没想到标答也是一样的思路 然后凑变上限积分微分即可，不难</li><li>无条件极值，用黑塞矩阵判别式即可</li><li>第一问求三次导可得，第二问的放缩用的是第一问辅助函数中一阶导进行放缩的</li><li>二重积分，对称性化简，分段函数讨论积分域进行拆分，然后极直互化硬算，计算量中等偏上</li><li>硬算，第二问可以用质点法</li><li>常规题</li></ol><h2 id="卷三">卷三</h2><h3 id="选择题-2">选择题</h3><ol type="1"><li>易知 <span class="math inline">\(x = 0, x = \dfrac{1}{\ln -b}\)</span> 为两个间断点，分类讨论即可<ol type="1"><li><span class="math inline">\(a = 0\)</span> 时，<span class="math inline">\(x = 0\)</span> 为可去，<span class="math inline">\(x = \dfrac{1}{\ln -b}\)</span> 时<ol type="1"><li>当 <span class="math inline">\(b = -e\)</span> 时，为可去间断点</li><li>当 <span class="math inline">\(b \ne -e\)</span> 时，为无穷间断点</li></ol></li><li><span class="math inline">\(a \ne 0\)</span> 时，<span class="math inline">\(x = 0\)</span> 为跳跃，<span class="math inline">\(x = \dfrac{1}{\ln -b}\)</span> 时<ol type="1"><li>当 <span class="math inline">\(b \ne -e\)</span> 时，为无穷间断点</li><li>当 <span class="math inline">\(b = -e\)</span> 时，为可取间断点</li></ol></li></ol></li><li>不要去解微分方程，两侧求导代值即可</li><li>构造辅助函数，求导易得</li><li>巧妙利用反函数反向构造的题 <span class="math display">\[\int f^{-1}(x)dx = xf^{-1}(x) - \int xdf^{-1}(x) = xu - \int f(u)du = xu-F(u)-C\]</span></li><li>同解问题，一般线代考的居多，考到了微分方程还是第一次，但是还是很简答 求一个带一个，易得</li><li>隐函数求导，消参易得</li><li>解两个二重积分，纯计算，一个极直互化，一个直接算</li><li>由 <span class="math inline">\(r(A) = 2\)</span> 易得：<span class="math inline">\(r(A^{*}) = 1\)</span>，又 <span class="math inline">\(A^{*}A = |A|E = 0\)</span> 故 <span class="math inline">\(A\)</span> 的列向量都是 <span class="math inline">\(A^{*}\)</span> 的解向量，然后选出线性无关的两个即可</li><li>反推：<span class="math inline">\(AP = C\)</span>，则 <span class="math inline">\(\begin{pmatrix}A&amp;C\\\\0&amp;B\end{pmatrix} \begin{pmatrix}E_n&amp;-P\\\\0&amp;E_n\end{pmatrix}=\begin{pmatrix}A&amp;0\\\\0&amp;B\end{pmatrix} \Rightarrow r(A) + r(B)\)</span> 正推不成立，反例读者自构不难</li><li>简单题</li></ol><h3 id="填空题-2">填空题</h3><ol start="11" type="1"><li>参数方程求二阶导数，直接套公式即可</li><li>先用一下"区间再现"消掉分子，分母再用一下辅助角公式就出来了</li><li>分别对方程关于 <span class="math inline">\(x\)</span> 和 <span class="math inline">\(y\)</span> 求偏导，然后联立方程解 <span class="math inline">\(f_1(1,1)\)</span> 即可</li><li>对隐函数求导，解出 <span class="math inline">\(y&#39;\)</span> 和 <span class="math inline">\(y&#39;&#39;\)</span>，然后对 <span class="math inline">\(y\)</span> 泰勒展开，代入即可</li><li>二重积分换序，简单题</li><li>简单的恒等变形，简单题</li></ol><h3 id="解答题-2">解答题</h3><ol start="17" type="1"><li>先解一个二阶常系数非齐次微分方程，然后代入初值消参，在计算一个极限，简单题</li><li>答案有点复杂，说说我的做法： 欲求 <span class="math inline">\(z\)</span> 的最大最小值，等价于求 <span class="math inline">\(z^2\)</span> 的最大值，等价于求 <span class="math inline">\(1 - x^2 - y^2\)</span> 的最小值 等价于求 <span class="math inline">\(x^2 + y^2\)</span> 的最大值 就有目标函数：<span class="math inline">\(x^2 + y^2\)</span> 和约束条件：<span class="math inline">\(3x^2 + 3y^2 + 2xy - 3 = 0\)</span> 两者属于齐次式，构造拉格朗日乘子然后 <span class="math inline">\(xL_x - yL_y\)</span> 即可 详情见我个人编写的 <strong>【专题】多元函数极值专题</strong></li><li>由 <span class="math inline">\(\displaystyle\int_0^1 xf&#39;(x)dx = 1\)</span> 易得：<span class="math inline">\(\displaystyle\int_0^1 f(x)dx = -1\)</span> 被题目限制掉了很多做法，一开始有想直接万能构造罗尔，但是没给到足够的两个端点信息 然后又去试了多项式拟合法，也是构造不了的，本题正确做法应是再往回还原一阶，然后用泰勒展开 说一下为什么会这么想，因为题目只给了一侧端点 <span class="math inline">\(f(1)=0\)</span>，和一个未知点 <span class="math inline">\(f(x_0) = -1\)</span> 在这一阶上，无法凑出罗尔的条件，因此考虑还原成 <span class="math inline">\(\displaystyle\int_0^xf(t)dt\)</span> 就有了两个点的信息 分别是：<span class="math inline">\(\displaystyle\int_0^0f(t)dt = 0\)</span> 和 <span class="math inline">\(\displaystyle\int_0^1f(t)dt = -1\)</span>，考虑直接泰勒展开 展开点选取 <span class="math inline">\(x = 1\)</span>，原因很简单，有具体 <span class="math inline">\(f(1) = 0\)</span> 的信息 有 <span class="math inline">\(\displaystyle\int_0^x f(t)dt = -1 + \dfrac{f&#39;(\xi)}{2} (x-1)^2\)</span> 然后令 <span class="math inline">\(x = 0\)</span> 有：<span class="math inline">\(f&#39;(\xi) = 2\)</span></li><li>将方程问题和极限连在一起考，很新颖 做法和普通方程问题一下，首先分离参数和变量，构造辅助函数求导找单调性 最后是求一个 <span class="math inline">\(x \to +\infty\)</span> 的极限</li><li>有手就行</li><li>答案求行列式去了，猛男，我说一下我的更简单的做法 直接配方法即可：<span class="math inline">\(f = \dfrac{1}{2}x_1^2 + \dfrac{1}{2}(x_1-x_2)^2+ \dfrac{1}{2}(x_2-x_3)^2 + \cdots + + \dfrac{1}{2}(x_{n-1}-x_n)^2 + \dfrac{1}{2}x_n^2\)</span> 易得：<span class="math inline">\(f \ge 0\)</span>，欲使 <span class="math inline">\(f = 0\)</span>，当且仅当 <span class="math inline">\(x_1=x_2=\cdots = x_n = 0\)</span> 故正定 第二问就是 <strong>分块矩阵的初等变换</strong>，没有什么好讲的 第三问我的做法也和答案一样，大家直接参考答案就好了</li></ol><h2 id="卷四">卷四</h2><h3 id="选择题-3">选择题</h3><ol type="1"><li>变上限积分等价无穷小，有手就行</li><li>真题出过一次，在 <span class="math inline">\(x=0\)</span> 处连续是通过左右侧夹逼计算的极限</li><li>比较在瑕点的阶，简单题</li><li>二阶导数存在，一阶连续，然后保号，简单题</li><li>先分离参数，然后求导绘制大致图像，找出最值</li><li>求偏导，套黑塞矩阵判别式，化简消元，不难</li><li>二重积分，对称性化简，判断被积函数在积分域上正负</li><li>分快矩阵求伴随，常规题</li><li>注意第一个命题有 <span class="math inline">\(c=0\)</span> 的特例</li><li>白给题</li></ol><h3 id="填空题-3">填空题</h3><ol start="11" type="1"><li>一阶非线性微分方程</li><li>区间再现化简，然后求 <span class="math inline">\(\int sec^3x dx\)</span> 凑微分分布积分</li><li>隐函数求偏导</li><li>这个考到一个常用公式，分子分母同除 <span class="math inline">\(x\)</span> 构造即可 对于周期为 <span class="math inline">\(T\)</span> 的函数 <span class="math inline">\(f(x)\)</span> 有 <span class="math display">\[\lim\limits_{x\to+\infty} \dfrac{\displaystyle\int_0^x f(t)dt}{x} = \dfrac{1}{T}\int_0^T f(t)dt\]</span> &gt; 简单证明： &gt; &gt; 令 <span class="math inline">\(a_n = \displaystyle\int_0^{nT} f(t)dt\)</span>，<span class="math inline">\(b_n = nT\)</span> &gt; &gt; 显然 <span class="math inline">\(\lim\limits_{n\to\infty} b_n = +\infty\)</span>，且 <span class="math inline">\(b_n\)</span> 单调递增 &gt; &gt; 故 <span class="math inline">\(\lim\limits_{n\to\infty} \dfrac{a_n}{b_n} = \lim\limits_{n\to\infty}\dfrac{a_{n+1} - a_n}{b_{n+1}-b_n} = \dfrac{\displaystyle\int_{nT}^{nT+T}f(t)dt}{T} = \dfrac{\displaystyle\int_{0}^{T}f(t)dt}{T}\)</span> &gt;<br />&gt; 最后由海涅定理可得： &gt; <span class="math display">\[&gt; \lim\limits_{x\to+\infty} \dfrac{\displaystyle\int_0^x f(t)dt}{x} = \dfrac{1}{T}\int_0^T f(t)dt&gt; \]</span></li><li>二重积分换序</li><li>分块矩阵求行列式，求逆，求伴随</li></ol><h3 id="解答题-3">解答题</h3><ol start="17" type="1"><li>拉格朗日求极限</li><li>第一问是经典高斯曲线，怎么做都行 第二问直接分布积分，就出来了</li><li>无条件极值，用黑塞矩阵判别式 我可以给一个不同的思路，是条件极值的一个技巧 —— 极值互化 换成三角函数后，确定好 <span class="math inline">\((r,\theta)\)</span> 的区间范围，找极值</li><li>拉格朗日的几何意义，是一道我在 <strong>【专题】中值定理证明题</strong> 中举的例题，我比答案写的好多了 直接搬运原题过来，读者稍微改改就好了</li></ol><blockquote><p>【<strong>2013年</strong>】证明：若函数 <span class="math inline">\(\varphi(x)\)</span> 具有二阶导数，且满足 <span class="math inline">\(\varphi(2) &gt; \varphi(1)\)</span>，<span class="math inline">\(\varphi(2) &gt; \displaystyle\int_2^3\varphi(x) dx\)</span>，则至少存在一点 <span class="math inline">\(\xi \in (1,3)\)</span>，s.t. <span class="math inline">\(\varphi&#39;&#39;(\xi) &lt; 0\)</span></p><p>【<strong>分析</strong>】首先，根据题干找出所有端点信息，考虑对积分 <span class="math inline">\(\displaystyle\int_2^3\varphi(x)dx\)</span> 用积分中值定理有：</p><p><span class="math inline">\(\varphi(x_0) = \displaystyle\int_2^3\varphi(x) dx\)</span>，其中 <span class="math inline">\(2 &lt; x_0 &lt; 3\)</span>，成功找出所有的端点信息：<span class="math inline">\(\varphi(1),\varphi(2),\varphi(x_0)\)</span></p><p>根据题干的不等关系，初步绘制图像，如下：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/20/55909_e0e0db614a-IMG_DAD7F610034F-1.jpeg" /></p><p>在三个端点相邻的区间使用 Lagrange 中值定理，估计出一点的斜率，然后用割线斜率代替，如下：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/21/55909_ed80a8dc4a-IMG_D671F44AB2F7-1.jpeg" /></p><p>得到一个一阶导数大于 0 的 <span class="math inline">\(\xi_1\)</span> 和一阶导数小于 0 的 <span class="math inline">\(\xi_2\)</span>，然后我们绘制 <span class="math inline">\(\varphi&#39;(x)\)</span> 与 <span class="math inline">\(x\)</span> 的图像：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/21/55909_fc123c3a4a-IMG_A0A61C59EA67-1.jpeg" /></p><p><span class="math inline">\(\xi_1\)</span> 大于 0，位于 <span class="math inline">\(x\)</span> 轴上方；<span class="math inline">\(\xi_2\)</span> 小于 0，位于 <span class="math inline">\(x\)</span> 轴下方</p><p>然后我们继续利用 Lagrange 中值定理，估计出了第三个中值 <span class="math inline">\(\xi_3\)</span> 等于 该段区间的割线斜率 <span class="math inline">\(&lt;0\)</span></p><p>即答案所要求的点 <span class="math inline">\(\varphi&#39;&#39;(\xi) &lt; 0\)</span></p><p>该几何法，成功帮助我们梳理了一遍证明思路，直接根据上述步骤，转化为数学语言写出即可</p><p>【<strong>解</strong>】由 <strong>积分中值定理</strong> 可得：<span class="math inline">\(\exists x_0 \in (2,3)\)</span>，s.t. <span class="math inline">\(\varphi(x_0) = \displaystyle\int_2^3 \varphi(x) dx\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi_1\in(1, 2)\)</span>，s.t. <span class="math inline">\(\varphi&#39;(\xi_1) = \varphi(2) - \varphi(1) &gt; 0\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi_2\in(2,x_0)\)</span>，s.t. <span class="math inline">\(\varphi&#39;(\xi_2) = \varphi(x_0) - \varphi(2) &lt; 0\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi\in(\xi_1, \xi_2)\)</span>，s.t. <span class="math inline">\(\varphi&#39;&#39;(\xi) = \varphi&#39;(\xi_2) - \varphi&#39;(\xi_1) &lt; 0\)</span> QED</p></blockquote><ol start="21" type="1"><li>二重积分极值互化，计算量很小</li><li>白给题</li></ol><h2 id="卷五">卷五</h2><h3 id="选择题-4">选择题</h3><ol type="1"><li>常规题：<span class="math inline">\((\)</span> 奇函数 <span class="math inline">\()&#39;\)</span> = 偶函数，<span class="math inline">\((\)</span> 偶函数 <span class="math inline">\()&#39;\)</span> = 奇函数 <span class="math inline">\(\displaystyle\int_a^x\)</span> 奇函数 <span class="math inline">\(dx\)</span> = 偶函数，<span class="math inline">\(\displaystyle\int_0^x\)</span> 偶函数 <span class="math inline">\(dx\)</span> = 奇函数</li><li>简单题，值得注意的是正负无穷共享同一条斜渐近线，因此不能算作两条</li><li>这题解析给的有问题，我说一下做法，条件已知：<span class="math inline">\(f(x) - \displaystyle\int_0^x f(t)dt \le 0\)</span> 考虑中值定理还原原函数，构造 <span class="math inline">\(F(x) = \displaystyle\int_0^x f(t)dt\)</span>，有 <span class="math inline">\(F&#39;(x)-F(x) \le 0\)</span> 利用积分因子法还原：<span class="math inline">\((F(x)e^{-x})&#39; \le 0\)</span> 故可知函数 <span class="math inline">\(G(x) = F(x)e^{-x}\)</span> 单调递减 又 <span class="math inline">\(G(0) = F(0) = 0\)</span>，故 <span class="math inline">\(G(x) \le 0\)</span>，即 <span class="math inline">\(\displaystyle\int_0^x f(t)dt \le 0\)</span> 要么题错了，要么答案错了</li><li>显然两个积分都找不到原函数，标准做法，按住一个不动，另一个换元分布积分，从而消元</li><li>连续定义，导数定义，计算题</li><li>等式脱帽法易得：<span class="math inline">\(f(x,y) = x^2 + y^2 + xy^2 + o(x^2 + y^2)\)</span>，于是有 <span class="math display">\[\lim_{(x,y)\to(0,0)}\dfrac{f(x,y)}{x^2+y^2}=\lim_{(x,y)\to(0,0)}\dfrac{x^2 + y^2 + xy^2 + o(x^2 + y^2)}{x^2+y^2}\]</span> 又 <span class="math inline">\(0 \le |\dfrac{xy^2}{x^2+y^2}| \le |\dfrac{y}{2}|\)</span>，易得：<span class="math inline">\(\lim\limits_{(x,y)\to(0,0)}\dfrac{f(x,y)}{x^2+y^2} = 1\)</span> 故 <span class="math inline">\(\lim\limits_{(x,y)\to(0,0)}\dfrac{f(x,y)}{\sqrt{x^2+y^2}} = 0\)</span>从而可以得到：<span class="math inline">\(f(x,y)\)</span> 可微 且 <span class="math inline">\(A = B = f(0,0) = 0\)</span></li><li>二重积分极值互化</li><li>简单题，真题出过了，<span class="math inline">\(B = E_{32}(2)E_{12}A\)</span> 则 <span class="math inline">\(|B| = -|A|\)</span>，<span class="math inline">\(B^{-1} = A^{-1}E_{12}E_{32}(-2)\)</span> 故 <span class="math inline">\(-B^{*}=A^{*}E_{12}E_{32}(-2)\)</span></li><li><span class="math inline">\(A^2=0\)</span> 故只有特征值 <span class="math inline">\(0\)</span>，若要 <span class="math inline">\(A\)</span> 可相似对角化，则 <span class="math inline">\(r(A) = 0\)</span>，即 <span class="math inline">\(A = 0\)</span> 又 <span class="math inline">\(A\ne 0\)</span> 故不可相似对角化 实对称阵的特征值必为实数，故解得：<span class="math inline">\(\lambda = 1\)</span>，又 <span class="math inline">\(A\)</span> 可相似对角化，故 <span class="math inline">\(r(A - E) = 0\)</span>，解得：<span class="math inline">\(A = E\)</span> 后两个显然</li><li>简单题，不多解释</li></ol><h3 id="填空题-4">填空题</h3><ol start="11" type="1"><li>定积分定义，两种划分做法都可 区间 <span class="math inline">\([0,1]\)</span> 划分成 <span class="math inline">\(n\)</span> 块，选择每一块的中点划分：<span class="math inline">\(\dfrac{2k-1}{2n}\)</span> <span class="math display">\[   \lim_{n\to\infty}\dfrac{1}{n}\sum_{k=1}^n \dfrac{1}{\sqrt{1 + (\dfrac{2k-1}{2n})^2}} =\displaystyle\int_0^1\dfrac{1}{\sqrt{1+x^2}}dx = \ln(1 + \sqrt{2})   \]</span> 区间 <span class="math inline">\([0,2]\)</span> 划分成 <span class="math inline">\(n\)</span> 块，选择每一块的中点划分：<span class="math inline">\(\dfrac{2k-1}{n}\)</span> <span class="math display">\[   \lim_{n\to\infty}\dfrac{1\times2}{n}\sum_{k=1}^n \dfrac{1}{\sqrt{4 + (\dfrac{2k-1}{n})^2}} =\displaystyle\int_0^2\dfrac{1}{\sqrt{4+x^2}}dx = \ln(1 + \sqrt{2})   \]</span></li><li>二阶常系数非齐次微分方程，分段解，然后利用连续性消参，代入条件，最后解出答案</li><li>给定初值，一般就是要积分，把 <span class="math inline">\(y\)</span> 视作常数，先看微分方程：<span class="math inline">\(f&#39;(x) + f(x) = 0\)</span> 解得：<span class="math inline">\(f(x,y)\cdot e^{x} = \varphi(y)\)</span> 代入初值：<span class="math inline">\(f(0,\dfrac{\pi}{2}) = 1 = \varphi(\dfrac{\pi}{2})\)</span> 再求y的偏导：<span class="math inline">\(f&#39;(y)=\varphi&#39;(y)e^{-x} = \cot y \cdot \varphi(y)e^{-x}\)</span> 化简微分方程得：<span class="math inline">\(\varphi&#39;(y) - \cot y \varphi(y) = 0\)</span>，解得：<span class="math inline">\(\varphi(y) = C\sin y\)</span> 代入初值：<span class="math inline">\(\varphi(\dfrac{\pi}{2}) = C = 1\)</span>，故 <span class="math inline">\(\varphi(y) = \sin y\)</span> 因此：<span class="math inline">\(f(x,y) = e^{-x}\sin y\)</span>，<span class="math inline">\(f_{xx} = f(x,y), f_{yy} = -f(x,y)\)</span> 故：<span class="math inline">\(f_{xx} + f_{yy} = 0\)</span></li><li><span class="math inline">\(dS = \sqrt{(dx)^2 + (dy)^2} = \sqrt{(\dfrac{dx}{dt})^2 + \dfrac{dy}{dt})^2} dt\)</span></li><li>二重积分换序，然后变上限积分求导</li><li>又平方和易知 <span class="math inline">\(f\)</span> 为半正定矩阵，因此各个平方项为0存在非零解</li></ol><h3 id="解答题-4">解答题</h3><ol start="17" type="1"><li>分离参数，构造辅助函数，求导绘制函数图像，简单题</li><li>真题考过一次类似的，不过比这个简单 本题难点是对 <span class="math inline">\(y&#39; = \tan \alpha\)</span> 变型： <span class="math display">\[   \begin{aligned}   y&#39; &amp;= \sqrt{\sec^2\alpha - 1}   \\\\   y&#39;^2 + 1 &amp;= \sec^2\alpha   \\\\   y&#39;^2 + 1 &amp;= \dfrac{1}{\cos^2 \alpha}   \\\\   \sqrt{y&#39;^2 + 1} &amp;= \dfrac{1}{\cos \alpha}   \end{aligned}   \]</span> 然后回代到微分方程中计算：<span class="math inline">\(2y^2y&#39;&#39; = (1 + y&#39;^2)^2\)</span> 即可</li><li>单纯的算，没什么好说的</li><li>二重积分，根据取整函数分段，然后本题答案是错的，正确答案应为：<span class="math inline">\(\dfrac{\pi}{2}-\dfrac{1}{3}\)</span></li><li>数列极限，下界 <span class="math inline">\(1\)</span> 用第一数学归纳法易证 单调性用 <span class="math inline">\(x_{n+1}-x_n = \sqrt{x_n}\ln x_n + 1 - x_n\)</span> 构造辅助函数 <span class="math inline">\(F(x) = x\ln x + 1 - x\)</span> 求两次导即可出答案</li><li>考 <span class="math inline">\(A^TA\)</span> 的问题，一般不用去求出 <span class="math inline">\(A^TA\)</span> 的具体型，不然就是题目出的稀烂 利用 <span class="math inline">\(Ax = 0\)</span> 与 <span class="math inline">\(A^TAx = 0\)</span> 同解，做第一问 利用 <span class="math inline">\(x^TA^TAx = (Ax)^T(Ax) = ||Ax||^2 \ge 0\)</span> 做第二问 第三问常规题</li></ol><h1 id="李林冲刺六套卷">李林冲刺六套卷</h1><h2 id="卷一-1">卷一</h2><h3 id="选择题-5">选择题</h3><ol type="1"><li>已知极限反求参数，方法很多，标答给的是除 <span class="math inline">\(x^3\)</span> 解极限 我这里直接把后面一项在加号处拆开，然后用等比级数泰勒展开做的</li><li>考了一个数列常用极限 $ e^{nx} =<span class="math display">\[\begin{cases}\infty &amp;,x &gt; 0 \\\\1 ,&amp; x = 0 \\\\0, &amp;x &lt; 0\end{cases}\]</span>$</li><li>A、B考拉格朗日构造函数，在 <span class="math inline">\([0,x]\)</span> 和 <span class="math inline">\([x,1]\)</span> 上分别拉一下 然后利用凹凸性找单调性，建立不等式 C、D 利用 <span class="math inline">\(f(0)=f(1)\)</span> 移项，然后利用单调性建立不等式</li><li>考微分方程解的结构，ez难度</li><li>考可微定义： 存在 <span class="math inline">\(A,B, s.t. f(x,y) - Ax - By - f(0,0) = o(\sqrt{x^2+y^2})\)</span> 秒选的题</li><li>考反常积分敛散性，A、B直接比较在瑕点的阶，秒杀 C、D利用奇偶性</li><li>之前真题遇到过，上次不会，这次会了，直接泰勒展开，然后两侧取积分结束</li><li>这算是比较新的一道题了 答案用的是 <span class="math inline">\(f(0) = |-A|-|A^{-1}| = -2\)</span> 和 <span class="math inline">\(f(1) = |1-A| - |A^{-1}| = -1\)</span> 然后拉一下：<span class="math inline">\(f&#39;(\xi) = 1\)</span> 找到切线与 <span class="math inline">\(y=x\)</span> 平行的点 我的方法是直接写出 <strong>特征多项式</strong>，由于 <span class="math inline">\(1\)</span> 是三重根，故 <span class="math inline">\(|xE-A| = (x-1)^3\)</span> 则 <span class="math inline">\(f(x) = (x-1)^3-1 \Rightarrow f&#39;(x) = 3(x-1)^2 \Rightarrow f&#39;(0) = 3, f&#39;(1) = 0\)</span> 由 <strong>导数介值定理（达布定理）</strong> 可知 <span class="math inline">\(f&#39;(\xi) = 1\)</span> <del>我觉得我的方法比答案好</del></li><li>提公因式，屑题</li><li>更屑，口算题，甚至可以把算也给去掉</li></ol><h3 id="填空题-5">填空题</h3><ol start="11" type="1"><li>反函数的导数问题，然后求极限，拉一下</li><li>幂指函数求极限，取指对数</li><li>隐函数求全微分，三种方法</li><li>凑定积分定义，然后算4个定积分，答案用了奇偶性干掉了两个</li><li>考了一个跨阶凑导数定义，也可以直接泰勒展开（本质一样）</li><li>屑题，惯性定理</li></ol><blockquote><p>错了第14题，连求4个定积分最后加起来的时候正负号没搞好，寄了</p></blockquote><h3 id="解答题-5">解答题</h3><ol start="17" type="1"><li>屑题，答案写的很麻烦，上来可以直接被积函数等价无穷小，把 <span class="math inline">\(\sin x\)</span> 干掉 然后正常换元去积分符号就好了</li><li>二重积分极转直，然后疯狂的凑微分就结束了</li><li>裸题，没意思，第一问的提示不给，只给第二问也是裸题</li><li>出的真屑啊，考多元函数极值，前面还铺垫这么多模拟题意的过程？？ 模拟到最后，是两个分式相加，各有3次的系数，会出题？？？算高中圆锥曲线呢？ 我做到这就不想写了，太屑了 最后是解一个拉格朗日乘子，可以用我在专题 <strong>多元函数极值</strong> 中写到的很多方法 二次型、齐次式、对称式，反正极值这部分考的很简单 前面铺垫的那么恶心的模拟题意是真不会出题是吧</li><li>二阶变系数微分方程，少 x 的第二型，令 <span class="math inline">\(p = y&#39;\)</span> 第二问，求旋转体体积，二重积分莽上去就完事了</li><li>屑题，常识告诉我们 <span class="math inline">\(A\)</span> 与 <span class="math inline">\(A^*\)</span> 共享相同特征值下的特征向量 因此直接把 <span class="math inline">\(A\)</span> 正交对角化，求出的正交变化 <span class="math inline">\(Q\)</span> 也能是 <span class="math inline">\(A^*\)</span> 对角化 答案贼烦琐，相当于证了一遍我一开始说的那个常识，真没必要。。。</li></ol><blockquote><p>总分 138 填空题 No.14 计算错误 + 解答题 No.20 被出题人恶心 <del>（不会出题可以不出）</del></p></blockquote><h2 id="卷二-1">卷二</h2><h3 id="选择题-6">选择题</h3><ol type="1"><li>可以换元，也可以直接利用被积函数等价无穷小秒杀</li><li>求间断点，比第一套还简单</li><li>边上限积分天生具有连续性，验证可导性，只需验证被积函数在该点是否连续即可</li><li>泰勒展开，拉格朗日，求渐近线，简单难度</li><li>套娃，之前考 <span class="math inline">\(f(x)\)</span> 左高右低，现在考 <span class="math inline">\(f&#39;(x)\)</span> 正负性，多加一阶导数研究，本质没区别 还是一点不能推邻域，但是少一阶邻域的信息是有的，属于数学常识</li><li>先解微分方程，再求反常积分，计算题</li><li>极坐标 <span class="math inline">\(r,\theta\)</span> 换序</li><li>秩的不等式：<span class="math inline">\(A_{m\times n}B_{n\times s} = 0 \Rightarrow r(A) + r(B) \le n\)</span></li><li><span class="math inline">\(A^* A=|A|E=0\)</span>，则 <span class="math inline">\(A\)</span> 的列向量都是 <span class="math inline">\(A^*\)</span> 的解向量</li><li>合同变换，然后惯性定理（室友行列式相等秒杀了，y1s1 选项出的不好）</li></ol><h3 id="填空题-6">填空题</h3><ol type="1"><li>分母是指数，猜对了是 <span class="math inline">\(0\)</span>（室友用的积分中值定理，答案用的放缩，答案方法推荐）</li><li>隐函数求导，简单难度</li><li>弧微分</li><li>弧微分，连考两题还行</li><li>没做出来，室友直接换序做出来了 对于 <span class="math inline">\(\iint \sqrt{x^2-y^2}d\sigma\)</span> 的二重积分，先 <span class="math inline">\(y\)</span> 后 <span class="math inline">\(x\)</span> 会简单</li><li>答案用的 伴随与逆 的等式，我的方法更好，直接用按列展开定理，把最后一列替换成 <span class="math inline">\(1\)</span> 构造新的行列式 然后原行列式，每一列全部加到最后一列，提出 <span class="math inline">\(a\)</span> 结束</li></ol><blockquote><p>第一题猜对了 第五题没搞出来，试过转极坐标，没成功就没多想，因为觉得 <span class="math inline">\(x\)</span> <span class="math inline">\(y\)</span> 对称性较强，换序作用不大 实际上换序作用很大，一个积出来是 <span class="math inline">\(\cos x\)</span>，一个是 <span class="math inline">\(\ln|\sin x + \sec x|\)</span></p></blockquote><h3 id="解答题-6">解答题</h3><ol type="1"><li>很简单，先求导，再 <span class="math inline">\(x\)</span> 换 <span class="math inline">\(-x\)</span>，联立就求出来了 虽然但是，步骤都对，但是还是求错了，寄</li><li>多元函数极值，目标函数是一个三次型，不过 <span class="math inline">\(L_x + L_y\)</span> 该消的都消光了，别忘记讨论端点值</li><li>弧微分建立微分方程，最后算得的方程是 <span class="math inline">\(y+\sqrt{y^2-k^2} = g(x)\)</span>，这个方程是可以求出 <span class="math inline">\(y\)</span> 的 以前真题考过，那次不会，这次搞出来了，先取对数，利用 <span class="math inline">\(\ln(y + \sqrt{y^2-k^2})\)</span> 奇函数求出 <span class="math inline">\(y\)</span></li><li>二重积分，划分积分区域分别积，一个极直互化，一个直接计算 直接算的那个，差点莽上去了，室友莽上去了，居然还算出来了，牛。。。实际用轮换对称性就消光了</li><li>方成列问题，14年考过，问的方法都一摸一样，第一问零点定理 + 单调性 第二问方程两侧取极限，找到 <span class="math inline">\(\sin x\)</span> 的极限，然后幂指函数取指对数，再连续成函数极限 求出极限后，用海涅准则还原成数列极限</li><li><span class="math inline">\(Q^{-1} A Q = \Lambda \quad\Rightarrow\quad Q^T A^T(Q^T)^{-1} = \Lambda^T = \Lambda \quad\Rightarrow\quad Q^{-1} A Q = Q^T A^T(Q^T)^{-1}\)</span> <span class="math inline">\(\Rightarrow (Q^T)^{-1}Q^{-1} A Q Q^T = A^T\)</span> 只需算一次矩阵乘法（超简单），按照答案的方法，先求 <span class="math inline">\(A^T\)</span> 的特征值，在分别求了三个特征向量 然后构造 <span class="math inline">\(C^{-1}AC = Q^{-1}A^TQ \Rightarrow QC^{-1} A CQ^{-1} = A^T\)</span> 然后算一个逆矩阵 <span class="math inline">\(Q^{-1}\)</span>，和一次矩阵乘法 <span class="math inline">\(CQ^{-1}\)</span>，属实不配作为标答</li></ol><blockquote><p>第一题算错了，直接寄</p></blockquote><blockquote><p>总分 136 填空题 NO.15 没做出来，换序积会更方便（再次证明了二重积分只考对称性、极直互化、换序） 解答题 No.17 算错了，10分全部扣光，直接寄</p></blockquote><h2 id="卷三-1">卷三</h2><h3 id="选择题-7">选择题</h3><ol type="1"><li>利用连续 + 可导建立两个方程，求出两个未知数</li><li><strong>全微分存在，则必然偏导数连续</strong> ，利用 <span class="math inline">\(z_{xy} = z_{yx}\)</span> 建立方程求出参数</li><li>构造辅助函数 <span class="math inline">\(F(x) = \frac{f(x)}{x}\)</span>，求导找单调性</li><li>我在 <strong>【专题】中值定理</strong> 中介绍过这种题的做法，罗尔秒杀</li><li>反常积分敛散性问题，找被积函数在瑕点的阶</li><li>积分比大小，换元到同一上下限后，比较被积函数大小即可，记得都是一个系数带上一个 <span class="math inline">\(f(x)\)</span>，比较系数即可</li><li>先用三角和差公式把被积函数中的三角函数分离: <span class="math inline">\(\sin(x-t) = \sin x\cos t - \cos x \sin t\)</span> 接着就是考函数奇偶性与原函数奇偶性之间的关系 这里给的是下限为0的边上限积分 <span class="math inline">\(\int_0^xf(x)dx\)</span>，故若 <span class="math inline">\(f(x)\)</span> 偶，则 <span class="math inline">\(F(x)\)</span> 奇</li><li>考初等矩阵，简单难度</li><li>考对称矩阵不同特征值之间的特征向量正交，构造方程解即可</li><li>答案用的特值法，我是直接看出来的，因为原来无关，延长后必定无关；原来相关，延长后不一定相关 利用这个准则，把 <span class="math inline">\(D\)</span> 列分块或者行分块都可，然后就很显然了</li></ol><h3 id="填空题-7">填空题</h3><ol type="1"><li>定积分定义</li><li>物理应用，考的水压力 <span class="math inline">\(F = P S = \rho g h S\)</span>，终于做对一次物理应用了，泪目</li><li>考极限的局部保号性</li><li>考隐函数求偏导，计算题</li><li>二重积分，换序，算错了，寄</li><li>直接令特值 <span class="math inline">\(A = E\)</span> 就做出来了；证明方法是： <span class="math inline">\(|E - A^2| = |A^TA - A^2| = |A|^2|A^T \cdot A^T - E| = |A^2 - E|\)</span> 于是有：<span class="math inline">\(|E - A^2| = (-1)^{2n+1}|E - A^2|\)</span>，则 <span class="math inline">\(|E - A^2| = 0\)</span> 考试的时候，两个方法都写了一遍，因为特值出的太突然了，感觉题目没这么简单，事实证明，出得真不行</li></ol><h3 id="解答题-7">解答题</h3><ol type="1"><li>洛必达去积分符号，幂指函数取指对数，等价无穷小，简单题</li><li>分类讨论来去积分符号，求导找单调性，最后极小值算错了，寄</li><li>定积分几何应用，求面积这里可以直接用 <strong>形心坐标公式逆用</strong> 秒出，第二问旋转体体积，用 <strong>割补法</strong></li><li>超级简单的条件极值，根据我写的 <strong>【专题】多元函数极值</strong>，这一题可以用的方法可太多了 我是用的 <strong>二次型</strong> 来做，求一个 <span class="math inline">\(2 \times 2\)</span> 的矩阵特征值就和小学加减乘除一样快速 然后第二问也是直接秒出的 这题应该还可以用：对称式，三角换元，齐次式来做 不等式放缩应该不行，因为只能向一个方向上放缩，但是这题最大最小值都要求（可能也可以反向放？没细想过）</li><li>这题寄了，以为是心形线，实际上只是一个凸面，算第二问也可以用 <strong>形心坐标公式逆用</strong> 解出 <span class="math inline">\(\iint yd\sigma\)</span></li><li>思路是简单题，但是答案不能让我信服，答案的做法是：<span class="math inline">\(B^2 = A = Q\Lambda Q^T = (Q C Q^T)(Q C Q^T)\)</span>，然后就推出 <span class="math inline">\(B = QCQ^T\)</span> 有点问题呀我感觉，<span class="math inline">\(B^2 = C^2\)</span> <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(B = C ??\)</span></li></ol><blockquote><p>总分 134 填空题 NO.15 计算错误 解答题 NO.18 最后一步计算错误 解答题 NO.21 图形都看错了，直接寄 坏起来了，现在大题稳定要寄一道</p></blockquote><h2 id="卷四-1">卷四</h2><h3 id="选择题-8">选择题</h3><ol type="1"><li>和上一套一模一样，连续和导数定义建立两个方程两个求解两个未知数</li><li>本质应该是考导数定义，结合极限保号性，不过这个就是证明过导数介值定理个过程，可以直接秒出答案</li><li>利用定积分可拆性，去掉绝对值，然后求导判单调性，找极值点，这题计算错误了</li><li>物理应用，又做对了，好起来了，是一个变化率问题: <span class="math inline">\(\frac{\mathbf{d}V}{\mathbf{d}t} = \frac{\mathbf{d}V}{\mathbf{d}h} \cdot \frac{\mathbf{d}h}{\mathbf{d}t}\)</span></li><li>先求二重积分，再代入求极限即可 答案用的 <strong>二重积分的中值定理</strong> 先证明在积分区域上 <strong>连续</strong>，然后就可以直接用了 <span class="math inline">\(\iint f(x,y) d\sigma = \frac{1}{S_D}\iint f(\xi, \eta)d\sigma\)</span> 虽然但是，你这方法不超纲吗</li><li>多元函数极限证明连续，分子次数大于分母，应该存在，所以直接放缩分母即可 偏导数显然连续，可微直接写出可微定义式，然后再求一个多元函数极限</li><li>积分域关于 <span class="math inline">\(y=-x\)</span> 对称，被积函数具有轮换对称性：<span class="math inline">\(f(x,y) = -f(-y, -x)\)</span> ，故二重积分值为 <span class="math inline">\(0\)</span> 答案是拆开来看的，也行，就是有点麻烦</li><li><span class="math inline">\(PA = B\)</span> 行分块结束</li><li>这题眼瞎了，看到惯性指数为 <span class="math inline">\(1\)</span>，看到标准形，直接选了 <span class="math inline">\(B\)</span>，然而求的是 <span class="math inline">\(A^*\)</span> 的标准形 利用那个表转换特征值就行了</li><li>送分题，超过 <span class="math inline">\(1\)</span> 分钟都慢了</li></ol><blockquote><p>错了两道选择题，一个是计算错误，一个是题目看错 明明打了那么久比赛，最大的收获就是要认真读题和注意数据范围，回到应试考试又变回来了。。</p></blockquote><h3 id="填空题-8">填空题</h3><ol type="1"><li>先算不定积分，再代入求一个极限</li><li>弧微分，还是没有把极坐标下的公式背出来，又现场推了一遍</li><li>模拟题，最后求一个极限</li><li>微分方程，这题我出大问题了，直接就求导了，被积函数里还有未知数 <span class="math inline">\(x\)</span>，要先换元 感觉这种问题，在积分里参数变多的时候就会忽视，需要注意</li><li>看到平方和还有不转极坐标的人嘛</li><li>和选择题第 9 题考的是一个东西</li></ol><blockquote><p>NO.14 出大问题了，以后变上限积分函数求导去积分符号的时候一定要先检查被积函数</p></blockquote><h3 id="解答题-8">解答题</h3><ol type="1"><li>第一题的数列极限一般就是送，单调有界准则秒杀，第二问先连续化，再海涅定理还原</li><li>多元函数求偏导，看计算能力的题</li><li>第一问直接用我在 <strong>【专题】中值定理证明题</strong> 中提到的 <strong>万能构造法</strong> 求一个不定积分，原函数就出来了 求导判别单调性，证明"至多"，再结合"至少"，夹逼即可</li><li>二阶变系数微分方程，真题考过，先用换元化简成二阶常系数微分方程，然后经典：齐通 + 非奇特 = 非奇通 这题求出来后还要换回去，我考试的时候没读懂什么叫 <strong>原微分方程通解</strong>，看了答案才知道原来是把换元还原回去 第二问，代入初值解出参数，没什么好说的</li><li>二重积分，积分域是大圆套小圆，用割补法，然后极直互化，处理小圆直接平移极坐标原点</li><li>送分题，正常肯定不会这么考啊，这题就是算两个矩阵乘法，谁线代大题这么出的。。</li></ol><blockquote><p>这次大题没寄，只是 NO.20 换元最后没有换回来（主要是没读懂要换回来）</p></blockquote><blockquote><p>总分 132 小题错的有点多，再次暴露了计算能力不行的痛病 选择题 NO.3 求导求错了，NO.9 题目读假了 填空题 NO.14 在被积函数有 <span class="math inline">\(x\)</span> 时没换元直接求了 解答题 NO.20 没读懂题意，换元最后没换回来</p></blockquote><h2 id="卷五-1">卷五</h2><blockquote><p>应该是前五套里，最难的一套了，感觉很符合今年的命题风格，也预示了我要 寄 的必然结果</p></blockquote><h3 id="选择题-9">选择题</h3><ol type="1"><li>变上限积分求极限</li><li>这题做的时候没有想到正解，用的几个已知结论反向构造的 如果 <span class="math inline">\(x\to+\infty\)</span> 时，<span class="math inline">\(f&#39;(x) = A \ne 0\)</span>，易证 <span class="math inline">\(f(x) = \infty\)</span> 故 <span class="math inline">\(f&#39;(x) = 0\)</span>，直接移项出结果 答案是先算了微分方程通解，用变上限积分替代任意常数，然后求一个变上限积分的极限</li><li>极直互化和换序</li><li>导数定义 + 微分方程</li><li>拐点的充分条件第三条</li><li>物理应用，变化率问题</li><li>答案用的拉格朗日做的，也可以直接解出定积分，还不丢失精度</li><li>方程解问题</li><li>相似的基本概念，以及 可逆矩阵 等价于 单位矩阵</li><li>直接用合同变换做更快</li></ol><blockquote><p>全对，第二题可以回顾一下</p></blockquote><h3 id="填空题-9">填空题</h3><ol type="1"><li>隐函数求偏导</li><li>高阶导数问题，答案先求了原函数，再用级数找的高阶导数，我直接求了三阶找的规律 回过头看这题长的确实像微分方程，应该先求原函数的</li><li>隐函数和极限结合，导数定义</li><li>二重积分，换序后换元</li><li>可微定义，<span class="math inline">\(f(x_0+\Delta x, y_0+\Delta y) - f_x\Delta x - f_y \Delta y - f(x_0,y_0) = o(d)\)</span> 注意到，是 <span class="math inline">\(-f_y\Delta y\)</span>，前面有一个负号，我大意了</li><li>短路了，没做出来，向量组的问题，利用现有等式，构造具体方程求解行列式 <span class="math display">\[AP = (A\alpha,A^2\alpha,A^3\alpha) = (A\alpha,A^2\alpha,3A\alpha - 2A^2\alpha)=(\alpha, A\alpha,A^2\alpha) \cdot \begin{pmatrix}0&amp;0&amp;0\\\\1&amp;0&amp;3\\\\0&amp;1&amp;-2\end{pmatrix} = PB\]</span></li></ol><p><span class="math display">\[|A - E| = |P^{-1}||A-E||P| = |P^{-1}AP - E| = |B - E|\]</span></p><h3 id="解答题-9">解答题</h3><ol type="1"><li>求极限，导数定义，定积分</li><li>物理应用，质点法yyds，再也没错过了</li><li>没有任何性质的多项式，直接写答案，扣个答案分差不多了（可以考虑<span class="math inline">\(L_x\)</span>、<span class="math inline">\(L_y\)</span>先削掉 <span class="math inline">\(\mu\)</span>）</li><li>第一问分部积分，第二问出的贼呀，双中值一般都是拆区间拉格朗日，这题不是 先积分中值，再拉格朗日，利用的是第一问中证明的等式</li><li>二重积分加微分方程，出得妙啊 左侧凑微分，给他搞出来，右侧轮换对称性干掉一个，另一个换元</li><li>数学系的孩子们，直接掏出矩阵合同变换法秒了吧，非数学系的就配方法吧 第二问没读懂，答案也看不懂，但可以确定的事，第一问合同变换搞出来的 <span class="math inline">\(C\)</span> 也满足第二问的等式 直接令 <span class="math inline">\(P = C\)</span> 就结束了 答案的意思估计是如果第一问求出来的 <span class="math inline">\(C\)</span>，使得 <span class="math inline">\(D=C^{-1}AC\)</span> 不是对角矩阵，则可以考虑把 <span class="math inline">\(D\)</span> 通过正交变化化成 <span class="math inline">\(\Lambda\)</span>，而对于新的可逆变换 <span class="math inline">\(P = CQ\)</span>，有 <span class="math inline">\((QC)^{-1}BQC = C^{-1}Q^{-1}BQC = C^{-1}EC = E\)</span> 那你下次能不能好好出题</li></ol><blockquote><p>这套大题有点难度的，板子题不多，都有一定的思维量 条件极值没去算，中值定理第二问想了巨久，主要是潜意识里一直觉得是拆区间两次拉格兰日 下次还是优先考虑通过给定等式往回推导的方法 二重积分这个是真想不到，处理 <span class="math inline">\(\iint f(x+y)d\sigma\)</span>，换序肯定是没用的，因为有轮换对称性 正确做法居然是换元，令 <span class="math inline">\(x+y=u\)</span>，几何上来看，由于边界是 <span class="math inline">\(x+y=t\)</span>，这样的换元效果会让其中一个积分的上下限编成定值</p></blockquote><blockquote><p>总分 125 犯病的地方有，但分低的主要原因是几个大题没有思路 线代还是出的稀烂，但是这套有几题是真不错，说的就是 16、20、21</p></blockquote><h2 id="卷六">卷六</h2><h3 id="选择题-10">选择题</h3><ol type="1"><li><p>极限 + 导数定义，两个方程两个参数</p></li><li><p>极值的充分条件，可以求高阶导数，也可以用邻域直接在二阶导的时候写出答案</p></li><li><p>先求导找出 <span class="math inline">\(f(x)\)</span> 的表达式，代入 <span class="math inline">\(x=0\)</span> 即为斜率，就结束了</p></li><li><p>移项：<span class="math inline">\(a = \frac{x^2}{e^x}\)</span> 求导找曲线单调性，画出大值图像，找三个交点的区间</p></li><li><p>数形结合快，利用凹函数的性质，切线在曲线下方</p><p>答案用的泰勒展开做的，利用二阶导数大于零，进行放缩</p></li><li><p>反常积分，利用收敛以及瑕点处的阶数，写出一个参数的值，然后求一个不定积分</p></li><li><p>这题卡了好一会儿，主要是算是算出来了，被选项搞了</p><p>这是一道经典模型，之前都是考的积分等式：<span class="math inline">\(f(x)=g(x)+\int_a^b f(x)dx\)</span></p><p>其中，<span class="math inline">\(f(x)\)</span> 为抽象函数，题目不给出， <span class="math inline">\(g(x)\)</span> 为具体函数，题目会直接给出</p><p>由于定积分是一个具体的数字，直接令 <span class="math inline">\(A = \int_a^b f(x)dx\)</span>，在等式两侧取积分：</p><p><span class="math inline">\(A = \int_a^b g(x)dx + A(b - a)\)</span> 就可以反解出 <span class="math inline">\(A\)</span> 了</p><p>然后这题就变成二重积分了：<span class="math inline">\(f(x) = xy + \iint f(x)dx\)</span></p><p>用轮换对称性：<span class="math inline">\(A = 0\)</span>，求出来后，我就蒙蔽了，因为选项都是一个倍数关系</p><p>卡了一会儿，最后发现 C选项 偷偷藏了一个 <span class="math inline">\(D\)</span> 积分域上的函数，挺能藏</p></li><li><p>实对称不能保证，正定能保证，反例答案给了</p></li><li><p>特征值多项式的转换</p></li><li><p><span class="math inline">\(r(A) \le 3 &lt; 4\)</span> 一定有无穷多解</p></li></ol><blockquote><p>错了第一、第二题，脑子短路了，是这样的</p></blockquote><h3 id="填空题-10">填空题</h3><ol type="1"><li><p>幂指函数求极限</p></li><li><p>隐函数求导</p></li><li><p>微分方程，一阶非齐次型，再加上旋转体体积，求出一个二次函数，找顶点问题</p><p>犯病了，解微分方程的时候用的变量可分离方法，然后齐次换元，最后忘记换回来了</p></li><li><p>旋转体体积</p></li><li><p>二重积分换序</p></li><li><p>口算题</p></li></ol><blockquote><p>第三题犯病了</p></blockquote><h3 id="解答题-10">解答题</h3><ol type="1"><li><p>不等式问题，多项乘积，考虑取对数，求两下导就出来了</p></li><li><p>二阶常系数非齐次微分方程，这里利用初值求参数的时候算错了一个</p><p>然后定积分的部分很简单，显然左边分部积分一下就变成右边了</p></li><li><p>二重积分，注意一下 <span class="math inline">\(\theta\)</span> 范围是 <span class="math inline">\([0, \frac{\pi}{2}]\)</span> &amp; <span class="math inline">\([\pi, \frac{3}{2}\pi]\)</span></p></li><li><p>数列极限，单调有界准则，这里答案证了一下有界性，我没证</p><p>题目里说了 <span class="math inline">\(f(x)\)</span> 是定义在 <span class="math inline">\([0,1]\)</span> 上的函数，等式又是建立在该函数上的</p><p>那么显然有界，否则等式不成立</p><p>证明有界性也很不难，答案用的中值定理，我惊了</p><p>已知结论和递推关系，肯定先想到第一第二数学归纳法呀</p><p>利用 {<span class="math inline">\(x_n\)</span>} 有界，不难证明 {<span class="math inline">\(x_{n+1}\)</span>} 有界（连续函数有界性）</p></li><li><p>第一问高考难度；第二问一看就是定积分定义，都帮你凑好了，找一下可爱因子就好了</p><p>放缩到 <span class="math inline">\(g(x)\)</span> 的两端，先削变量 <span class="math inline">\(x\)</span>，右侧显然，左侧做的时候没想到好的方法</p><p>看了答案发现自己确实短路了</p><p><span class="math inline">\(\lim\limits_{n\to\infty} \sum\limits_{k=1}^n \frac{k}{n} \cdot e^{\frac{k}{n}} \cdot \frac{1}{n+2} = \lim\limits_{n\to\infty} \frac{n}{n+2} \cdot \lim\limits_{n\to\infty} \frac{1}{n}\sum\limits_{k=1}^n \frac{k}{n} \cdot e^{\frac{k}{n}} = 1 \cdot \displaystyle\int_0^1xe^{x}dx\)</span></p></li><li><p>送分题</p></li></ol><blockquote><p>大题做的不好，做的时候也挺抗拒那些计算的，<del>写一半去看了会儿 王师傅和小毛毛</del></p><p>第一问去了对数，求了导，但是不想算下去了，整理式子好累。。</p><p>第二问参数求错了，答案最后就差一个系数</p><p>第五问放缩定积分定义都想到了，左边那个当时没想出来怎么处理</p></blockquote><blockquote><p>总分 123</p><p>题目很简单，感觉是最近学的有点累了，很多计算式子一出来，方法都懂，但是不想下笔</p><p>写完六套卷休息一天，接下来写张八高分版</p></blockquote><h1 id="李林冲刺四套卷">李林冲刺四套卷</h1><h2 id="卷一-2">卷一</h2><blockquote><p>粗略点评一下，填选很多都在共创第一套里见过了，整体难度中等 命题风格比较符合今年的架势，很推荐刷一下 线代部分还是有点白给</p></blockquote><h3 id="选择题-11">选择题</h3><ol type="1"><li>泰勒展开做个多项式乘法，找等价关系</li><li>大致绘制一下函数图像，就知道在 <span class="math inline">\(\pm1\)</span> 不平滑，不用去讨论，肯定不可导 分段求导即可选出</li><li>共创第一套的原题，李六一道原题的升级版 因为只有二阶导数大于0的信息，故单调性判别的时候考虑去凑 <span class="math inline">\(f&#39;-f&#39;\)</span> 的形式，从而利用上 <span class="math inline">\(f&#39;&#39;&gt;0\)</span> 这里就用到了拉格朗日：<span class="math inline">\(xf&#39;(x) - f(x) = xf&#39;(x)-f(x)-f(0) = xf&#39;(x)-xf&#39;(\xi)\)</span></li><li>利用瑕点的阶写出 <span class="math inline">\(a = 1\)</span>，然后求一个定积分即可</li><li>等比级数展开，答案写的好复杂</li><li>可微定义，多元函数求偏导</li><li>商的求导公式还原，再用对数函数还原 答案用的少 x 的第二型降阶做的</li><li>秩一矩阵特征值的结论：<span class="math inline">\(\mathbf{tr}(A)\)</span>(1重)，<span class="math inline">\(0\)</span> (n-1重) 证明是可逆变换，然后列分块线性表出</li><li>合同定义</li><li>这里要揣测出题人的意思，是让你证明矩阵是否是对称阵，然后就很简单了</li></ol><h3 id="填空题-11">填空题</h3><ol type="1"><li>弧微分</li><li>参数方程求导</li><li>物理应用，根式换元求定积分</li><li>二重积分换序</li><li>隐函数求偏导数</li><li>很简单的一道题，但是要小心，求的矩阵是 6 阶的，他是拼起来的</li></ol><h3 id="解答题-11">解答题</h3><ol type="1"><li>幂指函数求极限</li><li>第二问按照题目意思模拟，最后会把参数 a 消掉，就很简单了</li><li>和李三最后一套里的微分方程差不多，齐次型化简</li><li>全微分求偏积分还原原函数，然后计算一个二重积分 这里要先用三角恒等变形化简，否则会很痛苦</li><li>和20年数一的证明题类似，第一问直接用拉格朗日分段估计 第二问凑微分分布积分还原，最后套绝对值放缩，很简单</li><li>屑题</li></ol><h2 id="卷二-2">卷二</h2><h3 id="选择题-12">选择题</h3><ol type="1"><li>常规题，等比级数展开</li><li>答案用的导数定义，也可以直接泰勒展开，变成幂函数来求导，会更快</li><li>常用极限结论：<span class="math inline">\(e^{nx} = \begin{cases}+\infty &amp; x&gt;0 \\\\1 &amp; x=0 \\\\0 &amp; x&lt;0\end{cases}\)</span></li><li>本题就是 <strong>导数零点定理</strong> 证明过程中的一小步 几何上画出那个图就懂了；书写上用极限保号性配合左低右高</li><li>题干给的是：<span class="math inline">\(f&#39;(x) - f(x) &gt; 0\)</span>，考虑积分因子法还原：<span class="math inline">\([e^{-x}f(x)]&#39; &gt; 0\)</span> 然后构造辅助函数：<span class="math inline">\(F(x) = e^{-x}f(x)\)</span>，利用单调性有：<span class="math inline">\(e^{-x}f(x) &gt; e^0f(0)\)</span> 即：<span class="math inline">\(f(x) &gt; e^x\)</span>，再两侧积分有：<span class="math inline">\(\displaystyle\int_0^1 f(x)dx &lt; e - 1\)</span></li><li>多元函数求偏积分，再代值求偏导数 这里我犯病了，<span class="math inline">\(\displaystyle\int \dfrac{1}{x}dx = \ln |x| + C\)</span> 这里是有一个绝对值的，最近不定积分见少了</li><li>简单题</li><li>李六第一套里出过类似的，这题再额外多了一步的屑题罢了 <span class="math inline">\((A + 2 E)(A - E) \alpha = 0\)</span> 有非零解 <span class="math inline">\(\alpha \ne 0\)</span>，故 <span class="math inline">\(|A+2E| \cdot |A - E| = 0\)</span> 若 <span class="math inline">\(|A+2E|\ne 0\)</span>，则 <span class="math inline">\(A\alpha = \alpha\)</span>，得出 <span class="math inline">\(\alpha\)</span> 是 <span class="math inline">\(A\)</span> 特征值为 1 的特征向量，与题意不符 若 <span class="math inline">\(|A-E|\ne 0\)</span>，则 <span class="math inline">\(A\alpha = -2\alpha\)</span>，得出 <span class="math inline">\(\alpha\)</span> 是 <span class="math inline">\(A\)</span> 特征值为 -2 的特征向量，与题意不符 故 <span class="math inline">\(A\)</span> 同时有特征值：<span class="math inline">\(2,1\)</span>，于是有：<span class="math inline">\(f(2)=f(1) = 0\)</span>，用 Rolle 定理易得：<span class="math inline">\(f&#39;(\xi) = 0\)</span></li><li><p>这题 1，2 考的是同解问题，需要构造拼秩，但是 3 的错误很明显，所以还是屑题 （A）：<span class="math inline">\(A^T\alpha = 0, \beta^T\alpha = 0\)</span>，易得：<span class="math inline">\(\alpha\)</span> 是 <span class="math inline">\(A^Tx=0\)</span> 和 <span class="math inline">\(\begin{pmatrix}A^T \\\\ \beta^T\end{pmatrix}x = 0\)</span> 有同解：<span class="math inline">\(\alpha\)</span> 故 <span class="math inline">\(r(A) = r(A^T) = r\begin{pmatrix}A^T \\\\ \beta^T\end{pmatrix} = r(A,\beta)\)</span>，得出结论：<span class="math inline">\(Ax=\beta\)</span> 有解</p>（B）：反证法，设出解 <span class="math inline">\(x\)</span> ，回代易得 <span class="math inline">\(\alpha^T Ax = 1\)</span>，又 <span class="math inline">\(\alpha^TA=0\)</span> 矛盾，易知无解</li><li><p>屑题，二次型入门题，分别乘 <span class="math inline">\(\alpha, \beta, \gamma\)</span> （<span class="math inline">\(\gamma\)</span> 是与 <span class="math inline">\(\alpha,\beta\)</span> 两两正交的正交向量） 易得特征值为：<span class="math inline">\(1, 2, 0\)</span> 再又惯性定理写出答案即可（答案用的秩的不等式，大可不必）</p></li></ol><h3 id="填空题-12">填空题</h3><ol type="1"><li>考点和第三题一模一样</li><li>参数方程求导，套公式最快：<span class="math inline">\(\dfrac{\mathrm{d}^2y}{\mathrm{d}x^2} = \dfrac{y&#39;&#39;x&#39; - x&#39;&#39;y&#39;}{x&#39;^3}\)</span></li><li>易得：<span class="math inline">\(x=e\)</span> 取最小值，考虑没有计算器的时候如何比较：<span class="math inline">\(2^{\frac{1}{2}}\)</span> 和 <span class="math inline">\(3^{\frac{1}{3}}\)</span> 比较他们的六次方即可：<span class="math inline">\(\dfrac{1}{8} &gt; \dfrac{1}{9}\)</span></li><li>背景是几何应用，实际考的是二重积分换序</li><li>给的形式看上去是考变量可分离型，实际考的是一阶线性微分方程，用积分因子还原即可 &gt; 自从学会积分因子法后，很少去套公式了，做起题来也快了（<del>公式法狗都不用</del>） &gt; 什么是积分因子法：<a href="https://www.bilibili.com/video/BV1AL411b7mm">2022考研数学高等数学部分—微分方程的优化解法</a></li><li>屑题</li></ol><h3 id="解答题-12">解答题</h3><ol start="17" type="1"><li>幂指函数求极限，分类讨论 "<span class="math inline">\(0^0\)</span>"型 和 "<span class="math inline">\(\infty ^0\)</span>" 型 一开始也可不讨论，用 <strong>洛必达的推广型</strong> 做，在最后一步分类讨论即可</li><li><strong>抽象函数等式，考虑构造任意点的增量型导数定义建立微分方程</strong> 由 <span class="math inline">\(f(x)f(y) = f(x+y)\)</span> 构造：<span class="math inline">\(f(x+\Delta x) = f(x) \cdot f(\Delta x)\)</span>，由增量型导数定义： <span class="math display">\[f&#39;(x) = \lim_{\Delta x \to 0} \frac{f(x + \Delta x) - f(x)}{\Delta x} = \lim_{\Delta x \to 0} \dfrac{f(x)[f(\Delta x) - 1]}{\Delta x} = f(x)f&#39;(0)\]</span> 化简易得：<span class="math inline">\(f&#39;(x) + f(x) = 0\)</span>，由积分因子法易得：<span class="math inline">\(f(x) = e^{-x}\)</span> 第二问比较简单，注意极值点可能是驻点或导数不存在的点</li><li>比较裸的题，怕你拉格朗日乘子解不出来，还直接把解给你了，让你反求参数，泪目 先构造，然后代入 <span class="math inline">\(x,y\)</span> 的值，反解 <span class="math inline">\(a,b\)</span> 计算量很小</li><li>积分域没有任何的对称性化简，转极坐标也比较复杂，我直接在直角坐标下分段积了，计算量中等吧 答案是极值互化后 <span class="math inline">\(\theta ,r\)</span> 换序了，答案的方法更好</li><li>利用弧微分计算曲线长度建立微分方程，是二阶微分方程的少 <span class="math inline">\(y\)</span> 第二型 换元降阶，然后瞎搞搞就出来了，计算量不大</li><li>屑题，太裸了</li></ol><h2 id="卷三-2">卷三</h2><h3 id="选择题-13">选择题</h3><ol type="1"><li>分离参数，求导绘制大致函数图像，然后找交点个数</li><li>结论题：连续函数 <strong>开区间</strong> 内如果存在 <strong>唯一极值点</strong>，那该 <strong>极值点</strong> 就是 <strong>最值点</strong></li><li>分段用拉格朗日中值定理放缩</li><li>二重积分，极值互化</li><li>隐函数方程求偏导数</li><li>二阶微分方程少 y 第二型降阶</li><li>极值互化后 <span class="math inline">\(r,\theta\)</span> 换序</li><li>用相似转换研究对象</li><li>方程组有解问题，<span class="math inline">\(r(A) = m &lt; n\)</span> <span class="math inline">\(r(A,b_m) = m &lt; n\)</span> 有无穷解 <span class="math inline">\(r(A^T) \le r(A^T,b_n) \le n\)</span> 可能无解</li><li>数专最快速的方法是 <strong>合同变换法</strong> ，非数专 <strong>配方法</strong> 即可</li></ol><h3 id="填空题-13">填空题</h3><ol start="11" type="1"><li>参数方程求导</li><li>考曲率半径的公式，构造好方程后求导找单调性和极值点即可</li><li>不定积分，根式换元</li><li>二重积分换序，然后变上限积分求导</li><li>19年考过一次大题，22年的张四也拙劣的模仿过，求和积分统一化做（通法） 答案用的是区间再现去的绝对值，不过如果是真题的形式：<span class="math inline">\(e^{x}\sin x\)</span> 区间再现就用不了了</li><li>研究特征值的问题，简单题</li></ol><h3 id="解答题-13">解答题</h3><ol start="17" type="1"><li>被积函数中把求导参数换元，再洛必达即可</li><li>先用对称性干掉分母，再极值互化</li><li>积分不等式中最简单的一类：变上限积分法，把所有的 a 换元成 x 构造辅助函数，确定初值后求导</li><li>二阶偏导数连续，构建微分方程，换元后是一阶线性，用积分因子法还原</li><li>放缩定积分定义</li><li>第一问就是构造，凑一凑就出来了；第二问裸题</li></ol><h2 id="卷四-2">卷四</h2><h3 id="选择题-14">选择题</h3><ol type="1"><li><p>常规题，泰勒展开，合并项</p></li><li><p>由题易得：<span class="math inline">\(x\to +\infty\)</span> 时，有 <span class="math inline">\(f(x) = -x - 1 + o(1)\)</span> ，直接选出即可</p></li><li><p>利用二阶偏导数连续，<span class="math inline">\(u_{xy} = u_{yx}\)</span> 建立恒等式，反求参数</p></li><li><p>1和3用一下区间再现和2比较，做差放缩都没用到，比较简单的积分比大小题</p></li><li><p>根据定积分换元定积分定义</p></li><li><p>易得 <span class="math inline">\(k^{-\frac{1}{2}}\)</span> 是极小值点，故最大值在两端取到</p></li><li><p>先易得特征根为 <span class="math inline">\(\lambda = -a \pm \sqrt{a^2-b^2}\)</span>，然后写出通解：<span class="math inline">\(\overline{y} = C_1e^{\lambda_1x} + C_2e^{\lambda_2 x}\)</span></p><p>欲求 <span class="math inline">\(\displaystyle\int_0^{+\infty} y(x) dx\)</span> 存在，又已知 <span class="math inline">\(\lim\limits_{x\to+\infty}y(x) = \lim\limits_{x\to+\infty}y&#39;(x) = 0, y(0) = y&#39;(0)=1\)</span>，不妨考虑用微分方程反解 <span class="math display">\[ \begin{aligned} \int_0^{+\infty} y(x)dx  &amp;= -\dfrac{1}{b^2}\int_0^{+\infty} [y&#39;&#39;(x) + 2ay&#39;(x)] dx \\\\ &amp;= -\dfrac{1}{b^2} \int_0^{+\infty}d[y&#39;(x) + 2ay(x)] \\\\ &amp;= \dfrac{1}{b^2} (1+ 2a) \\\\ \end{aligned} \]</span></p></li><li><p>拼起来初等行变换，简单题</p></li><li><p>行向量组等价，说明可经过有限次初等行变换互化：<span class="math inline">\(PA=B\)</span> 于是有 <span class="math inline">\(Ax = 0 \Rightarrow PAx=0\)</span> 同理可证得 <span class="math inline">\(Bx = 0 \Rightarrow P^{-1}Bx = 0\)</span></p></li><li><p>特征值出来，行列式的值就出来了，然后代还伴随矩阵即可</p></li></ol><h3 id="填空题-14">填空题</h3><ol start="11" type="1"><li><p>隐函数求导，简单题</p></li><li><p>求导反解参数，俗称模拟题</p></li><li><p>取对数然后凑定积分定义，简单题</p></li><li><p>这里要注意 <span class="math inline">\(x\)</span> 的范围，不能只计算 <span class="math inline">\([0,\pi]\)</span> 的区间（指我自己）</p><p>具体做法和卷三15题基本一致（我指的是我的通法，不是标答给的方法）</p></li><li><p>二重积分极值互化</p></li><li><p>按行展开定理反向构造行列式</p></li></ol><h3 id="解答题-14">解答题</h3><ol start="17" type="1"><li><p>卷二的第18题原题，利用导数定义建立微分方程</p></li><li><p>常规题里穿插了二重积分的计算，还是常规题</p></li><li><p>偶数年考过一次一模一样的，做法完全一样</p></li><li><p>高阶导数的两种方法：</p><ol type="1"><li>求导找规律</li><li>莱布尼茨公式</li></ol><p>这题找一下规律就出来了，显然</p><p>第二问答案复杂了，利用上 <span class="math inline">\(f^{(n)} &gt; 0\)</span> 除了 <span class="math inline">\(f^{(n-1)}\)</span> 的单调性，还可以对 <span class="math inline">\(f^{(n-1)}\)</span> 再求一次导，显然</p></li><li><p>第一问易得，说一下第二问</p><ol type="1"><li><p>标答的思路：单调有界准则</p><p>显然，递推函数 <span class="math inline">\(f(x) = \dfrac{1}{4}(x + f(x))\)</span> 是单调递增的，有已知结论可知 <span class="math inline">\(f(x_{n + 1}) - f(x_n)\)</span> 与 <span class="math inline">\(f(2) - f(1)\)</span> 一致</p><p>然后配合单调性，用单调有界准则</p></li><li><p>我的思路：压缩映像原理</p><p>将第一问的 <span class="math inline">\(\xi\)</span> 代入方程易得：<span class="math inline">\(F(\xi) = \dfrac{1}{4}[\xi + f(\xi)] = \xi\)</span></p><p>考试的时候我直接用第一型压缩了。这题也可用第二型，压缩因子放缩易得，如下： <span class="math display">\[ F&#39;(x) = \dfrac{1}{4}(1 + f&#39;(x)) &lt; k = \dfrac{1}{2} &lt; 1 \]</span> 第二型的证明方法如下： <span class="math display">\[ \begin{aligned} |x_{n+1} - \xi| = |F(x) - F(\xi)| = |F&#39;(\xi_n)| \cdot |x_n - \xi| &amp;\le \dfrac{1}{2} \cdot |x_n - \xi| \\\\ &amp;\le \cdots \\\\ &amp;\le \dfrac{1}{2^n} |x_1 - \xi| \end{aligned} \]</span> 故 <span class="math inline">\(\lim\limits_{n\to\infty} x_n = \xi\)</span></p></li></ol></li><li><p>常规屑题，李林四套卷的线代出的真的屑</p></li></ol><h1 id="李艳芳三套卷">李艳芳三套卷</h1><h2 id="卷一-3">卷一</h2><h3 id="选择题-15">选择题</h3><ol type="1"><li>数列极限，转函数极限，分母用拉格朗日中值定理，我的做法和答案基本一致，就不多做阐述了</li><li>考的概念题，比较基础</li><li>利用奇偶性来做的，<span class="math inline">\(\displaystyle\int_a^x\)</span> 奇函数 <span class="math inline">\(dx\)</span> = 偶函数，然后分布积分一下，找答案即可</li><li>参数方程的旋转体体积问题，想防止柱壳法写错，可以直接用二重积分法</li><li>先找齐次的解的形式，然后对照写出非齐次特解，比较常规</li><li>考的二元极限，<span class="math inline">\(f_1\)</span> 用平方差拆开化简，<span class="math inline">\(f_2\)</span> 由于分子比分母次数低，肯定不连续</li><li>凯哥选填班有类似题目，如果 <span class="math inline">\(a &gt; \frac{1}{2}\)</span>，则是极小值点，用等式脱帽法做即可</li><li>用相似理论来做，首先 <span class="math inline">\(A\)</span> 是秩一矩阵，可以直接写出特征值：<span class="math inline">\(0,0,0\)</span> 于是 <span class="math inline">\((E+A)^n\)</span> 的特征值为：<span class="math inline">\(1,1,1\)</span>，故 <span class="math inline">\((E+A)^n\)</span> 的 trace 为 <span class="math inline">\(3\)</span>，deg 为 <span class="math inline">\(1\)</span> 标答用的秩一矩阵求高次矩阵，然后二项展开答案做的，也是一个不错的思路</li><li>由于 <span class="math inline">\(A,B\)</span> 正定，故 <span class="math inline">\((A^{-1}B)^T(A^{-1}B) = B^{-1}AA^{-1}B = E\)</span> 可知：<span class="math inline">\(A^{-1}B\)</span> 也正定 又 <span class="math inline">\((A^{-1}B)^T = B^{-1}A\)</span> 故两矩阵对称，因此有相同的特征值（读者自证不难，行列式取转置） 又 <span class="math inline">\(B(A^{-1}B)B^{-1} = BA^{-1}\)</span>，故 <span class="math inline">\(A^{-1}B \sim BA^{-1}\)</span> 推出 2 错误 又 <span class="math inline">\(Ax=Bx\)</span> 有非零解 <span class="math inline">\(\alpha\)</span>，故 <span class="math inline">\(B^{-1}A\alpha = 0\)</span> ，且 <span class="math inline">\(A^{-1}B\alpha = 0\)</span>，存在公共特征向量 这题就是按照题目的意思去构造即可</li><li>找特征值的题，把系数 <span class="math inline">\(\dfrac{1}{3}\)</span> 一开始就提出，会变得简单一点</li></ol><h3 id="填空题-15">填空题</h3><ol start="11" type="1"><li>非常新的一道题，给定一个曲线方程：<span class="math inline">\(x^3+y^3=y^2\)</span>，求斜渐近线 求渐近线，则渐近线一定存在，故不妨令 <span class="math inline">\(\lim\limits_{x\to\infty}\dfrac{y}{x} = k\)</span> 来反求 这题出的也太牛了</li><li>参数方程问题，式子整理需要用到一定量的三角恒等变形</li><li>不定积分，三角换元，凑微分</li><li>全微分解最快，偏导数也可</li><li>物理应用</li><li>水题，水的有点过分</li></ol><h3 id="解答题-15">解答题</h3><ol start="17" type="1"><li>多元函数极值，没什么好手段，但是显然 <span class="math inline">\(L_y\)</span> 很好解，从他入手讨论消参</li><li>余丙森考过类似的二元题，真题考的是一元，方法一样，两侧取积分做 解一个二重积分，对称性化简，极值互化</li><li>数列极限，比较简单，有界性用第一数学归纳法即可，单调性利用有界性做商证明 我的方法与答案一样，不多阐述</li><li>李林、余丙森和真题考过第一问，链式求导化简微分方程 第二问比较新，其实就是求一个高阶导数 任意点的高阶导数，方法就两个：找规律和莱布尼茨公式法 这题显然找不到规律，求一阶导后，凑出幂函数，然后用莱布尼茨公式即可</li><li>这题也太新了，真题应该不会这么考，万万没想到考的是中值定理 第二问比较简单，值得注意的是答案是错误的，已知极限反求参数不能用洛必达法则 正确做法是，先换序，然后求导，然后被积函数等价无穷小，然后积分，然后代初值消 C</li><li>考了数量积的运算：<span class="math inline">\(\alpha^T\beta = \beta^T\alpha\)</span> 其他都比较常规</li></ol><h2 id="卷二-3">卷二</h2><h3 id="选择题-16">选择题</h3><ol type="1"><li>两个无定义点，讨论一下就好了，简单题</li><li><span class="math inline">\(f(x) = x^x\)</span> 的函数图像知道的话，秒杀难度</li><li><span class="math inline">\(I_1\)</span> 和 <span class="math inline">\(I_2\)</span> 直接看出来，然后和 <span class="math inline">\(I_3\)</span> 做个差即可（被积函数）</li><li>被积函数在一个周期上的积分值为 0，则变上限积分也为周期函数，按照这个性质推出 1 2 然后对3 4 用周期函数定义即可</li><li>区间再现，然后加起来，化简</li><li>条件极值，比较简单，就 3 个方程，随便搞一下就出来了，然后随便取一个点比较一下，判断是最大还是最小 答案用的无条件极值做的，利用约束条件，消掉了一个参数，然后就是二元函数问题了</li><li>积分比大小，但是不同于第3题，这里要整体做差，然后判断正负号（因为被积函数做差判别不了） 有一个小放缩挺妙的，不过也可以直接用几何看出来 <span class="math display">\[\begin{aligned}\int_0^{\frac{\pi}{2}} e^{x^2}(2\sin x - 1)dx&amp;= \int_0^{\frac{\pi}{6}} e^{x^2}(2\sin x - 1)dx + \int_{\frac{\pi}{6}}^{\frac{\pi}{2}} e^{x^2}(2\sin x - 1)dx\\\\&amp;&gt;e^{\frac{\pi^2}{36}}\int_0^{\frac{\pi}{6}}(2\sin x - 1)dx + e^{\frac{\pi^2}{36}}\int_{\frac{\pi}{6}}^{\frac{\pi}{2}}(2\sin x - 1)dx\\\\&amp;=e^{\frac{\pi^2}{36}}\int_0^{\frac{\pi}{2}}(2\sin x - 1)dx\\\\&amp;=e^{\frac{\pi^2}{36}}(2-\frac{\pi}{2}) &gt; 0\\\\\end{aligned}\]</span></li><li><span class="math inline">\(r(A) = r(A^T) = r(AA^T) = r(A^TA)\)</span> 故 <span class="math inline">\(A\)</span> 列满秩，又左乘列满秩不改变矩阵的秩，易得</li><li>是一个远古习题，<span class="math inline">\(A^2\alpha \ne 0,A^3\alpha=0\)</span>，可构造无关向量组：<span class="math inline">\(P=(\alpha, A\alpha,A^2\alpha)\)</span> 则 <span class="math inline">\(P^{-1}AP = P^{-1}(A\alpha,A^2\alpha,0) = P^{-1}(\alpha,A\alpha,A^2\alpha)\begin{pmatrix} 0&amp;0&amp;0\\\\ 1&amp;0&amp;0\\\\ 0&amp;1&amp;0 \end{pmatrix} = \begin{pmatrix} 0&amp;0&amp;0\\\\ 1&amp;0&amp;0\\\\ 0&amp;1&amp;0 \end{pmatrix}\)</span> 刚学向量组的时候，应该都接触过这题，不过本题难点在于反向构造出来 <span class="math inline">\(P\)</span></li><li><span class="math inline">\(tr(AA^T) = \sum\limits_{i=0}^n a_{ii}^2 = 0 \Rightarrow A = O\)</span> 2用分块计算行列式显然易得，3可以参考一下我下面写的东西 4考的是一个构造问题，比较难想到（指我没想到） &gt; 这里分享一个利用顺序主子式正负求惯性指数的方法，首先把顺序主子式按序列如下展开： <span class="math display">\[1, A_1, A_2, \cdots , A_n\]</span> 则<strong>正惯性指数</strong>为相邻顺序主子式之间的<strong>保号数</strong>，<strong>负惯性指数</strong>为<strong>变号数</strong> 举一个简单的例子：若 4 阶矩阵的顺序主子式值为：<span class="math inline">\(1, 2, 3, -2, -3\)</span> 易得正惯性指数保号数为 3 即：<span class="math inline">\((1,2), (2,3), (-2,-3)\)</span> 负惯性指数变号数为 1 即：<span class="math inline">\((3,-2)\)</span> <strong>【注】有 0 出现的时候，该法不适用</strong></li></ol><h3 id="填空题-16">填空题</h3><ol start="11" type="1"><li>根式换元，简单题</li><li>一点处的高阶导数一般有两种做法，泰勒展开和求极限 但是本题并不是在 <span class="math inline">\(x=0\)</span> 处展开，故代入后高阶不会消失，因此不能用一点处的高阶导数做法 剩下就是任意点高阶导数做法了，即找规律和莱布尼茨公式，考虑求几阶找规律 最后统一代入</li><li>瞎搞搞出来了，实际考的是链式求导法则: <span class="math display">\[r = z_r = z_x \cdot x_r + z_y \cdot y_r = \cos \theta z_x + \sin\theta z_y\]</span></li><li>参数方程求导</li><li>二重积分，比较简单，还原积分域，然后对称性化简，极值互化</li><li>对于构造能力的要求过于高了（不会），放在最后一题，然后给个第一问还是可以做一做的 利用了行列式的单列/行可加性拆分，分离参数 <span class="math inline">\(b\)</span> ：(这一步不太容易想到) <span class="math display">\[c = \begin{vmatrix}A&amp;\alpha\\\\\alpha^T&amp;b\end{vmatrix} = \begin{vmatrix}A&amp;0\\\\\alpha^T&amp;b\end{vmatrix} + \begin{vmatrix}A&amp;\alpha\\\\\alpha^T&amp;0\end{vmatrix} = b|A| + \begin{vmatrix}A&amp;\alpha\\\\\alpha^T&amp;0\end{vmatrix}\]</span> 只需求出右边的行列式，即可解出 <span class="math inline">\(|A|\)</span> 然后就很简单了，用行列式的恒等变形化成分块上三角行列式即可： <span class="math display">\[\begin{vmatrix}A&amp;\alpha\\\\\alpha^T&amp;0\end{vmatrix} = \begin{vmatrix}A&amp;0\\\\\alpha^T&amp;-\alpha A^{-1}\alpha^T\end{vmatrix} = -\alpha A^{-1}\alpha^T \cdot |A|\]</span> 又 <span class="math inline">\(A\)</span> 为反对称矩阵，故 <span class="math inline">\((A^{-1})^T = (A^T)^{-1} = -A^{-1}\)</span>，即 <span class="math inline">\(-\alpha A^{-1}\alpha^T = \alpha A^{-1}\alpha^T\)</span> 易得：<span class="math inline">\(\alpha A^{-1}\alpha^T = 0\)</span>，故 <span class="math inline">\(|A| = \dfrac{c}{b}\)</span></li></ol><h3 id="解答题-16">解答题</h3><ol start="17" type="1"><li>第二个考到二重积分中值定理的题（第一个出自李六） 由于 <span class="math inline">\(\lim\limits_{(x,y)\to(0,0)} f(x,y) \ne 0\)</span>，故可以用二重积分中值定理化简，提出 <span class="math inline">\(f(\xi,\eta)\)</span> 直接用连续性代值 然后求一个内摆线的面积</li><li>设问很新，其实只要按照题意模拟即可，先对特解 <span class="math inline">\(y^{*}\)</span> 求导，然后代入微分方程化简</li><li><strong>真题考过两次了，一次是1999年数二（完全抽象型），一次是2011年（调和级数）</strong> 答案的放缩比较麻烦，最方便的做法是求和符号和积分符号统一做法 <span class="math display">\[a_n = \sum_{k=1}^n \dfrac{1}{\sqrt{k}}dx - \int_0^n\dfrac{1}{\sqrt{x}}dx = \sum_{k=1}^{n-1}\int_k^{k+1} (\dfrac{1}{\sqrt{k}} - \dfrac{1}{\sqrt{x}})dx + \dfrac{1}{\sqrt{n}} - 2 \ge -2\]</span></li><li>多元函数结合微分方程的考法，真题见的不多，武忠祥每日一题很多 （可以直接在博客下找微分方程tag，我没记错的话，每日一题微分方程都是结合多元函数的） 比较简单，不多解释了，具体可以参考答案</li><li>第一问比较简单，直接求导比较麻烦，不妨化简一下结论，构造辅助函数 <span class="math inline">\(F(x)=1+x^2-e^{x^2}\)</span> 标答的辅助函数还是有些复杂，然后说一下第二问，这个构造，实在不容易想到（我不会的意思） 至少他也应该把 <span class="math inline">\(\sqrt{n}\)</span> 开局放在左边吧，不然很难想到是一个积分数列的问题 关于这个积分数列问题，真题考过一次（2019年） <span class="math display">\[I_n = \int_0^{+\infty} \dfrac{1 - x^2+x^2}{(1+x^2)^n}dx = I_{n-1} - \int_0^{+\infty}xd[(1+x^2)^{-(n-1)}]\]</span></li><li>屑题，就是按照题目意思构造，然后利用构造的东西反复代入即可</li></ol><h2 id="卷三-3">卷三</h2><h3 id="选择题-17">选择题</h3><ol type="1"><li>先求导，然后利用变上限积分等价无穷小来做最快</li><li>导数定义</li><li>根据选项构造辅助函数，然后求二阶导判断正负性</li><li>几何上来看最快，由 <span class="math inline">\(F(x)\)</span> 大于 0，故积分域越大，平均值越大</li><li>看瑕点的阶</li><li>二重积分换序，极值互化</li><li>黑塞矩阵判别式，边界靠多元函数极限来确定 <span class="math inline">\((x \pm y)^2\)</span> 在 <span class="math inline">\((0,0)\)</span> 显然不是极值点，路径 <span class="math inline">\(y=\mp x\)</span></li><li>向量组的问题，B 虽然难证明，但 ACD 容易举反例，我大概说一下我的想法： 如果 <span class="math inline">\(\alpha_1\ne 0\)</span> 则 <span class="math inline">\(\alpha_1\)</span> 至少占掉了 <span class="math inline">\(1\)</span> 维，后 <span class="math inline">\(n-1\)</span> 个向量至多额外占 <span class="math inline">\(m-1\)</span> 维空间 故 <span class="math inline">\(n-1\)</span> 的向量中，对答案有贡献的最多只有 <span class="math inline">\(m-1\)</span> 个向量，又 <span class="math inline">\(n&gt;m\)</span> 考虑极端情况，<span class="math inline">\(n=m+1\)</span> 则必定有一个向量的贡献为 <span class="math inline">\(0\)</span>，因此 <span class="math inline">\(\alpha_1, \cdots, \alpha_n\)</span> 线性相关</li><li>简单题</li><li>想推出 <span class="math inline">\(E-A\)</span> 可逆，等价于推出 <span class="math inline">\((E-A)x=0\)</span> 只有零解 <span class="math inline">\(x^T(E-A)^Tx = x^T(E-A)x \Rightarrow ||x||^2 - x^TAx = ||x||^2 - x^TA^Tx\)</span> 若 <span class="math inline">\(A^T = -A\)</span>，则 <span class="math inline">\(x^TAx = x^TA^Tx = -x^TA^Tx = 0\)</span>，故 <span class="math inline">\(||x||^2 = 0\)</span> 得证只有零解</li></ol><h3 id="填空题-17">填空题</h3><ol type="1"><li>隐函数求偏导</li><li>齐次解还原微分方程，主义虚根是二重根</li><li>物理应用，这里的速度是指沿着AB方向的速度</li><li>模拟题意</li><li>换序凑微分</li><li>解行列式</li></ol><h3 id="解答题-17">解答题</h3><ol type="1"><li>对称性化简，极值互化</li><li>模拟题意，求多元函数偏导，然后解方程</li><li>第一问直接构造辅助函数，利于单调性证明 第二问按照第一问放缩，再定积分定义</li><li>变量可分离型齐次微分方程，直接用等腰三角形建方程即可，答案复杂了</li><li>看似三中值，实际就是双中值问题，给的第三个中值是在提醒你它就是分点 利用积分因子还原，易得显然易见，没什么好说的</li><li>设问方式很怪，实际就是利用相似传递性，对于未知的A，去解已知的B，做到转换研究对象的目的‘</li></ol><blockquote><p>第三套挺简单的，设问有点新，难度系数挺符合今年的</p></blockquote><h1 id="余丙森五套卷">余丙森五套卷</h1><h2 id="卷一-4">卷一</h2><h3 id="选择题-18">选择题</h3><ol type="1"><li>用等价无穷小凑，填选可以试试洛必达（虽然是错误做法，但大多数情况都是对的）</li><li>泰勒展开，高阶导数正负，以及左右变号</li><li>瑕点的阶</li><li>极直互化</li><li>求导，找单调性，然后找到零点，结束</li><li>可去间断点处即是连续也不一定可导：<span class="math inline">\(|x|\)</span></li><li>基本公式，推一下也没问题</li><li>向量组的关系问题，要知道两个线性无关的向量组不能互相表示时，可能占有相同的维度 借助对方其他的维度，是有可能表示出来的，也有可能不能表示出来 不过总体首先是一定存在一方维度超维另一方，因此拼起来秩增加</li><li>题干意思是 <span class="math inline">\(\beta\)</span> 可以由 <span class="math inline">\(A\)</span> 列向量线性表示</li><li>利用特征值找惯性指数</li></ol><h3 id="填空题-18">填空题</h3><ol type="1"><li>倒代还</li><li>对称性化简，然后分子分母约掉</li><li>求偏导数代值</li><li>二重积分换序</li><li>泰勒展开等比级数</li><li><span class="math inline">\((A^{*})^{-1} = |A^{-1}| \cdot (A^{-1})^{-1}\)</span></li></ol><h3 id="解答题-18">解答题</h3><ol type="1"><li>常规题</li><li>模拟题意，然后得出一个微分方程，按少 <span class="math inline">\(y\)</span> 的第一型降阶，然后按变量可分离型做</li><li>有点创新，但不够创新，二重积分，被积函数是一个 <span class="math inline">\(max\)</span> 函数，找到分段点，拆成分段函数后，正常做</li><li>偏导数，模拟题意</li><li>双中值，（专题还没写到）要到的方法是先设出分段点，然后化简结论后，讨论分段点位置</li><li>第一问是一个经典证明，群里给人答疑过一次，是利用方程组问题来求解的 第二问张八李六都考过了，不多解释</li></ol><h2 id="卷二-4">卷二</h2><h3 id="选择题-19">选择题</h3><ol type="1"><li>第一套出过了，求导绘制大致图像，找零点</li><li>区间再现，分离求导变量和积分变量，然后积分就好了</li><li>真题考过了，逆用牛顿莱布尼茨公式</li><li>张八考过，继续对 <span class="math inline">\(f(x,x^2) = x^3e^{-2x}\)</span> 求关于 <span class="math inline">\(x\)</span> 的偏导数，解一个方程即可</li><li>隐函数存在定理：<ol type="1"><li><span class="math inline">\(F\)</span> 在点 <span class="math inline">\((x_0,y_0)\)</span> 某邻域 <span class="math inline">\(D\)</span> 内连续</li><li><span class="math inline">\(F(x_0,y_0) = 0\)</span>（通常称为初始条件）</li><li><span class="math inline">\(F\)</span> 在某邻域 <span class="math inline">\(D\)</span> 内存在连续偏导数 <span class="math inline">\(F_y(x,y)\)</span></li><li><span class="math inline">\(F_y(x_0,y_0) \ne 0\)</span> （一般是验证最后一个条件）</li></ol></li><li>积分再现后并在一起，答案用的负代还： <span class="math display">\[\int_{-1}^1 \frac{x\arctan x}{1+e^x}dx = \dfrac{1}{2}\int_{-1}^1 \frac{(x\arctan x)(1+e^x)}{1+e^x}dx = \int_{-1}^1 x\arctan xdx\]</span></li><li>求导找各个区间上的单调性，然后绘制大致图像，根据极值定义去找点</li><li>向量组线性无关的问题，简单题</li><li>我没有被分块的结论，当场直接求的</li><li>A 选项是正定的定义，不难验证：<span class="math inline">\((\dfrac{\partial f}{\partial x_i}) = 0 \Rightarrow 2Ax = 0\)</span>，<span class="math inline">\((\dfrac{\partial^2 f}{\partial x_i \partial x_j})= 0 \Rightarrow 2Ax = 0\)</span> D 选项考的是正定矩阵 合同于 单位矩阵，正确表述应把 <strong>秩一分解</strong> 换成 <strong>合同分解</strong></li></ol><h3 id="填空题-19">填空题</h3><ol type="1"><li>张八还是李林出过了，放缩然后定积分定义： <span class="math display">\[1 \leftarrow \dfrac{n^2}{n^2+n} \cdot \dfrac{1}{n} \sum_{k=1}^n \dfrac{k}{n} e^{\frac{k}{n}} \le \sum_{k=1}^n \dfrac{k}{n^2 + k} e^{\frac{k}{n}} \le \dfrac{1}{n}\sum_{k=1}^n \dfrac{k}{n} e^{\frac{k}{n}} \rightarrow 1\]</span></li><li>求导代值，求导的时候就可以发现左边不求的项代值后为零，从而直接略过运算后面的复杂求导</li><li>二阶常系数齐次微分方程利用特解形式求出齐次形式下的参数，然后反解出特解的参数</li><li>参数方程表面积，套弧微分公式就好了</li><li>极限比较复杂，可以适当分解假分数后，拆极限来算 <span class="math display">\[\begin{aligned}\lim_{x\to\infty}(\dfrac{x^2+1}{x+1}e^{\frac{1}{x-1}} - x) &amp;= \lim_{x\to\infty}(xe^{\frac{1}{x-1}} - \dfrac{x-1}{x+1}e^{\frac{1}{x-1}} - x) \\\\&amp;=\lim_{x\to\infty}x(e^{\frac{1}{x-1}} - 1) - \lim_{x\to\infty}\dfrac{x-1}{x+1}e^{\frac{1}{x-1}}\\\\&amp;= \lim_{x\to\infty}\dfrac{x}{x-1} - \lim_{x\to\infty}\dfrac{x-1}{x+1}\\\\ &amp;= 1 - 1 = 0\end{aligned}\]</span></li><li>利用相似传递性转移研究对象：<span class="math inline">\(P^{-1} (A - E) P = B \Rightarrow P^{-1}AP = B + E \Rightarrow A \sim B + E\)</span> 有：<span class="math inline">\(|A| = |B + E|\)</span></li></ol><h3 id="解答题-19">解答题</h3><ol type="1"><li>隐函数连续求导，极限用洛必达</li><li>多元函数最值，先找区域内的驻点，在找边缘上的极值 因为有三条曲线的约束，关于 <span class="math inline">\(x=0\)</span> 的可以直接令 <span class="math inline">\(x=0\)</span> 然后在线上找 对于 <span class="math inline">\(x^2 + y^2 = 16\)</span> 也可以直接令，然后在线上找 从而化为多个一元函数极值问题求解</li><li>简单题，通过 <span class="math inline">\(sgn\)</span> 函数对积分域分段，然后分别利用对称性化简</li><li>考可微定义：<span class="math inline">\(\lim\limits_{(x_0,y_0)\to(0,0)} [f(x,y) - A(x-0) - B(y-0) - f(0,0)] = o(\sqrt{x^2 + y^2})\)</span></li><li>求导找单调性，第二问利用第一问的结论判别单调性</li><li><span class="math inline">\(A \simeq B \Rightarrow A\)</span> 的零惯性指数为 <span class="math inline">\(2 \Rightarrow A\)</span> 有二重特征值 <span class="math inline">\(0 \Rightarrow |A| = 0\)</span> 且 <span class="math inline">\(r(A) = 1\)</span> 第二问太常规了：<span class="math inline">\(P^TA^2P = P^TAP \cdot P^TAP = \Lambda^2\)</span></li></ol><h2 id="卷三-4">卷三</h2><h3 id="选择题-20">选择题</h3><ol type="1"><li>极限求参数，可以直接倒代换</li><li>渐近线求极限，分别是水平渐近线/铅锤渐近线/斜渐近线，注意 <span class="math inline">\(e^x\)</span> 趋于无穷的极限不一样</li><li>正常做泰勒展开，选择题可以洛必达，虽然是错误做法，但一般都是对的</li><li>变上限积分函数等价无穷小</li><li>做差比大小，求导判单调性</li><li>通过通解形式反求微分方程，求出齐次后，对通解求导带入求出右侧形式即可</li><li>对条件处理出 <span class="math inline">\(f(x)\)</span> 然后代入右边</li><li>秩相等的同解问题</li><li>合同变换是可逆变换</li><li><span class="math inline">\(r(A) = r(A^T) = r(AA^T) = r(A^TA)\)</span></li></ol><h3 id="填空题-20">填空题</h3><ol type="1"><li>反函数求导：<span class="math inline">\(\dfrac{d^2x}{dy^2} = -\dfrac{y&#39;&#39;}{y&#39;^3}\)</span></li><li>一元函数可微定义：<span class="math inline">\(\Delta y = A \Delta x + o(\Delta x)\)</span>，其中 <span class="math inline">\(A = \dfrac{dy}{dx}\)</span></li><li>任意点的高阶导数处理方法：1.找规律，2.莱布尼茨公式 本题用莱布尼茨公式</li><li>通过通解反求微分方程</li><li>简单的定积分，答案用的求和法把积分拆开，然后凑定积分定义，赞 <span class="math display">\[I = \sum_{k=1}^{n}\int_{k-1}^k \frac{x}{n^2+x}dx = \sum_{k=1}^{n}\frac{\xi_k}{n^2+\xi_k}dx\]</span> 常见的放缩形式： <span class="math display">\[\frac{1}{2} \leftarrow \frac{n^2}{n^2 + n} \cdot \frac{1}{n} \sum_{k=1}^{n}\frac{\xi_k}{n} \le\sum_{k=1}^{n}\frac{\xi_k}{n^2+\xi_k} \le\frac{1}{n} \sum_{k=1}^{n}\frac{\xi_k}{n} \rightarrow \int_0^1 xdx = \frac{1}{2}\]</span></li><li>同解问题：<span class="math inline">\(r(A) = r\begin{pmatrix}A\\\\B\end{pmatrix} = r(B)\)</span></li></ol><h3 id="解答题-20">解答题</h3><ol type="1"><li><p>参数方程求导，好屑的计算题</p></li><li><p>模拟题意，建立微分方程，少 <span class="math inline">\(x\)</span> 的第二型降阶求解，最后要化简（真题考过）</p></li><li><p>前天的每日一题</p></li><li><p>张八还是李六考过了，大圆套小圆，割补法</p></li><li><p>第一问单调性，第二问是直接求，没法找出递推关系用单调有界准则，第三问简单 <span class="math display">\[\begin{aligned}e^{x_n} + x_n^{2n+1} &amp;= 0 \\\\x_n^{2n+1} &amp;= -e^{x_n} \\\\x_n &amp;= -e^{\frac{x_n}{2n+1}} \\\\\end{aligned}\]</span> 由于 <span class="math inline">\(x_n\)</span> 有界，故 <span class="math inline">\(\lim\limits_{n\to\infty}x_n = -\lim\limits_{n\to\infty}e^{\frac{x_n}{2n+1}} = -e^0 = -1\)</span></p></li><li><p>常规题，表达式不唯一说明列向量线性相关，所以行列式为 0，然后利用非齐次有解筛掉错误答案 第二问求 A 的正交变换</p></li></ol><h2 id="卷四-3">卷四</h2><h3 id="选择题-21">选择题</h3><ol type="1"><li><span class="math inline">\(\epsilon - N\)</span> 定义</li><li>简单题，重点在于要有一个无穷小量低消 <span class="math inline">\(\sin x\)</span> 的振荡，才会形成可去间断点，否则就是震荡间断点</li><li>利用瑕点收敛的阶可以确定参数 <span class="math inline">\(a=b\)</span>，然后解一个不定积分即可 <span class="math display">\[\int\dfrac{b}{2x^2+bx}dx = \int \dfrac{b+2x-2x}{x(2x+b)} dx = \int (\frac{1}{x} - \frac{2}{2x+b}) dx\]</span></li><li>全微分存在，说明二阶偏导数连续，建立等式消元即可</li><li>均值不等式放缩： <span class="math inline">\(0\le 2xy \le x^2 + y^2 \le 1 \Rightarrow 0 \le \pi xy \le \dfrac{1}{2}\pi\)</span> <span class="math inline">\(0\le 2\sqrt{xy} \le x + y \le 1 \Rightarrow 0 \le \pi xy \le \dfrac{\sqrt{2}}{2}\pi\)</span></li><li>按照定义去做就好了</li><li>齐次解形式确定出齐次线性微分方程，然后利用特解代入求出非齐次线性微分方程</li><li>简单题</li><li>列分块，真题考过了</li><li>特征重根的特征向量可以利用基础解系任意给出，但不能带上其他特征根的特征向量（超维行为）</li></ol><h3 id="填空题-21">填空题</h3><ol type="1"><li>求导，求极限，可以先把对数拆开再求导</li><li>先分离求导变量和积分变量，先确定初值，然后求导，再解微分方程，再代入求导前确定的初值</li><li>弧微分，可以直接用心形线的参数方程来求</li><li>答案用的有理函数分解做的，也可以直接拆项： <span class="math display">\[\int \dfrac{1 + x - x}{x^2(1+x)} dx = \int (\dfrac{1}{x^2} - \dfrac{1 + x - x}{x(1+x)}) dx = \int (\dfrac{1}{x^2} - \dfrac{1}{x} + \dfrac{1}{1 + x}) dx\]</span></li><li>极值互化，转直角坐标的参数方程（参数是极坐标下的 <span class="math inline">\(\theta\)</span>），然后就是参数方程求导问题</li><li>按最后一列展开，可以直接获得递推式，然后求一个等差数列即可</li></ol><h3 id="解答题-21">解答题</h3><ol type="1"><li>常规题，泰勒展开，（大题不能洛必达） 可以直接背出这个展开：<span class="math inline">\((1+x)^{\frac{1}{x}} = e - \dfrac{e}{2}x + \dfrac{11e}{24}x^2 + o(x^2)\)</span></li><li>依稀记得李六第一套出过了，不过这题比较简单，直接分区间拆绝对值，然后求导代值，很常规</li><li>真题考过原题，答案都一摸一样（这题要求 <span class="math inline">\(a &gt; 0\)</span>，所以最后两个答案要二选一，真题是两个都保留）</li><li>轮换对成性化简，然后极值互化，计算量不大</li><li>用万能构造法易得辅助函数：<span class="math inline">\(F(x) = e^{\frac{-x}{b-a}}[f(x) - f(a)]\)</span> 有初值：<span class="math inline">\(F(a) = 0\)</span>，需要找到另外一个零点，即可 Rolle 出答案，但是本题只给了 <span class="math inline">\(f&#39;(c) = 0\)</span> 根据之前写的【专题】中值定理证明题，除了罗尔，还有一个费马引理可以处理这个问题 若 <span class="math inline">\(f(c) = f(a)\)</span> 秒杀 讨论 <span class="math inline">\(f(c) \ne f(a)\)</span> 不妨设 <span class="math inline">\(f(c) &gt; f(a)\)</span>，易得 <span class="math inline">\(F&#39;(c) &lt; 0\)</span>，故极大值在 <span class="math inline">\((a,c)\)</span> 内部取到 有 <span class="math inline">\(F&#39;(\xi) = 0\)</span></li><li>第一问如果直接莽上去也可以算，因为他给的矩阵太具体了 正常做法应该是列分块凑特征值定义 第二问，出题人还是想考特征值定义 因为 <span class="math inline">\(r(\alpha_1,\alpha_2,\alpha_3) = 3\)</span>，则可以写出线性表示： <span class="math inline">\(\beta = k_1\alpha_1 + k_2\alpha_2 + k_3\alpha_3\)</span>，有： <span class="math display">\[A^{2022}\beta = k_1A\alpha_1 + k_2A\alpha_2 + k_3A\alpha_3 = k_1\alpha_1 + k_2\alpha_2 + 2^{2022}k_3\alpha_3\]</span> 于是有等式：<span class="math inline">\(k_1\alpha_1 + k_2\alpha_2 + 2^{2022}k_3\alpha_3 = k_1\alpha_1 + k_2\alpha_2 + k_3\alpha_3\)</span>，易得 <span class="math inline">\(k_3 = 0\)</span> 然后就很简单了，利用 <span class="math inline">\(\alpha_1\)</span> 和 <span class="math inline">\(\alpha_2\)</span> 线性表示出 <span class="math inline">\(\beta\)</span> 即可</li></ol><h2 id="卷五-2">卷五</h2><h3 id="选择题-22">选择题</h3><ol type="1"><li>由于极限存在，故 <span class="math inline">\(f(0) = f&#39;(0) = 0\)</span>，故可凑导数定义： <span class="math display">\[\lim_{x\to0}\dfrac{f(x) + f&#39;(x)}{x} = \lim_{x\to0}\dfrac{f(x) - f(0)}{x} + \lim_{x\to0}\dfrac{f&#39;(x) - f&#39;(0)}{x} = f&#39;(0) + f&#39;&#39;(0) = 2\]</span></li><li><span class="math inline">\(\displaystyle\int_a^x\)</span> 奇函数 <span class="math inline">\(dx\)</span> = 偶函数，<span class="math inline">\(\displaystyle\int_0^x\)</span> 偶函数 <span class="math inline">\(dx\)</span> = 奇函数 <span class="math inline">\((\)</span> 奇函数 $)' = $ 偶函数，<span class="math inline">\((\)</span> 偶函数 $)' = $ 奇函数</li><li>可以从几何上直接看出来，严谨数学证明用组合积分思想： <span class="math display">\[\begin{aligned}I - J &amp;= \int_0^{\frac{\pi}{2}}\dfrac{\cos x - \sin x}{1+x^2}dx = \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx + \int_{\frac{\pi}{4}}^{\frac{\pi}{2}}\dfrac{\cos x - \sin x}{1+x^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx + \int_{\frac{\pi}{4}}^0 \dfrac{\sin x - \cos x}{1+(\dfrac{\pi}{2} - x)^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}}\dfrac{\cos x - \sin x}{1+x^2}dx +\int_0^{\frac{\pi}{4}} \dfrac{\cos x - \sin x}{1+(\dfrac{\pi}{2} - x)^2}dx\\\\&amp;= \int_0^{\frac{\pi}{4}} (\cos x - \sin x) \cdot (\dfrac{1}{1+x^2}-\dfrac{1}{1+(\dfrac{\pi}{2} - x)^2})dx &gt; 0\end{aligned}\]</span></li><li>区间再现，然后求两次导，判单调性和凹凸性，简单题</li><li>选择题可以直接特值法 <span class="math inline">\(f(x) = x\)</span>，严谨证明用到了微分中值的二次构造思想： <span class="math inline">\(\xi f&#39;(\eta) = f(\xi) - f(0) \Rightarrow \xi = \dfrac{f(\xi) - f(0)}{f&#39;(\eta)}\)</span> <span class="math display">\[\begin{aligned}\lim_{x\to0} \dfrac{\xi}{x} = \lim_{x\to0} \dfrac{f(\xi)-f(0)}{xf&#39;(\eta)} &amp;= f&#39;^{-1}(0)\lim_{x\to0} \dfrac{\displaystyle\int_0^xf(x)dx-xf(0)}{x^2}\\\\&amp;= f&#39;^{-1}(0)\lim_{x\to0} \dfrac{f(x)-f(0)}{2x} = \dfrac{1}{2}\end{aligned}\]</span></li><li>利用非齐次特解形式，求出齐次方程，然后带入特解解出非齐次方程</li><li>连续好判断，但是这题用考研范围内的数学极限，判断不了函数是否可微 可以转换思想，直接去看他的偏导数是否连续，一个条件强弱的常识： 偏导数连续 &gt; 可微 &gt; (偏导数存在 &amp;&amp; 函数连续)</li><li>简单题，利用相似对角理论秒杀</li><li>右乘行满秩不改变矩阵的秩：<span class="math inline">\(r(A) = r(AB) = 3 = 4 - 1\)</span>，然后易得：<span class="math inline">\(r((AB)^{*}) = 1\)</span></li><li>给出的两个向量线性无关，有：<span class="math inline">\(A = 2E + \alpha\beta^T \Rightarrow A\alpha = -\alpha\)</span> 以及：<span class="math inline">\(r(A-2E) = r(\alpha\beta^T) = 1\)</span>，故有特征根：<span class="math inline">\(\lambda = 2\)</span> (二重)，<span class="math inline">\(-1\)</span> (一重)</li></ol><h3 id="填空题-22">填空题</h3><ol type="1"><li>简单题</li><li>求偏导，简单题</li><li>套形心坐标公式，简单题</li><li>求偏积分，然后解参数，简单题</li><li>直接对方程两侧求积分，对于 <span class="math inline">\(y&#39;&#39;\)</span> 项的处理用分布还原： <span class="math display">\[\begin{aligned}\int_0^1 x(x-1)y&#39;&#39; dx &amp;= \int_0^1 x(x-1) dy&#39; = 0-\int_0^1 y&#39;(2x-1)dx \\\\&amp;= -\int_0^1 (2x-1)dy = -0+2\int_0^1ydx \\\\\end{aligned}\]</span> 隐约记得，真题考过一年，不过是考二重积分的形式，但做法类似，也是通过连续分布积分凑 李六最后一套好像也考过了</li><li>特征多项式问题，简单题</li></ol><h3 id="解答题-22">解答题</h3><ol type="1"><li>答案用求导找的极值，更快速的方法是直接用均值不等式： <span class="math display">\[\dfrac{1}{4a} + \dfrac{a}{2} - \dfrac{2}{3} \ge 2\sqrt{\dfrac{1}{2}} - \dfrac{2}{3}\]</span></li><li>无条件极值加隐函数，求偏导找驻点，凑黑塞矩阵判别式，常规题</li><li>真题考过一年，李六第三张还是第四张也考过了 用已知条件先化简，然后解二阶非齐次线性微分方程，留数法和微分算子都可</li><li>考了万有引力，本物理渣挂掉了，这题还要额外受力分析 由于对称，在竖直方向上的分力被抵消了，只需计算水平方向上的合力即可</li><li>超简单的柯西中值定理和超简单的放缩</li><li>第一问易得，第二问常规，第三问真题考过 用了正交变换的保向量模长相等的性质，转换研究对象 对于这个做法，我在 <strong>【专题】多元函数极值问题</strong> 中进行了详解 把该做法，拓展到了一般二次型的多元函数问题，有兴趣的可以看一看</li></ol><h1 id="张宇八套卷高分版">张宇八套卷高分版</h1><h2 id="卷一-5">卷一</h2><h3 id="选择题-23">选择题</h3><ol type="1"><li>利用函数的性质的定义去做就好了，他是一个偶函数，不是奇函数</li><li>连续/可导，两个方程两个未知数</li><li>千万不要去解微分方程，考虑利用极值定义去算即可，他都说了 <span class="math inline">\(x_0\)</span> 是驻点了</li><li>分母是立方差的因式，考虑换元立方差，然后利用等比级数展开即可</li><li>隐函数求偏导</li><li>全微分，利用二阶偏导数连续的性质 <span class="math inline">\(f_{xy}=f_{yx}\)</span></li><li>二重积分换序</li><li>利用按列展开的定义，构造新的行列式，再计算该行列式</li><li>没看懂答案要干嘛，我说一下我的想法，<span class="math inline">\(A^m = 0\)</span> 易知 <span class="math inline">\(A\)</span> 只有唯一特征值 <span class="math inline">\(0\)</span>，故 <span class="math inline">\(tr(A) = 0\)</span> 这一步并没有用相似理论（A也不能相似对角化），用的是秩一矩阵的性质</li><li><span class="math inline">\(A\)</span> 可以对角化，故 <span class="math inline">\(r(A-2E)=1\)</span></li></ol><h3 id="填空题-23">填空题</h3><ol type="1"><li>求导，分段点导数定义</li><li>求导，按照拐点定义令为 0</li><li>不定积分，老朋友了，按照立方和公式展开，然后添项减项再拆，再凑微分</li><li>链式求导法则</li><li>同解问题，三种方法，我用的是求一个代一个</li><li>送分题</li></ol><h3 id="解答题-23">解答题</h3><ol type="1"><li>定积分定义</li><li>没搞出来，做的时候读假题了，题目转的是切线和曲线围成的部分，以为是多元条件极值，直接莽上去了 答案给的方法非常巧妙。欲求围成的面积最小，又因为切线在曲线下方，曲线又是恒定的 故等价于让切线扣掉的体积尽可能大，这样就转化了研究对象，题目难度大大化简</li><li>物理应用，秒杀难度，计算量也不大</li><li>多元函数链式求导，也不难</li><li>这题的微分方程还是比较复杂的，是二阶变系数，既可以当做少 <span class="math inline">\(x\)</span> 的第一型做，也可以当作少 <span class="math inline">\(y\)</span> 的第二型做 复杂在他算的每一步都不太像是正确答案</li><li>李林卷出过一道原题，不过李林那个没出好，直接令就能令出来 张宇这里就要老老实实做了，不过他引导了第一第二问，又把难度给降下来了，只能说二位出题人平分秋色吧 <del>（不会出题可以不出的呀）</del></li></ol><h2 id="卷二-5">卷二</h2><h3 id="选择题-24">选择题</h3><ol type="1"><li>极值和拐点的定义</li><li>常见分段函数，分段讨论即可</li><li>含参数不等式，把参数单独放到不等式一边，研究另一侧函数性态</li><li>答案很复杂，说说我的做法，不难看出高阶导数相邻阶存在递推关系，利用递推关系建立等差数列递推即可</li><li>李林六套卷出过类似的，把定积分设为常数，放到另一遍，然后两侧积分</li><li>多元函数线性变换的链式求导问题，模拟题意即可</li><li>利用通解还原齐次微分方程，从特征方程出发，乘开即可</li><li>求行列式问题，行和相等，全部加到第一列即可；也可以处理成爪型行列式做</li><li>送分题</li><li>送分题</li></ol><h3 id="填空题-24">填空题</h3><ol type="1"><li>极限小题，被积函数等价无穷小解定积分，也可以洛必达</li><li>拆成两部分来看，右边用求导后奇偶互换来做</li><li>被积函数含 <span class="math inline">\(x\)</span> 考虑还原，然后就很简单了</li><li>对着答案算还会错的题目，出得不行（大汉黄豆）</li><li><span class="math inline">\(\Lambda^2 \rightarrow \Lambda\)</span> 的过程，李林考过，屑题计算量</li></ol><h3 id="解答题-24">解答题</h3><ol type="1"><li>极限小题</li><li>定积分，比较常规，上来可以用 <span class="math inline">\(\sin x\)</span> 关于 <span class="math inline">\(x = \dfrac{\pi}{2}\)</span> 对称，直接削掉一半积分限 室友这一步用的换元，换元换到关于 <span class="math inline">\(x=0\)</span> 的对称区域上，这也是不错的思路 然后就可以把 <span class="math inline">\(\sin x\)</span> 换元成 <span class="math inline">\(u\)</span> 解一个有理函数定积分，根式换元后，可以凑微分分部积分（最快） 也可以三角换元</li><li>关于 <span class="math inline">\(y=-x\)</span> 对称的两个变量必有 <span class="math inline">\(x+y=0\)</span> 的解，简单的多元极值问题</li><li>第一问凑微分，第二问原函数比较难找，这里用万能构造法要寄，需要按照 <span class="math inline">\(g(x)\)</span> 的标准找原函数 考虑乘以他的分母搞出来</li><li>二重积分，极直互化，然后轮换对称性削掉一部分，积分另一部分即可</li><li>答案的构造想不到也看不懂，说一下我的做法，用到了很多秩一矩阵的性质 若 <span class="math inline">\(A = \alpha\alpha^T\)</span>，则有 <span class="math inline">\(A^n = tr(A)^{n-1}A = (\alpha^T\alpha)^{n-1}A = A\)</span> <span class="math inline">\(A^n = A\)</span> 在数学上称为幂等矩阵。<span class="math inline">\(1-x^{n+1} = (1-x)(1+x+\cdots+x^n)\)</span> 然后这题给的等式，刚好可以按照幂差还原：<span class="math inline">\(AB-B=A-E\)</span> 然后就有了两个方程：<span class="math inline">\(\begin{cases} AB = (n+1)A\\\\ B = E + nA \end{cases}\)</span>，目的是凑出 <span class="math inline">\(B C = E\)</span> 的形式 考虑一式方程两侧乘以<span class="math inline">\(\dfrac{(n+1)}{n}\)</span>，有 <span class="math inline">\(\dfrac{n+1}{n}AB = nA\)</span> 然后和二式相减：<span class="math inline">\((E - \dfrac{n}{n+1}A)B = E\)</span> 于是 <span class="math inline">\(B\)</span> 可逆和 <span class="math inline">\(B\)</span> 的逆矩阵就都有了 第二问，就是转化研究对象：<span class="math inline">\(|B-3E| = |nA-2E|\)</span> 再利用相似对角化理论搞出来 （<span class="math inline">\(tr(A)\ne0\)</span>，则 <span class="math inline">\(A\)</span> 一定相似，这是秩一矩阵性质，读者自证不难）</li></ol><h2 id="卷三-5">卷三</h2><h3 id="选择题-25">选择题</h3><ol type="1"><li>选择题，洛一洛更快（虽然是错的做法）</li><li>简单题，比较在瑕点的阶</li><li>用罗尔原话转换研究对象</li><li>考的是一个泰勒展开，最后化为求极限</li><li>选项有问题呀，选A为什么不可以选B？ 做法肯定是先分布积分，利用二阶导数小于零提供的单调性来判正负</li><li>可微定义式</li><li>对称性消掉一个，再做一个二重积分</li><li>做一个可逆变换，利用合同变换和惯性定理出结论</li><li>简单题</li><li>简单题</li></ol><h3 id="填空题-25">填空题</h3><ol type="1"><li>没法用齐次解直接求出，考虑设出微分方程，然后把三个解代入求参</li><li>洛必达求极限，隐函数求导</li><li>隐函数求导</li><li>多元函数求偏积分</li><li>上一套和过关版都出过，利用变上限积分凑微分</li><li>实对称阵不同特征值的特征向量正交</li></ol><h3 id="解答题-25">解答题</h3><ol type="1"><li>幂指函数求极限</li><li>方程两侧不停求导代入</li><li>多元函数极限，惭愧，做这一题之前，我甚至不知道椭圆面积是 <span class="math inline">\(a^2b^2\)</span> 目标函数是多项积，约束条件是多项平方和，可以凑均值不等式放缩，避免拉格朗日数乘法 <span class="math display">\[a^2b^2 = a^2 + b^4 = \dfrac{1}{2}a^2 + \dfrac{1}{2}a^2 + b^4 \ge 3\sqrt[3]{\dfrac{1}{2}a^2b^2}\]</span></li><li>二重积分，极直互化</li><li>微分方程部分很简单，求面积极值就比较痛苦</li><li>常规题，不等式那一问用正交变换转换研究对象</li></ol><h2 id="卷四-4">卷四</h2><h3 id="选择题-26">选择题</h3><ol type="1"><li>幂指函数求极限</li><li>罗尔定理的应用</li><li>用一下区间再现后积分再现</li><li>瑕点处的阶</li><li>比较综合的一道题，连续性后导数定义</li><li>积不出来的，实际考的是积分比大小</li><li>二重积分换序</li><li>左乘列满秩，右乘行满秩不改变矩阵的秩 第二个命题直接反例 <span class="math inline">\(s = 1\)</span></li><li>凑特征值定义的题</li><li>利用基础解系反向构造系数矩阵</li></ol><h3 id="填空题-26">填空题</h3><ol type="1"><li>极限，倒代换</li><li>参数方程求导</li><li>区间再现</li><li>高阶导数，注意不是一点处的高阶导数，需要推导，不能直接展开</li><li>偏积分，多元函数求偏导</li><li>已知特征值反向构造问题，步骤里有一些窍门，可以完全避免求逆，运算超快，不太容易文字讲解，是一个凯哥讲过的方法</li></ol><h3 id="解答题-26">解答题</h3><ol type="1"><li>多元函数极值，可以用齐次性化简</li><li>分离参数，求单调性问题</li><li>定积分几何应用，不难</li><li>中值可分离性问题，可以用柯西中值定理，第二问简单的求极限</li><li>二重积分，简单的割补法</li><li>真题考过了，简单题</li></ol><h2 id="卷五-3">卷五</h2><h3 id="选择题-27">选择题</h3><ol type="1"><li>瑕点比阶</li><li>求极限</li><li>积分比大小，上下限相同，可以比较被积函数大小，做差</li><li>分离参数，求导绘制函数图像</li><li>减号处拆开，泰勒展开</li><li>洛必达</li><li>变上限积分的被积函数不连续，则变上限积分在这一点不可导</li><li>右乘行满秩矩阵，不改变自身的秩</li><li>凑特征值与特征向量的定义</li><li>相似的必要条件，以及合同对角化问题</li></ol><h3 id="填空题-27">填空题</h3><ol type="1"><li>隐函数，参数方程，求导</li><li>变量可分离型微分方程</li><li>注意是求面积，不是求周长 <span class="math inline">\(S = \frac{1}{2}\theta r^2\)</span></li><li>可微定义</li><li>二重积分，对称性化简积分区间，然后换序</li><li>按列展开定理反向构造行列式</li></ol><h3 id="解答题-27">解答题</h3><ol type="1"><li>李林出过，幂指函数求极限取指对数，然后定积分定义</li><li>李林出过，分区间拆开，求导后利用偶函数性质化简</li><li>李林出过，表达式可以用辅助角公式化简，这样第二问可以直接点火公式</li><li>多元函数偏导变换问题，俗称模拟题</li><li>二重积分，可以逆用形心坐标公式化简计算 <span class="math inline">\(y\)</span> 的部分</li><li>利用相似的传递性，转换研究对象，简单题</li></ol><h2 id="卷六-1">卷六</h2><h3 id="选择题-28">选择题</h3><ol type="1"><li>简单题</li><li>常用的有限项放缩法</li><li>求导判断单调性，绘制大致函数图像</li><li>简单题</li><li>简单题</li><li>求偏导，换元，解微分方程</li><li>积分比大小，直接比较被积函数即可，做差法</li><li>矩阵等价：有限次初等行列变换； 矩阵相似：<span class="math inline">\(\exists\)</span> 可逆矩阵 <span class="math inline">\(Q\)</span>, s.t. <span class="math inline">\(Q^{-1}AQ = B\)</span> 矩阵合同：<span class="math inline">\(\exists\)</span> 可逆矩阵 <span class="math inline">\(Q\)</span>, s.t. <span class="math inline">\(Q^{T}AQ = B\)</span></li><li>二次型正定的必要条件：顺序主子式都大于零</li><li>简单题</li></ol><h3 id="填空题-28">填空题</h3><ol type="1"><li>简单题</li><li>换序</li><li>不定积分，先对分母处理，把整个分式化成倒三角，然后按住后面不动，对前面凑微分分部积分，即可把后面抵消</li><li>二重积分定义</li><li>求偏导，把 <span class="math inline">\(f_y\)</span> 视作 <span class="math inline">\(f_2\)</span> 就能看懂了</li><li>简单题</li></ol><h3 id="解答题-28">解答题</h3><ol type="1"><li>真题考过了</li><li>把参数方程和微分方程结合起来考了，出得还不错，最后是解不定积分</li><li>几何应用 + 物理应用，求变化率的问题，注意抛物线要设对</li><li>微分不等式，做差，找初值，判单调性</li><li>二重积分，对称性化简积分区域，拆积分区域去绝对值，常规题</li><li>利用对角阵反向构造原矩阵，简单题</li></ol><h2 id="卷七">卷七</h2><h3 id="选择题-29">选择题</h3><ol type="1"><li>简单题</li><li>11月21号每日一题</li><li>简单题</li><li>简单题</li><li>通解形式反向构造</li><li>简单题</li><li>简单题</li><li>简单题</li><li>简单题</li><li>简单题</li></ol><h3 id="填空题-29">填空题</h3><ol type="1"><li>简单题</li><li>错题❌，题目应该把积分下限提到1，否则式子是错误的 做法是，求两次导，利用平方差裂项，然后分别求高阶导</li><li>简单题</li><li>简单题</li><li>题目忽悠人，实际也是简单题</li><li>利用余子式反向构造</li></ol><h3 id="解答题-29">解答题</h3><ol type="1"><li>微分方程 + 不定积分</li><li>简单题</li><li>外摆线求体积和表面积</li><li>双中值问题，用拉格朗日中值定理</li><li>二重积分，对称性化简，然后直接积</li><li>简单题</li></ol><h2 id="卷八">卷八</h2><h3 id="选择题-30">选择题</h3><ol type="1"><li>简单题</li><li>简单题</li><li>两个零点</li><li>简单题</li><li><span class="math inline">\(I_1\)</span> 放缩出来求</li><li>二重积分，对称性</li><li>变量可分离型微分方程</li><li>若 <span class="math inline">\(A\)</span> 可逆，则 <span class="math inline">\(A\)</span> 可以只通过初等行/列变换之一，化成单位矩阵形式</li><li>简单题</li><li>简单题</li></ol><h3 id="填空题-30">填空题</h3><ol type="1"><li>参数方程求导</li><li>隐函数求导</li><li>一点处的高阶导数考虑泰勒展开</li><li>多元函数求偏导</li><li>二重积分，对称性</li><li>凑特征值定义</li></ol><h3 id="解答题-30">解答题</h3><ol type="1"><li>积分化归成数列，利用递推关系式求解</li><li>不等式很好证明，第二问放缩定积分定义</li><li>克拉默法则</li><li>二重积分，真题考过了原题</li><li>凯哥选填课上讲过的，利用推广的洛必达法则</li><li>没算完，不想算，没意思 和相似类似的做法，不过合同要一直合同到标准型，然后再弄回去，真没意思，纯算</li></ol><h1 id="公共数学二-真题模拟">公共数学二 真题模拟</h1><table><colgroup><col style="width: 5%" /><col style="width: 6%" /><col style="width: 6%" /><col style="width: 81%" /></colgroup><thead><tr class="header"><th>year</th><th>score</th><th>date</th><th>about</th></tr></thead><tbody><tr class="odd"><td>2005</td><td>135</td><td>10/20</td><td>第18题微分方程不会，要先转化参数方程<br/>最后一题线性代数，直接分类讨论乱搞就好了</td></tr><tr class="even"><td>2006</td><td>143</td><td>10/21</td><td>变上限积分函数的连续性与被积函数的连续性之间的关系<br/>第12题是一个拉格朗日数乘法解方程问题</td></tr><tr class="odd"><td>2007</td><td>123</td><td>10/22</td><td>变上限积分表示一段面积的时候不要想当然<br/>偏导数连续，意味着什么要搞清楚<br/>非齐次微分方程的通解要加上齐次解！！<br/>第19题微分方程没做出来，有时要颠倒求解<br/><strong>好好反思</strong></td></tr><tr class="even"><td>2008</td><td>133</td><td>10/23</td><td>{<span class="math inline">\(f(x_n)\)</span>}表示函数 <span class="math inline">\(f(x)\)</span> 的生成数列<br/>第一次错线代题，用到了 <strong>克拉默法则</strong><br/>拐点是 <strong>二阶导数为0</strong> 或 <strong>不存在</strong> 的点<br/><strong>好好反思</strong></td></tr><tr class="odd"><td>2009</td><td>146</td><td>10/24</td><td>这套填选全对，大题都是做对的，但是每个大题的最后一小步都会出错<br/><strong>好好反思</strong></td></tr><tr class="even"><td>2010</td><td>144</td><td>10/25</td><td>物理应用 <strong>对称区间</strong>，算完积分，要记得对称过去乘2<br/>填选最后一题过于简单，导致提公因式提错了2333，细节问题</td></tr><tr class="odd"><td>2011</td><td>136</td><td>10/26</td><td>物理应用不会（弱项，之前准备数一，就没认真写过物理应用题目<br/>多元函数无条件极值，<strong>黑赛矩阵行列式</strong> <strong>大于零取极值</strong><br />（<span class="math inline">\(z_{xx}&lt;0\)</span>极大，反之极小）<br/><strong>黑赛矩阵行列式</strong> <strong>等于零无法判别</strong>（用极值的定义，求二元极限）<br /><strong>黑赛矩阵行列式</strong> <strong>小于零不是极值点</strong></td></tr><tr class="even"><td>2012</td><td>136</td><td>10/27</td><td>选择题第二题算对了，选错了<br/>选择题第三题，没看到是正项级数，选了非充分非必要<br/>定积分的几何应用，没看到第一问，只做了第二问</td></tr><tr class="odd"><td>2013</td><td>132</td><td>10/28</td><td>选择题错了三道，前两个错误是计算错误<br /><span class="math inline">\(AB=C\)</span> 是从 <span class="math inline">\(A,C\)</span> 列分块来看的一个关于 <span class="math inline">\(B\)</span> 的可逆变化<br />这一套的 <strong>条件极值</strong> 不是给人做的，<strong>二次多项式</strong> 的可以用到 <strong>三角换元</strong>、<strong>不等式放缩</strong>、<strong>二次型</strong> 化简来做，但 <strong>三次</strong> 只能用 <strong>拉格朗日数乘法</strong><br />不过有个小问题，就是<strong>拉格朗日数乘法</strong>求解的是 <strong>约束条件的边界上的极值</strong><br />因此最后求 <strong>最值</strong> 的时候，还是要考虑约束条件边界上，取值的边界情况</td></tr><tr class="even"><td>2014</td><td>122</td><td>10/29</td><td>选择题第5题是一个很神奇的反求过程，不会<br />数列第20题是一个<strong>迭代递推数列</strong>，居然是直接<strong>归纳法</strong>写出的通项，没想到<br />其他都是计算错误：<br />分数通分错误、微分方程求完没代初值错误、二重积分约分约错错误<br />感觉今天状态不是很好 T_T</td></tr><tr class="odd"><td>2015</td><td>144</td><td>10/30</td><td>好好睡了一觉调整了一下状态，外加简单年，勉强及格<br />错了一道微分方程填空题，答案算对的，誊到答案纸上写错了<br />线代第一问最后一个矩阵算错了<br />要手算三次矩阵乘法和一次求逆矩阵的过程<br />这种题就应该编程来实现，哪有让人手算的。。。</td></tr><tr class="even"><td>2016</td><td>136</td><td>10/31</td><td>第11题没看到两个解，直接当成二阶微分方程做了，实际上是一阶<br />第13题注意这个 <span class="math inline">\(L\)</span> 不是 <strong>弧微分</strong>，<span class="math inline">\(dL \ne \sqrt{(dx)^2+(dy)^2}\)</span><br />故 <span class="math inline">\(\dfrac{dL}{dt} \ne \sqrt{(\dfrac{dx}{dt})^2 + (\dfrac{dy}{dt})^2}\)</span>，这是我错的原因，应该用链式求导法则来算<br /><span class="math inline">\(\dfrac{dL}{dt} = \dfrac{dL}{dx} \cdot \dfrac{dx}{dt}\)</span><br />第19题，临门一脚，虽然求出了 <span class="math inline">\(u(x)\)</span> 没看到要求通解，扣两分<br />第20题，算体积时要用到 <strong>割补法</strong><br />因为给的一个是直角坐标系，一个是参数方程，不能直接算<br />想了很久如何直接用二重积分算，导致一开始没做出来，做完线性代数回来重新看的时候，发现第二问要求表面积，表面积要分别算两个曲线的 <strong>弧微分</strong>，这才想到第一问可以用割补法来求<br />主要是前10年的几何应用都可以直接用二重积分搞出来，导致这方面的思想迟钝了2333<br />最后一题求逆矩阵时又算错了。主要是时间不多了，没实现检验<br />这套总体计算量相较于15年大了很多，15两个小时就写完了，16写满3小时<br />偶数年难就难在计算量上，后期打算以增强计算能力为主要方向 <span class="math inline">\(w\)</span></td></tr><tr class="odd"><td>2017</td><td>131</td><td>11/1</td><td>两个小时就做完了，然后就去吃饭了，然后就计算错了一堆<br />事实证明，越简单的卷子，越是不能大意<br />选择题第二题用的特殊值法，暂时还没想出怎么做到泛性证明<br />第16题链式求导，注意因为已经要求具体值了，所以答案要写成<span class="math inline">\(f_1(1,1)\)</span>，而不能只写 <span class="math inline">\(f_1\)</span><br />第21题主要算出方程后，要写出 <span class="math inline">\(x\)</span> 的范围，这是题目的限制条件<br />这套卷子犯病最严重的地方是 <span class="math inline">\(x\)</span> 转极坐标的时候代了 <span class="math inline">\(r\sin\theta\)</span>，太下饭了</td></tr><tr class="even"><td>2018</td><td>126</td><td>11/3</td><td>填选全对，就怪了，第十二题，参数方程求导，算错了，难受<br />这套填选，难度是在的，两道线性代数选择题需要一定的思考量，不像前几年硬送<br /><br />第15题经典根式换元，ez难度<br />第16题，方程两侧求导时，只导了一遍，这种事发生第二次了。。。<br />第17题，是一套积分域为外摆线的二重积分题，计算量蛮大的<br />有两种算法，一种是强行乘开硬算，一种是多次利用和差倍半三角公式化简，都不太好算<br />第18题，求导判单调性找极值点，ez难度<br />第19题，直接柯西不等式秒杀<br />第20题，没搞出来，变化率的问题，以为是微分方程，其实直接设出曲线方程<br />然后算一个二重积分把 <span class="math inline">\(S\)</span> 搞出来，再套公式用链式求导法则即可<br />第21题，经典单调有界准则，ez难度<br />第22题，第一问解方程组，第二问配方法（配错了，难受）<br />第23题，A经过有限次初等列变化变成B，求参数，可以拼在一起让秩相等，也可以直接求行列式<br />因为A的行列式为0，然后反解出参数；第二问还是去方程组的问题，最后需要一点解结构的理解<br />有一说一做的不行，外摆线没算出来，大题小错误频繁，物理应用经典不会，慢慢来吧。。。</td></tr><tr class="odd"><td>2019</td><td>126</td><td>11/4</td><td>第19题是个很好的题目，可以读假题了，后来重新做，搞出来了<br />是一个老模型了，拆积分区间，然后做积分再现<br />这题的综合性考察还挺多的，可惜做的时候读假题了，浪费了一个好题<br />第20题求导计算错误<br />第22题，出题人脑子指定是有点问题的，题目中 "求 <span class="math inline">\(a\)</span> 的取值"<br />然而 <span class="math inline">\(a\)</span> 实际上不但要分类讨论，而且其中一个情况下，<span class="math inline">\(a\)</span> 是可以取到实数集的大小<br />做的时候，一直以为自己错了，对完答案后，一直在输出出题人<br />还有一个选择题第 <span class="math inline">\(5\)</span> 题，比较积分大小，1和2好确定，3比较复杂没想出来<br />答案是用3和2做差加辅助角公式搞出来的<br />其他全对，感觉这套就是被出题人搞了，唉。。。</td></tr><tr class="even"><td>2020</td><td>141</td><td>12/20</td><td>完全体考的，切菜就完事了</td></tr><tr class="odd"><td>2021</td><td></td><td>last</td><td>这套没时间做了。。</td></tr><tr class="even"><td>平均</td><td>135.4</td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《写在考研后》—— 个人感想</title>
      <link href="/graduate_exam/experience/"/>
      <url>/graduate_exam/experience/</url>
      
        <content type="html"><![CDATA[<blockquote><p>（非考研经验分享，主要想对考研这几天的经历做个感想）</p></blockquote><p>  一年一度的考研季过去了，按照高中老师的话说，又是几家欢喜几家愁。前几年每每这个时候，都会在知乎在微博上，抱着吃瓜群众的态度，看看今年考研的各种乐子。时至今年，却突然从看戏人成为了戏中人，考研的各种经历，融汇在一起，就是简单四个字——五味杂陈，品出得不是单纯的喜、丧、乐、悲，而是万千情绪交织在一起，难以言喻的情感。</p><p>  参加研究生考试这两天，作为参与者，体会到了许多身为旁观者时不能感同身受的地方。好巧不巧，在最后一周，不幸发烧了，原因可能是前几天上海太冷，下楼洗澡的时候没穿上厚实的外衣，冻感冒的。发觉身体不适的时候，我睡觉都穿着帽子和袜子，被子上还盖着大衣，白天衣服五件起步，为此还被室友嘲笑“穿那么多”。最后一周发烧，我也一直担心着最后不让考试，不过周二全上海就下达了通知，所有考生必须提交核酸检测报告，这样就算当天体温超过38度，有核算证明也不会被拒之考场外了。周四做完核算后，直到拿到阴性证明之前，我还惴惴不安，生怕最后出来是阳性，好在并没有发生。</p><p>  说实话，直到考试前一天，病情一直都没好转，我甚至都不知道第二天两个三小时的考试我能不能撑住，泰诺、感冒颗粒，什么我都吃了，剩下的就交给命运。考前最后一晚，我是11点就睡的觉，睡的时候浑身发冷，空调也就一直开着不敢关，结果我第二天差不多三点半的时候就睡醒了，是那种自然醒，很难再入睡的状态，我想着反正都醒了，不如看会儿马原吧，总不能刷手机吧，于是把马原的所有素材又背了一遍，差不多4点半的时候，决定再睡一会儿。</p><p>  再到早晨7点钟的时候，被闹铃闹醒时，我仿佛直接就进入了考试状态，瞬间所有的疲惫感都消失了，感冒也消失了，第一天发挥得很好，政治分析题考点都在我复习的范围内，选择题有点难度，但抛开没见过的新题，先前反复看过的老题都没有失误。英语状态也很好，基本没有卡题，两个小时就做完了，对着阅读反复检查的很多遍，晚上对答案的时候，除了有争议的一道题，其他也都全对了。</p><p>  不过这个状态没能延续到第二天的数学，怎么说呢，数学客观上来讲是我最不可能翻车的一门，主观上来讲又是我觉得我最有可能翻车的一门。考前我基本把市面上所有的模拟卷都做了一遍，并且每一套都认真总结发在自己的博客里，有李林6+4，张宇8+4，李艳芳3，余丙森5，合工大5。对于一些常考的难点，我也有进行一些总结，发过一篇小众范围内勉强受到一些大佬认可的《多元函数极值专题》。是啊，就是做了那么多准备的我，这次数学考试考场上直接发挥出了下限级表演。一个最简单的二重积分最后一步乘法系数配错了，一个超简单的多元函数偏积分问题，积分完我居然忘记加的应该是含y的函数，而不是任意常数C。中值定理也好巧不巧，正中我唯一弱项，泰勒展开。为什么说是唯一弱项呢，大概就是竞赛里能用的所有罗尔的原函数构造方法，所有的双中值解法，包括但不限于可分离型、柯西分离型、二次构造型都被我总结在一篇文章里了，因为考研后期没时间，泰勒不但没整理，自己也一直没看。不愧是怕什么来什么，一顿操作直接被拒之130的大门之外。不过这次线代压轴题，在我的《多元函数极值专题》里关于一类求条件极值的方法中讲过，利用正交变换保向量模长相等来解，这算不算我押中了题呢hh。</p><p>  数学考试还发生了一个小插曲，不知道为什么我那个考场数学是发的信封，我用刀割开的时候把里面的舌头也给割掉了，考试的时候就一直在想，我的数学考试是不是要作废了，这可能也是影响我数学翻车的一个主观原因吧。</p><p>  最后一门专业课算是正常发挥吧，考点都在之前的考纲里，考前我还专门整理了一下《算导》中出现的考试范围里一切概念相关的东西，这次考到了大Θ表示法，之前有幸在OI-Wiki上喵过一眼，计算方法和大O也不太一样，是一个多项式拟合的思想，概念上是表示一个渐进紧缺界的思想。编程压轴题里考了一道有限制的选择问题，我直接用背包输出最优方案的思想解的，这题以前帮人答疑过，那题数据范围比这个还大，虽然感觉不是最优解，但肯定是正解。另外两道就是单纯的模拟题，除了卷子上手写代码真的很反人类外，其他都还可以接受。解答题还出了一个双关键字最短路，感觉西交大的专业课是真不想让非科班的人上岸啊hh</p><p>  还有一个比较好玩的现象，最后一门开考的时候，跟我考同专业的整个考场只剩下5个人了，应该是都被数学的结果劝退了hh。考前的计划是数学一拖三，万万没想到这次变成三拖一数学了。</p><p>  最近打算休息一阵子，一方面要准备毕设的开题报告和项目定稿，一方面一年的考研长跑，从心理上和生理上真的都累垮了。之后打算先把博客里的内容整合一下，杂乱的东西和要删的东西都太多了，然后逐渐恢复博客的更新，顺便也准备一下三月份的CSP考试。</p><p>  如果最后我成功上岸的话，我会专门再写一个经验分享帖，为大家扫扫雷，感觉这一年自己踩过的坑还是挺多的，好在最后都得到了有效的解决。</p><p>  写在最后，正是因为我亲身经历了一次考研，我深知考研人的心酸苦楚，无论你是今年考研还是明年考研或是未来考研，我都在这祝你早日上岸，抵达你梦想的港湾。</p><p>2021.12.26 考研结束的当晚</p><p>彩色铅笔 Colopen</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【专题】公共英语二_小作文</title>
      <link href="/graduate_exam/English/SC/"/>
      <url>/graduate_exam/English/SC/</url>
      
        <content type="html"><![CDATA[<h1 id="道歉信模板">道歉信模板</h1><p>表明写信目的：I'm writing this letter in purpose of expressing my apology to you for ___.</p><p>解释道歉原因：In retrospect, I believe the stupid mistake resulted form ___.</p><p>提出补救措施：To solve this problem, I intend to ____.</p><p>再次表示歉意：Please accept my most cordial and humblest apologies once again.</p><h1 id="感谢信模板">感谢信模板</h1><p>表明写信目的：I'm writing this letter in purpose of extending my heartfelt gratitude to you for ___.</p><p>解释感谢原因：I have found ___ you have provided very informative and useful.</p><p>提出回报措施：My appreciation to you for your ___ is beyond words and I wish I could repay it one day.</p><p>再次表明谢意：Thank you again from the bottom of my heart for ___.</p><h1 id="建议信模板">建议信模板</h1><p>表明写信目的：I'm writing this letter in purpose of making some suggestions for ___.</p><p>介绍具体建议：It is imperative that ___.</p><p>客套话—望建议被采纳：I hope you will find these proposals useful, and I would be ready to discuss this matter with you to further details.</p><h1 id="推荐信模板">推荐信模板</h1><p>表明写信目的：I'm writing this letter in purpose of recommending ___ to you.</p><p>介绍推荐理由：The first reason for my recommendation is <em>. Besides/Moreover, </em>.</p><p>客套话—望建议被采纳：Hope you enjoy ___. I am looking forward to discussing it with you later.</p><h1 id="邀请信模板">邀请信模板</h1><p>表明写信目的：On behalf of __ , I'm honoured to write this letter to cordially invite you to attend __.</p><p>陈述邀请的内容：When &amp; Where __ is going to be held in __ on __ , which will last from __ to __ .</p><p>介绍邀请理由：Considering that you are an outstanding expert in __, worshipped by all of us, we sincerely expect your attendance.</p><p>介绍被邀请访参加的活动环节：We cordially expect you to participate in ___.</p><p>补充说明其他相关信息：The schedule of the conference is attached for your reference.</p><p>再次邀请：We cordially hope that you would like to accept the invitation.</p><p>期待回复：I am looking forward to your reply, and waiting to meet you.</p><h1 id="感谢信模板-1">感谢信模板</h1><p>感谢来信：I would likee to extend to you my heartfelt thanks for your ___ .</p><p>作出回应：I am extremely honored to accept your invitation to ___ .</p><p>陈述答复的具体内容：The following are some key points to pay particular attention to.</p><p>再次感谢来信：Thank you again from the bottom of my heart for your invitation.</p><p>期待答复：I am looking forward to hearing from you soon.</p><h1 id="告示模板">告示模板</h1><p>表明告示意图：__ (数量) volunteers are urgently needed to coordinate the related matters of __ (活动名称).</p><p>介绍活动信息：__ (活动名称) is going to be held in __ (地点) on __ (日期), which will last from __ to __ .</p><p>介绍活动目的：The Students' Union is going to hold a __ , with the aim of __ .</p><p>介绍活动内容：Participants are greatly encouraged to take part in activities, such as __ .</p><p>阐述志愿者条件：Preference will be given to those __ .</p><p>提供联系方式：If you are interested in it, please send your resume, as soon as possible, to xxxx@outlook.com.</p><h1 id="writing_parta">2008_Writing_PartA</h1><h2 id="中文思路">中文思路：</h2><p>开头段</p><ol type="1"><li>我从加拿大回国后，当我打开行李时，发现了上个月问你借的音乐CD。</li><li>因此，我写这封信，想要向你道歉。</li></ol><p>主体段</p><ol type="1"><li>回想起来，我认为这个愚蠢的错误是由我的粗心造成的。</li><li>琐事使得我无暇打包行李。</li><li>如果我当时多注意，就不会忘记把你最喜欢的披头士音乐CD还给你了。</li></ol><p>结尾段</p><ol type="1"><li>为了解决这一问题，我打算用快递将CD寄还给你。</li><li>此外，作为我疏忽的补偿，我会把一些中国的特产一并寄给你。</li><li>我真心希望你可以接受我的道歉。</li></ol><h2 id="英文范文">英文范文：</h2><p>Dear Bob,</p><p>​ As I was unpacking the luggage after my return from Canda, I found the music CD borrowed from you there last month.(交代背景) So I'm writting this letter in purpose of expressing my apology to you.(表明写信目的)</p><p>​ In retrospect, I believe the stupid mistake resulted from my carelessness.(解释道歉原因) Trifles left me insufficient time to pack up. Had I paid more attention, I wouldn't forget to return your favourite CD of the Beatles to you.</p><p>​ To solve the problem, I intend to send this CD to you via Express Mail Service.(提出补救措施) Additionally, some specialities of China will be sent together as the compensation for my oversight. I really hope that you will be able to accept my apology.(再从表明歉意)</p><p>Yours Sincerely, Li Ming</p><h1 id="writing_parta-1">2009_Writing_PartA</h1><h2 id="中文思路-1">中文思路</h2><p>开头段</p><ol type="1"><li>正如您关于“白色污染”的报道中所说的那样，在一些地区，塑料袋使用规定并没有被有效地执行。</li><li>我写这封信，是为了表达本人对于塑料袋滥用的担忧，以及提供一些建议。</li></ol><p>主体段</p><ol type="1"><li>在我看来，限制塑料袋的使用，以避免对环境造成不可挽回的伤害，对我们而言是十分必要的。</li><li>为了解决这一难题，我想提出如下两个实用的建议。</li><li>首先，这些一次性的袋子应当以高价出售，这样一来人们就不会频繁使用了。</li><li>第二，政府应当鼓励使用绿色环保的替代品，比如纸袋或者布袋。</li></ol><p>结尾段</p><p>我希望您觉得上述提议有益，并呼吁公众增强环保意识。</p><h2 id="英文范文-1">英文范文</h2><p>Dear Deitor,</p><p>​ As your report on "White Pollution" indicates, regulations on the use of plastic bags have not been implemented effectively in some areas.(交代背景) I am writing this letter to express my concern over the abuse of plastic bags and make some suggestion.(表明写信目的)</p><p>​ In my opinion, it is imperative for us to limit the use of plastic bags in purpose of avoiding irretrievable damage on our environment. To crack this hard nut, I would like to propose two practical recommendations as follows. Firstly, these disposable bags should be sold at a high price so that people would not use them frequently. Secondly, governments should encourage the use of green and eco-friendly alternatives, such as paper or cloth bags.(介绍具体建议)</p><p>​ I hope you will find the proposals above conducive and call on the public to enhance the awareness of environmental protection.(客套话—望建议被采纳)</p><p>Yours Sincerely,</p><p>Li Ming</p><h1 id="writing_parta-2">2013_Writing_PartA</h1><h2 id="中文思路-2">中文思路</h2><p>开头段</p><ol type="1"><li>我谨代表学生会写这封信，诚挚地邀请您担任英语演讲比赛尊贵的评委。</li></ol><p>主体段</p><ol type="1"><li>此次比赛将于 3 月 15 日在我校大礼堂举办，进行的时间是 18:00 至 20:30。</li><li>参赛者首先需要在八分钟内进行关于“创新”主题的事先准备好的演讲，然后进行相关的问答环节。</li><li>考虑到您是一位杰出的英语语言专家，深受所有同学的尊敬，我们真诚地希望您对他们的表现进行打分和点评。</li><li>您的出席一定会让参赛者和现场观众都受益匪浅，更重要的是，也一定能够激发他们说英语的激情和信心。</li></ol><p>结尾段</p><ol type="1"><li>我们衷心地希望您能接受此次的邀请。</li><li>期待您的出席。</li></ol><h2 id="英文范文-2">英文范文</h2><p>Dear Mr.Reed,</p><p>​ On behalf of the Students' Union, (表明身份) I am writing this letter to earnestly invite you to be our honorable judge for our English speech contest.(表明写信目的)</p><p>​ The contest is to be held in our auditorium on March 15, which will last from 18:00 to 20:30. (介绍活动时间) Each contestant is required to first give a prepared speech on innovation within 8 minutes, and then a question-and-answer session follows. (介绍活动内容) Since you are an outstanding expert in English language venerated by all students, we sincerely expect you to score and make comments on their performance. Your attendance will surely benefit greatly both the competitors and the audience, more importantly, inspire their enthusiasm in speaking English with full confidence. (介绍邀请理由)</p><p>​ We cordially hope that you would like to accept the invitation. (再次邀请) We are looking forward to your attendance. (期待出席 / 回复)</p><p>Yours sincerely,</p><p>Li Ming</p><h1 id="writing_parta-3">2016_Writing_PartA</h1><h2 id="中文思路-3">中文思路</h2><p>开头段</p><ol type="1"><li>我写这封信是从心底感谢你的祝贺。</li><li>既然你问我关于翻译的建议，我想要跟你分享一些我自己的提高翻译的方法和经验</li></ol><p>主体段</p><ol type="1"><li>首先，翻译能力的提高是一个持续的过程，需要长期实践的积累。</li><li>具体来说，我强烈建议你要坚持不懈地加强包括听、读和写的英汉语基本技能。</li><li>更重要的是，要在大量的翻译实践中完善语法、逻辑和修辞方面的知识。</li><li>最后，想要成为一名优秀的译者，不仅要学习前人的翻译技巧，还要在此基础上形成自己的翻译体系。</li></ol><p>结尾段</p><ol type="1"><li>我希望以上建议对你有益。</li><li>我确信你会在不久的将来成为一名出色的译者。</li><li>期待着你的好消息。</li></ol><h2 id="英文范文-3">英文范文</h2><p>Dear Jack,</p><p>​ I'm writing this letter in purpose of thank you from the bottom of my heart for your congratulations.(表示感谢) Since you asked for advice on translation, I would like to share with you some of my own methods and experience as follows.(表明写信目的)</p><p>​ First of all, the improvement of translation ability is proving to be a continuous process involving an accumulation of long-term practice. Specifically speaking, you are highly suggested to make unremitting efforts to strengthen both English and Chinese basic skills, including listening, reading and writing. What's more, knowledge on grammar, logic and rhetoric should also be perfected through a great deal of practice. Finally, in order to be an outstanding translator, it is crucial to not only learn from previous translation techniques, but also form your own set of translation system based on them.(介绍具体建议)</p><p>​ I hope you will find these proposals useful, and I would be ready to discuss this matter with you to further details.(望意见被采纳) I'm sure you will become an excellent translator in the near future. I'm looking forward to hearing that news.(表达祝贺)</p><p>Yours sincerely,</p><p>Li Ming</p><h1 id="writing_parta-4">2010_Writing_PartA</h1><h2 id="中文思路-4">中文思路</h2><p>第一段</p><ol type="1"><li>我校将于下个月举行关于全球化的国际会议，现需要招募志愿者。</li><li>在会议期间，我们将组织各种各样的活动，比如讲座、研讨会和问答环节</li></ol><p>第二段</p><ol type="1"><li>志愿者的基本要求是精通英语、法语和日语。</li><li>我们将非常欢迎熟悉会议主题，有良好人际交往能力的志愿者。</li><li>在国际会议以及其他类似活动中有相关经验者将会优先考虑。</li><li>如果你对此志愿者活动感兴趣的话，请请尽快将您的简历发送至邮箱 volunteers@unn.com.cn，或者致电 7878778 咨询面试信息。</li><li>理想的人选将于下周由研究生会统一安排参加面试。</li></ol><h2 id="英文范文-4">英文范文</h2><p>Notice</p><p>December 15, 2010</p><p>​ Volunteers are needed for the international conference on globalization to be held next month on our campus. (表明告知意图) During the period, we will organize a variety of activities, such as lectures, seminars, and question-answer sessions. (介绍活动信息)</p><p>​ The basic requirement for volunteers is proficiency in English, French and Japanese. And those who are familiar with the theme of the conference and have good interpersonal skills will be highly welcomed. Preference will be given to those with relevant experience in international conferences or other similar activities. (阐明志愿者需具备的条件) If you are interested in it, please send your resume, as soon as possible, to volunteers@unn.com.cn , or call 7878778 for any information on interview. (提供联系方式) Ideal candidates will be arranged by Postgraduates' Association to attend interviews in the coming week.</p><p>Postgraduates' Association</p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第368 - 380题</title>
      <link href="/graduate_exam/Math/0x170-0x17C/"/>
      <url>/graduate_exam/Math/0x170-0x17C/</url>
      
        <content type="html"><![CDATA[<h1 id="题目368">题目368</h1><p>设 <span class="math inline">\(f(x)\)</span> 为连续函数，<span class="math inline">\(\lim\limits_{x\to0}\dfrac{xf(x) - \ln(1 + x)}{x^2} = 2\)</span>.</p><p><span class="math inline">\(F(x) = \displaystyle\int_0^x tf(x-t)dt\)</span>，当 <span class="math inline">\(x\to0\)</span> 时，<span class="math inline">\(F(x) - \dfrac{1}{2}x^2\)</span> 与 <span class="math inline">\(bx^k\)</span> 为等价无穷小</p><p>其中常数 <span class="math inline">\(b \ne 0\)</span>，<span class="math inline">\(k\)</span> 为某正整数，求 <span class="math inline">\(k, b, f(0), f&#39;(0)\)</span></p><h2 id="解答">解答</h2><p>先用等式脱帽法，把 <span class="math inline">\(f(x)\)</span> 表达式写出来：</p><p><span class="math display">\[\dfrac{xf(x)-\ln(1+x)}{x^2} = 2 + o(1) \quad\Rightarrow\quad f(x) = 2x + \dfrac{\ln(1 + x)}{x} + o(x)\]</span></p><p>又 <span class="math inline">\(\ln(1 + x) = x - \dfrac{1}{2}x^2 + o(x^2)\)</span>，故 <span class="math inline">\(f(x) = 1 + \dfrac{3}{2}x + o(x)\)</span></p><p>又 <span class="math inline">\(F(x) = \displaystyle x\int_0^xf(u) du - \int_0^x uf(u)du\)</span></p><p><span class="math inline">\(\displaystyle \int_0^x f(u)du = x + \dfrac{3}{4}x^2 + o(x^2)\)</span>，<span class="math inline">\(\displaystyle \int_0^x uf(u)du = \dfrac{1}{2}x^2 + \dfrac{1}{2}x^3 + o(x^3)\)</span></p><p><span class="math inline">\(F(x) = \dfrac{1}{2}x^2 + \dfrac{1}{4}x^3 + o(x^3)\)</span>，由于 <span class="math inline">\(F(x) - \dfrac{1}{2}x^2\)</span> 与 <span class="math inline">\(bx^k\)</span> 为等价无穷小</p><p>因此 <span class="math inline">\(bx^k \sim \dfrac{1}{4}x^3\)</span>，易得：<span class="math inline">\(b = \dfrac{1}{4}, k = 3\)</span></p><p><span class="math inline">\(f(0) = 1\)</span></p><p><span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0}\dfrac{1 + \dfrac{3}{2}x + o(x) - 1}{x} = \dfrac{3}{2}\)</span></p><h1 id="题目369">题目369</h1><p>设 <span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{2e^{(n+1)x} + 1}{e^{nx}+x^n+1}\)</span>，求 <span class="math inline">\(f(x)\)</span> 的间断点</p><h2 id="解答-1">解答</h2><blockquote><p>严选题 P3 No.18</p></blockquote><blockquote><p>常用极限结论：<span class="math inline">\(\lim\limits_{n\to\infty} e^{nx} = \begin{cases} \infty &amp; x &gt; 0 \\\\ 1 &amp; x = 0\\\\ 0 &amp; x &lt; 0 \end{cases}\)</span>，以及 <span class="math inline">\(\lim\limits_{n\to\infty} x^n = \begin{cases} \infty &amp; |x| &gt; 1 \\\\ 0 &amp; |x| &lt; 1 \\\\ 1 &amp; x = 1\\\\ \not\exists &amp; x = -1 \end{cases}\)</span>，还有常用不等式：<span class="math inline">\(e^x - 1 &gt; x\)</span></p></blockquote><p><span class="math inline">\(x &gt; 0\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{2e^{x} + \dfrac{1}{e^{nx}}}{1+(\dfrac{x}{e^x})^n+\dfrac{1}{e^{nx}}} = 2e^x\)</span></p><p><span class="math inline">\(x = 0\)</span> 时：<span class="math inline">\(f(x) = \dfrac{3}{2}\)</span></p><p><span class="math inline">\(-1 &lt; x &lt; 0\)</span> 时：<span class="math inline">\(f(x) = 1\)</span></p><p><span class="math inline">\(x &lt; -1\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty} \dfrac{1}{x^n + 1} = 0\)</span></p><p>故 <span class="math inline">\(f(x) = \begin{cases} 0 &amp; x &lt; -1 \\\\ 1 &amp; -1 &lt; x &lt; 0 \\\\ \dfrac{3}{2} &amp; x = 0 \\\\ 2e^x &amp; x &gt; 0 \end{cases}\)</span></p><p>故有两个跳跃间断点 <span class="math inline">\(x = -1, x = 0\)</span></p><h1 id="题目370">题目370</h1><p>下列命题成立的是（ ）</p><p>（A）若 <span class="math inline">\(\lim\limits_{x\to0}\varphi(x)=0\)</span>，且 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f[\varphi(x)] - f(0)}{\varphi(x)}\)</span> 存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导</p><p>（B）若 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导，且 <span class="math inline">\(\lim\limits_{x \to 0}\varphi(x) = 0\)</span>，则 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f[\varphi(x)]-f(0)}{\varphi(x)} = f&#39;(0)\)</span></p><p>（C）若 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(\sin x) - f(0)}{\sqrt{x^2}}\)</span> 存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导</p><p>（D）若 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(\sqrt[3]{x})-f(0)}{\sqrt{x^2}}\)</span> 存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导</p><h2 id="解答-2">解答</h2><p><strong>（A）选项</strong> 显然错误，反例：<span class="math inline">\(\varphi(x) = x^2\)</span> 只能说明存在右导数</p><p><strong>（B）选项</strong> 显然错误，反例：<span class="math inline">\(\varphi(x) \equiv 0\)</span>，等式不成立</p><p><strong>（C）选项</strong> 先凑导数定义看看：</p><p><span class="math display">\[\lim\limits_{x\to0}\dfrac{f(\sin x) - f(0)}{\sqrt{x^2}} = \lim\limits_{x\to0}\dfrac{f(\sin x) - f(0)}{\sin x} \cdot \dfrac{\sin x}{|x|} = \lim\limits_{x\to0}\dfrac{f(\sin x) - f(0)}{\sin x} \cdot \dfrac{x}{|x|}\]</span></p><p><span class="math inline">\(\lim\limits_{x\to0}\dfrac{x}{|x|}\)</span> 有界，不一定要用 <span class="math inline">\(0\)</span> 去抵消，可以考虑反向构造一个可以抵消正负号的极限即可</p><p>欲使极限存在，且导数定义的极限不存在，构造反例：<span class="math inline">\(f_{+}&#39;(0)=1, f_{-}&#39;(0)=-1\)</span></p><p>有 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(\sin x) - f(0)}{\sin x} \cdot \dfrac{x}{|x|} = 1\)</span> 极限存在，且导数不存在</p><p><strong>（D）选项</strong> 先凑导数定义看看：</p><p><span class="math display">\[\lim\limits_{x\to0}\dfrac{f(\sqrt[3]{x})-f(0)}{\sqrt{x^2}} = \lim\limits_{x\to0}\dfrac{f(\sqrt[3]{x})-f(0)}{\sqrt[3]{x}} \cdot \dfrac{\sqrt[3]{x}}{|x|}\]</span></p><p>显然 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{\sqrt[3]{x}}{|x|}\)</span> 无界振荡，欲使极限存在，则必然有：<span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(\sqrt[3]{x})-f(0)}{\sqrt[3]{x}} = 0\)</span>，即 <span class="math inline">\(f&#39;(0) = 0\)</span></p><p>因此答案选择 <span class="math inline">\((\mathbf{D})\)</span> 选项</p><h1 id="题目371">题目371</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x_0\)</span> 点可导，<span class="math inline">\(\alpha_n,\beta_n\)</span> 为趋于零的正向数列，求极限 <span class="math display">\[\lim_{n\to\infty}\dfrac{f(x_0+\alpha_n) - f(x_0-\beta_n)}{\alpha_n + \beta_n}\]</span></p><h2 id="解答-3">解答</h2><p>考虑写出在 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x_0\)</span> 点的可微定义式：</p><p><span class="math inline">\(f(x_0 + \alpha_n) - f(x_0) = f&#39;(x_0)\alpha_n + o(\alpha_n)\)</span></p><p><span class="math inline">\(f(x_0 - \beta_n) - f(x_0) = -f&#39;(x_0)\beta_n + o(\beta_n)\)</span></p><p><span class="math display">\[\begin{aligned}&amp;\lim_{n\to\infty}\dfrac{f(x_0+\alpha_n) - f(x_0-\beta_n)}{\alpha_n + \beta_n}\\\\=&amp;\lim\limits_{n\to\infty}\dfrac{f(x_0)+f&#39;(x_0)\alpha_n + o(\alpha_n) - f(x_0)+f&#39;(x_0)\beta_n + o(\beta_n)}{\alpha_n + \beta_n}\\\\=&amp;f&#39;(x_0) + \lim\limits_{n\to\infty}\dfrac{o(\alpha_n)+ o(\beta_n)}{\alpha_n + \beta_n}\\\\=&amp;f&#39;(x_0)\end{aligned}\]</span></p><h1 id="题目372">题目372</h1><p>设函数 <span class="math inline">\(\varphi(x) = \displaystyle\int_0^{\sin x}f(tx^2)dt\)</span>，其中 <span class="math inline">\(f(x)\)</span> 是连续函数，且 <span class="math inline">\(f(0) = 2\)</span></p><p>（1）求 <span class="math inline">\(\varphi&#39;(x)\)</span></p><p>（2）讨论 <span class="math inline">\(\varphi&#39;(x)\)</span> 的连续性</p><h2 id="解答-4">解答</h2><p>当 <span class="math inline">\(x = 0\)</span> 时：<span class="math inline">\(\varphi(0) = 0\)</span></p><p>当 <span class="math inline">\(x \ne 0\)</span> 时：先对被积函数换元：令 <span class="math inline">\(tx^2 = u\)</span>，有 <span class="math inline">\(\varphi(x) = \dfrac{1}{x^2}\displaystyle\int_0^{x^2\sin x} f(u)du\)</span></p><p>于是有：<span class="math inline">\(\varphi(x) = \begin{cases} \dfrac{1}{x^2}\displaystyle\int_0^{x^2\sin x} f(u)du &amp;,x\ne0 \\\\ 0 &amp;,x=0 \end{cases}\)</span></p><p>然后直接求导即可：<span class="math inline">\(\varphi&#39;(x) = \dfrac{(2\sin x + x\cos x) f(x^2\sin x) x^2 - 2\displaystyle\int_0^{x^2\sin x}f(u)du}{x^3}\)</span></p><p><span class="math inline">\(x=0\)</span> 点用导数定义：</p><p><span class="math display">\[\begin{aligned}\varphi&#39;(0) = \lim_{x\to0}\dfrac{\displaystyle\int_0^{x^2\sin x} f(u)du}{x^3} = \lim_{x\to0}\dfrac{\displaystyle\int_0^{x^3} f(u)du}{x^3} = \lim_{\xi\to0}f(\xi) = 2\end{aligned}\]</span></p><p>综上：<span class="math inline">\(\varphi&#39;(x) = \begin{cases} \dfrac{(2\sin x + x\cos x) f(x^2\sin x) x^2 - 2\displaystyle\int_0^{x^2\sin x}f(u)du}{x^3} &amp;,x\ne0 \\\\ 2&amp;,x=0 \end{cases}\)</span></p><p>讨论 <span class="math inline">\(x=0\)</span> 处的连续性</p><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\varphi(x) &amp;= \lim_{x\to0}\dfrac{(2\sin x + x\cos x) f(x^2\sin x) x^2 - 2\displaystyle\int_0^{x^2\sin x}f(u)du}{x^3}\\\\&amp;= \lim_{x\to0}\dfrac{(2\sin x + x\cos x) f(x^2\sin x) x^2}{x^3} - 2\lim_{x\to0}\dfrac{\displaystyle\int_0^{x^2\sin x}f(u)du}{x^3}\\\\&amp;= 3f(0) - 2f(0)\\\\&amp;= 2\end{aligned}\]</span></p><p>由 <span class="math inline">\(\lim\limits_{x\to0}\varphi&#39;(x) = \varphi(0)\)</span>，故 <span class="math inline">\(\varphi&#39;(x)\)</span> 在 <span class="math inline">\(x = 0\)</span> 处连续</p><p>因此 <span class="math inline">\(\varphi&#39;(x)\)</span> 在 <span class="math inline">\(\mathbf{R}\)</span> 上连续</p><h1 id="题目373">题目373</h1><p>设 <span class="math inline">\(x = \displaystyle\int_0^1 e^{tu^2}du, y = y(t)\)</span> 由方程 <span class="math inline">\(t - \displaystyle\int_1^{y+t}e^{-u^2}du=0\)</span> 所确定，求</p><ol type="1"><li><p><span class="math inline">\(y&#39;_{t}(0), y&#39;&#39;_t(0), x&#39;_t(0), x&#39;&#39;_t(0)\)</span></p></li><li><p><span class="math inline">\(y&#39;_x(0), y&#39;&#39;_x(0)\)</span></p></li></ol><h2 id="解答-5">解答</h2><p>隐函数问题，先确定初值：<span class="math inline">\(y|_{t=0} = 1\)</span>，然后方程两侧关于 <span class="math inline">\(t\)</span> 求导：</p><p><span class="math display">\[1 - (y&#39;+1) e^{-(y+t)^2} = 0 \quad\Rightarrow\quad y&#39;= e^{(y+t)^2} - 1\]</span></p><p>代入可得： <span class="math inline">\(y&#39;|_{t=0}= e-1\)</span>，再求一次导：</p><p><span class="math display">\[y&#39;&#39; = 2e^{(y+t)^2} \cdot (y+t) \cdot (y&#39; + 1)\]</span></p><p>代入可得：<span class="math inline">\(y&#39;&#39;|_{t=0} = 2e^2\)</span></p><p>对于 <span class="math inline">\(x\)</span> 的方程很难直接求导，需要换元分段，不妨试试求解高阶导数的方法之一：泰勒展开</p><p><span class="math display">\[x = \displaystyle\int_0^1 tu^2 + \dfrac{1}{2}t^2u^4 + o(t^2u^4) du = \dfrac{1}{3}t + \dfrac{1}{10}t^2 + o(t^2)\]</span></p><p>于是有 <span class="math inline">\(x&#39;(0) = \dfrac{1}{3}\)</span>，<span class="math inline">\(x&#39;&#39;(0) = \dfrac{1}{5}\)</span></p><p>第二问直接用公式即可：<span class="math inline">\(\dfrac{d^2y}{dx^2} = \dfrac{y&#39;&#39;x&#39;-y&#39;x&#39;&#39;}{x&#39;^3}\)</span></p><p><span class="math inline">\(\dfrac{dy}{dx} = \dfrac{e-1}{1/3} = 3e-3\)</span>，<span class="math inline">\(\dfrac{d^2y}{dx^2} = 27 \cdot (\dfrac{2}{3}e^2 - \dfrac{1}{5}(e-1)) = 18e^2 - \dfrac{27}{5}(e-1)\)</span></p><h1 id="题目374">题目374</h1><p>设 <span class="math inline">\(f(x) = \begin{cases} \dfrac{x-\sin x}{x^3} &amp;,x\ne0\\\\ a&amp;,x=0 \end{cases}\)</span> 处处连续，则 $f''(0) = $</p><h2 id="解答-6">解答</h2><p>求一点处的高阶导数，可以用泰勒展开或洛必达</p><p>本题不妨把 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处泰勒展开：</p><p><span class="math display">\[f(x) = \dfrac{1}{6} - \dfrac{1}{120}x^2 + o(x^2)\]</span></p><p>故 <span class="math inline">\(a = f(0) = \dfrac{1}{6}, f&#39;(0) = 0, f&#39;&#39;(0) = -\dfrac{1}{60}\)</span></p><h1 id="题目375">题目375</h1><p>设有方程 <span class="math inline">\(a^x = bx (a&gt;1)\)</span>，则下列结论不正确的是</p><p>（A）当 <span class="math inline">\(b &lt; 0\)</span> 时原方程有唯一实根</p><p>（B）当 <span class="math inline">\(0 &lt; b &lt; 2\ln a\)</span> 时原方程无实根</p><p>（C）当 <span class="math inline">\(b = 3\ln a\)</span> 时原方程有唯一实根</p><p>（D）当 <span class="math inline">\(b &gt; 3\ln a\)</span> 时原方程有两实根</p><h2 id="解答-7">解答</h2><p>令 <span class="math inline">\(F(x) = a^x - bx\)</span>，于是原方程有根问题，就化归到函数 <span class="math inline">\(F(x)\)</span> 有零点问题</p><p>求导找单调性：<span class="math inline">\(F&#39;(x) = \ln a \cdot a^x - b, F&#39;&#39;(x) = \ln^2 a \cdot a^x\)</span></p><p>由于 <span class="math inline">\(a &gt; 1\)</span>，故 <span class="math inline">\(\ln a &gt; 0\)</span> <span class="math inline">\(\quad\Rightarrow\quad\)</span> <span class="math inline">\(F&#39;&#39;(x) &gt; 0\)</span></p><p>故 <span class="math inline">\(F&#39;(x)\)</span> 单调递增，又 <span class="math inline">\(F&#39;(-\infty) = -b\)</span>，<span class="math inline">\(F&#39;(+\infty) = +\infty\)</span></p><p><strong>（1）若 <span class="math inline">\(-b &lt; 0\)</span>，即 <span class="math inline">\(b &gt; 0\)</span>，则可由推广的零点定理可得：<span class="math inline">\(F&#39;(x)\)</span> 存在唯一零点</strong></p><p>则可知 <span class="math inline">\(F(x)\)</span> 先单调递减，后单调递增，令 <span class="math inline">\(F&#39;(x) = 0\)</span>，易得极小值点：<span class="math inline">\(x = \dfrac{\ln \dfrac{b}{\ln a}}{\ln a}\)</span></p><p>由于该极值点为唯一极值点，根据已知结论可知，其为区间上的最小值点</p><p>令 <span class="math inline">\(F(x) &lt; 0\)</span>，有 <span class="math inline">\(b &gt; e\ln a\)</span>，方程有两个零点；反之 <span class="math inline">\(0 &lt; b &lt; e\ln a\)</span> 时，方程无零点</p><p><span class="math inline">\(b = e\ln a\)</span> 时，函数有唯一零点</p><p><strong>（2）若 <span class="math inline">\(-b &gt; 0\)</span>，即 <span class="math inline">\(b &lt; 0\)</span>，则 <span class="math inline">\(F&#39;(x) &gt; 0\)</span>，即 <span class="math inline">\(F(x)\)</span> 单调递增</strong></p><p>又 <span class="math inline">\(F(-\infty) = - \infty &lt; 0, F(+\infty) = +\infty &gt; 0\)</span>，由零点定理，有唯一零点</p><p>综上，经过函数性态分析可得，错误结论为：<span class="math inline">\(\mathbf{C}\)</span></p><h1 id="题目376">题目376</h1><p>设 <span class="math inline">\(f(x)\)</span> 是可微函数，当 <span class="math inline">\(0 &lt; a &lt; x &lt; b\)</span> 时，恒有 <span class="math inline">\(xf&#39;(x) &lt; 2f(x)\)</span>，则</p><p>（A）<span class="math inline">\(a^2f(x) &gt; x^2f(a)\)</span></p><p>（B）<span class="math inline">\(b^2f(x) &gt; x^2f(b)\)</span></p><p>（C）<span class="math inline">\(xf(x) &lt; bf(b)\)</span></p><p>（D）<span class="math inline">\(xf(x) &gt; af(a)\)</span></p><h2 id="解答-8">解答</h2><p>屑题，构造函数求导找单调性即可</p><p><strong>A/B 选项</strong>：令 <span class="math inline">\(F(x) = \dfrac{f(x)}{x^2}\)</span>，则 <span class="math inline">\(F&#39;(x) = \dfrac{f&#39;(x)x - 2f(x)}{x^3}\)</span></p><p>又 <span class="math inline">\(x &gt; 0\)</span> &amp; <span class="math inline">\(xf&#39;(x) &lt; 2f(x)\)</span>，故 <span class="math inline">\(F&#39;(x) &lt; 0\)</span> <span class="math inline">\(\quad\Rightarrow\quad\)</span> <span class="math inline">\(F(x)\)</span> 单调递减</p><p>于是有 <span class="math inline">\(F(a) &gt; F(x) &gt; F(b)\)</span>，故 <span class="math inline">\(x^2f(a) &gt; a^2f(x)\)</span>，<span class="math inline">\(b^2f(x) &gt; x^2f(b)\)</span></p><p>故正确选项为 <span class="math inline">\(\mathbf{B}\)</span></p><h1 id="题目377">题目377</h1><p>设 <span class="math inline">\(f(x)\)</span> 二阶可导，且 <span class="math inline">\(f(1) = 6\)</span>，<span class="math inline">\(f&#39;(1) = 0\)</span>，且当 <span class="math inline">\(x \ge 1\)</span> 时，<span class="math inline">\(x^2f&#39;&#39;(x) - 2xf&#39;(x) - 5f(x) \ge 0\)</span></p><p>证明：当 <span class="math inline">\(x \ge 1\)</span> 时，<span class="math inline">\(f(x) \ge x^5 + \dfrac{5}{x}\)</span></p><h2 id="解答-9">解答</h2><p>利用不等式，找原函数构造辅助函数，然后利用单调性求解不等式</p><p>由于 <span class="math inline">\(x^2f&#39;&#39;(x) - 2xf&#39;(x) - 5f(x) = x^2f&#39;&#39;(x)+2xf&#39;(x) - (5xf&#39;(x) + 5f(x))\)</span></p><p>可得原函数为：<span class="math inline">\(F(x) = x^2f&#39;(x) - 5xf(x)\)</span>，则 <span class="math inline">\(F&#39;(x) \ge 0\)</span>，函数 <span class="math inline">\(F(x)\)</span> 单调递增</p><p>又 <span class="math inline">\(F(1) = -30\)</span>，故 <span class="math inline">\(F(x) \ge -30\)</span> <span class="math inline">\(\quad\Rightarrow\quad\)</span> <span class="math inline">\(x^2f&#39;(x) - 5xf(x) + 30\ge 0\)</span></p><p>不等式两侧同除 <span class="math inline">\(x^2\)</span> 化简不等式：<span class="math inline">\(y&#39; - \dfrac{5}{x} y + \dfrac{30}{x^2} \ge 0\)</span></p><p>观察到 <span class="math inline">\(y&#39; - \dfrac{5}{x} y\)</span> 可以用积分因子还原到：<span class="math inline">\(y \cdot x^{-5}\)</span>：<span class="math inline">\(y&#39;x^{-5} - \dfrac{5}{x^6}y + \dfrac{30}{x^7} = (yx^{-5} - \dfrac{5}{x^6} + C)&#39; \ge 0\)</span></p><p>在结论中凑出来即可证明完毕：</p><p>令 <span class="math inline">\(G(x) = yx^{-5} - 5 x^{-6} - 1\)</span>，则 <span class="math inline">\(G(1) = 0\)</span></p><p><span class="math inline">\(G&#39;(x) = y&#39;x^{-5} -\dfrac{5}{x^6}y + \dfrac{30}{x^7} = \dfrac{1}{x^5}(y&#39; - \dfrac{5}{x}y + \dfrac{30}{x^2}) \ge 0\)</span></p><p>于是 <span class="math inline">\(G(x)\)</span> 单调递增，故 <span class="math inline">\(G(x) \ge G(1) = 0\)</span></p><p><span class="math inline">\(\mathbf{QED}\)</span></p><h1 id="题目378">题目378</h1><p>设 <span class="math inline">\(f(x) = \displaystyle\int_0^x t|x-t|dt - \dfrac{x^2}{6}\)</span>，试求：</p><p>（1）函数 <span class="math inline">\(f(x)\)</span> 的极值和曲线 <span class="math inline">\(y = f(x)\)</span> 的凹凸区间及拐点</p><p>（2）曲线 <span class="math inline">\(y = f(x)\)</span> 与 <span class="math inline">\(x\)</span> 轴围成的区域的面积及绕 <span class="math inline">\(y\)</span> 轴旋转所得旋转体的体积</p><h2 id="解答-10">解答</h2><p>有绝对值，先去绝对值，写出函数的分段：<span class="math inline">\(f(x) = \begin{cases} \displaystyle\int_0^x (tx-t^2) dt - \dfrac{x^2}{6} &amp; x \ge 0 \\\\ \displaystyle\int_0^x (t^2-tx) dt - \dfrac{x^2}{6} &amp; x \lt 0 \end{cases}\)</span></p><p>被积函数幂函数，不妨直接积分出来，有：<span class="math inline">\(f(x) = \begin{cases} \dfrac{1}{6}x^3 - \dfrac{1}{6}x^2 &amp; x \ge 0 \\\\ -\dfrac{1}{6}x^3 - \dfrac{1}{6}x^2 &amp; x \lt 0 \end{cases}\)</span></p><p><strong>求导</strong> 并配合 <strong>导数定义</strong>，有：<span class="math inline">\(f&#39;(x) = \begin{cases} \dfrac{1}{2}x^2 - \dfrac{1}{3}x &amp; x \ge 0 \\\\ -\dfrac{1}{2}x^2 - \dfrac{1}{3}x &amp; x \lt 0 \end{cases}\)</span>，有 <strong>驻点</strong> <span class="math inline">\(x = 0, \pm\dfrac{2}{3}\)</span></p><p>易得有极大值 <span class="math inline">\(f(0) = 0\)</span>，极小值 <span class="math inline">\(f(\dfrac{2}{3}) = -\dfrac{2}{81}, f(-\dfrac{2}{3}) = -\dfrac{2}{81}\)</span></p><p>再求一阶导并配合 <strong>导数定义</strong> 有： <span class="math inline">\(f&#39;&#39;(x) = \begin{cases} x - \dfrac{1}{3} &amp; x \gt 0 \\\\ -x - \dfrac{1}{3}&amp; x \lt 0 \end{cases}\)</span>，易得拐点 <span class="math inline">\((\dfrac{1}{3}, -\dfrac{1}{81}), (-\dfrac{1}{3}, -\dfrac{1}{81})\)</span></p><p>体积可以直接用面积微元法：</p><p><span class="math display">\[\begin{aligned}V = 2\pi \iint\limits_D |x| d\sigma = 2\pi \int_{0}^{1}dx\int_{f(x)}^0 x dy = \dfrac{1}{3}\pi \int_0^1 (x^3 - x^4)dx =  \dfrac{1}{60}\pi\end{aligned}\]</span></p><h1 id="题目379">题目379</h1><p>曲线：<span class="math inline">\(y = e^{\frac{1}{x}}\sqrt{1+x^2}\)</span> 的渐进线条数</p><h2 id="解答-11">解答</h2><p>铅锤渐近线：<span class="math inline">\(x=0\)</span></p><p>没有水平，找斜渐近线可以考虑泰勒展开:</p><p><span class="math display">\[\begin{aligned}e^{\frac{1}{x}}\sqrt{1+x^2} &amp;= |x|e^{\frac{1}{x}}\sqrt{1+\frac{1}{x^2}}\\\\&amp;= |x|(1+\frac{1}{x} + o(\frac{1}{x}))(1+\frac{1}{2x^2} + o(\frac{1}{x^2}))\\\\&amp;= |x|(1+\frac{1}{x} + o(\frac{1}{x}))\\\\&amp;= |x|+\frac{|x|}{x}+o(\frac{|x|}{x})\end{aligned}\]</span></p><p>故有些渐进线：<span class="math inline">\(y = x + 1\)</span> 和 <span class="math inline">\(y = -x - 1\)</span></p><p>共三条</p><h1 id="题目380">题目380</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([-2,2]\)</span> 上二阶可导，且 <span class="math inline">\(|f(x)|\le1\)</span>，又 <span class="math inline">\([f(0)]^2 + [f&#39;(0)]^2 = 4\)</span></p><p>证明：<span class="math inline">\(\exists \xi \in (-2, 2), s.t. f&#39;&#39;(\xi) + f(\xi) = 0\)</span></p><h2 id="解答-12">解答</h2><p><span class="math display">\[(y^2 + y&#39;^2)&#39; = 2y&#39;(y&#39;&#39; + y)\]</span></p><p>故令 <span class="math inline">\(F(x) = f^2(x) + f&#39;^2(x)\)</span>，则 <span class="math inline">\(F(0) = 4\)</span></p><p>现需要凑出微分中值定理的条件，有Rolle中值定理和费马引理</p><p>由于端点信息不多（条件多是不等式关系）考虑能不能证明极值点在区间内取到</p><p>不妨用拉格朗日中值定理在分段点 <span class="math inline">\(0\)</span> 处再将估计区间缩小：</p><p><span class="math inline">\(f(0) - f(-2) = 2f&#39;(\xi_1)\)</span>，<span class="math inline">\(f(2) - f(0) = 2f&#39;(\xi_2)\)</span>，有：</p><p><span class="math inline">\(|f&#39;(\xi_1)| = |\dfrac{f(0) - f(-2)}{2}| \le \dfrac{|f(0)| + |f(-2)|}{2} \le 1\)</span></p><p><span class="math inline">\(|f&#39;(\xi_2)| = |\dfrac{f(2) - f(0)}{2}| \le \dfrac{|f(2)| + |f(0)|}{2} \le 1\)</span></p><p>则在端点 <span class="math inline">\(\xi_1\)</span> 处，<span class="math inline">\(F(\xi_1) = f^2(\xi_1) + f&#39;^2(\xi_1) \le 1 + 1 = 2\)</span>，<span class="math inline">\(\xi_2\)</span> 同理</p><p>又 <span class="math inline">\(F(0) = 4 &gt; 2\)</span>，故最大值不在区间 <span class="math inline">\([\xi_1,\xi_2]\)</span> 的端点处取到，只能在区间内部的极大值点取到</p><p>不妨设该点为 <span class="math inline">\(\xi\)</span>，由 Fermat 引理：<span class="math inline">\(F&#39;(\xi) = 0\)</span>，即 <span class="math inline">\(f&#39;(\xi)(f&#39;&#39;(\xi) + f(\xi))\)</span> = 0</p><p>还需证明处该点处，<span class="math inline">\(f&#39;(\xi)\)</span> 不为零才能得证，可以用反证法：假设 <span class="math inline">\(f&#39;(\xi) = 0\)</span></p><p>则有：<span class="math inline">\(F(\xi) = f^2(\xi) + f&#39;^2(\xi) &lt; 2 &lt; F(0)\)</span> 与 <span class="math inline">\(\xi\)</span> 是极大值点矛盾</p><p>故 <span class="math inline">\(f&#39;(\xi) \ne 0\)</span>，得证：<span class="math inline">\(f&#39;&#39;(\xi) + f(\xi) = 0\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22考研政治套卷整理</title>
      <link href="/graduate_exam/Policy/22poicy/"/>
      <url>/graduate_exam/Policy/22poicy/</url>
      
        <content type="html"><![CDATA[<h1 id="肖秀荣八套卷">肖秀荣八套卷</h1><h2 id="卷一">卷一</h2><h3 id="单选">单选</h3><ol type="1"><li><p>人可以改变自然界的属性、形态，但是不能改变自然界的客观实在性</p><p>人不能摆脱、创造、消灭、改变规律，只能顺应、认识、利用规律</p><p>自然规律发生作用是自发的，但社会规律需要人们的实践活动才能推动（比如价值规律，需要人参与消费）</p></li><li><p>直接经验比间接经验更重要这种话，看到直接叉掉，这两者不存在谁比谁更重要</p><p>语言文化属于社会意识，社会意识随着社会存在的变化发展而不断变化发展，是易变</p><p>社会意识的相对独立性：</p><ol type="1"><li>不完全同步性：<ol type="1"><li>先进意识：马克思对共产主义的描绘</li><li>落后意识：重男轻女</li></ol></li><li>能动反作用：意识指导实践改造物质</li></ol></li><li><p>劳动生产率：劳动者生产 <strong>使用价值</strong> 的能力（使用价值 = 商品本身）</p></li><li><p>根本，直接找keywords - 矛盾、人民、规律、生产力</p><p>适宜的组织形式：跨国公司的发展</p><p>体制保障：各国经济体制的变革</p><p>金融垄断资本形成发展的条件：金融自由化和金融创新</p></li><li><p>八七会议：枪杆子出政权</p><p>《论持久战》：兵民是胜利之本</p><p>《反对本本主义》：没有调查就没有发言权</p><p>六届六中全会：提出马克思主义中国化命题</p></li><li><p>十二大：提出建设有中国特色社会主义命题</p></li><li><p><strong>新发展理念</strong> 的 “根” 和 “魂”：为人民谋幸福、为民族谋复兴</p></li><li><p>新发展阶段的三个依据戴帽子，可以见 30天day22</p></li><li><p>深刻的改变中国 — 辛亥革命，开创了 <strong>完全意义上的近代民族民主革命</strong> 的序幕</p></li><li><p>遵义会议解决了：军事问题、组织问题</p><p>瓦窑堡会议解决了：政治路线问题</p><p>延安整风解决了：思想路线问题</p></li><li><p>只有中国有，别的国家没有：资产阶级靠拢了共产党（工人阶级）（两者本来应该对立）</p></li><li><p>见 30天day04</p></li><li><p>新时代爱国主义教育主题：实现中国梦</p><p>新时代爱国主义教育着力点：维护祖国统一和民族团结</p></li><li><p>根本目的，找keywords，人民</p></li><li><p>共同富裕：</p><ol type="1"><li>根本目的：满足人民日益增长的美好生活需要</li><li>根本 <strong>动力</strong>：改革 <strong>创新</strong></li><li>主攻方向：解决差距</li></ol></li><li><p>协调人与自然关系要以：</p><ol type="1"><li><strong>生态文明建设</strong>为<strong>引领</strong> （理念）</li><li><strong>绿色转型</strong>为<strong>驱动</strong></li><li><strong>人民福祉</strong> 为<strong>中心</strong></li><li><strong>国际法</strong>为<strong>基础</strong></li></ol></li></ol><h3 id="多选">多选</h3><ol start="17" type="1"><li><p>本质是 <strong>相对稳定的</strong>，现象是 <strong>具体的、个别的、多变易逝的</strong></p><p>事物的存在发展由事物内部矛盾运动决定的</p><p>感性认识上升为理性认识：</p><ol type="1"><li>占有丰富而真实的感性材料</li><li>运用 <strong>科学的思维方式</strong> 对感性材料进行加工，做的 <strong>去粗取精、去伪存真、由表及里、由此及彼</strong></li></ol></li><li><p>社会历史发展的基本方向、总进程是由社会基本矛盾决定的，具有客观必然性</p><p>因此，不能说历史人物改变社会历史发展大方向，只能改变个别历史事件</p></li><li><p><strong>价值规律</strong> 内容：价值决定价格，价格围绕价值上下波动（后句是受到供求的影响）</p><p>价值规律是市场经济的一般规律</p><p>起作用的形势可以发生变化：当价值演变成生产价格时，商品的价格就围绕生产价格上下波动</p></li><li><p>垄断资本向世界扩展的三种基本形式：（贷产品）</p><ol type="1"><li>借贷</li><li>生产</li><li>商品</li></ol></li><li><p>苏联当时是战时经济制度 — 余粮收集制度，当时需要鼓励农民的生产热情</p></li><li><p>新发展格局，见 day 22</p><ol type="1"><li><strong>扩大内需</strong>是构建新发展格局的<strong>战略基点</strong></li><li><strong>经济循环畅通无阻</strong>是构建新发展格局的<strong>关键</strong></li><li><strong>实现高水平自立自强</strong>是构建新发展格局的<strong>最本质特征</strong></li></ol></li><li><p>现代化，好的就选就完事了</p></li><li><p>处理政府与市场的关系：两个毫不动摇</p><ol type="1"><li>毫不动摇 <strong>巩固和发展</strong> <strong>公有制经济</strong>，坚持公有制经济的主体地位</li><li>毫不动摇 <strong>鼓励、支持和引导</strong> <strong>非公有制经济</strong>，激发非公有制经济的活力和创造力</li></ol></li><li><p>党的 <strong>民族工作</strong> 的 <strong>主线</strong>：<strong>铸牢中华民族共同体意识</strong></p></li><li><p>人民民主，不是人人民主（人人中包含敌人）</p></li><li><p>共产党最早的组织是在上海建立的（陈独秀干的，李大钊在北京建的晚了两个月）</p></li><li><p>农民是中国革命的主力军（农民人口多）</p><p><strong>革命的根本问题</strong> 是 <strong>国家政权</strong></p></li><li><p>新民主主义革命的胜利 — 二结一废：</p><ol type="1"><li>结束两半社会</li><li>结束中国一盘散沙局面</li><li>废除列强在中的不平等条约和特权</li></ol><p>没有消除帝国主义对中国的威胁和干涉，至今还在用香港台湾问题，试图分裂我国</p></li><li><p><strong>民族精神</strong> 的 <strong>核心</strong>：<strong>爱国主义</strong></p><p><strong>时代精神</strong> 的 <strong>核心</strong>：<strong>改革创新</strong></p></li><li><p>法治 - 法律统治；法制 - 法律制度</p><p>法律统治的前提是有法可依；法律制度设立的目标，立足点，归宿是法律统治</p></li><li><p>载人航天三步走：</p><ol type="1"><li>发射飞船</li><li>出舱活动（2017年天舟一号）</li><li>建立空间站并长期逗留</li></ol></li><li><p>略</p></li></ol><h2 id="卷二">卷二</h2><h3 id="单选-1">单选</h3><ol type="1"><li><p>事物发展</p><ol type="1"><li>斗争性处于主要方面 — 矛盾双方你死我活 — 事物质变</li><li>同一性处于主要方面 — 矛盾双方相安无事 — 事物量变</li></ol><p>事物的发展是螺旋上升，波浪前进的（否定之否定规律）</p><p>矛盾的解决方式：</p><ol type="1"><li>克服</li><li>同归于尽</li><li>形成协同运动新形式（国共两党第二次合作）</li><li>融合成新事物（土豆和优酷合并）</li></ol></li><li><p>社会存在决定社会意识（这里的社会意识是语言）</p><p>社会历史是生产方式的发展史</p><p>生产关系是人们在物质生产中发生的“物质的社会关系”</p></li><li><p>资本主义经济危机<strong>形式上</strong>可能是<strong>货币作为流通和支付手段引起的</strong></p><p>资本主义经济危机的<strong>本质</strong>是<strong>生产相对过剩</strong></p><p><strong>根本原因</strong>是<strong>资本主义基本矛盾</strong>：<strong>生产资料资本主义私人占有与生产社会化的矛盾</strong></p><p>（资本家占有生产资料，为了获得高额利润压低工人工资，工人就没有购买力买资本家生产的产品）</p></li><li><p><strong>垄断资本主义</strong>的<strong>基本特征</strong>：<strong>垄断组织</strong> 在经济生活中起 <strong>决定</strong> 作用</p></li><li><p><strong>基本人权：生存权发展权</strong></p><p><strong>最大人权：为人民谋幸福</strong></p></li><li><p>第一次分配：市场行为（由市场决定）</p><p>第二次分配：政府行为（税收、社保）</p><p>第三次分配：慈善行为</p></li><li><p>国家民主的关键在于：人民当家做主</p></li><li><p><strong>绿色转型的总抓手</strong>：<strong>减污降碳</strong></p><p><strong>绿色转型的源头</strong>：<strong>资源利用</strong></p><p><strong>绿色转型的关键</strong>：<strong>产业结构调整</strong></p></li><li><p>辛亥革命失败的客观原因是两半社会建立资本主义社会行不通，其他都是主观原因</p></li><li><p>略</p></li><li><p>遵义会议解决了军事问题和组织问题，确立了毛泽东的地位，告别王明和共产国际，开始独立自主解决问题</p></li><li><p><strong>“三反”运动</strong> 是为了保护 <strong>党的先进性</strong></p></li><li><p>评价人生价值的</p><ol type="1"><li><strong>根本标准：历史、规律</strong></li><li><strong>普遍标准：劳动、贡献</strong></li></ol></li><li><p><strong>全面依法治国</strong> 中，<strong>法治政府建设</strong> 是 <strong>重点任务</strong> 和 <strong>主体工程</strong></p></li><li><p>略</p></li><li><p>“北京冬奥会” 主题口号：“一起向未来”</p></li></ol><h3 id="多选-1">多选</h3><ol start="17" type="1"><li><p><strong>实践</strong> 是人能动改造世界的 <strong>客观物质性活动</strong></p></li><li><p>略</p></li><li><p><strong>社会必要劳动时间</strong> 决定 <strong>价值量</strong>，<strong>价值量</strong> 决定 <strong>价格</strong></p></li><li><p>阅读理解题，强化市场，弱化政府</p></li><li><p>新经济政策（可以参考当今中国经济政策）</p></li><li><p>马克思主义中国化：</p><ol type="1"><li><strong>马导中（马克思主义引导中国）</strong></li><li><strong>中变马（中国经验上升为马克思主义理论）</strong></li><li><strong>通俗话（中国民族语言来阐述马克思主义理论）</strong></li></ol></li><li><p>共同富裕的概念辨析</p><p>同等和同步富裕是绝对公平理念，这样会使部分人丧失劳动积极性，应该按劳分配为主体</p></li><li><p>推动 <strong>高质量发展</strong> 的依据：<strong>条健矛规</strong></p><ol type="1"><li>发展<strong>条</strong>件的变化作出的科学判断</li><li>经济持续<strong>健</strong>康发展的要求</li><li>社会主要<strong>矛</strong>盾变化的要求</li><li>经济发展<strong>规</strong>律的内在要求</li></ol></li><li><p>胡锦涛：发展是第一要务、立身之本</p></li><li><p>国家安全：</p><ol type="1"><li><strong>人民安全</strong> 是 <strong>宗旨</strong></li><li><strong>政治安全</strong> 是 <strong>根本</strong></li><li><strong>国家利益至上</strong> 是 <strong>准则</strong></li></ol></li><li><p>沙皇专制统治是在二月革命被资产阶级推翻的，然后当年的十月革命资产阶级临时政府又被无产阶级推翻了</p></li><li><p>中国 <strong>一大立党</strong>，<strong>二大立纲</strong> 反帝反封建</p><p>不过这题不是说党一大宣布，是说建立之初，是个模糊概念，可以选</p></li><li><p><strong>九一八</strong> 事变标志着日本 <strong>局部侵华</strong></p><p><strong>七七卢沟桥</strong> 事变标志着日本 <strong>全面侵华</strong></p><p><strong>西安事变</strong> 导致 <strong>国共两党第二次合作</strong> （就是两个人抓了蒋介石，威胁他合作）</p></li><li><p><strong>诚信</strong> 是 <strong>德观典</strong>（<strong>道德规范</strong>，<strong>核心价值观</strong>，<strong>民法典</strong>）</p><p><strong>全心全意为人民服务</strong> 是贯穿中国革命 <strong>道德始终的一根红线</strong></p></li><li><p><strong>依宪治国、依宪执政</strong> 是党的 <strong>工作布局</strong></p></li><li><p>略</p></li><li><p>协调人与自然关系要以：</p><ol type="1"><li><strong>生态文明建设</strong> 为 <strong>引领</strong> （理念）</li><li><strong>绿色转型</strong> 为 <strong>驱动</strong></li><li><strong>人民福祉</strong> 为 <strong>中心</strong></li><li><strong>国际法</strong> 为 <strong>基础</strong></li></ol></li></ol><h2 id="卷三">卷三</h2><h3 id="单选-2">单选</h3><ol type="1"><li><p>实践具有直接现实性</p><p>事物发展的根本原因在于事物的内部矛盾</p></li><li><p>实践决定认识，实践产生认识</p><p>人的属性：</p><ol type="1"><li>自然属性：区别于动物</li><li>社会属性（根本属性）：人是一切社会关系的总和</li></ol></li><li><p>资本的职能：（在循环中的不同职能）</p><ol type="1"><li>买：货币资本</li><li>产：生产资本</li><li>卖：商品资本</li></ol><p>资本在价值增殖过程中作用不同，可以分为：不变资本 和 可变资本</p></li><li><p>有机构成：c / v</p><p>剩余价值率 m' = m / v = 剩余劳动时间 / 必要劳动时间</p><p>利润 p' = p / (c + v)</p><p>p = m 在数值上</p></li><li><p><strong>”十四五“</strong> 时期的<strong>主题</strong>：推动高质量发展（三新一高的一高）</p><p>高质量发展的<strong>主线</strong>：<strong>深化供给侧结构性改革</strong></p><p>构建 <strong>新发展格局</strong>：</p><ol type="1"><li>关键：经济循环畅通无阻</li><li>最本质特征：实现高水平自立自强</li><li>战略基点：扩大内需</li><li>战略方向：供给侧结构性改革</li><li>最终需要主要来源：国内市场</li></ol><p>建设 <strong>现代化经济体系</strong> 主要任务</p><ol type="1"><li><strong>坚实基础</strong>：大力发展 <strong>实体经济</strong></li><li><strong>战略支撑</strong>：实施<strong>创新</strong>驱动发展战略</li><li>重要基础：实施乡村振兴战略</li><li><strong>空间布局</strong>：推动<strong>区域</strong>协调发展</li><li><strong>国际竞争力</strong>：发展<strong>开放</strong>型经济</li><li>制度保障：深化经济体制改革</li></ol></li><li><p><strong>十八大</strong> <strong>最重要</strong>的理论和理念是：<strong>新发展理念</strong>（创协绿开共）</p></li><li><p>全面贯彻 <strong>新发展理念</strong> 需要更加注重 <strong>共同富裕</strong>（之前只看经济发展，忽略了共同富裕的概念）</p><p>其他选项以前也注重</p></li><li><p><strong>中特</strong> 最 <strong>鲜明的特色</strong>：<strong>两结合（理论与实践，制度和文化）</strong></p><p><strong>中特</strong> 最 <strong>本质的特征</strong>：<strong>党的领导</strong></p></li><li><p>建党100周年，“点亮灯塔”</p></li><li><p>略，见带背</p></li><li>伟大的成就：<ol type="1"><li>新民主主义革命 — <strong>根本社会条件</strong></li><li>社会主义革命 — <strong>根本政治前提和制度基础</strong></li><li>改革开放和社会主义现代化建设 — <strong>体制保证和快速发展的物质</strong>条件</li><li>新时代中特 — 更完善的制度，更坚持的物质基础，更主动的精神力量</li></ol></li><li><p>略，见带背</p></li><li><p>信念：执着性、多样性</p><p>理想：超越性、实践性、时代性</p><p>社会主义核心价值观：先进性、人民性、真实性</p></li><li><p>全面依法治国</p><ol type="1"><li>重点 — 公正司法</li><li>前提 — 科学立法</li><li>关键 — 严格执法</li><li>基础 — 全民守法</li></ol></li><li><p>《横琴粤澳深度合作区建设总体方案》澳门建设合作区的初心是：为澳门产业多元发展创造条件</p></li><li><p>上合组织接受为成员国的是：伊朗</p></li></ol><h3 id="多选-2">多选</h3><ol start="17" type="1"><li><p>认识世界的目的是为了改造世界</p><p>偶然不能被消除，不包含偶然的必然事件是不存在的，必然通过偶然表现出来，并未自己开辟道路</p></li><li><p>历史的创造者只包含推动历史进步的人（人民创造历史，而非人人）</p></li><li><p>商品(劳动)卖出去之前，属于私人劳动</p><p>商品(劳动)卖出去之后，属于社会劳动</p><p>私人劳动和社会劳动是私有制商品经济（简单商品经济）的基本矛盾</p><p>对比：资本主义经济的基本矛盾 — 生产资料私人占有和生产社会化</p><p>商品经济的本质 — 交换（私人劳动转化为社会劳动）</p><p>为了让私人劳动得以转化为社会劳动，商品生产者要考虑生产对应的商品</p></li><li><p>2008年金融危机后西方国家的问题</p><ol type="1"><li>经济失调（债经利）<ol type="1"><li>虚实失衡</li><li>福利风险增加</li><li>债务负担沉重</li></ol></li><li>政治失灵（选党英明）<ol type="1"><li>选举难以选贤</li><li>政党利益凌驾于国家之上</li><li>民主阻碍国家治理</li><li>精英政治没落</li></ol></li><li>社会失效（矛极流）<ol type="1"><li>极端思潮抬头</li><li>社会流动性退化</li><li>社会矛盾激化</li></ol></li></ol></li><li><p>略</p></li><li><p>错误表述：人民 <strong>直接参加</strong> 国家管理</p></li><li><p>略</p></li><li><p><strong>毛中特</strong> 考 <strong>生态文明</strong> 基本全选</p></li><li><p><strong>改革开放</strong> 是 <strong>决定</strong> 当代中国命运的 <strong>关键一招</strong></p></li><li><p><strong>党的领导</strong> 是 <strong>中特最本质的特征</strong>，由：史践论决定（历史逻辑、实践逻辑、理论逻辑）</p></li><li><p>党的诞生点亮了实现中华民族伟大复兴的灯塔</p></li><li><p>马克思主义第一次结合 — 土地革命时期，得出了 <strong>武装夺取政权、农村包围城市</strong> 的结论</p></li><li><p>略</p></li><li><p>个人理想的实现以社会理想的实现为前提和基础</p></li><li><p><strong>根本保证</strong> 一定是 <strong>党的领导</strong></p><p><strong>公平公正</strong> 是 法制的生命线、司法的灵魂、社会主义法制的价值追求</p></li><li><p>略</p></li><li><p>略</p></li></ol><h2 id="卷四">卷四</h2><h3 id="单选-3">单选</h3><ol type="1"><li><p>自然环境是人类生存发展的必要条件</p><p>生产方式是人类社会存在发展的基础和前提</p><p>自在自然：原始森林</p><p>人化自然：打上人类活动印记的自然</p></li><li><p>认识一定可以反作用于实践，正确的认识可以指导实践，错误的认识会导致实践失败</p></li><li><p><strong>人的价值要创造，物的价值要转移；具体劳动锁定物，抽象劳动锁定人</strong></p><p><strong>人 — 劳动力价值</strong></p><p><strong>物 — 生产资料的价值</strong></p></li><li><p>绝对剩余价值和相对剩余价值，略</p></li><li><p>全面建成小康社会的 <strong>底线任务</strong> 和 <strong>标志性指标</strong>：<strong>脱贫攻坚</strong></p></li><li><p>新时代党的 <strong>政治建设</strong> 的 <strong>首要任务</strong>：<strong>全党服从中央</strong></p><p>新时代 <strong>党建</strong> 的 <strong>总要求</strong>：</p><ol type="1"><li>以长期<strong>执政能力建设</strong>，<strong>先进性、纯洁性建设</strong>为 <strong>主线</strong></li><li>以<strong>政治建设</strong>为<strong>统领</strong></li><li>以坚定<strong>理想信念宗旨</strong>为<strong>根基</strong></li><li>以调动全当<strong>积极性、主动性、创造性</strong>为<strong>着力点</strong></li></ol></li><li><p>一次分配：市场；二次分配：政府；三次分配：慈善</p></li><li><p><strong>新时代党的民族工作的主线：铸牢中华民族共同体意识</strong></p></li><li><p>鸦片 — 民族意识 <strong>开始觉醒</strong></p><p>甲午 — 民族意识 <strong>普遍觉醒</strong>、标志着洋务运动的失败</p><p>五四 — 民族意识 <strong>全面觉醒</strong> （全阶级参与）</p></li><li><p>《my point of Marxist》</p></li><li><p>略</p></li><li><p>中国共产党为什么能，中国特色社会主义为什么好，归根结底是因为马克思主义行</p><p>腿姐的老口头禅了，这是时政</p></li><li><p>见背诵手册思修部分第三页，道德与法律的对比</p><p>两者都是上层建筑，都服务于一定的经济基础</p></li><li><p>公平正义</p><ol type="1"><li>权利公平</li><li>机会公平</li><li>规则公平</li><li>救济公平：<ol type="1"><li>司法救济公平：司法公正，公正对待每个当事人</li><li>行政救济公平（政府救济）：救济服务一律平等，不能区别对待</li><li>社会救济公平（慈善行为）：社会救济，一视同仁</li></ol></li></ol></li><li><p>祖国统 一 最大障碍是“台独”</p></li><li><p>《生物多样性》大会的主题是：生态文明</p></li></ol><h3 id="多选-3">多选</h3><ol start="17" type="1"><li><p>略</p></li><li><p>马原keywords： 生产（经济）、矛盾（规律）、人民、实践</p></li><li><p>价值规律内容：商品交换以价值量为基础，按等价交换原则进行</p><p>价值规律表现形式：价格围绕价值上下波动</p><p>供不应求，产品涨价，利润增加，于是资本、技术、设备、工人大量涌入；反之降低</p><p>（哪里挣钱，资源就会涌入哪里，这就是价值规律的作用）</p><p>因此价值规律会造成经济社会发展不平衡不充分</p></li><li><p>略</p></li><li><p>略</p></li><li><p>贯彻 <strong>新发展理念</strong> 是我国现代化建设的 <strong>指导原则</strong></p><p>构建 <strong>新发展格局</strong> 是我国现代化建设的 <strong>路径选择</strong></p></li><li><p>文明不存在谁比谁优越，各有千秋</p></li><li><p><strong>全面小康内涵要求</strong></p><ol type="1"><li>覆盖领域全面：<strong>五位一体</strong>（经济、政治、文化、社会、生态文明）</li><li>覆盖人口全面：<strong>一个都不能少</strong></li><li>覆盖区域全面：<strong>城乡、区域协调发展</strong></li></ol></li><li><p><strong>全面依法治国</strong></p><ol type="1"><li>总目标：建设中特 <strong>法治体系</strong>，建设 <strong>法治国家</strong></li><li>重点任务<ol type="1"><li><strong>建设法治体系</strong><ol type="1"><li>完善宪法为核心的 <strong>法律体系</strong></li><li>建立严密的法治 <strong>监督体系</strong></li><li>健全法治 <strong>保障体系</strong></li><li>加强 <strong>党内法规</strong> 建设</li></ol></li><li><strong>建设法治国家</strong><ol type="1"><li>坚持 <strong>三依(依法治国/执政/行政)</strong> 共同推进，<strong>三法一体(法治国家/政府/社会)</strong> 建设</li><li>能不能 <strong>依法治国</strong>，<strong>关键</strong>：<strong>依法执政，依法行政</strong></li><li><strong>法治国家</strong>是法治建设的<strong>目标</strong>，<strong>法治政府</strong>是<strong>重点</strong>，<strong>法治社会</strong>是<strong>基础</strong></li></ol></li></ol></li><li>指导方针：<ol type="1"><li>科学立法（前提）</li><li>严格执法（关键）</li><li>公正司法（重点）</li><li>全民守法（基础）</li></ol></li></ol></li><li><p>中特制度的 <strong>优势</strong>：全国一盘棋，集中力量办大事</p><ol type="1"><li><p>怎么来的？</p><ol type="1"><li>制度怎么来的：党领导人民创建的</li><li>优势怎么来的：党的自身优势锻造出来的</li></ol></li><li><p>如何保障发挥</p><p>要坚持党的领导，因为党自身有优势：科学理论指导，严密组织纪律，初心使命，代表人民群众根本利益</p></li></ol></li><li><p>中共二大开创的多个第一：章宣统领</p><p>《中国共产党章程》，《中国共产党宣言》，统一战线思想，反帝反封纲领</p><p>一大立党，二大立纲</p></li><li><p>略，阅读理解</p></li><li><p>我国<strong>经济社会发展</strong> <strong>立足点</strong>：<strong>独立自主，自力更生</strong></p></li><li><p>爱国主义是历史的，具体的（会变化，具有阶级性），现实的</p></li><li><p><strong>根本保证</strong> 一定是 <strong>党的领导</strong></p><p>力量源泉 是 人民</p><p><strong>平等</strong>是<strong>社会主义法律的基本属性</strong>，<strong>社会主义法治的基本要求</strong></p></li><li><p>时政</p></li><li><p>时政</p></li></ol><h2 id="卷五">卷五</h2><h3 id="单选-4">单选</h3><ol type="1"><li><p>马克思主义产生条件</p><ol type="1"><li>经济社会条件（客观）：资本主义发展</li><li>阶级基础、实践基础（现实需要）：无产阶级反抗资产阶级的斗争</li><li>主观条件<ol type="1"><li>直接理论来源：德英古，英法空（德国古典哲学、英国古典政治经济学、英法两国的空想社会主义）</li><li>自然科学前提：化学生（能量守恒与转化定律、细胞学说、生物进化论）</li></ol></li></ol></li><li><p>物质的唯一特性：客观实在性</p><p>质与事物的存在是直接同一的（质存在，事物存在；质不存在，事物不存在）而量不是</p></li><li><p>必要劳动 = 再生产 <strong>劳动力价值</strong> = 工资</p><p>剩余劳动 = 生产剩余价值 = 被资本家占有</p><p>再生产了足够的劳动力价值，剩余都是归资本家的剩余价值</p></li><li><p>金融寡头对国家的控制</p><ol type="1"><li>经济上：参与制（参股其他所有企业，等于占有整个国家的经济命脉）</li><li>政治上：同政府的 “个人联合”</li><li>文化上：建立政治咨询机构</li></ol></li><li><p>毛泽东思想 <strong>初步形成</strong> （土地革命时期）标志：理论上阐述中国革命新道路（武装夺取政权，农村包围城市）</p><p>毛泽东思想 <strong>趋于成熟</strong> （遵义会议前后）标志：对新民主主义革命的系统阐述</p><p>毛泽东思想 <strong>正式确立</strong> （党的七大）《论联合政府》</p></li><li><p>“十四五”时期经济社会发展的<strong>主题</strong>：<strong>推动高质量发展</strong></p><p><strong>推动高质量发展</strong> 的 <strong>主线</strong> ：<strong>深化供给侧结构性改革</strong></p><p>构建 <strong>新发展格局</strong> 中：</p><ol type="1"><li>关键：经济循环畅通无阻（无关）</li><li>最本质特征：高水平的自立自强（自质）</li><li>战略基点：扩大内需（内急）</li><li>战略方向：供给侧结构性改革（攻略）</li></ol></li><li><p>新发展理念（创协绿开共）</p><ol type="1"><li>创新：引领发展的 <strong>第一动力</strong></li><li>协调：<strong>持续</strong> 健康发展的内在要求</li><li>绿色：<strong>永续</strong> 发展的必要条件</li><li>开放：<strong>繁荣</strong> 发展的必由之路（对比闭关锁国，繁荣必须开放）</li><li>共享：中特 <strong>本质要求</strong></li></ol></li><li><p>统揽 <strong>四个伟大</strong> 分别是：</p><ol type="1"><li>伟大斗争（坏人）：<strong>手段</strong>，激发前进 <strong>动力</strong></li><li>伟大工程（党建）：<strong>保证</strong>，提供前进 <strong>保障</strong>（决定作用）</li><li>伟大事业（中特）：<strong>主题</strong>，开辟前进 <strong>道路</strong></li><li>伟大梦想（中国梦）：<strong>目标</strong>，指引前进 <strong>方向</strong></li></ol></li><li><p>军队建设的核心：能打胜仗</p><p>军队建设的灵魂：听党指挥</p><p>军队建设的保证：作风优良（除了军队，其他一切保证都是党的建设）</p></li><li><p>见带背</p></li><li><p>中国革命三大法宝：统一战线，武装斗争，党的建设</p><p>党的三大优良作风：理论与实践相结合，与人民群众紧密联系在一起，自我批评</p></li><li><p>建党一百周年取得的根本成就：中特</p></li><li><p><strong>革命道德</strong> 的 <strong>灵魂</strong>：为实现社会主义和共产主义而奋斗</p><p><strong>革命道德</strong> 的 <strong>一根红线</strong>：全心全意为人民服务</p></li><li><p>法律至上的表现</p><ol type="1"><li>普遍适用性：对所有人都有约束力（正面）</li><li>优先适用性：与其他社会规范矛盾时，优先适用法律</li><li>不可违抗行：违法必究（反面，一旦你违抗，无论你啥职位，都要惩罚）</li></ol></li><li><p><strong>新时代党的民族工作</strong></p><ol type="1"><li><strong>出发点、落脚点</strong>：<strong>中华民族伟大复兴</strong></li><li><strong>重要任务</strong>：<strong>建设社会主义现代化国家</strong></li><li><strong>主线</strong>：<strong>铸牢中华民族共同体意识</strong></li></ol></li><li><p>时政，“联合国人权理事会”的提议，找人权</p></li></ol><h3 id="多选-4">多选</h3><ol start="17" type="1"><li><p>马原keywords：生产（经济），矛盾（规律），人民，实践</p></li><li><p>价值的构成：</p><ol type="1"><li>主体的需要</li><li>客体的属性</li></ol><p>价值不是主观随意性的活动，是由客体自身属性决定的</p><p>价值的特性：主体性、<strong>客观性</strong>、多维性、社会历史性</p><p>主体与客体的关系有：价值关系、实践关系（基础）、认识关系</p></li><li><p>m'=m/v，p'=p/(c+v)，m=p</p></li><li><p><strong>当代资本主义的变化</strong>（<strong>政制化</strong>）</p><ol type="1"><li>改良主义政党</li><li>法制建设</li><li>政治多元化</li></ol></li><li><p>苏联新经济政策和中国改革开放政策一样，因此这里的农村实行家庭联产承包责任制，而不是农业合作化</p></li><li><p><strong>五环图</strong> ：</p><p><strong>毛泽东思想 — 革命、建设</strong>（新民主主义/社会主义革命 + 社会主义建设）</p><p><strong>中特 — 改革</strong>（改革开放）</p></li><li><p>略</p></li><li><p>社会主义本质：<strong>解放发展生产力、消灭剥削、消除两极分化、实现共同富裕</strong></p><p><strong>党的执政基础：工农联盟</strong></p></li><li><p>铁错表达：人民直接参加国家管理</p></li><li><p><strong>人民健康</strong>：（现代民生）社会主义现代化的重要标志、民族昌盛国家富强的重要标志、幸福生活的重要指标</p><p><strong>民生</strong>：人民幸福之基，<strong>社会和谐之本</strong></p></li><li><p>辛亥革命见带背</p></li><li><p>见带背</p></li><li><p>中国越发展，国际环境越恶劣，这个不是实现民族复兴能影响的</p></li><li><p>评价人生的根本尺度：<strong>规律</strong> 和 <strong>历史</strong></p><p>评价人生的普遍标准：<strong>劳动</strong> 和 <strong>贡献</strong></p></li><li><p>坚持依法治国和以德治国相结合</p><ol type="1"><li>强化 <strong>道德</strong> 对法治的 <strong>支撑作用</strong></li><li>把 <strong>道德要求</strong> 贯彻到 <strong>法治建设</strong> 中</li><li>运用 <strong>法治手段</strong> 解决 <strong>道德领域</strong> <strong>突出问题</strong></li></ol><p><strong>法治</strong>：治国理政 <strong>基本方式</strong></p><p><strong>德治</strong>：治国理政 <strong>重要方式</strong></p></li><li><p>《中国的生物多样性保护》白皮书：（多重发行）</p><ol type="1"><li>尊<strong>重</strong>自然、保护优先</li><li>绿色<strong>发</strong>展、持续利用</li><li>制度先<strong>行</strong>、统筹推进</li><li><strong>多</strong>边主义、合作共赢</li></ol></li><li><p>美国真不行</p></li></ol><h2 id="卷六">卷六</h2><h3 id="单选-5">单选</h3><ol type="1"><li><p>反应性和创造性是同一认识的两个不同方面。认识：</p><ol type="1"><li>反应性：输入信息</li><li>创造性：思考信息</li></ol><p><strong>非理性因素：假设，猜想，信念，意识，情感，冲动，欲望，本能，联想，想象，直觉，灵感</strong></p><p>非理性因素具有激活、驱动、控制作用</p><p>真理可能会过时，但 <strong>不会被推翻</strong> ，凡是经过实践检验的都是真理</p><p>实践可以把观念存在变成现实存在</p></li><li><p>事物都处于永恒运动变化发展之中</p><p>社会意识：</p><ol type="1"><li><p>社会心理：（低层次，以感性认识为主）情感、情绪、风俗、习惯</p></li><li><p>社会意识形式：（高层次的，以理性认识为主）</p><ol type="1"><li><p>社会意识形态：政治法律思想（核心）、道德、宗教、艺术</p><p>具有阶级性</p></li><li><p>非意识形态社会意识形式：自然科学</p><p>不具有阶级性</p></li></ol></li></ol><p>上层建筑：</p><ol type="1"><li>观念上层建筑 = 社会意识形态</li><li>政治上层建筑（主导地位）：政治法律制度，政治组织，国家军队（都是实体的）</li></ol></li><li><p>有机构成=c : v</p><p>m' = m / v ；p' = p / (c+v) ；m = p</p></li><li><p>国家垄断资本主义：国家政权和私人垄断资本融合</p><p>金融资本：工业垄断资本和银行垄断资本融合</p><p>资本集中：大吞小，小合并为大（圈钱）</p><p>资本积累：剩余价值资本化（存钱）</p><p>资本积聚：通过资本积累来增大资本总量（用钱）</p></li><li><p>新民主主义革命时期的五种经济成分：</p><ol type="1"><li>个体经济（占绝对优势，因为当时农业占主导）</li><li>国营经济</li><li>合作社经济</li><li>私人资本主义经济</li><li>国家资本主义经济</li></ol></li><li><p>党的十三大提出社会主义初级阶段的基本路线</p><ol type="1"><li>领导力量、依靠力量：党领导和团结全国人民</li><li>根本立足点：自力更生、艰苦创业</li><li>基本途径：以经济建设为中心，坚持四项基本原则，坚持改革开放（一个中心、两个基本点）</li><li>奋斗目标：实现社会主义现代化</li></ol></li><li><p>新发展格局：无关、自质、内基、攻略</p></li><li><p>最大的人权：人民幸福</p><p>最基本人权：生存发展</p></li><li><p>新民主主义革命(1919-1949)：创造 <strong>根本社会条件</strong>（民族独立、人民解放）</p><p>社会主义革命和建设(1953-1978)：奠定了根本政治前提和制度基础（社会主义制定）</p><p>改革开放和现代化建设(1978-2012)：提供了充满活力的体制保证（中特体制）和快速发展的物质条件（四十年经济成就）</p><p>新时代中特主义(2012-今)：三个更为（完善、坚实、主动）</p></li><li><p>党百年奋斗得出（今年必考的建党100周年）</p><ol type="1"><li>历史结论：走自己的路</li><li>根本成就：中特</li></ol></li><li><p>洛川会议（川面）全面的全民族的抗战</p></li><li><p><strong>党对军队的绝对领导</strong> 的根本原则和制度，发端于南昌起义，奠基于三湾改编，定型于古田会议</p></li><li><p>社会主义核心价值观，洗脑了已经，选不出来先枪毙一分钟</p></li><li><p>全面依法治国：</p><ol type="1"><li>前提：科学立法</li><li>关键：严格执法（与群众密切相关）</li><li>重点：公正司法（维护社会公平正义与 <strong>最后一道防线</strong>）</li><li>基础：全民守法</li></ol></li><li><p>完善香港选举制度的核心是：重新构建选举委员会和增加赋权</p></li><li><p>“服贸会”主题：开启未来（开会）</p></li></ol><h3 id="多选-5">多选</h3><ol start="17" type="1"><li><p>keywords</p></li><li><p>真理和谬误的对立是绝对的（真理的绝对性）</p></li><li><p>资本周转速度加快可以增加年剩余价值量，但是不影响剩余价值率(m/v不变)</p><p>加快流动资本周转速度当然可以加快资本周转速度的</p></li><li><p>垄断高价：提高商品销售价格</p><p>垄断低价：压低采购原材料价格</p><p>商品的价值 = 生产他的社会必要劳动时间</p><p>必要劳动时间绝对价值，价值决定价格，始终不变（1k的手机，垄断市场最多也就3k，他不可能卖到1w吧，所以价值仍然决定价格，额外加的是垄断利润）</p></li><li><p>略</p></li><li><p><strong>国家富强</strong> 、<strong>民族振兴</strong> 是 <strong>人民幸福</strong> 的 <strong>基础</strong> 和 <strong>保障</strong> （因果关系不要错）</p><p><strong>人民幸福</strong> 是 <strong>国家富强</strong> 和 <strong>民族振兴</strong> 的 <strong>题中应有之义</strong> 和 <strong>必然要求</strong> 、 <strong>根本出发点</strong> 和 <strong>落脚点</strong></p></li><li><p><strong>新发展阶段</strong> 的 <strong>理论依据</strong> ：找马克思观点</p><p>区别于历史依据（站富强）和现实依据（雄厚的物质基础）</p></li><li><p>新型政党制度：<strong>多党合作</strong> 和 <strong>政协制度</strong></p></li><li><p><strong>全面建成小康社会</strong> 的 <strong>底线任务</strong> 和 <strong>标志性指标</strong>：脱贫攻坚（底裤脱掉，噗）</p></li><li><p>略</p></li><li><p>旧三民主义</p><ol type="1"><li>民族主义：驱除鞑虏，恢复中华（反帝不明确，反封不彻底）</li><li>民权主义：创立民国（忽略广大劳动群众）</li><li>民生主义：平均地权（没有触及封建土地所有制）</li></ol></li><li><p>遵义会议，见带背</p></li><li><p>时代的主题和任务：革命与战争</p></li><li><p>普世（世界通用） — 资本主义的代名词，铁错</p></li><li><p>略</p></li><li><p>略</p></li><li><p>略</p></li></ol><h2 id="卷七">卷七</h2><h3 id="单选-6">单选</h3><ol type="1"><li><p>实践是真理与价值统一的基础：</p><ol type="1"><li>价值的实现以真理为前提</li><li>人获取价值的内在尺度推动人们不断发现新的真理</li></ol></li><li><p>生产资料所有权的归属是判定社会经济结构性质的依据</p><p>生产力的发展决定社会基本矛盾运动</p></li><li><p>劳动力：劳动能力</p><p><strong>劳动力成为商品</strong> 是 <strong>简单商品生产</strong> 发展到 <strong>资本主义商品生产</strong> 的新阶段的 <strong>标志</strong></p><p>简单商品生产也是社会分工</p><p>简单商品生产中，生产资料归劳动者，产品归社会</p></li><li><p>当 <strong>利润</strong> 变成 <strong>平均利润</strong>：</p><ol type="1"><li>商品价值转化为生产价格</li><li>价值规律表现形式发生变化，价格围绕生产价格上下波动</li></ol><p><strong>生产价格 = 生产成本 + 平均利润</strong></p><p>生产成本 = 不变资本 + 可变资本</p></li><li><p><strong>统一战线</strong>：</p><ol type="1"><li>主题：大团结大联合（题大大）</li><li>方针：坚持一致性与多样性统一（真挚）</li><li>根本任务：争取人心，凝聚力量（本人）</li></ol><p>人民政协履职基本遵循：围绕中心、服务大局</p></li><li><p>十四五时期经济社会发展的主题：推动高质量发展</p><p>高质量发展主线：供给侧结构性改革</p><p>构建新发展格局（内基，无关，自质，攻略）</p></li><li><p>坚定中国特色社会主义<strong>道路自信、理论自信、制度自信、文化自信</strong>，说到底就是要坚定 <strong>文化自信</strong></p></li><li><p>收入分配：扩大中等收入群体，增加低收入者收入，调节过高收入，取缔非法收入，覆盖全体社会成员</p></li><li><p>《中华民国临时约法》以根本大法方式废除封建君主专制；确立了三权分立，主权在民的共和体制</p><p>近代中国第一个比较系统的发展资本主义的方案是《资政新篇》</p></li><li><p><strong>中国共产党</strong> 的 <strong>精神之源</strong> ：<strong>建党精神</strong></p></li><li><p>《论反对日本帝国主义的策略》 — 瓦窑堡会议 — 解决了政治路线问题</p></li><li><p>根本保证 — 党的领导</p></li><li><p>贯穿中国 <strong>革命道德</strong> 始终的一条 <strong>红线</strong>：<strong>全心全意为人民服务</strong></p><p><strong>革命道德</strong> 的 <strong>灵魂</strong> ：不屈不挠的精神 （精灵）</p></li><li><p><strong>法治与人治</strong> 的 <strong>分水岭</strong> ：最高权威是法律还是个人</p></li><li><p>神舟十三特点：</p><ol type="1"><li><strong>径向</strong> 交会对接</li><li>核心舱、货运飞船、载人飞船、组合运行</li><li>空间站驻留 6 个月</li><li>女航天员进入空间站</li></ol></li><li><p>一带一路</p><ol type="1"><li>秉持原则：共商共建共享（援建（元件））</li><li>合作理念：开放、绿色、廉洁（理廉洁）</li><li>合作目标：高标准、惠民生、可持续（标准）</li></ol></li></ol><h3 id="多选-6">多选</h3><ol start="17" type="1"><li><p>实践决定认识</p><p>认识与实践具有不完全同步性：</p><ol type="1"><li>先进认识：预测、预言</li><li>落后认识：重男轻女</li></ol><p>认识与实践的统一：</p><ol type="1"><li>具体的：针对特定客体</li><li>历史的：存在于某个历史阶段</li></ol></li><li><p>肯定因素：促使现存事物存在的因素</p><p>否定因素：促使现存事物灭亡的因素</p><p>肯定因素居支配地位 -&gt; 事物存在 -&gt; 量变过程</p><p>否定因素居支配地位 -&gt; 事物灭亡，变成另一事物 -&gt; 质变过程</p></li><li><p>可变资本：购买劳动力所画的资本</p><p>不变资本：购买 <strong>生产资料</strong> 所花的资本（不改变自身价值量，不发生价值增值）</p><p>不变资本不一定是一次性转移全部价值（机器就是多年累计折旧）</p></li><li><p>资本主役政治制度的局限性表现在：民主、选举、平等</p><p>金钱操控下的民主、选举实际上是有钱人的游戏、法律上人人平等的选举掩盖了事实上的不平等</p><p>资本主义并不是始终阻碍社会进步，与封建君主专制比较是进步</p></li><li><p>无产阶级政党是无产阶级的先进分子组建的</p></li><li><p>略</p></li><li><p>高质量发展：<strong>人民</strong> 和 <strong>理念</strong> 的发展</p></li><li><p>“爱国者治港”：（三zhi一深）</p><p>全面管制；限制秩序；长治久安；深层次问题得到有效解决（港独）</p></li><li><p>国家安全：</p><ol type="1"><li>宗旨 — 人民安全</li><li>根本 — 政治安全（党的领导和中特制度不动摇）</li><li>准则 — 国家利益至上</li></ol></li><li><p>全面建成小康社会，见到好的就选（党的领导，生态环保）</p></li><li><p>略，见带背 — 辛亥革命（三个没改变）</p></li><li><p>长征的过程召开了遵义会议，结束后开始北上抗日，开始实习实现民族独立、人民解放而斗争的新的伟大进军</p></li><li><p>略</p></li><li><p>略，语文题，搞人心态</p></li><li><p>中特法治前进方向</p><ol type="1"><li>党的领导 （谁领导）</li><li>以人民为中心 （依靠谁）</li><li>坚持中国特色社会主义法治道路 （走什么道路）</li></ol><p>全面依法治国的总抓手：中特法治体系</p></li><li><p>反外国制裁法时政，与人类命运共同体无关</p></li><li><p>时政</p></li></ol><h2 id="卷八">卷八</h2><h3 id="单选-7">单选</h3><ol type="1"><li><p>实践决定认识，实践是认识的来源</p><p>主客体之间的三个关系：价值关系、实践关系、认识关系，其中最基础最根本的是实践关系</p></li><li><p>时空是客观的；静止是相对的，是运动的特殊状态；物质唯一特性是客观实在性</p></li><li><p>私人劳动：商品没卖出去前，生产商品所耗费的一切劳动就是为自己而劳动</p><p>社会劳动：商品卖出去之后，生产商品所耗费的一切劳动就是为社会而劳动</p></li><li><p>资本 — 剩余价值 — 剥削 — 增殖</p></li><li><p>社会主要矛盾：</p><ol type="1"><li><p>建国前：</p><ol type="1"><li>人民大众同封建主义的矛盾（阶级矛盾）</li><li>中华民族同帝国主义的矛盾（民族矛盾）</li></ol><p>特点：外敌入侵时，民族矛盾上升为主要矛盾；国内革命时，阶级矛盾上升为主要矛盾</p></li><li><p>建国后：</p><ol type="1"><li>1949-1952(前三年)：人民大众同帝国主义(没消失过)、封建主义、国民党残余势力之间的矛盾（完成遗留任务）</li><li>1952-1956(后三年)：工人阶级同资产阶级的矛盾（三大改造，把资本主义经济变为国营经济，即赎买）（土改刚结束）</li><li>1956-1981：人民对经济文化迅速发展的需要同当前经济文化不能满足人民需要状况之间的矛盾</li><li>1981-2017：人民日益增长的物质文化需要同落后的社会生产力之间的矛盾</li><li>2017至今（新时代）：人民日益额增长的美好生活需要和不平衡不充分发展之间的矛盾</li></ol></li></ol></li><li><p>三新一高：</p><ol type="1"><li><strong>新发展阶段</strong>：明确我国发展的 <strong>历史方位</strong></li><li><strong>新发展理念</strong>：明确我国现代化建设的 <strong>指导原则</strong></li><li><strong>新发展格局</strong>：明确我国经济现代化和 <strong>路径选择</strong></li><li><strong>高质量发展</strong>：“十四五”时期经济社会发展的 <strong>主题</strong></li></ol></li><li><p>革命年代，毛泽东同志认为 <strong>思想建设</strong> 应该摆在 <strong>首位</strong></p><p>中国特色社会主义建设时期 <strong>政治建设</strong> 应该摆在 <strong>首位</strong></p><p>新时代党建：以 <strong>政治建设</strong> 为 <strong>统领</strong></p></li><li><p>乡村建设：</p><ol type="1"><li><strong>总目标</strong>：<strong>农业乡村现代化</strong></li><li><strong>总方针</strong>：<strong>农业农村优先</strong> （全局）</li><li><strong>总要求</strong>：<strong>产业兴旺</strong>、生态宜居、乡风文明、治理有效、生活富裕 （具体）</li><li>制度保障：建立健全城乡，融合发展体制机制</li></ol><p>新时代党的 <strong>政治建设</strong> 的 <strong>首要任务</strong>：<strong>全党服从中央</strong></p><p>新时代 <strong>党建</strong> 的 <strong>总要求</strong>：</p><ol type="1"><li>以长期<strong>执政能力建设</strong>，<strong>先进性、纯洁性建设</strong>为 <strong>主线</strong></li><li>以<strong>政治建设</strong>为<strong>统领</strong></li><li>以坚定<strong>理想信念宗旨</strong>为<strong>根基</strong></li><li>以调动全当<strong>积极性、主动性、创造性</strong>为<strong>着力点</strong></li></ol></li><li><p>近代人物篇：</p><ol type="1"><li>林则徐：睁眼看世界第一人，《四州志》</li><li>魏源：师夷长技以制夷，近代向西方学习的新风，《海国图志》</li><li>郑观应：主张“军民共主”，《盛世危言》</li><li>严复：<strong>喊出“救亡“口号</strong> ，“物竞天择适者生存”，《天演论》</li><li>孙中山：<strong>喊出“振兴中华”口号</strong></li></ol></li><li><p><strong>中共八届九中全会</strong>（大跃进、自然灾害背景）：<strong>调整、巩固、充实、提高</strong> 的 <strong>经济建设方针</strong></p><p><strong>中共八大</strong>：<strong>既反保守又反冒进，即在综合平衡中稳步前进</strong> 的 <strong>经济建设方针</strong></p></li><li><p><strong>国民党</strong> 政府的统治和 <strong>北洋军阀</strong> 的统治都是 <strong>地主阶级</strong> 和 <strong>买办性的大资产阶级</strong> 的统治</p></li><li><p>瓦窑堡会议：解决了 <strong>政治路线</strong> 问题；提出 <strong>抗日民族统一战线</strong> 的可能</p><p>洛川会议：制定 <strong>抗日救国十大纲领</strong> ；提出 <strong>全面的全民族的抗战</strong></p></li><li><p>对 <strong>人</strong> 的认识 <strong>核心</strong> 在于 <strong>人的本质</strong></p></li><li><p><strong>中特法制道路</strong> 本质上是 <strong>中特道路在法治领域的具体体现</strong></p><p>全面依法治国的总抓手：建设中特 <strong>法治体系</strong></p></li><li><p><strong>党的灵魂和旗帜</strong>：<strong>马克思主义</strong></p></li><li><p>“达沃斯议程” 对话会主题：把握关键之年，重建各方信任 （沃尔沃）</p><p>服贸会：开启未来</p></li></ol><h3 id="多选-7">多选</h3><ol start="17" type="1"><li><p>略</p></li><li><p>意识能动作用：意识指导实践改造、创造物质</p><p>人的本质力量：实践能力、认识能力</p><p>实践、认识、意识是人所特有的</p></li><li><p><strong>资本主义经济危机</strong> 实际上是 <strong>以强制的方式解决社会再生产实现问题的途径</strong></p><p>周期：危机 -&gt; 萧条 -&gt; 复苏 -&gt; 高涨</p></li><li><p><strong>垄断</strong> 没有消除 <strong>产生竞争的经济条件</strong> — 市场经济（肖八垄断，但是没有消除市场经济，各种押题卷如雨后春笋出现）</p><p><strong>垄断</strong> 必须通过 <strong>竞争</strong> 来维持（肖八靠押题质量与其他押题卷竞争，维护垄断地位）</p><p><strong>垄断</strong> 组织不可能吧包罗万象的社会生产全部包下来（很好理解）</p><p>价值规律的作用形式变化：</p><ol type="1"><li><strong>原本形式</strong>：<strong>价格</strong> 围绕 <strong>价值</strong> 上下波动</li><li><strong>利润变成平均利润后，价值转化成生产价格</strong>：<strong>价格</strong> 围绕 <strong>生产价格</strong> 上下波动</li><li><strong>垄断利润后</strong>：<strong>价格</strong> 围绕 <strong>垄断价格</strong> 上下波动</li></ol></li><li><p>空想社会主义者：</p><ol type="1"><li>理论上致力于对社会制度的分析</li><li>对资本主义旧制度的辛辣批判，包含着许多切中要害的见解</li><li>对社会主义新制度的描绘，闪烁着诸多天才的火花</li></ol></li><li><p>新民主主义革命：反帝反封 + 民族独立、人民解放</p><p>社会主义革命：废除一切剥削制度，变私有制为公有制，实现国家富强，人民富裕</p><p>一次革命论错误：没有看到二者的区别</p><p>二次革命论错误：没有看到二者的联系</p><p>正确革命论：一次革命分两步走</p></li><li><p><strong>八个明确</strong>：回答新时代坚持和发展 <strong>什么样</strong> 的中国特色社会主义 what (理论，指导思想)</p><p>（总任务，主要矛盾，总体布局，依法治国总目标，强军目标，外交目标，最本质特征）</p><p><strong>十四个坚持</strong>：回答新时代 <strong>怎样</strong> 坚持和发展中国特色社会主义 how (实践)</p><p>（党的领导、人民为中心、改革、新法治理念...）</p></li><li><p><strong>组成部分</strong>：由什么组成（笼统抽象）</p><p><strong>实现形式</strong>：如何实现（具体）</p><p>公有制经济的<strong>实现形式</strong>：国有企业</p><p>非公有制经济的<strong>实现形式</strong>：民营企业</p><p>公有制和非公有制经济是中国经济制度的<strong>组成部分</strong></p></li><li><p>全面依法治国中的三法一体：</p><ol type="1"><li>法治国家是法治建设的目标</li><li>法治政府是法治建设的重点，具有示范带动作用</li><li>法治社会是法治建设的基础</li></ol></li><li><p>略</p></li><li><p>略</p></li><li><p>初步提出可以选，但是建设中特一定是中共十二大</p></li><li><p>党的历史上具有深远意义的伟大转折：改革开放</p></li><li><p>世界观决定人生观，人生观决定价值观（世界观 -&gt; 人生观 -&gt; 价值观）</p></li><li><p>宗教自由</p></li><li><p>时政</p></li><li><p>时政</p></li></ol><h1 id="腿姐四套卷">腿姐四套卷</h1><h2 id="卷一-1">卷一</h2><blockquote><p>-8 单选错了：5、11 多选错了：18、27、28</p></blockquote><h3 id="单选-8">单选</h3><ol type="1"><li>周年纪念文献：<ol type="1"><li>《资本论》 —— 揭示 <strong>剩余价值学说</strong>，被誉为 “<strong>工人阶级圣经</strong>”</li><li>《共产党宣言》 —— 标志着 <strong>马克思主义的正式诞生</strong></li></ol></li><li><p><strong>信念</strong> 属于 <strong>非理性因素</strong>，<strong>非理性因素</strong> 具有 <strong>激活、驱动和控制</strong> 作用</p><blockquote><p><strong>非理性因素</strong> 一般有：假设，猜想，信念，意识，情感，冲动，欲望，本能，联想，想象，直觉，灵感</p></blockquote></li><li><strong>剩余价值率</strong> 的两个计算公式：<strong>m'</strong> = <strong>m / c</strong> = <strong>剩余劳动时间 / 必要劳动时间</strong> &gt; 拓展一下基础知识： &gt; 1. <strong>利润率</strong> 的计算公式：<strong>p'</strong> = <strong>p / (c+v)</strong> &gt; 2. <strong>在数值上 p = m</strong> &gt; 3. <strong>价格</strong> = <strong>生产成本(c+v) + 平均利润 + (垄断利润)</strong> &gt; 因此垄断市场下，价值的表现形式会改变（加上垄断利润）但本质还是围绕价值上下波动的 &gt; 可以理解为一个函数在纵轴上有的偏移量</li><li>生产集中：生产资料、劳动力和商品的生产日益集中于少数大企业的过程 资本集中（圈钱）：大吞小，小并大 生产集中和资本集中是资本家追逐剩余价值和自由竞争的结果 <strong>经济危机</strong> 的 <strong>本质</strong>：<strong>生产相对过剩</strong>；<strong>根本原因</strong> 是：<strong>生产社会化和生产资料资本主义私人占有的矛盾</strong></li><li>周年纪念：1992 年 <strong>南方谈话</strong> 标志着 <strong>邓小平理论</strong> 上升到了新高度。</li><li><strong>三新一高，必背内容</strong>： <strong>“十四五”</strong> 时期经济发展的 <strong>主题</strong>：<strong>推动高质量发展</strong>（三新一高的高） <strong>高质量发展</strong> 的 <strong>主线</strong>：<strong>深化供给侧结构性改革</strong> 构建 <strong>新发展格局</strong>：<ol type="1"><li>自质：<strong>最本质特征</strong> 是 <strong>高水平的自立自强</strong></li><li>无关：<strong>关键</strong> 是 <strong>经济循环畅通无阻</strong></li><li>内急：<strong>战略基点</strong> 是 <strong>扩大内需</strong></li><li>攻略：<strong>战略方向</strong> 是 <strong>供给侧结构性改革</strong></li></ol><strong>三新</strong> 之间的关系：<ol type="1"><li><strong>新发展阶段</strong> 是 <strong>现实依据</strong></li><li><strong>新发展理念</strong> 是 <strong>行动指南</strong></li><li><strong>新发展格局</strong> 是 <strong>战略选择</strong> （抉择、先手棋、举措）</li></ol>建设 <strong>现代化经济体系</strong> 的主要任务：<ol type="1"><li><strong>坚实基础</strong> 是 大力发展 <strong>实体经济</strong></li><li><strong>战略支撑</strong> 是 实施 <strong>创新</strong> 驱动发展战略</li><li><strong>重要基础</strong> 是 实施 <strong>乡村振兴</strong> 战略</li><li><strong>制度保障</strong> 是 深化经济体制 <strong>改革</strong></li><li>空间布局 是 推动区域协调发展</li><li>国际竞争力 是 发展 <strong>开放</strong> 型经济</li></ol></li><li>中央民族工作会议：<ol type="1"><li>民族工作取得的 <strong>最大成就</strong> ：<strong>走出了一条中国特色解决民族问题的正确道路</strong> 。</li><li>民族工作的 <strong>出发点和落脚点</strong> ：<strong>实现中华民族伟大复兴</strong></li><li>民族工作的 <strong>主线</strong> ：<strong>铸牢中华民族共同体意识</strong></li></ol></li><li><strong>脱贫攻坚</strong> 取得的巨大成就：区域性整体贫困得到解决，完成了消除绝对贫困的艰巨任务 注意其他选项的时态：<ol type="1"><li>共同富裕还没实现</li><li>我国现阶段主要矛盾是发展不平衡不充分，还没解决</li><li>人的全面发展是马克思主义的终极目标，还没实现</li></ol></li><li>常规题：<strong>旧民主主义</strong> 的 <strong>终结标志</strong> ：<strong>护法运动</strong></li><li>几个关键人物：<ol type="1"><li><strong>陈望道：《共产党宣言》中文全译本（真理的味道有点甜）</strong></li><li><strong>蔡和森：中共共产党名称（菜名）</strong></li><li>李大钊：中国第一个马克思主义者，记住他的文章</li><li>陈独秀：创办《青年杂志》 3和4背烂了，1和2是周年纪念，赶快背一下</li></ol></li><li><strong>工农兵代表大会制度</strong> 是 <strong>土地革命时期</strong> ，在中国共产党领导下建立起来的中华苏维埃共和国属性的根本政治制度 是 1931年 周年纪念</li><li>《论十大关系》、《正处》还有八大和六届六中全会，有关 <strong>马克思主义中国化</strong> 的问题 （因为苏联不喜欢这个“马克思主义中国化”的说法，因此字面上只提出了一次，在六届六中全会上） 《论十大关系》关键字 <strong>探索</strong> 中国自己的社会主义建设道路 《正确处理人民内部矛盾问题》明确提出走出一条 <strong>有别于苏联</strong> 的中国工业化道路</li><li><strong>道德</strong> 的起源 的 <strong>首要前提</strong>：<strong>劳动</strong> <strong>道德</strong> 的起源 的 <strong>客观条件</strong>：<strong>社会意识</strong> <strong>道德</strong> 的起源 的 <strong>思想前提</strong>：<strong>意识</strong></li><li><strong>全面依法治国</strong> ：<ol type="1"><li>总目标：建设 <strong>中特法治体系</strong> ，建设 <strong>法治国家</strong></li><li>重点任务<ol type="1"><li>建设中特法治体系<ol type="1"><li><strong>完备的法律规范体系</strong> 是 <strong>前提</strong></li><li><strong>高效的法治实施体系</strong> 是 <strong>重点</strong></li><li><strong>完善的党内法规体系</strong> 是 <strong>本质要求</strong></li></ol></li><li>建设法治国家<ol type="1"><li><strong>三依</strong> 共同推进（<strong>依法治国、依法执政、依法行政</strong>），<strong>三法一体</strong> 建设（<strong>法治国家、法治政府、法治社会</strong>）</li><li>能不能 <strong>依法治国</strong> 的关键是：<strong>依法执政</strong> 和 <strong>依法行政</strong></li><li><strong>法治国家</strong> 是法治建设的 <strong>目标</strong>，<strong>法治政府</strong> 是 <strong>重点</strong>，<strong>法治社会</strong> 是 <strong>基础</strong></li></ol></li></ol></li></ol></li><li>首次火星探测任务着陆火星去的成功标志着（每个选项留个映像，多选不会觉得错就行）<ol type="1"><li>首次实现地火专业轨道探测器发射</li><li>首次实现行星星际飞行</li><li>首次实现地外行星软着陆</li><li>首次实现地外行星表面巡视探测</li><li>首次实现 4 亿公里距离的测控通信</li><li>首次获取第一手的活性数据（干扰项：月球、空间站）</li></ol></li><li><p>中美外交考态度和站队，说美国不好就是对的</p></li></ol><h3 id="多选-8">多选</h3><ol start="17" type="1"><li>时间和空间在一定范围下才能说有限，大范围下是无限的</li><li>领袖人物能决定 <strong>个别</strong> 历史事件，但是不能决定总体历史进程和方向</li><li>商品经济的基本矛盾是 <strong>私人劳动同社会劳动之间的矛盾</strong> 说白了就是生产一个产品，没卖出前是属于 <strong>私人劳动</strong>，卖出去后属于 <strong>社会劳动</strong>（所以生产者要生产有人买的东西） 而解决这一矛盾的手段是 <strong>商品交换</strong> 而货币的出现不但没有解决这一矛盾，还使得矛盾加剧了（为了攒钱，克制消费） 货币的 <strong>流通</strong> 和 <strong>支付</strong> 手段使经济危机的爆发在形式上有了可能 其他都是书上原话的正确表述</li><li>垄<strong>断资本向世界扩展的基本形式</strong>（<strong>贷产品</strong>）：借贷、生产、商品</li><li><strong>共产主义远大理想</strong> 和 <strong>中特共同理想</strong> 的辩证统一（围围巾）：时间、层次、范围</li><li><strong>根本保证</strong> 一定是 <strong>党的领导</strong></li><li>三新一高中的 <strong>新发展阶段</strong>：<ol type="1"><li><strong>理论依据</strong>：<strong>马克思主义</strong> 有关的内容</li><li><strong>历史依据</strong>：从 <strong>站富到强</strong> 的历史性跨越</li><li><strong>现实依据</strong>：雄厚的 <strong>物质基础</strong></li></ol></li><li>评价中特制度好坏的，一般全选（你敢说不好吗）</li><li>人民健康和绿色发展没关系，属于 <strong>类别不对应</strong></li><li>好的就选，没什么好说的</li><li>中国近代是 <strong>两半性质</strong> 而非完全资本主义或者完全封建主义的原因：<ol type="1"><li>西方列强不原因中国成为完全资本主义国家（为了更多的剥削）</li><li>封建生产关系在社会经济生活中占明显优势（还处在清朝末期的封建君主统治之下）</li><li>外资和官资在中国资本主义经济中占主要和支配地位</li></ol></li><li>九一八事变：抗日战争的起点；中国局部抗战；世界反法西斯战争序幕 七七卢沟桥事变：全民抗战的起点；开辟世界反法西斯东方主战场</li><li>十一届六种全会的意义（除了书上的，还有今年的七一讲话和十九届六中全会新加内容） 关键字：科学评价毛；指导思想上的拨乱反正；否定了文化大革命；为中特提出做铺垫；什么是、如何建设中特 注意：正式提出中特建设是在之后的十二大（属于在提出之前的一些说法，例如铺垫，基础，就是十一届六/三中）</li><li>法律至上的具体表现形式：<ol type="1"><li>普遍适用性（讲 <strong>正面</strong>，任何身份都受用）</li><li>优先适用性（和其他冲突时，优先执行法律）</li><li>不可违抗性（讲 <strong>负面</strong>，任何身份犯了法都要收到制裁，区别于第一条）</li></ol></li><li>谁敢说习思想不好？出题人？</li><li>上海和一国两制差了十万八千里吧</li><li>“五个坚持” 五选四肯定是全选</li></ol><h2 id="卷二-1">卷二</h2><blockquote><p>-7 单选：3、13、14 多选：22、32</p></blockquote><h3 id="单选-9">单选</h3><ol type="1"><li><strong>周年纪念</strong><ol type="1"><li>法国里昂工人起义：法国历史上第一次工人武装起义、标志着世界无产阶级登上历史的舞台（1831年）</li><li>巴黎公社：无产阶级夺取政权的第一次伟大尝试（1871年）</li></ol></li><li>keywords 找第一T队的词：生产(经济)、实践、人民、规律(矛盾) <strong>经济基础</strong> 决定 <strong>上层建筑</strong> 事物普遍 <strong>联系</strong> 的 <strong>基础</strong> 是物质 <strong>运动</strong></li><li>资本主义经济危机 <strong>周期性</strong> 爆发的原因在于：<strong>资本主义基本矛盾运动的阶段性</strong>（危机-萧条-复苏-高涨） <strong>经济危机</strong> 的 <strong>本质</strong>：<strong>生产相对过剩</strong> <strong>经济危机</strong> 的 <strong>根本原因</strong>：<strong>资本主义的基本矛盾</strong>（生产资料资本主义私人占有与生产社会化的矛盾） <strong>经济危机</strong> <strong>形式上</strong> 的 <strong>可能</strong> 原因：<strong>货币作为流通和支付手段引起的</strong></li><li>资本家提高技术是为了追逐超额剩余价值 追逐 <strong>超额剩余价值</strong> 的结果是带来了 <strong>相对剩余价值</strong></li><li>社会主义解放发展生产力的根本目的是“消灭剥削，消除两极分化，最终达到共同富裕”</li><li>三新一高和现代化经济体系，见卷一第六题总结</li><li>生态环境保护取决于经济结构和经济发展方式（keywords选T1，"生产"替换词是"经济"） <strong>生态文明建设</strong> 的 <strong>核心</strong> 是 <strong>坚持人与自然和谐共生</strong> 我国的基本国策是节约资源和保护环境（这种具体措施不可能选在根本理念里；理念是不具体的）</li><li>时政《新时代的中国国际发展合作》白皮书：<ol type="1"><li>崇高使命：构建人类命运共同体</li><li>其他的不考</li></ol></li><li><strong>中国人民第一次大规模的反侵略武装斗争</strong> — <strong>广州三元里人民抗英斗争</strong> （1841）</li><li><strong>同盟会</strong> 发动的影响最大的一次 <strong>起义</strong> — <strong>黄花岗起义</strong> （1911）</li><li>《<strong>论反对日本帝国主义的侵略</strong>》— 解决了 <strong>政治路线</strong> 问题 《<strong>中国革命战争的战略问题</strong>》— 解决了 <strong>军事路线</strong> 问题 《<strong>矛盾论</strong>》和《<strong>实践论</strong>》— 阐明了党的马克思主义 <strong>思想路线</strong> 《<strong>改造我们的学习</strong>》 — 整风运动期间，先在党的高级干部中开展的著作</li><li><strong>中共八大</strong> 分析了社会主义改造完成后中国社会的主要矛盾和主要任务 <strong>根本任务</strong> 是 <strong>在新的生产关系下保护和发展生产力</strong> <strong>经济建设</strong> 上提出了 <strong>既反保守又反冒进，即在综合平衡中稳步前进</strong> 的方针以及"三个主体，三个补充"的思想 《正处》中提出了社会主义社会的两类不同性质的社会矛盾 — <strong>敌我矛盾</strong> 和 <strong>人民内部矛盾</strong></li><li>古文题，古文渣渣路过 "志士仁人，无求生以害仁，有杀身以成仁"：为实现“仁”的理想即使献出生命也在所不惜</li><li><strong>平等</strong> 是 <strong>社会主义法律</strong> 的 <strong>基本属性</strong>，是 <strong>社会主义法治</strong> 的基本要求</li><li><strong>最基本</strong> 的人权：<strong>生存发展权</strong> <strong>最大</strong> 的人权：<strong>人民幸福生活</strong> 是先人权的 <strong>最大障碍</strong>：<strong>贫困</strong></li><li>时政，背</li></ol><h3 id="多选-9">多选</h3><ol start="17" type="1"><li><strong>联系</strong> 是 <strong>客观的</strong> <strong>自然环境</strong> 对应 <strong>永恒</strong></li><li>决定性keywords找第一T队关键字 真理的发展上看，人类的认识永远处在由真理的相对性走向绝对性的转化和发展过程中 任何成功的实践是 <strong>价值尺度</strong> 和 <strong>真理尺度</strong> 的统一，是 <strong>合规律性</strong> 和 <strong>合目的性</strong> 的统一</li><li><strong>超额剩余价值</strong> 是每个资本家不多改进技术的驱动力，是不会消失的 资本家会控制事业人口 <strong>规模</strong> 来缓解失业问题，从而更好的剥削</li><li>垄断利润的来源（4条是全选，不用细背）</li><li>任何发展都是多样化的，从未有过 "一种模式" 和 "一条道路"</li><li><strong>社会主义建设</strong> 的正反两方面经验教训是 "<strong>邓伦</strong>" 形成的历史根据</li><li>群众 <strong>不能直接</strong> 参与国家事务管理，应该是 <strong>选举人大代表</strong> 参与国家事物管理 <strong>人民代表大会制度</strong> 是我国 <strong>根本政治制度</strong> 我国 <strong>基本政治制度</strong>：政协制度、民族区域自治制度、基层群众自治制度</li><li>建设文化强国（全选）</li><li>实施 <strong>乡村振兴</strong> 战略 - 现代化经济体系的 <strong>重要基础</strong>，关系到全面建设社会主义现代化国家的全局性、历史性任务，是新时代"<strong>三农</strong>"工作 <strong>总抓手</strong></li><li>推动高质量发展和生态文明建设无关</li><li><strong>马克思主义中国化</strong> 是 <strong>六届六中全会</strong> 提出的，时间上差了很多哦</li><li>中国共产党早期组成成立后做的事情（全选）</li><li><strong>农业国</strong> 转变为 <strong>工业国</strong>，<strong>新民主主义社会</strong> 转变为 <strong>社会主义社会</strong> 是 <strong>七届二中全会</strong> 提出的</li><li>略</li><li><strong>仲裁法</strong> 的原则：<strong>自愿、仲裁独立、一裁终局</strong></li><li>"<strong>神十二</strong>"要额外记住的：<ol type="1"><li>首次进入 <strong>空间站</strong></li><li>进入 <strong>太空站</strong> 时期</li><li>首次实施 <strong>自主快速交会对接</strong> 任务</li><li>首次 <strong>径向交会</strong></li></ol>"<strong>天文六</strong>"要额外记住的：<ol type="1"><li><strong>火星</strong> 上 <strong>首次</strong> 留下中国人足迹</li><li>首次完成火星 <strong>环绕、着陆、巡视</strong> 三大目标（绕陆巡）</li><li>标志着我国在 <strong>行星探测领域</strong> 跨入世界先进行列</li></ol></li><li>"上合" 主要成就（五选四，全选）</li></ol><h2 id="卷三-1">卷三</h2><blockquote><p>-15 单选：7 多选：18、19、20、22、24、26、28</p></blockquote><h3 id="单选-10">单选</h3><ol type="1"><li>《德意志意识形态》首次阐明了历史唯物主义观点</li><li>唯心史观和唯物史观的对立（今年不太会考）</li><li><strong>资本主义简单再生产</strong>：<strong>物质资料再生产</strong> 和 <strong>资本主义生产关系再生产</strong> 的统一</li><li>m'=m/v, p'=p/(c+v)</li><li>我国政党区别于其他政党的 <strong>根本标志</strong>：全心全意为人民服务（根本标志，出发点、落脚点一定是人民） 我国政党区别于其他政党的 <strong>显著标志</strong>：勇于自我革命 党的 <strong>思想路线</strong> ：解放思想、实事求是 党的 <strong>三大优良作风</strong> ：理论与实际相结合，与人民群众紧密的联系在一起，批评与自我批评</li><li>新发展理念（括号内是19届6中全会新说法，一起记忆）<ol type="1"><li>创新：引领发展的 <strong>第一动力</strong></li><li>绿色：<strong>永续</strong> 发展的必要条件（普遍形态）</li><li>协调：<strong>持续</strong> 健康发展的内在要求（内生特点）</li><li>开放：国家繁荣的 <strong>必由之路</strong></li><li>共享：中特的 <strong>本质要求</strong>（根本目的）</li></ol></li><li>“<strong>一国两制</strong>”的 <strong>根本原则</strong>：<strong>爱国者治港</strong> “<strong>一国两制</strong>”的 <strong>根本保证</strong>：<strong>党的领导</strong> <strong>港澳立身之本</strong>，解决港澳各种问题的 <strong>金钥匙</strong>，<strong>第一要务</strong> ：<strong>发展</strong> 两岸关系的 <strong>政治基础</strong> ：“<strong>九二共识</strong>” （一个中国原则） “<strong>台独</strong>”分裂是 <strong>祖国统一</strong> 的 <strong>最大障碍</strong>，是 <strong>民族复兴</strong> 的 <strong>严重隐患</strong></li><li><strong>党</strong> 在新时代的 <strong>强军目标</strong>：建设一支<strong>听党指挥、能打胜仗、作风优良</strong>的人民军队<ol type="1"><li>军队建设的 <strong>核心</strong>：<strong>能打胜仗</strong></li><li>军队建设的 <strong>灵魂</strong>：<strong>听党指挥</strong></li><li>军队建设的 <strong>保证</strong>：<strong>作风优良</strong>（除了军队，其他一切保证都是党的建设）</li></ol></li><li><strong>《辛丑条约》</strong> 的签订标志着清政府已经 <strong>彻底放弃</strong> 了抵抗外国侵略者的念头，甘当“<strong>洋人的朝廷</strong>” <strong>中日甲午战争</strong> 爆发后，列强对中国的争夺和瓜分的图谋达到 <strong>高潮</strong></li><li><strong>辛亥革命失败</strong> 的根本(客观原因)是因为 <strong>在帝国主义时代，在两半的中国，资本主义建国方案行不通</strong></li><li>中国第一个 <strong>农民协会</strong> 是 <strong>浙江萧山县衙前村农民协会</strong> （1921）</li><li><strong>《中华人民共和国土地改革法》</strong> 对待富农的态度：保存富农经济 <strong>《兴国土地法》</strong>：依靠贫农、雇农，联合中农，限制富农，保护中小工商业者，消灭地主阶级 <strong>抗日战争时期</strong> ：减租减息 <strong>《中国土地法大纲》</strong>：<strong>废除</strong> 封建性及半封建性剥削的土地制度，实现 <strong>耕者有其田</strong> 的土地制度</li><li><strong>理想</strong>：<strong>超越性、实践性、时代性</strong>（超时代） <strong>信念</strong>：<strong>多样性、执着性</strong>（多汁juicy） <strong>信仰</strong> 是 <strong>最高层次的信念</strong>，具有最大的统摄力</li><li><strong>全面依法治国</strong> ：<ol type="1"><li>总目标：建设 <strong>中特法治体系</strong> ，建设 <strong>法治国家</strong></li><li>重点任务<ol type="1"><li>建设中特法治体系<ol type="1"><li><strong>完备的法律规范体系</strong> 是 <strong>前提</strong></li><li><strong>高效的法治实施体系</strong> 是 <strong>重点</strong></li><li><strong>完善的党内法规体系</strong> 是 <strong>本质要求</strong></li></ol></li><li>建设法治国家<ol type="1"><li><strong>三依</strong> 共同推进（<strong>依法治国、依法执政、依法行政</strong>），<strong>三法一体</strong> 建设（<strong>法治国家、法治政府、法治社会</strong>）</li><li>能不能 <strong>依法治国</strong> 的关键是：<strong>依法执政</strong> 和 <strong>依法行政</strong></li><li><strong>法治国家</strong> 是法治建设的 <strong>目标</strong>，<strong>法治政府</strong> 是 <strong>重点</strong>，<strong>法治社会</strong> 是 <strong>基础</strong></li></ol></li></ol></li><li>指导方针：<ol type="1"><li><strong>前提</strong> —— <strong>科学立法</strong></li><li><strong>基础</strong> —— <strong>全民守法</strong></li><li><strong>重点</strong> —— <strong>公正司法</strong></li><li><strong>关键</strong> —— <strong>严格执法</strong></li></ol></li></ol></li><li><strong>全过程民主</strong> （四选三）<ol type="1"><li><strong>过程</strong> 民主和 <strong>成果</strong> 民主</li><li><strong>程序</strong> 民主和 <strong>实质</strong> 民主</li><li><strong>直接</strong> 民主和 <strong>间接</strong> 民主</li><li>人民民主和国家意志相统一；全链条、全方位、全覆盖的民主；最广泛、最真实、最管用的民主</li></ol></li><li>美国坏坏</li></ol><h3 id="多选-10">多选</h3><ol start="17" type="1"><li><p>联系是客观的，不能被创造</p></li><li><p><strong>真理</strong> 和 <strong>谬误</strong> 在 <strong>一定范围内</strong> 的 <strong>对立</strong> 是 <strong>绝对的</strong>，超出一定范围就会 <strong>相互转化</strong></p></li><li>商品拜物教（四选三）：<ol type="1"><li><strong>私有制商品经济条件</strong> 下劳动产品只有采取 <strong>商品</strong> 的形式才能进行 <strong>交换</strong>，人类劳动的等同性只有采取同质的价值形式才能在交换中体现出来</li><li>劳动量只有采取 <strong>价值量</strong> 这一物的形式才能进行计算和比较</li><li>生产者的劳动关系的社会性质只有采取商品之间，即物与 <strong>物之间相互交换的形式</strong> 才能间接地表现出来，这就使 <strong>人们之间一定的社会关系被物与物的关系所掩盖</strong>，具有了拜物教性质 &gt; 是 <strong>简单商品时期</strong> 的产物，此时还没有货币，只能 <strong>物与物</strong> 进行交换 &gt; 干扰项：资本主义经济，货币</li></ol></li><li><p><strong>当代资本主义新变化</strong> 的 <strong>实质</strong>：资本主义制度基本框架内的调整（本质还是资本主义，终将灭亡）</p></li><li><strong>新经济政策</strong> 的 <strong>特征</strong> ：以发展 <strong>商品经济</strong> 为主要特征的新经济政策 内容：<ol type="1"><li>用 <strong>粮食税制</strong> 取代 <strong>余粮收集制</strong></li><li>允许 <strong>私人自由贸易</strong> ，恢复 <strong>商品货币</strong> 关系</li><li>允许私人小工业企业发展，采取一些 <strong>国家资本主义</strong> 的形式来发展生产</li></ol><p>标志：列宁正在 <strong>探索</strong> 一条符合俄国国情的建设社会主义道路</p>意义：<ol type="1"><li>扭转了国家的严重危机</li><li>活跃了苏维埃的 <strong>城乡经济</strong></li><li>加强了苏维埃的社会主义 <strong>经济基础</strong></li><li>改善了工人、农民和其他劳动者的 <strong>物质文化生活</strong></li></ol>干扰项：<ol type="1"><li>战时共产主义</li><li>斯大林模式（国防、重工业、第一个五年计划）</li><li><strong>列宁晚年</strong> 提出了 <strong>建设社会主义的新构想</strong>：<ol type="1"><li><strong>合作社的形式</strong></li><li>大工业（不是重工业）</li><li>...... （多选肯定全选）</li></ol></li></ol></li><li><p>第一个十五年计划：<strong>基本实现社会主义现代化</strong> （2020-2035） 第二个十五年计划：<strong>建成社会主义现代化强国</strong> （2035-2050）</p></li><li><p>三新一高帽子题，注意新发展阶段，在 <strong>质</strong> 上仍然是 <strong>社会主义初级阶段</strong>，没有进入新阶段 但在 <strong>量</strong> 上已经是几十年的积累了</p></li><li><p>激发市场的主体活力（两个毫不，然后这题居然要选资本家，蚌埠住了）</p></li><li><p>略</p></li><li><strong>中国共产党的领导</strong> 是 <strong>中特</strong> 的 <strong>最大优势</strong> 体现在（四选三）：<ol type="1"><li><strong>党</strong> 是 <strong>中特</strong> 制度的创建者</li><li><strong>党的领导</strong> 是充分发挥 <strong>中特</strong> <strong>制度优势</strong> 的 <strong>根本保障</strong></li><li><strong>党的自身优势</strong> 是 <strong>中特</strong> <strong>制度优势</strong> 的 <strong>主要来源</strong></li></ol><p>党的 <strong>思想路线</strong>：<strong>解放思想、实事求是</strong></p></li><li><p>带背会议篇</p></li><li>抗日民族统一战线：<ol type="1"><li>中国共产党必须保持思想上、政治上、组织上的 <strong>独立性</strong>；</li><li>坚持对人民军队的 <strong>绝对领导</strong>；</li><li>对国民党采取 <strong>又团结又斗争</strong>、以斗争求团结的方针</li></ol><p>一切经过统一战线，一切服从统一战线，这是王明的左倾关门主义错误，正确理念应当 <strong>独立自主</strong></p></li><li><p>第一次决议的内容，注意可能会出第二次决议的干扰项</p></li><li><p>好的就选</p></li><li>文化教育权利<ol type="1"><li>教育方面的权利：表现为 <strong>受教育的权利</strong> ，是公民 <strong>接受文化、科学等方面训练的权利</strong></li><li>文化方面的权利：表现为 <strong>科学研究的自由</strong>、<strong>文艺创作的自由</strong> 和 <strong>从事其他文化活动的自由</strong></li></ol></li><li><p>习思想好啊</p></li><li><p>肖八原题，生物多样性肯定是全选</p></li></ol><h2 id="卷四-1">卷四</h2><blockquote><p>-15</p><p>单选：1、6、14</p><p>多选：19、23、25、28、31、32</p></blockquote><h3 id="单选-11">单选</h3><ol type="1"><li><p>马克思主义的</p><ol type="1"><li>科学性：对 <strong>本质</strong> 和 <strong>规律</strong> 的反映</li><li>革命性：彻底的 <strong>批判精神</strong> 和 <strong>鲜明的无产阶级立场</strong></li><li>实践性：马克思主义 <strong>首要的和基本的观点</strong></li><li>人民性：<strong>政治立场</strong> 和 <strong>鲜明品格</strong></li><li>开放发展性：开放指对不同文化的包容，发展指与时俱进</li></ol></li><li><p>必然与偶然的关系，见带背</p><p>必然寓于偶然之中，必然通过偶然表现出自己，并为自己开辟道路</p></li><li><p>马克思主义 <strong>经济理论</strong> 的基石：<strong>剩余价值学说</strong></p></li><li><p>列宁新经济政策有关，见卷三 21 题</p></li><li><p><strong>人民至上</strong> 是贯穿 <strong>习近平新时代中国特色社会主义思想</strong> 的 <strong>一根红线</strong></p><p><strong>实事求是</strong> 是贯穿 <strong>毛泽东思想</strong> 和 <strong>中国特色社会主义理论</strong> 的 理论 <strong>精髓</strong></p></li><li><p><strong>乡村振兴</strong> 的 <strong>关键</strong> 是 <strong>乡村产业要振兴</strong></p><p><strong>巩固脱贫攻坚的成果</strong> 是实现 <strong>乡村振兴</strong> 的目标之一</p><p><strong>促进农业供给侧结构性改革</strong> 是农业农村工作的 <strong>主线</strong></p><p><strong>加快农业农村现代化</strong> 是 <strong>新发展阶段乡村振兴</strong> 的 <strong>主题</strong></p></li><li><p>“<strong>一国两制</strong>”的 <strong>根本原则</strong>：<strong>爱国者治港</strong></p><p>“<strong>一国两制</strong>”的 <strong>根本保证</strong>：<strong>党的领导</strong></p><p><strong>港澳立身之本</strong>，解决港澳各种问题的 <strong>金钥匙</strong>，<strong>第一要务</strong> ：<strong>发展</strong></p><p>两岸关系的 <strong>政治基础</strong> ：“<strong>九二共识</strong>” （一个中国原则）</p><p>“<strong>台独</strong>”分裂是 <strong>祖国统一</strong> 的 <strong>最大障碍</strong>，是 <strong>民族复兴</strong> 的 <strong>严重隐患</strong></p></li><li><p>全面深化改革要坚持正确的方法：<strong>加强顶层设计和摸着石头过河相结合</strong> 是富有中国特色、社符合中国国情的改革方法</p></li><li><p>见带背，new wind</p></li><li><p><strong>政治建设</strong> 是党的 <strong>根本性建设</strong>，<strong>思想建设</strong> 是党的 <strong>基础性建设</strong></p><p>由此来推：<strong>建设根据地</strong> 的 <strong>首要的、根本的</strong> 任务是 <strong>政治建设</strong></p></li><li><p>1948年秋，进入决战时期，这个应该都选的出来</p></li><li><p>《<strong>正处</strong>》在解决<strong>人民内部矛盾</strong>问题上的四个策略</p><ol type="1"><li><strong>政治思想领域</strong>：<strong>团结-批评-团结</strong></li><li><strong>物质利益、分配方面</strong>：<strong>统筹兼顾，适当安排</strong></li><li><strong>科学文化领域</strong>：<strong>“百家争鸣、百花齐放”</strong></li><li><strong>共产党和民主党</strong>：<strong>“长期共存、互相监督”</strong></li></ol></li><li><p><strong>革命道德</strong>：</p><ol type="1"><li><strong>灵魂</strong>：<strong>坚定理想和信念的不屈不挠的精神</strong>（精灵）</li><li><strong>红线</strong>：<strong>全心全意为人民服务</strong></li></ol></li><li><p><strong>中华传统美德</strong> 的 <strong>根本要求</strong> ：“<strong>公义胜私欲</strong>”</p></li><li><p>党史学习，就是：<strong>学史明理、学史增信、学史崇德、学史力行</strong>，其中 <strong>学史力行</strong> 是 <strong>落脚点和出发点</strong></p></li><li><p><strong>中国共产党和世界政党领导人峰会</strong> 的主题 <strong>为人民谋幸福：政党的责任</strong></p></li></ol><h3 id="多选-11">多选</h3><ol start="17" type="1"><li><p>感性认识是可靠的，但是是有局限的</p></li><li><p>社会形态更替归根结底是社会基本矛盾运动的结果，不以人的意志为转移</p></li><li><p>价值是凝结在商品中的无差别的一般人类劳动，即人脑力和体力的耗费（抽象劳动）。</p><p>使用价值不同的商品之所以能按一定比例交换，是因为它们都有价值。商品价值在质的规定上是相同的，因而彼此可以比较。</p><p>使用价值构成社会物质财富的物质内容。</p></li><li><p>劳动力成为商品具备的条件（四选二）</p><ol type="1"><li>劳动者是自由人，能够把自己的劳动力当作自己的商品来支配</li><li>劳动者没有别的商品可以出卖，自由的一无所有</li></ol></li><li><p>垄断不能消除竞争（四选三）</p><ol type="1"><li>垄断没有消除产生竞争的经济条件</li><li>垄断必须通过竞争来维持</li><li>任何垄断组织都不可能把包罗万象的社会生产都包下来</li></ol></li><li><p>人才 — 资源</p><p>创新 — 第一动力，战略支撑，根本之策，核心位置，关键</p><p>科技 — 生产力</p></li><li><p>民主是世界各国人民的权利，不是哪个国家的专利（2021-9-21 联合国大会上习大大的发言）</p></li><li><p>《加强基层治理体系和治理能力现代化建设的意见》多选全选</p></li><li><p>共同富裕</p><ol type="1"><li>是人民群众物质生活和精神生活都富裕，不是少数人富裕，也不是整齐划一的平均主义</li><li>全体人民共同富裕是一个总体概念，是对全社会而言的，要从全局上来看</li><li>不是所有人都同时富裕，也不是所有地区同时达到一个富裕水平，不同人群不仅实现富裕的程度有高有低，时间上也会有先有后，不同地区的富裕程度还会存在一定差异，也不可能齐头并进</li><li>这是一个动态中向前发展的过程，要持续推进，不断取得成效</li></ol></li><li><p><strong>全面从严治党</strong> 是一场 <strong>自我革命</strong></p><p><strong>勇于自我革命</strong> 是中国共产党区别于其他政党的 <strong>显著标志</strong></p><p><strong>全心全意为人民服务</strong> 是中国共产党区别于其他政党的 <strong>根本标志</strong></p><p><strong>中国特色社会主义</strong> <strong>最本质的特征</strong> ：<strong>党的领导</strong></p></li><li><p>辛亥革命100周年，见带背</p></li><li><p>中国共产党一开始就是以马克思主义理论为基础的党</p><p>大革命失败后，土地革命早期找到了中国革命的道路：工农武装割据</p></li><li><p>此处问新民主主义革命时期进行的社会主义革命任务，D选项不属于社会主义革命任务</p></li><li><p>爱国主义相关</p></li><li><p><strong>法律权利与义务</strong> 的 <strong>关系</strong></p><ol type="1"><li>辩证统一<ol type="1"><li>不可分割、相互依存的关系</li><li>目的与手段的关系</li><li>复合性的关系</li></ol></li><li><strong>一律平等</strong> （四选三）<ol type="1"><li>法律权利与法律义务平等表现为法律面前人人平等，是现代法治的基本原则</li><li>在法律权利和法律义务的具体设定上要平等</li><li>权力与义务的实现要体现平等</li></ol></li><li>互利共赢</li></ol><p><strong>法律权利与义务</strong> 的 <strong>特征</strong></p><ol type="1"><li>受社会物质生活条件的 <strong>约束</strong></li><li>因社会制度和国家法律的不同而 <strong>存在差异</strong></li><li>法律权利由法律规定或许可，而且手法律维护或保障</li><li>法律权利必须依法行使，不能不择手段的行使法律权利</li></ol></li><li><p>没有消除压力</p></li><li><p>全选</p></li></ol><h1 id="肖秀荣四套卷">肖秀荣四套卷</h1><h2 id="卷一-2">卷一</h2><h3 id="单选-12">单选</h3><ol type="1"><li><p>认识世界的目的是为了改造世界</p><p>人类认识世界改造世界的目的是：满足人类自身需要</p><p>实践三种类型：</p><ol type="1"><li>物质生产实践（最基本）</li><li>科学文化实践</li><li>社会政治实践</li></ol></li><li><p>社会意识的相对独立性：</p><ol type="1"><li>不完全同步性<ol type="1"><li>先进意识：预测、预言、马克思主义</li><li>落后意识：重男轻女（落后的社会意识对社会发展起到阻碍作用）</li></ol></li><li>能动反作用：社会意识可以反过来作用于社会存在，指导实践改造社会存在</li></ol></li><li><p>利润的本质：剩余价值</p><p>利润掩盖了 <strong>剩余价值</strong> 与 <strong>可变资本</strong>（劳动力价值）的关系</p><p>干扰项：资本家认为 <strong>利润</strong> 是 <strong>全部垫付资本</strong> 的产物（然而实际上是工人的剩余价值创造的，即可变资本创造的）</p><p>利润和剩余价值的来源相同：都是由雇佣工人剩余劳动创造</p></li><li><p><strong>社会再生产</strong> 的 <strong>核心</strong> ：</p><ol type="1"><li><strong>价值补偿</strong>（对生产投资后要收到利润才会再投资从而再生产）</li><li><strong>实物补偿</strong>（生产资料消耗的补充）</li></ol></li><li><p><strong>三新一高</strong>，必背内容：</p><p>“十四五” 时期经济发展的 <strong>主题</strong>：<strong>推动高质量发展</strong>（<strong>三新一高的高</strong>）</p><p><strong>高质量发展</strong> 的 <strong>主线</strong>：<strong>深化供给侧结构性改革</strong></p><p>构建 <strong>新发展格局</strong>：</p><ol type="1"><li>自质：<strong>最本质特征</strong> 是 <strong>高水平的自立自强</strong></li><li>无关：<strong>关键</strong> 是 <strong>经济循环畅通无阻</strong></li><li>内急：<strong>战略基点</strong> 是 <strong>扩大内需</strong></li><li>攻略：<strong>战略方向</strong> 是 <strong>供给侧结构性改革</strong></li></ol><p><strong>三新</strong> 之间的关系：</p><ol type="1"><li><strong>新发展阶段</strong> 是 <strong>现实依据</strong></li><li><strong>新发展理念</strong> 是 <strong>行动指南</strong></li><li><strong>新发展格局</strong> 是 <strong>战略选择</strong> （<strong>抉择、先手棋、举措</strong>）</li></ol><p>建设 <strong>现代化经济体系</strong> 的主要任务：</p><ol type="1"><li><strong>坚实基础</strong> 是 大力发展 <strong>实体</strong> 经济</li><li><strong>战略支撑</strong> 是 实施创新驱动发展 <strong>战略</strong></li><li><strong>重要基础</strong> 是 实施 <strong>乡村振兴</strong> 战略</li><li><strong>制度保障</strong> 是 深化经济体制 <strong>改革</strong></li><li><strong>空间布局</strong> 是 推动 <strong>区域</strong> 协调发展</li><li><strong>国际竞争力</strong> 是 发展 <strong>开放</strong> 型经济</li></ol></li><li><p><strong>新时代党的民族工作</strong>，必备内容</p><ol type="1"><li><strong>出发点</strong>、<strong>落脚点</strong>：<strong>中华民族伟大复兴</strong></li><li><strong>重要任务</strong>：<strong>建设社会主义现代化国家</strong></li><li><strong>主线</strong>：<strong>铸牢中华民族共同体意识</strong></li></ol></li><li><p><strong>三次分配</strong>，必备内容</p><ol type="1"><li><strong>一次分配</strong> 看 <strong>市场</strong>（工资）</li><li><strong>二次分配</strong> 看 <strong>政府</strong>（低保、医保）</li><li><strong>三次分配</strong> 看 <strong>慈善</strong>（捐款）</li></ol></li><li><p>全党要 <strong>牢记</strong> 的 <strong>根本问题</strong> 是：中国共产党是什么、要干什么 （老干妈）</p></li><li><p><strong>《辛丑条约》</strong> 的签订标志着清政府已经 <strong>彻底放弃 了抵抗外国侵略者的念头，甘当“洋人的朝廷”</strong></p></li><li><p>第一次论战：</p><ol type="1"><li>维新派 vs 守旧派（资产阶级思想 vs 封建主义思想）</li><li>内容：要不要变法</li></ol><p>第二次论战：</p><ol type="1"><li>维新派 vs 革命派</li><li>内容：划清了 <strong>革命</strong> 与 <strong>改良</strong> 的界限</li></ol></li><li><p><strong>资产阶级革命派</strong> 的弱点、错误，根源上讲是因为 <strong>自身的软弱性和妥协性</strong></p></li><li><p>《正处》必背内容</p><p><strong>《关于正确处理人民内部矛盾的问题》</strong>明确提出要走一条 <strong>有别于苏联</strong> 的中国 <strong>工业化</strong> 道路。</p><p>《<strong>关于正确处理人民内部矛盾的问题</strong>》中提出<strong>敌我矛盾</strong>是 <strong>对抗性</strong> 矛盾，要用 <strong>专政</strong> 的方法来解决；<strong>人民内部矛盾</strong>是 <strong>非对抗性</strong> 矛盾，要用 <strong>民主</strong> 的方法来解决。</p><p><strong>人民内部矛盾</strong> 的 <strong>民主</strong> 解决<strong>方式</strong>主要有：</p><ol type="1"><li><strong>政治思想领域</strong>： <strong>团结-批评-团结</strong> 的方针；</li><li><strong>物质利益分配方面</strong>： <strong>统筹兼顾、适当安排</strong> 的方针；</li><li><strong>科学文化领域</strong>： <strong>“百花齐放、百家争鸣”</strong> 的方针；</li><li><strong>对于共产党和民主党派的矛盾</strong>： <strong>“长期共存、互相监督”</strong> 的方针。</li></ol><p>社会主义国家 <strong>政治生活</strong> 的 <strong>主题</strong> 是 <strong>关于正确处理人民内部矛盾的问题</strong> ，这一论断的 <strong>根本着眼点</strong> 在于 <strong>调动一切积极因素，团结一切可以团结的力量</strong> ，把全党的注意力转到社会主义建设上来。</p></li><li><p><strong>评价人生价值</strong> 的 <strong>根本尺度</strong> —— <strong>规律</strong> 和 <strong>历史</strong></p><p><strong>评价人生价值</strong> 的 <strong>普遍标准</strong> —— <strong>劳动贡献</strong></p></li><li><p><strong>全面依法治国</strong> ：</p><ol type="1"><li><strong>总目标</strong>：建设 <strong>中特法治体系</strong> ，建设 <strong>法治国家</strong></li><li><strong>重点任务</strong><ol type="1"><li><strong>建设中特法治体系</strong><ol type="1"><li>完备的法律规范体系 是 前提</li><li>高效的法治实施体系 是 重点</li><li>完善的党内法规体系 是 本质要求</li></ol></li><li><strong>建设法治国家</strong><ol type="1"><li><strong>三依</strong> 共同推进（<strong>依法治国</strong>、<strong>依法执政</strong>、<strong>依法行政</strong>），<strong>三法一体</strong> 建设（<strong>法治国家</strong>、<strong>法治政府</strong>、<strong>法治社会</strong></li><li>能不能 <strong>依法治国</strong> 的 <strong>关键</strong> 是：<strong>依法执政</strong> 和 <strong>依法行政</strong></li><li><strong>法治国家</strong> 是法治建设的 <strong>目标</strong>，<strong>法治政府</strong> 是 <strong>重点</strong>，<strong>法治社会</strong> 是 <strong>基础</strong></li></ol></li></ol></li><li><strong>指导方针</strong>：<ol type="1"><li><strong>前提</strong> —— <strong>科学立法</strong></li><li><strong>基础</strong> —— <strong>全民守法</strong></li><li><strong>重点</strong> —— <strong>公正司法</strong></li><li><strong>关键</strong> —— <strong>严格执法</strong></li></ol></li></ol></li><li><p><strong>十九届六中全会</strong> 的 <strong>最重要成果</strong> 是 <strong>第三次决议</strong> ——<strong>《xxx百年xxx决议》</strong></p></li><li><p><strong>中美关系</strong>：</p><ol type="1"><li>奥巴马：不冲突不对抗、相互尊重、合作共赢</li><li>川普：无</li><li><strong>拜登</strong>：<strong>和平共处</strong>、相互尊重、合作共赢</li></ol><p>不冲突不可能了，尽量和平共处，不要打仗吧，美国坏坏</p></li></ol><h3 id="多选-12">多选</h3><ol start="17" type="1"><li><p><strong>哲学上的物质</strong>，其 <strong>时间、空间</strong> 既是 <strong>有限的</strong>、又是 <strong>无限的</strong></p><p>区别于：<strong>具体物质形态</strong> 的 <strong>时间、空间</strong> 是 <strong>有限的</strong> （现在坐在电脑前的我，终将死去）</p><p>物质、运动、时间、空间具有内在统一性：</p><ol type="1"><li>物质是运动的载体</li><li>运动是物质的根本属性</li><li>时间、空间是物质运动的存在形式</li></ol><p>不存在离开时间和空间的物质运动</p></li><li><p><strong>价值评价</strong> 以客体对主体的价值大小为对象，以 <strong>善、美</strong> 为认识目的</p><p><strong>知识性认识</strong> 以客体的属性、规律为对象，以 <strong>真</strong> 为目的</p><p>虽然具有 <strong>主观性</strong>、有差异 ，但评价结果仍有 <strong>正确、错误</strong> 之分（读书有没有用）</p><p>符合真理的价值评价就是正确认识</p></li><li><p>价值规律的作用（四选三）</p><ol type="1"><li>自发地调节生产资料和劳动力在社会各生产部门之间的分配比例<ol type="1"><li>供 &gt; 求，撤离</li><li>供 &lt; 求，涌入</li></ol></li><li>自发地刺激社会生产力的发展（个别劳动时间与社会必要劳动时间关系）</li><li>自发地调节社会收入分配</li></ol><p>价值规律的消极影响（四选三）</p><ol type="1"><li>导致社会资源浪费</li><li>导致收入两极分化</li><li>阻碍技术的进步</li></ol></li><li><p>金融资本形成的主要途径（两参一连）（四选三）</p><ol type="1"><li>金融联系</li><li>资本参与</li><li>人事参与</li></ol><p>金融寡头控制国家（单选）</p><ol type="1"><li>经济上：“参与制” （控制其他行业的股份）</li><li>政治上：同政府 “个人联合”</li><li>文化上：建立政治咨询机构</li></ol></li><li><p><strong>新经济政策</strong> 的 <strong>特征</strong> ：以发展 <strong>商品经济</strong> 为主要特征的新经济政策</p><p>内容：</p><ol type="1"><li>用 <strong>粮食税制</strong> 取代 <strong>余粮收集制</strong></li><li>允许 <strong>私人自由贸易</strong> ，恢复 <strong>商品货币</strong> 关系</li><li>允许 <strong>私人小工业企业</strong> 发展，采取一些 <strong>国家资本主义</strong> 的形式来发展生产</li></ol><p>标志：列宁正在 <strong>探索</strong> 一条符合俄国国情的建设社会主义道路</p><p>意义：</p><ol type="1"><li>扭转了国家的严重危机，活跃了苏维埃的 <strong>城乡经济</strong></li><li>加强了苏维埃的社会主义 <strong>经济基础</strong></li><li>改善了工人、农民和其他劳动者的 <strong>物质文化生活</strong></li></ol><p>干扰项：</p><ol type="1"><li>战时共产主义</li><li>斯大林模式（国防、重工业、第一个五年计划）</li><li><strong>列宁晚年</strong> 提出了 <strong>建设社会主义的新构想</strong>：<ol type="1"><li><strong>合作社的形式</strong></li><li>大工业（不是重工业）</li><li>...... （多选肯定全选）</li></ol></li></ol></li><li><p>党成立以来的四个伟大的成就：</p><ol type="1"><li><strong>新民主主义革命</strong> — <strong>根本社会条件</strong></li><li><strong>社会主义革命</strong> — <strong>根本政治前提和制度基础</strong></li><li><strong>改革开放和社会主义现代化建设</strong> — <strong>体制保证和快速发展的物质条件</strong></li><li><strong>新时代中特</strong> — （三个更为）<strong>更完善的制度，更坚持的物质基础，更主动的精神力量</strong></li></ol><p>改革开放（站起来到富起来） —— 新时代中特（站富到强起来）</p><p>第一个百年奋斗目标：全面小康</p></li><li><p>习近平新时代中特回答的问题是（四选三，十九届六中新说法）：</p><ol type="1"><li>什么是中特，怎样发展中特</li><li>什么是社会主义现代化强国，怎样建设社会主义现代化强国</li><li>什么是长期执政的马克思主义政党，怎样建设长期执政的马克思主义政党</li></ol><p>干扰项：</p><ol type="1"><li>邓论：什么是社会主义，怎样建设社会主义</li><li>三个代表：建设什么样的党，怎样建设党</li><li>科学发展观：实现什么样的发展，怎样发展</li></ol></li><li><p>新发展阶段</p><ol type="1"><li>社会主义进程中的一个重要阶段</li><li>从<strong>站富到强</strong>起来的阶段</li><li>经过几十年的积累、站到了新的起点上的一个阶段（<strong>量</strong>上）</li><li>仍然是中国特色社会主义 <strong>初级阶段</strong>（<strong>质</strong>上）</li></ol><p>干扰选项：所有国家实现社会主义现代化必须经历的阶段（生产力强的国家完全不用，要自己探索）</p></li><li><p>中特考生态环保，多选全选</p></li><li><p>“<strong>一国两制</strong>”的 <strong>根本原则</strong>：<strong>爱国者治港</strong> （应有之义和核心要义、政治规则）</p><p>“<strong>一国两制</strong>”的 <strong>根本保证</strong>：<strong>党的领导</strong></p><p><strong>港澳立身之本</strong>，解决港澳各种问题的 <strong>金钥匙</strong>，<strong>第一要务</strong> ：<strong>发展</strong></p><p>两岸关系的 <strong>政治基础</strong> ：“<strong>九二共识</strong>” （一个中国原则）</p><p>“<strong>台独</strong>”分裂是 <strong>祖国统一</strong> 的 <strong>最大障碍</strong>，是 <strong>民族复兴</strong> 的 <strong>严重隐患</strong></p></li><li><p>第二国际主张：放弃暴力革命，主张合法议会斗争，工人阶级通过选举掌握国家政权</p><p>马克思主义中国化：六届六中全会</p><p>军事路线、组织路线：遵义会议</p><p>思想路线：整风运动</p><p>早期马克思主义队伍构成：</p><ol type="1"><li>五四以前新文化运动领袖</li><li>五四运动左翼骨干</li><li>原中国同盟会全员，辛亥革命活动家（没有农民）</li></ol></li><li><p>大革命失败到土地革命的兴起：八七会议</p></li><li><p>中华人民共和国的成立好啊</p></li><li><p>个人理想和社会理想的关系：</p><ol type="1"><li>实质：是个人与社会的关系在理想层面的反映，两者相互影响、相互联系、相互制约</li><li><strong>个人理想以社会理想为指引</strong><ol type="1"><li>个人理想的实现必须以社会理想的实现为前提和基础</li><li>社会理想是理想体系中最根本、最重要的，个人理想则从属于社会理想</li><li>个人理想的实现依赖于社会理想的实现</li></ol></li><li><strong>社会理想是对个人理想的凝练和升华</strong>：社会理想建立在个人理想的基础之上</li></ol></li><li><p><strong>习近平法治思想</strong> 的重大意义：（只需背第一条）</p><ol type="1"><li><strong>习近平法治思想</strong> 是全面依法治国的 <strong>根本遵循</strong> 和 <strong>行动指南</strong></li></ol><p><strong>建设中特法治体系</strong> 的意义</p><ol type="1"><li>中特的 <strong>本质要求</strong> 和 <strong>重要保障</strong></li><li>全面依法治国的 <strong>总抓手</strong></li></ol><p><strong>建设中特法治体系</strong> 的主要内容（单选戴帽子，饭前重视法质）</p><ol type="1"><li>完备的 <strong>法律规范</strong> 体系：中特法治体系的 <strong>前提</strong></li><li>高效的 <strong>法治实施</strong> 体系：中特法治体系的 <strong>重点</strong></li><li>完善的 <strong>党内法规</strong> 体系：中特法治体系的 <strong>本质要求</strong></li></ol></li><li><p>中国共产党好啊（十九届六中全会新说法，不敢出干扰选项的）</p></li><li><p>今年时政相关的只有三个不是全选</p></li></ol><h2 id="卷二-2">卷二</h2><h3 id="单选-13">单选</h3><ol type="1"><li><p>事物的发展是<strong>螺旋式上升</strong>，<strong>波浪式前进</strong></p><p>事物的发展是 <strong>连续性(量变)</strong> 和 <strong>间断性(质变)</strong> 的统一</p></li><li><p>时间、空间是客观的</p><p>时间、空间的客观实在性是绝对的</p></li><li><p>简单商品生产：没有雇佣工人；资本主义生产：雇佣工人</p><p>货币的出现，使得商品世界分化为具体商品和货币</p><p>社会生产两大部类：</p><ol type="1"><li>生产资料生产部类（电池）</li><li>消费资料生产部类（手机 = 电池 + 其他生产资料）</li></ol></li><li><p><strong>资本主义扩大再生产</strong> 的<strong>源泉</strong>是 <strong>资本积累</strong></p><p><strong>资本积累</strong> 的<strong>源泉</strong>是 <strong>剩余价值</strong></p><p><strong>剩余价值</strong> 的<strong>源泉</strong>是 <strong>工人剩余劳动</strong></p></li><li><p>党的 <strong>三大优良作风</strong>：<strong>理论与实际相结合</strong>、<strong>与群众紧密的联系在一起</strong>、<strong>批评与自我批评</strong></p><p>党的 <strong>三大法宝</strong>：<strong>统一战线</strong>、<strong>武装斗争</strong>、<strong>党的建设</strong></p><p><strong>工农武装割据的基本内容</strong>：<strong>土地革命</strong>、<strong>武装斗争</strong>、<strong>根据地建设</strong></p><p><strong>毛泽东思想的灵魂</strong> （是群主）：<strong>实事求是</strong>、<strong>群众路线</strong>、<strong>独立自主</strong></p></li><li><p><strong>党的领导的最高原则</strong>：党中央集中统一领导（高一）</p></li><li><p>促进经济社会发展 <strong>全面绿色转型</strong>：</p><ol type="1"><li><strong>总抓手</strong>：<strong>减污降碳</strong></li><li><strong>源头</strong>：<strong>资源利用</strong></li><li><strong>关键</strong>：<strong>产业结构调整</strong></li></ol></li><li><p>新时代党的 <strong>民族工作</strong></p><ol type="1"><li><strong>出发点</strong>、<strong>落脚点</strong>：<strong>中华民族伟大复兴</strong></li><li><strong>重要任务</strong>：<strong>建设社会主义现代化国家</strong></li><li><strong>主线</strong>：<strong>铸牢中华民族共同体意识</strong></li></ol><p><strong>民族区域自治制度</strong> 基础知识：</p><ol type="1"><li>基本政治制度：<strong>中国共产党领导的多党合作和政治协商制度</strong> 、<strong>民族区域自治制度</strong>、<strong>基层群众自治制度</strong></li><li>中国特色解决民族问题的正确道路的重要内容和制度保障：<strong>民族区域自治制度</strong></li><li><strong>民族区域自治制度</strong> 的 <strong>核心</strong> 是 <strong>保障少数民族人民当家做主</strong></li><li><strong>社会主义民族关系</strong> — 平等团结互助和谐；<strong>各民族交往交流交融</strong></li></ol></li><li><p><strong>中国人民第一次大规模的反侵略武装斗争</strong>：<strong>广州三元里抗英</strong> （1841周年纪念）</p></li><li><p>拉开序幕 — 辛亥革命 （辛亥革命110周年背诵内容）</p></li><li><p><strong>党对军队的绝对领导</strong></p><ol type="1"><li><strong>发端于</strong>：<strong>南昌起义</strong></li><li><strong>奠基于</strong>：<strong>三湾改编</strong></li><li><strong>定型于</strong>：<strong>古田会议</strong></li></ol></li><li><p><strong>党百年奋斗</strong></p><ol type="1"><li><strong>根本成就</strong>：<strong>中国特色社会主义</strong></li><li><strong>历史结论</strong>：<strong>走自己的路</strong></li></ol></li><li><p><strong>社会主义核心价值观</strong></p><ol type="1"><li><strong>先进性</strong>：<strong>坚持追求的理念最先进</strong></li><li><strong>人民性</strong>：<strong>代表最广大人民的根本利益</strong></li><li><strong>真实性</strong>：<strong>有制度保障</strong></li></ol></li><li><p><strong>全面依法治国</strong> ：</p><ol type="1"><li><strong>总目标</strong>：建设 <strong>中特法治体系</strong> ，建设 <strong>法治国家</strong></li><li><strong>重点任务</strong><ol type="1"><li><strong>建设中特法治体系</strong><ol type="1"><li>完备的法律规范体系 是 前提</li><li>高效的法治实施体系 是 重点</li><li>完善的党内法规体系 是 本质要求</li></ol></li><li><strong>建设法治国家</strong><ol type="1"><li><strong>三依</strong> 共同推进（<strong>依法治国</strong>、<strong>依法执政</strong>、<strong>依法行政</strong>），<strong>三法一体</strong> 建设（<strong>法治国家</strong>、<strong>法治政府</strong>、<strong>法治社会</strong></li><li>能不能 <strong>依法治国</strong> 的 <strong>关键</strong> 是：<strong>依法执政</strong> 和 <strong>依法行政</strong></li><li><strong>法治国家</strong> 是法治建设的 <strong>目标</strong>，<strong>法治政府</strong> 是 <strong>重点</strong>，<strong>法治社会</strong> 是 <strong>基础</strong></li></ol></li></ol></li><li><strong>指导方针</strong>：<ol type="1"><li><strong>前提</strong> —— <strong>科学立法</strong></li><li><strong>基础</strong> —— <strong>全民守法</strong></li><li><strong>重点</strong> —— <strong>公正司法</strong></li><li><strong>关键</strong> —— <strong>严格执法</strong></li></ol></li></ol></li><li><p><strong>党史学习</strong> 教育要做到：学史明理、学史增信、学史崇德、学史力行</p><p>其中 <strong>落脚点</strong> 是 <strong>学史力行</strong></p></li><li><p>时政里的主题，今年要重点记忆的：</p><ol type="1"><li><p>《<strong>生物</strong>多样性公约》的主题：“<strong>生态文明：共建地球生命共同体</strong>” （通过了《昆明宣言》；区别干扰项：《巴黎协定》是《联合国<strong>气候</strong>公约》）</p></li><li><strong>中国共产党与世界政党领导人峰会</strong> 的主题：“<strong>为人民谋幸福：政党的责任</strong>”</li><li><strong>博鳌亚洲论坛</strong> 的主题：“<strong>世界大变局：共襄全球治理盛举，合奏‘一带一路’强音</strong>”</li><li><p><strong>中东欧国家博览会</strong> 的主题：“<strong>构建新格局、共享新机遇</strong>”</p></li></ol></li></ol><h3 id="多选-13">多选</h3><ol start="17" type="1"><li><p>实践为认识的发展提供了手段和条件（实践创造出了高科技产品，帮助人类认识事物）</p><p>实践的中介系统：工具（斧头）；程序、方法（挥下去砍树）</p><p><strong>实践主体</strong> 才是 <strong>实践活动</strong> 中<strong>自主性</strong>和<strong>能动性</strong>的因素（区别于客体、中介）</p><p><strong>人类认识改造世界的根本目的</strong>：<strong>满足人类自身需要</strong></p></li><li><p>人类 <strong>最基本</strong> 的实践活动：物质 <strong>生产</strong> 实践活动 （keywords）</p></li><li><p>剩余价值批判的是资本拜物教（拜金主义）</p><p>商品拜物教（四选三）：</p><ol type="1"><li><strong>私有制商品经济条件</strong> 下劳动产品只有采取 <strong>商品</strong> 的形式才能进行 <strong>交换</strong>，人类劳动的等同性只有采取同质的价值形式才能在交换中体现出来</li><li>劳动量只有采取 <strong>价值量</strong> 这一物的形式才能进行计算和比较</li><li>生产者的劳动关系的社会性质只有采取商品之间，即物与 <strong>物之间相互交换的形式</strong> 才能间接地表现出来，这就使 <strong>人们之间一定的社会关系被物与物的关系所掩盖</strong>，具有了拜物教性质</li></ol><blockquote><p>是 <strong>简单商品时期</strong> 的产物，此时还没有货币，只能 <strong>物与物</strong> 进行交换 干扰项：资本主义经济，货币</p></blockquote></li><li><p>垄断会抑制市场上价格的自由波动</p></li><li><p><strong>新经济政策</strong> 的 <strong>特征</strong> ：以发展 <strong>商品经济</strong> 为主要特征的新经济政策</p><p>内容：</p><ol type="1"><li>用 <strong>粮食税制</strong> 取代 <strong>余粮收集制</strong></li><li>允许 <strong>私人自由贸易</strong> ，恢复 <strong>商品货币</strong> 关系</li><li>允许 <strong>私人小工业企业</strong> 发展，采取一些 <strong>国家资本主义</strong> 的形式来发展生产</li></ol><p>标志：列宁正在 <strong>探索</strong> 一条符合俄国国情的建设社会主义道路</p><p>意义：</p><ol type="1"><li>扭转了国家的严重危机，活跃了苏维埃的 <strong>城乡经济</strong></li><li>加强了苏维埃的社会主义 <strong>经济基础</strong></li><li>改善了工人、农民和其他劳动者的 <strong>物质文化生活</strong></li></ol><p>干扰项：</p><ol type="1"><li>战时共产主义</li><li>斯大林模式（国防、重工业、第一个五年计划）</li><li><strong>列宁晚年</strong> 提出了 <strong>建设社会主义的新构想</strong>：<ol type="1"><li><strong>合作社的形式</strong></li><li>大工业（不是重工业）</li><li>...... （多选肯定全选）</li></ol></li></ol></li><li><p><strong>国家资本主义</strong> 是 <strong>私人资本主义经济</strong> 向 <strong>国营经济</strong> 过渡的一种经济形态（不是独立的经济形态）</p><p>独立的经济形态(3)：<strong>个体经济</strong>、<strong>私人资本主义经济</strong>、<strong>国营经济</strong></p><p><strong>经济成分的性质</strong> 取决于 <strong>生产资料所有制</strong></p></li><li><p>我国社会主义现代化，好的全选</p></li><li><p><strong>共同富裕</strong></p><p>正确说法：</p><ol type="1"><li>共同富裕是 <strong>全体人民共同富裕</strong>，是人民群众 <strong>物质生活和精神生活</strong> 都富裕</li><li>共同富裕是一个 <strong>长远目标</strong></li><li><strong>不同人群不仅实现富裕的程度有高有低</strong>，<strong>时间上也有先有后</strong>，<strong>不同地域</strong> 富裕程度还会 <strong>存在一定差异</strong></li><li>这是一个在 <strong>动态中先前发展的过程</strong> ，要持续推动，不断取得成效</li></ol><p>可能出干扰选项的说法：</p><ol type="1"><li>不是<strong>少数人的富裕</strong>，也不是<strong>整齐划一</strong>的<strong>平均主义</strong></li><li>不是所有人都<strong>同时富裕</strong>，也不是所有地区<strong>同时达到</strong>一个富裕水平</li><li>不可能 <strong>一蹴而就</strong>，不可能 <strong>齐头并进</strong></li></ol></li><li><p>选好的说法，略</p></li><li><p>脱贫攻坚今年取得巨大成就，五选四全选（不敢出干扰选项的）</p></li><li><p><strong>郑观应</strong>：《<strong>盛世危言</strong>》；经济上：发展 <strong>民族工商业</strong>，同西方“<strong>商战</strong>”；政治上：设立 <strong>议院</strong>，实行“<strong>君民共主</strong>”</p></li><li><p><strong>中国共产党早期组织活动</strong>：（<strong>研宣建讨</strong>）</p><ol type="1"><li><strong>研究和宣传马克思主义</strong>，研究中国中国实际问题，同反马克思主义思想流派进行斗争，扩大马克思主义思想阵地</li><li><strong>到工人中去进行宣传和组织工作</strong></li><li>进行 <strong>关于建党问题的讨论和实际组织工作</strong></li><li>建立 <strong>社会主义青年团</strong> ，<strong>为党造就一批后备力量</strong></li></ol><p><strong>中国共产党成立的历史特点</strong>：</p><ol type="1"><li>接受的是完整的科学世界观和社会革命论的 <strong>马克思主义</strong></li><li>在半殖民地半封建中国的工人运动基础上诞生，中国工人阶级具有 <strong>坚强的革命性</strong></li><li>因此，一开始就是一个<strong>以马克思列宁主义为基础</strong>的党，是一个<strong>区别于第二国际旧式社会改良党的新型工人阶级革命政党</strong></li></ol></li><li><p>第二次决议内容，见带背</p><p>开启了改革开放和社会主义现代化建设新时期 —— 十一届三中全会（拉开了改革开放的序幕）</p></li><li><p>中国革命道德好</p></li><li><p><strong>平等</strong> 是 <strong>社会主义法治</strong> 的 <strong>基本属性</strong> 和 <strong>基本要求</strong> （keywords带背）</p><p>社会主义法治的根本保证 — 党的领导</p><p><strong>依法治国</strong> 的 <strong>根本目的</strong> — 实现人民幸福，尊重和保障人权</p></li><li><p>第三次决议，好词就选</p><p>干扰选项：现代化强国（十九大提出的两步走战略，第二个15年）</p></li><li><p>美国坏坏</p></li></ol><h2 id="卷三-2">卷三</h2><h3 id="单选-14">单选</h3><ol type="1"><li><p>重点著作记忆（最近几年第一题必考）：</p><ol type="1"><li>"家族合著喷人"：《神圣家族》 —— 马克思和恩格斯第一部合著作品，批判黑格尔派主观唯心主义</li><li>"得粒屎"：《德意志意识形态》 —— 第一次系统阐述历史唯物主义</li><li>"公共"：《共产党宣言》 —— 马克思主义公开问世</li><li>"穷人要资本"：《资本论》 —— 工人阶级圣经，阐述了剩余价值理论</li><li>"百度"：《反杜林论》 —— 百科全书</li><li>"德法两转变"：《德法年鉴》—— 从唯心向唯物，从革命民主主义向共产主义的转变</li></ol></li><li><p><strong>实践</strong> 是客观规律性与主观能动性统一的 <strong>基础</strong></p><p>自然界和人类社会都具有客观实在性</p><p><strong>社会基本矛盾</strong> <strong>决定</strong> 社会历史的变化发展（keywords）</p></li><li><p>根据资本不同部分在 <strong>剩余价值生产中的不同作用</strong> 划分为 <strong>不变资本</strong> 和 <strong>可变资本</strong></p><p>根据资本不同部分在 <strong>周转中的不同方式</strong> 划分为 <strong>固定资本</strong> 和 <strong>流动资本</strong></p><p>根据资本 <strong>在循环中执行的不同职能</strong> 划分为 <strong>货币资本</strong>、<strong>生产资本</strong>、<strong>商品资本</strong></p></li><li><p><strong>资本主义简单再生产</strong> （原有规模上重复生产）的 <strong>实质</strong> 是 <strong>物质资料再生产</strong> (重新买)与资本主义 <strong>生产关系再生产</strong> (雇佣劳动关系)的统一</p><p>简单商品 再生产 的 实质是 劳动过程和价值形成过程的统一</p><p>资本主义生产过程的 <strong>两重性</strong>：<strong>劳动过程</strong> 与 <strong>价值增殖过程</strong> 的统一</p></li><li><p><strong>毛泽东思想开始形成的标志</strong>：在理论上阐述了 <strong>中国的革命道路</strong>（农村包围城市，武装夺取政权）</p><p><strong>毛泽东思想趋于成熟的标志</strong> ：在理论上阐述了 <strong>新民主主义理论</strong></p><p><strong>毛泽东思想</strong> （是群主）：<strong>实事求是</strong>（<strong>精髓</strong>）、<strong>群众路线</strong>（党的根本路线）、<strong>独立自主</strong></p><p><strong>中国革命的首要问题</strong> ：<strong>分清敌友</strong></p></li><li><p><strong>全面升华改革</strong> 的 <strong>出发点和落脚点</strong> ：<strong>促进社会公平正义、增进人民福祉</strong></p><p><strong>全面升华改革</strong> 的 <strong>总目标</strong> ：<strong>完善和发展中国特色社会主义</strong>，<strong>推进国家治理体系治理能力现代化</strong></p><p><strong>中国梦</strong> 的 <strong>本质</strong> ：<strong>国家富强</strong>、<strong>民族振兴</strong>、<strong>人民幸福</strong> （<strong>人民幸福</strong> 是 <strong>国家富强</strong>、<strong>民族振兴</strong> 的 <strong>根本出发点和落脚点</strong>）</p><p><strong>为人民谋幸福、为民族谋复兴</strong> 是 <strong>新发展理念 的 “根” 和 “魂”</strong> 、 <strong>党的初心和使命</strong> 、<strong>党领导现代化建设的出发点和落脚点</strong></p></li><li><p>新时代党的 <strong>政治建设</strong> 的 <strong>首要任务</strong>：<strong>全党服从中央</strong></p><p>新时代 <strong>党建</strong> 的 <strong>总要求</strong>：（先主统治在三点）</p><ol type="1"><li>以长期 <strong>执政能力建设</strong>，<strong>先进性、纯洁性建设</strong> 为 <strong>主线</strong></li><li>以 <strong>政治建设</strong> 为 <strong>统领</strong> （<strong>摆在首位</strong>）</li><li>以坚定 <strong>理想信念宗旨</strong> 为 <strong>根基</strong></li><li>以调动全员<strong>积极性、主动性、创造性</strong>为 <strong>着力点</strong></li></ol></li><li><p>党 <strong>百年奋斗</strong> 得出（今年必考的建党100周年）</p><ol type="1"><li><strong>历史结论</strong>：<strong>走自己的路</strong></li><li><strong>根本成就</strong>：<strong>中特</strong></li></ol></li><li><p>辛亥革命之所以失败</p><ol type="1"><li><strong>根本原因</strong>：在帝国主义时代，在半殖民地半封建的中国，资本主义的建国方案行不通</li><li><strong>主观原因</strong>：从根源上来讲，是中国民族资产阶级的 <strong>软弱性和妥协性</strong><ol type="1"><li>没有提出反帝反封的革命纲领</li><li>不能充分发动和依靠人民群众</li><li>不能建立坚强的革命政党</li></ol></li></ol></li><li><p><strong>土地革命</strong> 时期建立的苏维埃政权的性质是 <strong>工农民主专政</strong></p><p><strong>抗日战争</strong> 时期建立的政权性质是 <strong>抗日民主政权</strong></p><p><strong>解放战争</strong> 时期建立的政权性质是 <strong>各个革命阶级的联合专政</strong></p><p><strong>新中国成立初期</strong> 建立的政权性质是 <strong>人民民主专政</strong></p></li><li><p><strong>政治路线</strong> —— 《<strong>论反对日本帝国主义的策略</strong>》、<strong>瓦窑堡会议</strong></p><p><strong>军事路线</strong> —— 《<strong>中国革命战争的战略问题</strong>》（<strong>军事</strong> 问题和 <strong>组织</strong> 问题 —— <strong>遵义会议</strong>）</p><p><strong>思想路线</strong> —— <strong>延安整风运动</strong></p><p>第一次提出了 <strong>新民主主义革命的科学概念和总路线</strong> 的内容是 《<strong>中国革命和中国共产党</strong>》</p></li><li><p>社会主义改造期间，民族资产阶级仍然 <strong>具有两面性</strong> （一面拥护党的领导，一面剥削人民）</p><p><strong>对抗性矛盾</strong> 是 <strong>敌我矛盾</strong>，与民族资产阶级之间的矛盾属于 <strong>人民内部矛盾</strong>，是 <strong>非对抗性</strong> 的</p><p><strong>新民主主义社会结束</strong> 的标志是 <strong>社会主义革命结束</strong> ，所以还差三年才结束</p><p>前三年完成了民主革命的遗留任务后，中国的基本矛盾就变成了无产阶级和资产阶级的矛盾，因此需要进行社会主义革命，把资本主义经济变成国有经济</p></li><li><p><strong>社会道德建设</strong> 中具有 <strong>基础性作用</strong> 的是 <strong>个人品德</strong></p></li><li><p><strong>法律至上</strong> 的具体表现形式：</p><ol type="1"><li><strong>普遍适用性</strong>（讲 <strong>正面</strong>，任何身份都受用）</li><li><strong>优先适用性</strong>（和其他冲突时，优先执行法律）</li><li><strong>不可违抗性</strong>（讲 <strong>负面</strong>，任何身份犯了法都要收到制裁，区别于第一条）</li></ol></li><li><p><strong>浙江共同富裕区</strong></p><ol type="1"><li><strong>根本目的</strong>：<strong>满足人民日益增长的美好生活需要</strong></li><li><strong>根本动力</strong>：<strong>改革创新</strong></li><li><strong>主攻方向</strong>：<strong>解决地区差距、城乡差距、收入差距问题</strong></li></ol><p>（浙江共同富裕出多选，<strong>四个战略</strong> 和 <strong>六大方面</strong>，四选都是 <strong>全选</strong> ）</p></li><li><p>"<strong>一带一路</strong>" 必备内容</p><ol type="1"><li><strong>目标</strong>（高惠可）：<strong>高标准、可持续、惠民生</strong></li><li><strong>合作理念</strong> （理廉）：<strong>开放、绿色、廉洁</strong></li><li><strong>秉持原则</strong> （元件）：<strong>共商共建共享</strong></li></ol></li></ol><h3 id="多选-14">多选</h3><ol start="17" type="1"><li><p>联系是多样的，除了直接联系还有间接联系等</p><p>必然通过偶然表现出来，并为自己开辟道路</p></li><li><p>自主的社会活动是实践，实践是人独有的，机器人不可能具备</p><p>人的意识能动地创造了人工智能</p><p>人的本质力量：人所拥有的实践能力、认识能力</p></li><li><p>获得绝对剩余价值：保持必要劳动时间不变，延长剩余劳动时间</p><ol type="1"><li>加班</li><li>提高工人的劳动强度（变向延长剩余劳动时间）</li></ol><p>获得相对剩余价值：减少必要劳动时间，从而延长剩余劳动时间</p></li><li><p>当代资本主义政治制度的变化（四选三，政制化）</p><ol type="1"><li><p>改良主义政党</p></li><li><p>法制建设</p></li><li><p>政治多元化</p></li></ol></li><li><p>马原里凡是出现 "现成答案"、"具体方法"，都是错的</p><p>马克思主义是普遍的，一般的真理，不是具体的，没有现成答案</p></li><li><p>分析题素材：<strong>习近平新时代中国特色社会主义思想是当代中国马克思主义、二十一世纪马克思主义，是中华文化和中国精神的时代精华，实现了马克思主义中国化新的飞跃。</strong></p><p>这一重大论断：（四选三）</p><ol type="1"><li>科学阐明习思想的理论内涵和重大意义</li><li>表明了习思想在马克思主义发展史上的重要地位</li><li>表明了习思想在中华文明发展史上的重要地位</li></ol><p><strong>第三个历史决议</strong>《xxx百年xxx的决议》<strong>贯通了中国共产党百年奋斗的历史逻辑、理论逻辑、实践逻辑</strong></p></li><li><p>全过程人民民主：</p><ol type="1"><li><strong>过程民主和成果民主</strong> 相统一</li><li><strong>程序民主和实质民主</strong> 相统一</li><li><strong>直接民主和间接民主</strong> 相统一</li><li><strong>人民民主和国家意志</strong> 相统一</li></ol></li><li><p>促进共同富裕要把握的 4 个原则（多选全选，记个大概印象即可）</p></li><li><p>新发展阶段，做好碳达峰碳中和工作（多选全选，记个大概印象即可）</p></li><li><p>和平不是祖国统一的唯一途径（对于 "台独" 就要动用武力，现在和平解决不太可能了）</p></li><li><p>工农武装割据的思想不是大革命时期题出的，"清改武敌" 是八七会议，即土地革命时期</p><p>大革命时期中国共产党帮助和推动建立了 —— 国民革命军</p></li><li><p>遵义会议：确立了毛泽东为代表的马克思主义正确路线在全党的领导地位</p><p>中共七大：将毛泽东思想确立为党的指导思想，并正式写入党章</p></li><li><p>辛亥革命，见带背，给我全背出来</p></li><li><p>人生价值不能简单的用生命长短来衡量</p></li><li><p>习思想好啊</p></li><li><p>党史学习与全面建成小康无关（党史教育是今年的，脱贫攻坚是去年完成的）</p></li><li><p>美国坏坏</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研政治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【专题】公共数学_中值定理证明题</title>
      <link href="/graduate_exam/math_special/0x02/"/>
      <url>/graduate_exam/math_special/0x02/</url>
      
        <content type="html"><![CDATA[<blockquote><p>大概还有一半没写，但是我保证大家掌握了以下的方法，证明题基本超过同届 80% 的人了</p><p>剩下一半，等我找时间写了只能</p></blockquote><h1 id="考研中常用的的中值定理">考研中常用的的中值定理</h1><h2 id="费马fermat引理">费马(Fermat)引理</h2><blockquote><p>我这里写 <strong>费马引理</strong>，但大多数考研教材上都写的是 <strong>费马定理</strong>，这不严谨 <strong>费马定理</strong> 分为离散数学中用于求模数为质数的乘法逆元-<strong>费马小定理</strong> 和 世纪问题 - <strong>费马大定理</strong> 但都不是本片中提到的 <strong>费马引理</strong>，请读者注意区别</p></blockquote><p>概念：<strong>可导的极值点</strong> 一定是 <strong>驻点（导数为0的点）</strong></p><blockquote><p><strong>简单证明：</strong></p><p><strong>反证法</strong>：假设极值点处 <span class="math inline">\(f&#39;(x_0) \ne 0\)</span></p><ol type="1"><li><span class="math inline">\(f&#39;(x_0) &gt; 0 \quad\Rightarrow\quad f(x)\)</span> 左低右高，由 <strong>极值定义</strong> <span class="math inline">\(x_0\)</span> 非 <strong>极值点</strong>（矛盾）</li><li><span class="math inline">\(f&#39;(x_0) &lt; 0 \quad\Rightarrow\quad f(x)\)</span> 左高右低，由 <strong>极值定义</strong> <span class="math inline">\(x_0\)</span> 非 <strong>极值点</strong>（矛盾）</li></ol><p>由 <strong>反证法逻辑</strong> 可知，<span class="math inline">\(f&#39;(x_0) = 0\)</span></p></blockquote><p><strong>作用</strong>：能够创造出 <strong>一阶导数</strong> 为 <span class="math inline">\(0\)</span> 的条件辅助证明（往往在缺少一阶导数零点时使用，如【2019-21】）</p><p><strong>步骤</strong>：利用连续函数 <strong>最值定理</strong>，并说明 <strong>极值</strong> 不在 <strong>端点取到</strong>，而在 <strong>区间内部</strong> 取到</p><blockquote><p>如下面这个 <strong>导数零点定理</strong> 的证明，中间有用到这个思想</p></blockquote><h2 id="导数零点定理">导数零点定理</h2><p>概念：<span class="math inline">\(f(x)\)</span> 在区间 <span class="math inline">\([a,b]\)</span> 上 <strong>可导</strong>，且 <span class="math inline">\(f_{+}&#39;(a)f&#39;_{-}(b) &lt; 0\)</span>，则 <span class="math inline">\(\exists\xi\in(a,b),s.t.f&#39;(\xi) = 0\)</span></p><blockquote><p><strong>简单证明：</strong></p><p>不妨假设 <span class="math inline">\(f_{+}&#39;(a) &gt; 0, f_{-}&#39;(b) &lt; 0\)</span> ，则</p><p>$ _1 &gt; 0, x(a,a+_1), s.t. f(x) &gt; f(a) $</p><p>$_2 &gt; 0, x(b-_2,b), s.t. f(x) &gt; f(b) $</p><p>又由 <strong>连续函数最值定理</strong> 可知，<span class="math inline">\(\exists M, s.t. f(x) &lt; M\)</span></p><p>又由上述可知，<strong>最大值</strong> 不在 <strong>端点处</strong> 取到，则 <strong>最大值点</strong> 必然是 <strong>区间内</strong> 的 <strong>极大值点</strong></p><p>不妨设该 <strong>极大值点</strong> 为<span class="math inline">\(\xi(a\lt \xi \lt b)\)</span>，再由 <strong>费马(Fermat)引理</strong> 可知：<span class="math inline">\(f&#39;(\xi) = 0\)</span></p></blockquote><p>关于 <strong>导数零点定理</strong> 我没在真题中见过，可能唯一作用是用来证明 <strong>导数介值定理</strong> 的吧</p><p>证明题中可能用的不是很多，作为数学常识记住就好了</p><h2 id="导数介值定理达布定理">导数介值定理（达布定理）</h2><p>概念：<span class="math inline">\(f(x)\)</span> 在区间 <span class="math inline">\([a,b]\)</span> 上可导，则 <span class="math inline">\(f&#39;(x)\)</span> 可以取到介于 <span class="math inline">\(f_{+}&#39;(a)\)</span> 和 <span class="math inline">\(f_{-}&#39;(b)\)</span> 之间的一切值</p><blockquote><p><strong>简单证明：</strong></p><p>设 <span class="math inline">\(\eta\)</span> 为介于 <span class="math inline">\(f_{+}&#39;(a)\)</span> 和 <span class="math inline">\(f_{-}&#39;(b)\)</span> 之间的任意值，则不妨设 <span class="math inline">\(f_{+}&#39;(a) &lt; \eta &lt; f_{-}&#39;(b)\)</span></p><p>欲证 <span class="math inline">\(\exists \xi \in(a,b), s.t. f&#39;(\xi) = \eta\)</span></p><p>这要用到下面一条 <strong>Rolle定理</strong> 的 <strong>辅助函数构造思路</strong> 和上面一条 <strong>导数零点定理</strong></p><p>构造 <strong>辅助函数</strong> <span class="math inline">\(F(x) = f(x) - \eta x\)</span>，则 <span class="math inline">\(F&#39;(x) = f&#39;(x) - \eta\)</span></p><p>又 <span class="math inline">\(F_{+}&#39;(a) = f_{+}&#39;(a) - \eta &lt; 0\)</span>，<span class="math inline">\(F_{-}&#39;(b) = f_{-}&#39;(b) - \eta &gt; 0\)</span></p><p>又由 <strong>导数零点定理</strong> 可知：<span class="math inline">\(\exists \xi\in(a,b), s.t.F&#39;(\xi) = 0 \quad\Rightarrow\quad f&#39;(\xi) = \eta \quad QED\)</span></p></blockquote><p>根据 <strong>导数零点定理</strong> 可以推出：若 <span class="math inline">\(f&#39;(x)\)</span> 无零点，则 <span class="math inline">\(f&#39;(x)\)</span> 要么恒正，要么恒负，故 <span class="math inline">\(f(x)\)</span> 一定单调</p><p>根据 <strong>导数介值定理</strong> 可以推出：若 <span class="math inline">\(f&#39;(x)\)</span> 不取 <span class="math inline">\(k\)</span>，则 <span class="math inline">\(f&#39;(x)\)</span> 要么恒大于 <span class="math inline">\(k\)</span>，要么恒小于 <span class="math inline">\(k\)</span></p><p>这也算是一个数学常识，除了证明题里，在很多其它类型的题目中也可以用到，比如【2022李林6一8】</p><h2 id="罗尔rolle定理">罗尔(Rolle)定理</h2><p>概念：<span class="math inline">\(f(x)\)</span> 在开区间上可导，闭区间上连续，且端点处函数值相等，则开区间内存在 <span class="math inline">\(f&#39;(\xi) = 0\)</span></p><blockquote><p><strong>简单证明：</strong></p><p><strong>反证法</strong>：假设 <span class="math inline">\(f&#39;(x)\)</span> <strong>无零点</strong>，则 <span class="math inline">\(f&#39;(x)\)</span> <strong>恒正</strong> 或 <strong>恒负</strong></p><p>不妨假设 <span class="math inline">\(f&#39;(x)\)</span> 恒正，则 <span class="math inline">\(f(x)\)</span> <strong>严格单调递增</strong></p><p>则 <span class="math inline">\(f(b) &gt; f(a)\)</span> 这与 <span class="math inline">\(f(a) = f(b)\)</span> <strong>矛盾</strong>，由 <strong>反正法思想</strong>，<span class="math inline">\(\exists\xi\in(a,b), s.t.f&#39;(\xi) = 0\)</span></p></blockquote><blockquote><p>到目前为止，在函数 <span class="math inline">\(f(x)\)</span> 上产生一点 <span class="math inline">\(f&#39;(\xi) = 0\)</span>，我们就有两个方法了：<strong>费马引理</strong>，<strong>罗尔定理</strong></p></blockquote><p>一些较为简单的罗尔定理辅助函数构造：（复杂的在后面专题里会讲到）</p><p>若要证明 "<span class="math inline">\(\exists \xi \in (a,b), s.t. f&#39;(\xi) = 0\)</span>" 直接对 <span class="math inline">\(f(x)\)</span> 使用罗尔定理即可，无需构造辅助函数</p><p>若要证明 "<span class="math inline">\(\exists \xi \in (a,b), s.t. f&#39;(\xi) = k\)</span>" 可令 <span class="math inline">\(F(x) = f(x) - kx\)</span> 然后对 <span class="math inline">\(F(x)\)</span> 适用罗尔定理</p><p>若要证明 "<span class="math inline">\(\exists \xi \in (a,b), s.t. f&#39;&#39;(\xi) = 0\)</span> 或 <span class="math inline">\(f&#39;&#39;&#39;(\xi) = 0\)</span>" 往往需要反复使用罗尔定理</p><h2 id="拉格朗日lagrange中值定理">拉格朗日(Lagrange)中值定理</h2><p>概念：<span class="math inline">\(f(x)\)</span> 在开区间 <span class="math inline">\((a,b)\)</span> 上可导，闭区间 <span class="math inline">\([a,b]\)</span> 上连续，则 <span class="math inline">\(\exists \xi \in(a,b)\)</span>，s.t. <span class="math display">\[f(b) - f(a) = f&#39;(\xi) (b - a)\]</span></p><p>证明方法：Rolle 定理 + 构造如下辅助函数</p><p><span class="math display">\[F(x) = [f(x) - f(a)](b - a) - [f(b) - f(a)] (x - a)\]</span></p><blockquote><p>注意拉格朗日中值定理的几何意义：一条弦的斜率可以用区间内一点的切线斜率代替</p></blockquote><h2 id="柯西cauchy中值定理">柯西(Cauchy)中值定理</h2><p>概念：<span class="math inline">\(f(x), g(x)\)</span> 在开区间 <span class="math inline">\((a,b)\)</span> 上可导，闭区间 <span class="math inline">\([a,b]\)</span> 上连续，且 <span class="math inline">\(g&#39;(x) \ne 0\)</span>，则 <span class="math inline">\(\exists \xi \in (a,b)\)</span>，s.t.</p><p><span class="math display">\[\dfrac{f(b) - f(a)}{g(b) - g(a)} = \dfrac{f&#39;(\xi)}{g&#39;(\xi)}\]</span></p><p>证明方法：Rolle 定理 + 构造如下辅助函数 <span class="math display">\[F(x) = [f(x) - f(a)][g(b) - g(a)] - [f(b) - f(a)] [g(x) - g(a)]\]</span></p><h2 id="积分中值定理">积分中值定理</h2><p>概念：若 <span class="math inline">\(f(x)\)</span> 在闭区间 <span class="math inline">\([a,b]\)</span> 上连续，则 <span class="math inline">\(\displaystyle\int_a^bf(x)dx = f(\xi)(b - a)\)</span> ，其中 <span class="math inline">\(\xi \in(a,b)\)</span></p><blockquote><p><strong>简单证明</strong>：</p><p>构造 <strong>辅助函数</strong> <span class="math inline">\(F(x) = \displaystyle\int_a^x f(t)dt\)</span>，由 <span class="math inline">\(Lagrange\)</span> 中值定理：</p><p><span class="math inline">\(\exists \xi \in(a, b), s.t.F(b) - F(a) = F&#39;(\xi)(b - a) \quad \Rightarrow \quad \displaystyle\int_a^bf(x)dx = f(\xi)(b - a)\)</span></p></blockquote><h1 id="中值定理证明题概述">中值定理证明题概述</h1><p>考研中甚至是高数竞赛里，会用到的相关中值定理就是如上的所有了</p><p>这些定理还有一个范畴别名，叫做 <strong>微分中值定理</strong></p><p>他们几乎无一例外，都是利用已用的函数 <span class="math inline">\(f(x)\)</span>，在一段区间 <span class="math inline">\([a,b]\)</span> 上进行一个中间导数估计 <span class="math inline">\(f&#39;(\xi)\)</span></p><p>而中值定理的证明题，都是给定一个 <span class="math inline">\(f&#39;(\xi) = 0\)</span> 的结论，然后让我们利用已知条件，<strong>构造</strong> 出符合条件的 <span class="math inline">\(g(x)\)</span></p><p>最后利用中值定理，在一段区间上，估计出题目要求的满足 <span class="math inline">\(f&#39;(\xi) = 0\)</span> 的等式</p><p>而构造符合条件的 <span class="math inline">\(g(x)\)</span> 就是这一类证明题最为困难的地方，接下来的方法都将围绕这一问题展开</p><h1 id="原函数法">原函数法</h1><p>微积分中的一大基本关系或者说常识是：<span class="math inline">\(f(x) \xrightarrow{\text{求导}} f&#39;(x) \xrightarrow{\text{积分}} f(x)\)</span></p><p>因此，对于已知结论 <span class="math inline">\(f&#39;(\xi)\)</span>，我们可以利用求不定积分找原函数的方法，找到 <span class="math inline">\(f(x)\)</span></p><p>我们用一个中等难度的例题来讲解</p><p><strong>【例】设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\((-2,2)\)</span> 内可导，证明：$(-2,2), s.t. $ <span class="math display">\[\xi(1-\xi)f&#39;(\xi) + 1 - 2\xi = 0\]</span></strong> 【分析】考虑对方程左侧直接积分：<span class="math inline">\(\displaystyle\int [x(1-x)f&#39;(x) + 1 - 2x] \mathrm{d} x\)</span></p><p>第一个项是三个因式相乘，很难积出来，考虑对等式恒等变形再积分</p><p>方程两侧同除 <span class="math inline">\(x(1-x)\)</span>：<span class="math inline">\(f&#39;(x) + \dfrac{1-2x}{x(1-x)}\)</span>，再积分：</p><p><span class="math display">\[\int \dfrac{1-2x}{x(1-x)} \mathrm{dx} = \int \dfrac{1-x - x}{x(1-x)} \mathrm{dx} = \int (\dfrac{1}{x} - \dfrac{1}{1-x}) \mathrm{dx} = \ln |x^2-x| + C\]</span></p><p><span class="math inline">\(F(x) = \displaystyle\int [f&#39;(x) + \dfrac{1-2x}{x(1-x)}] \mathrm{dx} = f(x) + \ln|x^2 - x|\)</span></p><p>这个形式虽然求导是我们所要的结论，但是无法按照题设找到中值定理的条件</p><p>我们考虑一个常用手段：<strong>取指数</strong></p><p><span class="math display">\[F(x) = e^{f(x) + \ln|x^2-x|} = e^{f(x)} \cdot e^{\ln|x^2-x|} = |x^2-x| e^{f(x)}\]</span></p><p>易得两个零点：<span class="math inline">\(F(0) = F(1) = 0\)</span> 原函数找到，大功告成</p><p>【解】令 <span class="math inline">\(F(x) = (x-x^2)e^{f(x)}\)</span></p><p>显然，<span class="math inline">\(F(0) = F(1) = 0\)</span>，由 Rolle 定理：<span class="math inline">\(\exists \xi \in (0, 1)\subset (-2,2), s.t. F&#39;(\xi) = 0\)</span></p><p>又 <span class="math inline">\(F&#39;(x) = e^{f(x)} \cdot [1 - 2x + f&#39;(x)(x-x^2)] = e^{f(x)} \cdot [x(1-x)f&#39;(x) + 1 - 2x]\)</span></p><p>故 <span class="math inline">\(\xi(1-\xi)f&#39;(\xi) + 1 - 2\xi = 0\)</span> QED</p><blockquote><p>这个方法限制性很大，有可能积分积不出来，也有可能很难积 但穷途末路的时候，不失为一种方法</p></blockquote><h1 id="微分方程法万能构造法">微分方程法（万能构造法）</h1><p>中值定理的证明题，其结论往往是一个微分方程形式</p><p>因此，我们不妨试试求解该微分方程的通解，并将通解化为 <span class="math inline">\(F(x)=C\)</span> 的形式</p><p>然后再利用上题目的已知条件，建立微分中值的条件</p><p>根据考研范围内的微分方程类型，接下来一一介绍各种型的方法</p><h2 id="一阶齐次微分方程">一阶齐次微分方程</h2><p>形如：<span class="math inline">\(f&#39;(x) + p(x) f(x) = 0\)</span> 的形式</p><p>其通解为：<span class="math inline">\(f(x) = Ce^{-\displaystyle\int p(x)\mathrm{dx}}\)</span>，根据我们的上述要求变形：<span class="math inline">\(e^{\displaystyle\int p(x)\mathrm{dx}} f(x) = C\)</span></p><p>于是有原函数：<span class="math inline">\(F(x) = e^{\displaystyle\int p(x)\mathrm{dx}} f(x)\)</span>（这个也是我们常说的 "万能构造法" ）</p><p>这个方法很简单，接下来用一道例题进行讲解：</p><p><strong>【例】设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 连续，<span class="math inline">\((a,b)\)</span> 可导，<span class="math inline">\(f(a) = f(b) = 0\)</span>,证明：<span class="math inline">\(\exists \xi \in(a,b), s.t.\)</span> <span class="math display">\[ f&#39;(\xi) + f^2(\xi) = 0\]</span></strong></p><p>【分析】先求解微分方程：<span class="math inline">\(y&#39; + y \cdot y = 0\)</span>，易得：<span class="math inline">\(e^{-\int y \mathrm{dx}} \cdot y = C\)</span></p><p>故考虑构造辅助函数：<span class="math inline">\(F(x) = f(x) \cdot e^{\int f(x)dx}\)</span></p><p>【解】考虑用方法构造辅助函数：令 <span class="math inline">\(F(x) = f(x) \cdot e^{\int f(x)dx}\)</span></p><p>又 <span class="math inline">\(F(a) = F(b) = 0\)</span>，由 Rolle 定理：<span class="math inline">\(\exists \xi \in(a,b), s.t.F&#39;(\xi) = 0\)</span></p><p>又 <span class="math inline">\(F&#39;(x) = e^{\int f(x) dx} [f&#39;(x) + f^2(x)]\)</span></p><p>故 <span class="math inline">\(f&#39;(\xi) + f^2(\xi) = 0\)</span></p><h2 id="一阶非齐次微分方程">一阶非齐次微分方程</h2><p>形如：<span class="math inline">\(f&#39;(x) + p(x) f(x) = q(x)\)</span> 的形式</p><p>其通解为：<span class="math inline">\(f(x) = e^{-\displaystyle\int p(x)\mathrm{dx}} \cdot [\displaystyle\int q(x) e^{\displaystyle \int p(x)\mathrm{dx}}\mathrm{dx} + C]\)</span></p><p>变形：<span class="math inline">\(f(x) \cdot e^{\displaystyle\int p(x)\mathrm{dx}} - \displaystyle\int q(x) e^{\displaystyle \int p(x)\mathrm{dx}}\mathrm{dx} = C\)</span></p><p>故考虑构造辅助函数：<span class="math inline">\(F(x) = f(x) \cdot e^{\displaystyle\int p(x)\mathrm{dx}} - \displaystyle\int q(x) e^{\displaystyle \int p(x)\mathrm{dx}}\mathrm{dx}\)</span></p><p><strong>【例】设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([\dfrac{3}{4}\pi, \dfrac{7}{4}\pi]\)</span> 上可导，且 <span class="math inline">\(f(\dfrac{3}{4}\pi) = f(\dfrac{7}{4}\pi) = 0\)</span>，证 <span class="math inline">\(\exists \xi \in(\dfrac{3}{4}\pi, \dfrac{7}{4}\pi), s.t.\)</span> <span class="math display">\[f&#39;(\xi) + f(\xi) = \cos \xi\]</span></strong></p><p>【分析】求解微分方程：<span class="math inline">\(y&#39;+y = \cos x\)</span>，通解为：<span class="math inline">\(f(x) = e^{-x} [\dfrac{e^x}{2}(\sin x + \cos x) + C]\)</span></p><p>移项：<span class="math inline">\(e^xf(x) - \dfrac{e^x}{2}(\sin x + \cos x) = C\)</span></p><p>考虑构造辅助函数：<span class="math inline">\(F(x) = e^xf(x) - \dfrac{e^x}{2}(\sin x + \cos x)\)</span></p><p>【解】令 <span class="math inline">\(F(x) = e^x[f(x)- \dfrac{\sin x + \cos x}{2}]\)</span>，则 <span class="math inline">\(F(\dfrac{3}{4}\pi) = 0, F(\dfrac{7}{4}\pi) = 0\)</span></p><p>由 Rolle 中值定理：<span class="math inline">\(\exists \xi \in (\dfrac{3}{4}\pi, \dfrac{7}{4}\pi), s.t. F&#39;(\xi) = 0\)</span></p><p>又 <span class="math inline">\(F&#39;(x) = e^x[f&#39;(x) + f(x) - \cos x]\)</span></p><p>故 <span class="math inline">\(f&#39;(\xi) + f(\xi) = \cos \xi\)</span> QED</p><h2 id="二阶常系数齐次微分方程">二阶常系数齐次微分方程</h2><p>由于二阶常系数齐次微分方程含有两个任意常数 <span class="math inline">\(C_1,C_2\)</span>，因此要优先消掉一个</p><p>一般的做法是先把含 <span class="math inline">\(C\)</span> 项上的其他东西除掉，再求导削掉 <span class="math inline">\(C\)</span>，如下：</p><p><span class="math display">\[\begin{aligned}&amp;f(x) = C_1\sin x + C_2\cos x \\\\&amp;\dfrac{f(x)}{\sin x} = C_1 + C_2 \cot x \\\\&amp;\dfrac{f&#39;(x)\sin x - f(x) \cos x}{\sin^2 x} + \dfrac{C_2}{\sin^2x} = 0  \\\\&amp;f&#39;(x)\sin x - f(x) \cos x = C  \\\\\end{aligned}\]</span></p><p>由于 <span class="math inline">\(C_1, C_2\)</span> 是任选其一消掉，因此就有可能构造出截然不同的两个原函数</p><p>对于两个不同的原函数，需要选择一个配合题设可以建立中值定理的才行</p><p>我用下面这道例题来帮助大家理解</p><p><strong>【例】设 <span class="math inline">\(f(x)\)</span> 二阶可导，证明：</strong></p><p><strong>(1) 若 <span class="math inline">\(f(\dfrac{\pi}{2}) = f(-\dfrac{\pi}{2}) = 0\)</span>，则存在 <span class="math inline">\(\xi\in(-\dfrac{\pi}{2}, \dfrac{\pi}{2}), s.t. f(\xi) + f&#39;&#39;(\xi) = 0.\)</span></strong></p><p><strong>(2) 若 <span class="math inline">\(f(0) = f(\pi) = 0\)</span>，则存在 <span class="math inline">\(\xi\in(0, \pi), s.t. f(\xi) + f&#39;&#39;(\xi) = 0.\)</span></strong></p><p>【<strong>分析</strong>】微分方程 <span class="math inline">\(y&#39;&#39;+y=0\)</span> 通解为：<span class="math inline">\(y = C_1\sin x+C_2\cos x\)</span></p><p>削掉 <span class="math inline">\(C_1\)</span> 有：<span class="math inline">\(f&#39;(x)\sin x - f(x) \cos x = C\)</span></p><p>削掉 <span class="math inline">\(C_2\)</span> 有：<span class="math inline">\(f&#39;(x)\cos x + f(x) \sin x = C\)</span></p><p>由于题目中的 <span class="math inline">\(f(x)\)</span> 是抽象函数，故 <span class="math inline">\(f&#39;(x)\)</span> 的取值我们是不知道的</p><p>因此我们在构造辅助函数的时候，应该尽可能希望 <span class="math inline">\(f&#39;(x)\)</span> 的项不存在，这样才能找到具体值</p><p>【<strong>解</strong>(1)】已知 <span class="math inline">\(f(\dfrac{\pi}{2}) = f(-\dfrac{\pi}{2}) = 0\)</span>，因此考虑第二个构造函数</p><p>令 <span class="math inline">\(F(x) = f&#39;(x)\cos x + f(x) \sin x\)</span>，则有 <span class="math inline">\(F(\dfrac{\pi}{2}) = F(-\dfrac{\pi}{2}) = 0\)</span></p><p>由 Rolle 定理可知，<span class="math inline">\(\exists \xi \in (-\dfrac{\pi}{2}, \dfrac{\pi}{2}), s.t. F&#39;(\xi) = 0\)</span></p><p>又 <span class="math inline">\(F&#39;(x) = f&#39;&#39;(x)\cos x -f&#39;(x)\sin x + f(x)\cos x + f&#39;(x)\sin x = \cos x \cdot (f&#39;&#39;(x) + f&#39;(x))\)</span></p><p>故 <span class="math inline">\(f&#39;&#39;(\xi) + f&#39;(\xi) = 0\)</span></p><p>【<strong>解</strong>(2)】已知 <span class="math inline">\(f(0) = f(\pi) = 0\)</span>，因此考虑第一个构造函数</p><p>令 <span class="math inline">\(F(x) = f&#39;(x)\sin x - f(x) \cos x\)</span>，则有 <span class="math inline">\(F(0) = F(\pi) = 0\)</span></p><p>由 Rolle 定理可知，<span class="math inline">\(\exists \xi \in (0, \pi), s.t. F&#39;(\xi) = 0\)</span></p><p>又 <span class="math inline">\(F&#39;(x) = f&#39;&#39;(x)\sin x + f&#39;(x)\cos x - f&#39;(x) \cos x + f(x)\sin x = \sin x \cdot (f&#39;&#39;(x) + f&#39;(x))\)</span></p><p>故 <span class="math inline">\(f&#39;&#39;(\xi) + f&#39;(\xi) = 0\)</span></p><h1 id="万能构造在极限中的应用">万能构造在极限中的应用</h1><p>欲证结论或所给条件中出现了形如 <span class="math inline">\(h&#39;(x) + p(x)h(x)\)</span> 的式子，则考虑利用万能构造法，构造原函数 <span class="math inline">\(F(x)\)</span></p><p>这样做的目的，是转化研究对象，把 <span class="math inline">\(h(x)\)</span> 有关条件应用到 <span class="math inline">\(F(x)\)</span> 上，从而做到简化或联系条件和结论</p><p>用两道李林六套卷上的原题为大家讲解</p><p>【<strong>例</strong>】可导函数 <span class="math inline">\(f(x)\)</span> 满足 <span class="math inline">\(\lim\limits_{x\to+\infty} [f(x) + f&#39;(x)] = A\)</span>，求 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x)\)</span></p><p>【<strong>解</strong>】见到 <span class="math inline">\(f&#39;(x) + 1 \cdot f(x)\)</span> 的条件，考虑构造原函数：<span class="math inline">\(F(x) = f(x) e^{x}\)</span>，于是有：</p><p><span class="math display">\[\lim\limits_{x\to+\infty} [f(x) + f&#39;(x)] = \lim\limits_{x\to+\infty} \dfrac{F&#39;(x)}{e^x} = A\]</span></p><p>再观察结论：<span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = \lim\limits_{x\to+\infty}\dfrac{F(x)}{e^x}\)</span>，考虑一步(推广的)洛必达法则，建立结论和条件的联系：</p><p><span class="math display">\[\lim\limits_{x\to+\infty}f(x) = \lim\limits_{x\to+\infty}\dfrac{F(x)}{e^x} = \lim\limits_{x\to+\infty}\dfrac{F&#39;(x)}{e^x} = A\]</span></p><blockquote><p>本题还可以用 <span class="math inline">\(\lim\limits_{x\to+\infty} f&#39;(x) = 0\)</span> 结论，反证反向构造</p></blockquote><p>【<strong>例</strong>】设 <span class="math inline">\(a&gt;0\)</span> 是常数，连续函数 <span class="math inline">\(f(x)\)</span> 满足 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = b, y = y(x)\)</span> 是微分方程 <span class="math inline">\(y&#39;+ay=f(x)\)</span> 的解，求 <span class="math inline">\(\lim\limits_{x\to+\infty} y(x)\)</span></p><p>【<strong>解</strong>】见到 <span class="math inline">\(y&#39;+ay\)</span> 的条件，考虑构造原函数：<span class="math inline">\(F(x) = ye^{ax}\)</span></p><p>于是有：<span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{F&#39;(x)}{e^{ax}} = f(x)\)</span></p><p>再观察结论：<span class="math inline">\(\lim\limits_{x\to+\infty}y(x) = \lim\limits_{x\to+\infty} \dfrac{F(x)}{e^{ax}} \xlongequal{L&#39;} \dfrac{1}{a} \cdot \lim\limits_{x\to+\infty} \dfrac{F&#39;(x)}{e^{ax}}\)</span></p><p>于是建立了结论和条件的联系：</p><p><span class="math display">\[\lim\limits_{x\to+\infty} y(x) = \dfrac{1}{a} \cdot \lim\limits_{x\to+\infty}\dfrac{F&#39;(x)}{e^{ax}} = \dfrac{1}{a} \cdot \lim\limits_{x\to+\infty}f(x) = \dfrac{b}{a}\]</span></p><h1 id="万能构造在不等式中的应用">万能构造在不等式中的应用</h1><p>思路同上，这里就直接用例题进行讲解</p><p>【<strong>例</strong>】设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,+\infty)\)</span> 上连续可微，且 <span class="math inline">\(f(0) = 1, f&#39;(x) &lt; f(x)\)</span>，求证：<span class="math inline">\(f(x) &lt; e^x \quad(x &gt; 0).\)</span></p><p>【<strong>解</strong>】条件中有 <span class="math inline">\(f&#39;(x) - f(x)\)</span> 的形式，考虑构造原函数 <span class="math inline">\(F(x) = f(x)e^{-x}\)</span></p><p>于是有：<span class="math inline">\(F(0) = 1\)</span>，<span class="math inline">\(F&#39;(x) = e^{-x}(f&#39;(x) - f(x)) &lt; 0\)</span>，即 <span class="math inline">\(F(x)\)</span> 单调减</p><p>故 <span class="math inline">\(x &gt; 0\)</span> 时，<span class="math inline">\(F(x) &lt; 1\)</span>，即 <span class="math inline">\(f(x)e^{-x} &lt; 1 \quad\Rightarrow\quad f(x) &lt; e^x\)</span></p><p>【<strong>例</strong>】设 <span class="math inline">\(f&#39;(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上连续，<span class="math inline">\(f(0) = 0, f(1) = 1\)</span>，求证：<span class="math inline">\(\displaystyle\int_0^1|f&#39;(x)-f(x)|\mathrm{dx} \ge \dfrac{1}{e}\)</span></p><p>【<strong>解</strong>】注意到被积函数绝对值内部有 <span class="math inline">\(f&#39;(x) - f(x)\)</span> 的形式，考虑构造原函数 <span class="math inline">\(F(x)=f(x)e^{-x}\)</span></p><p>于是有：<span class="math inline">\(F(0) = 0, F(1) = \dfrac{1}{e}\)</span>，同时对结论也进行变换：<span class="math inline">\(\displaystyle\int_0^1|F&#39;(x)e^x|\mathrm{dx} \ge \dfrac{1}{e}\)</span></p><p>不难发现，不等式左边基本无法再放缩了，那么我们只能从右边入手</p><p>这里要用到一个不等式证明中常用的技巧：<strong>逆用牛顿-莱布尼茨公式</strong></p><blockquote><p>这个方法常用于不等式的证明中，其功能是，通过 <span class="math inline">\(y\)</span> 生成 <span class="math inline">\(\displaystyle\int y&#39; \mathrm{d}x\)</span>，从而与另一个积分相加减</p></blockquote><p><span class="math display">\[\dfrac{1}{e} = \dfrac{1}{e} - 0 = F(1) - F(0) = \displaystyle\int_0^1 d[F(x)] = \int_0^1 F&#39;(x)dx\]</span></p><p>又 <span class="math inline">\(e^x &gt; 1\)</span>，故 <span class="math inline">\(|F&#39;(x)| \cdot e^x \ge |F&#39;(x)| \cdot 1 \ge F&#39;(x)\)</span>，于是得证：</p><p><span class="math display">\[\displaystyle\int_0^1|F&#39;(x)e^x|\mathrm{d}x \ge\displaystyle\int_0^1F&#39;(x)\mathrm{d}x = \dfrac{1}{e}\]</span></p><blockquote><p>22年张八第二套的中值定理也可以用万能构造法来解</p></blockquote><h1 id="常数k值法与中值可分离型问题">常数K值法与中值可分离型问题</h1><p><strong>常数K值法</strong> 用于处理中值部分 <strong>可分离</strong> 的中值问题，也是基于 <strong>罗尔定理</strong></p><p>常见的用 <strong>K值法</strong> 的题目的特点是：结论由 <strong>端点</strong> 和 <strong>中值</strong> 构成</p><blockquote><p>根据夜雨大佬的大纲，常数 K 值法可以分为两类</p></blockquote><h2 id="第一类常数-k-值法">第一类常数 K 值法</h2><p>适用条件：</p><ol type="1"><li><p>区间端点与中值可 <strong>分离</strong>，即原式可化成左侧参数只含有端点，右侧参数只含有中值 <span class="math inline">\(\xi\)</span></p></li><li><p>可化为 <strong>零式</strong>：如果把式子中的 <span class="math inline">\(b\)</span> 换成 <span class="math inline">\(a\)</span> 时，等式变为 <span class="math inline">\(0=0\)</span> 的形式，则称为 <strong>零式</strong></p></li></ol><p>构造步骤：</p><ol type="1"><li>分离中值和端点，令等式一端为常数 <span class="math inline">\(K\)</span></li><li>再将原式中含中值部分换成 <span class="math inline">\(K\)</span>，再把 <span class="math inline">\(b\)</span> 换成 <span class="math inline">\(x\)</span>，然后记作辅助函数 <span class="math inline">\(F(x)\)</span></li><li>该辅助函数必然满足，<span class="math inline">\(F(a) = F(b) = 0\)</span>，即可以使用罗尔了</li></ol><blockquote><p>理论铺垫略显复杂，我们用一道简单的定理证明来讲解</p></blockquote><p>【<strong>证</strong>】拉格朗日中值定理：若函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，在 <span class="math inline">\((a,b)\)</span> 内可导，则存在 <span class="math inline">\(\xi\in(a,b), s.t.\)</span></p><p><span class="math display">\[f(b) - f(a) = f&#39;(\xi)(b - a)\]</span></p><p>【<strong>分析</strong>】 考虑使用 <strong>常数K值法</strong> 来构造辅助函数，检查中值和端点是否可分离：<span class="math inline">\(\dfrac{f(b)-f(a)}{b-a}=f&#39;(\xi)\)</span></p><p>令 <span class="math inline">\(b = a\)</span> 有 <span class="math inline">\(f(a) - f(a) = f&#39;(\xi)(a-a) = 0\)</span> 故符合 <strong>零式</strong></p><p>既 <strong>可分离</strong>，又是 <strong>零式</strong> 考虑K值法构造，令 <span class="math inline">\(K = \dfrac{f(b) - f(a)}{b-a}\)</span></p><p>构造原函数:<span class="math inline">\(F(x) = [f(x) - f(a)] - (x - a)K\)</span>，易得：<span class="math inline">\(F(a) = F(b) = 0\)</span></p><p>【<strong>证</strong>】令 <span class="math inline">\(F(x) = F(x) = [f(x) - f(a)] - (x - a) \cdot \dfrac{f(b) - f(a)}{b-a}\)</span></p><p>易得零点：<span class="math inline">\(F(b) = F(a) = 0\)</span>，由 Rolle 定理：<span class="math inline">\(\exists\xi\in(a,b),s.t.F&#39;(\xi) = 0\)</span></p><p>又：<span class="math inline">\(F&#39;(x) = f&#39;(x) - \dfrac{f(b) - f(a)}{b-a}\)</span>，故 <span class="math inline">\(f(b) - f(a) = (b-a)f&#39;(\xi)\)</span></p><p>【<strong>例</strong>】设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，且 <span class="math inline">\(b&gt;a&gt;0\)</span>，在 <span class="math inline">\((a,b)\)</span> 内可导，证明：<span class="math inline">\(\exists\xi\in(a,b), s.t.\)</span> <span class="math display">\[\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\]</span></p><p>【<strong>分析</strong>】检查是否中值 <strong>可分离</strong>：<span class="math inline">\(\dfrac{ab}{b-a}[f(b)-f(a)] = \xi^2f&#39;(\xi)\)</span></p><p>检查是否为 <strong>零式</strong>：<span class="math inline">\(a^2[f(a)-f(a)]=(a-a)\xi^2f&#39;(\xi)=0\)</span> 满足</p><p>故符合 <strong>第一类常数K值法</strong>，令 <span class="math inline">\(K = \dfrac{ab}{b-a}[f(b)-f(a)]\)</span></p><p>构造辅助函数：<span class="math inline">\(F(x) = f(x) - f(a)- \dfrac{b-a}{ab} \cdot K\)</span></p><p>【<strong>证</strong>】令 <span class="math inline">\(F(x) = f(x) - f(a)- (\dfrac{1}{a} - \dfrac{1}{x})\cdot \dfrac{ab}{b-a}[f(b)-f(a)]\)</span></p><p>易得：<span class="math inline">\(F(a) = F(b) = 0\)</span>，由 Rolle 定理：<span class="math inline">\(\exists\xi\in(a,b),s.t.F&#39;(\xi) = 0\)</span></p><p>又：<span class="math inline">\(F&#39;(x) = f&#39;(x) - \dfrac{1}{x^2} \cdot \dfrac{ab}{b-a}[f(b)-f(a)]\)</span>，故有</p><p><span class="math display">\[\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\]</span></p><h2 id="第二类常数-k-值法">第二类常数 K 值法</h2><p>适用条件：区间端点和中值可 <strong>分离</strong></p><p>构造步骤：</p><ol type="1"><li>分离中值和端点，令等式一端为常数 <span class="math inline">\(K\)</span></li><li>再将原式中含中值部分换成 <span class="math inline">\(K\)</span>，再将 <span class="math inline">\(a,b\)</span> 分离都左右两端</li><li>若两端代数式 <strong>关于 <span class="math inline">\(a,b\)</span> 对称</strong>，则将代数式中的 <span class="math inline">\(a\)</span> 换成 <span class="math inline">\(x\)</span> 得到 <span class="math inline">\(F(x)\)</span>，此时有 <span class="math inline">\(F(a)=F(b)\)</span></li></ol><blockquote><p>依旧用拉格朗日中值定理的证明作为例子</p></blockquote><p>【<strong>证</strong>】拉格朗日中值定理：若函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，在 <span class="math inline">\((a,b)\)</span> 内可导，则存在 <span class="math inline">\(\xi\in(a,b), s.t.\)</span></p><p><span class="math display">\[f(b) - f(a) = f&#39;(\xi)(b - a)\]</span></p><p>【<strong>分析</strong>】检查中值和端点是否可分离：<span class="math inline">\(\dfrac{f(b)-f(a)}{b-a}=f&#39;(\xi)\)</span></p><p>满足 <strong>可分离</strong>，考虑 <strong>第二类常数 K 值法</strong>，令 <span class="math inline">\(K = \dfrac{f(b)-f(a)}{b-a}\)</span></p><p>分离端点 <span class="math inline">\(a,b\)</span>，有：<span class="math inline">\(f(b) - Kb = f(a) - Ka\)</span>，显然等号两侧的代数式 <strong>关于 <span class="math inline">\(a,b\)</span> 对称</strong></p><p>构造辅助函数 <span class="math inline">\(F(x) = f(b) - f(x) - k(b - x)\)</span></p><p>做差有：<span class="math inline">\(F(b) - F(a) = 0\)</span>，故可以推得：<span class="math inline">\(F(b)=F(a)\)</span> 然后就可以用 Rolle 定理了</p><p>【<strong>证</strong>】令 <span class="math inline">\(F(x) = F(x) = [f(b) - f(x)] - (b - x) \cdot \dfrac{f(b) - f(a)}{b-a}\)</span></p><p>做差：<span class="math inline">\(F(b) - F(a) = [f(b)-f(a)] - (b-a) \cdot \dfrac{f(b)-f(a)}{b-a} = 0\)</span></p><p>故 <span class="math inline">\(F(b) = F(a)\)</span>，由 Rolle 定理：<span class="math inline">\(\exists\xi\in(a,b),s.t.F&#39;(\xi) = 0\)</span></p><p>又：<span class="math inline">\(F&#39;(x) = -f&#39;(x) + \dfrac{f(b) - f(a)}{b-a}\)</span>，故 <span class="math inline">\(f(b) - f(a) = (b-a)f&#39;(\xi)\)</span></p><p>【<strong>例</strong>】设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，且 <span class="math inline">\(b&gt;a&gt;0\)</span>，在 <span class="math inline">\((a,b)\)</span> 内可导，证明：<span class="math inline">\(\exists\xi\in(a,b), s.t.\)</span> <span class="math display">\[\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\]</span></p><p>【<strong>分析</strong>】检查是否中值 <strong>可分离</strong>：<span class="math inline">\(\dfrac{ab}{b-a}[f(b)-f(a)] = \xi^2f&#39;(\xi)\)</span></p><p>满足 <strong>可分离</strong>，考虑 <strong>第二类常数 K 值法</strong>，令 <span class="math inline">\(K = \dfrac{ab}{b-a}[f(b)-f(a)]\)</span></p><p>分离左右等式检查对称性：<span class="math inline">\(f(b) + \dfrac{K}{b} = f(a) + \dfrac{K}{a}\)</span>，满足对称性，故可以使用</p><p>考虑构造辅助函数：<span class="math inline">\(F(x) = f(b) - f(x) - \dfrac{b-x}{bx} \cdot K\)</span></p><p>则一定有 <span class="math inline">\(F(b) = F(a)\)</span>，然后就可以用 Rolle 定理了</p><p>【<strong>解</strong>】令 <span class="math inline">\(F(x) = f(b) - f(x) - (\dfrac{1}{x} - \dfrac{1}{b}) \cdot \dfrac{ab}{b-a}[f(b) - f(a)]\)</span></p><p>做差：<span class="math inline">\(F(b) - F(a) = f(b) - f(a) - [f(b) - f(a)] = 0\)</span></p><p>由 <span class="math inline">\(F(b) = F(a)\)</span>，及 Rolle 定理可得：<span class="math inline">\(\exists \xi \in (a,b), s.t. F&#39;(\xi) = 0\)</span></p><p>又：<span class="math inline">\(F&#39;(x) = -f&#39;(x) + \dfrac{1}{x^2} \cdot \dfrac{ab}{b-a}[f(b) - f(a)]\)</span>，于是有</p><p><span class="math display">\[\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\]</span></p><h1 id="柯西中值定理">柯西中值定理</h1><h2 id="中值可分离型问题续">中值可分离型问题(续)</h2><p>对于 <strong>中值可分离型</strong> 的问题，除了 <strong>常数K值法</strong>，还可以使用 <strong>柯西中值定理</strong> 来做</p><p>做法也与 <strong>常数K值法</strong> 有着异曲同工之妙</p><p>首先是分离中值 <span class="math inline">\(\xi\)</span> 和端点 <span class="math inline">\(a,b\)</span> 于等号左右两侧，然后观察等式左右两侧的式子，可分别考虑：</p><ol type="1"><li>从含有 <span class="math inline">\(a,b\)</span> 侧的式子入手：将 <span class="math inline">\(a,b\)</span> 式子化为 <span class="math inline">\(\dfrac{F(b) - F(a)}{G(b) - G(a)}\)</span> （局部分离 <span class="math inline">\(a,b\)</span>）</li><li>从含有 <span class="math inline">\(\xi\)</span> 侧的式子入手：将含有 <span class="math inline">\(\xi\)</span> 的式子化为 <span class="math inline">\(\dfrac{F&#39;(\xi)}{G&#39;(\xi)}\)</span> 或 <span class="math inline">\(F&#39;(\xi)\)</span>，然后还原成 <span class="math inline">\(\dfrac{F(b)-F(a)}{G(b)-G(a)}\)</span></li></ol><p>具体从哪一侧入手，视式子的难易程度（具体问题具体分析），我们用一道题目来具体分析两种做法</p><p>【<strong>例</strong>】设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，且 <span class="math inline">\(b&gt;a&gt;0\)</span>，在 <span class="math inline">\((a,b)\)</span> 内可导，证明：<span class="math inline">\(\exists\xi\in(a,b), s.t.\)</span> <span class="math display">\[\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\]</span></p><p>【<strong>分析</strong>】首先，该结论是一个 <strong>中值可分离型</strong> 问题，先分离中值，有：<span class="math inline">\(ab \cdot \dfrac{f(b)-f(a)}{b-a} = \xi^2f&#39;(\xi)\)</span></p><p><strong>考虑从 <span class="math inline">\(a,b\)</span> 侧入手：</strong> 局部分离 <span class="math inline">\(a,b\)</span> 可得，<span class="math inline">\(\dfrac{f(b) - f(a)}{\dfrac{1}{a} - \dfrac{1}{b}}\)</span></p><p>不妨令 <span class="math inline">\(F(x) = f(x), G(x) = -\dfrac{1}{x}\)</span>，又柯西中值定理可得：<span class="math inline">\(\dfrac{f&#39;(\xi)}{\dfrac{1}{\xi^2}} = \xi^2f&#39;(\xi)\)</span> 得证</p><p><strong>考虑从 <span class="math inline">\(\xi\)</span> 侧入手：</strong> 变形式子凑出分式有， <span class="math inline">\(\dfrac{f&#39;(\xi)}{\dfrac{1}{\xi^2}}\)</span></p><p>不妨令 <span class="math inline">\(F&#39;(\xi) = f&#39;(\xi), G&#39;(\xi) = \dfrac{1}{\xi^2}\)</span>，积分还原后可得：<span class="math inline">\(F(x) = f(x), G(x) = -\dfrac{1}{x}\)</span></p><p>于是就可以对 <span class="math inline">\(F(x), G(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上用柯西中值定理证出结论</p><blockquote><p>两种还原法，在本题上难度几乎一致，但是对于有的题目可能差别巨大，读者使用时需注意选择</p></blockquote><p>【<strong>解</strong>】令 <span class="math inline">\(F(x) = f(x), G(x) = -\dfrac{1}{x}\)</span></p><p>由于 <span class="math inline">\(F(x), G(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，<span class="math inline">\((a,b)\)</span> 上可导，由 Cauchy 中值定理：</p><p><span class="math display">\[\exists \xi \in (a,b), s.t. \dfrac{F(b) - F(a)}{G(b) - G(a)} = \dfrac{F&#39;(\xi)}{G&#39;(\xi)}\]</span></p><p>又 <span class="math inline">\(\dfrac{F&#39;(x)}{G&#39;(x)} = \dfrac{f&#39;(x)}{\dfrac{1}{x^2}} = x^2f&#39;(x)\)</span>，故得证：<span class="math inline">\(\dfrac{f(b)-f(a)}{b-a} = \dfrac{\xi^2f&#39;(\xi)}{ab}\)</span></p><h2 id="虚假的双中值问题">虚假的双中值问题</h2><p><strong>虚假的双中值问题</strong> 一般是指，结论中出现两个中值 <span class="math inline">\(\xi, \eta\)</span>，但是题目中没有强调 <span class="math inline">\(\xi,\eta\)</span> 不能取相同值</p><p>对于这类问题，我们可以化归到 <strong>中值可分离型</strong> 问题上来，分析中值 <span class="math inline">\(\xi,\eta\)</span> 于等式两侧，然后处理两侧：</p><ol type="1"><li>对含有 <span class="math inline">\(\xi\)</span> 侧的式子：将含有 <span class="math inline">\(\xi\)</span> 的式子化为 <span class="math inline">\(\dfrac{F&#39;(\xi)}{G&#39;(\xi)}\)</span> 或 <span class="math inline">\(F&#39;(\xi)\)</span>，然后还原成 <span class="math inline">\(\dfrac{F(b)-F(a)}{G(b)-G(a)}\)</span></li><li>对含有 <span class="math inline">\(\eta\)</span> 侧的式子：将含有 <span class="math inline">\(\eta\)</span> 的式子化为 <span class="math inline">\(\dfrac{H&#39;(\eta)}{T&#39;(\eta)}\)</span> 或 <span class="math inline">\(H&#39;(\eta)\)</span>，然后还原成 <span class="math inline">\(\dfrac{H(b)-H(a)}{T(b)-T(a)}\)</span></li></ol><p>凑出两个等式成立的条件：<span class="math inline">\(\dfrac{F(b)-F(a)}{G(b)-G(a)} = \dfrac{H(b)-H(a)}{T(b)-T(a)}\)</span> 从而完成证明</p><p>做法与 <strong>中值可分离型问题</strong> 一摸一样，我们直接用一道例题来进行讲解</p><p>【<strong>例</strong>】设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，在 <span class="math inline">\((a,b)\)</span> 内可导，且 <span class="math inline">\(f(a)=f(b)=1\)</span>，证明： <span class="math display">\[\exists \xi,\eta\in(a,b), s.t. \quad e^{\eta-\xi}[f&#39;(\eta)+f(\eta)]=1\]</span></p><p>【<strong>分析</strong>】没有强调 <span class="math inline">\(\xi \ne \eta\)</span>，考虑分离中值，构造柯西中值定理：<span class="math inline">\(e^{\eta}[f&#39;(\eta)+f(\eta)]=e^\xi\)</span></p><p><strong>对于 <span class="math inline">\(\xi\)</span> 侧变形：</strong> <span class="math inline">\(\dfrac{e^\xi}{1}\)</span>，不妨令 <span class="math inline">\(F&#39;(x) = e^x, G&#39;(x) = 1\)</span>，易得：<span class="math inline">\(F(x) = e^x, G(x) = x\)</span></p><p>逆用 Cauchy 中值定理，反向构造 <span class="math inline">\(\dfrac{e^b - e^a}{b - a}\)</span></p><p><strong>对于 <span class="math inline">\(\eta\)</span> 侧变形：</strong> <span class="math inline">\(\dfrac{e^{\eta}[f&#39;(\eta)+f(\eta)]}{1}\)</span>，不妨令 $ H'(x) = e^xf'(x) + e^xf(x), G'(x) = 1$</p><p>易得：<span class="math inline">\(H(x) = e^xf(x), G(x) = x\)</span></p><p>逆用 Cauchy 中值定理，反向构造 $ =  = $ 右式</p><p>反向构造成立，再正向对两侧分别使用 Cauchy 中值定理即可证明结论</p><p>【<strong>解</strong>】令 <span class="math inline">\(F(x) = e^x, G(x) = x, H(x) = e^xf(x)\)</span>，由于 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([a,b]\)</span> 上连续，在 <span class="math inline">\((a,b)\)</span> 内可导</p><p>由 Cauchy 中值定理可得：<span class="math inline">\(\exists \xi \in(a,b), s.t.\)</span></p><p><span class="math display">\[\dfrac{e^\xi}{1} = \dfrac{e^b - e^a}{b - a} = \dfrac{e^bf(b) - e^af(a)}{b - a} = \dfrac{e^{\eta}[f&#39;(\eta)+f(\eta)]}{1}\]</span></p><p>即：<span class="math inline">\(e^{\eta-\xi}[f&#39;(\eta)+f(\eta)]=1\)</span></p><h2 id="高阶中值问题">高阶中值问题</h2><p>当结论中出现有二阶或以上的导数时，需要多次使用可惜中值定理，处理手法的核心依据是以下结论</p><p>若 <span class="math inline">\(L(x), H(x)\)</span> 具有 <span class="math inline">\(n+1\)</span> 阶导数，且 <span class="math inline">\(L(a) = L&#39;(a) = \cdots = L^{(n)} = 0, H(a) = H&#39;(a) = \cdots = H^{(n)} = 0\)</span>，则存在 <span class="math inline">\(\xi\in(a,b)\)</span>，<span class="math inline">\(s.t. \dfrac{L(b)}{H(b)} = \dfrac{L^{(n+1)}(\xi)}{H^{(n+1)}(\xi)}\)</span></p><p>该结论读者自证不难，只需不断使用柯西中值定理，同时每次缩短估计区间即可</p><p>这类问题，竞赛里较多，考研的话考察不是很多，就不举例了，难点在于构造 <span class="math inline">\(L(a)\)</span> 和 <span class="math inline">\(H(a)\)</span></p><h1 id="拉格朗日中值定理的几何应用">拉格朗日中值定理的几何应用</h1><p>Lagrange 中值定理：<span class="math inline">\(\varphi(x)\)</span> 在开区间 <span class="math inline">\((a,b)\)</span> 上可导，闭区间 <span class="math inline">\([a,b]\)</span> 上连续，则 <span class="math inline">\(\exists \xi \in(a,b)\)</span>，s.t. <span class="math display">\[\varphi(b) - \varphi(a) = \varphi&#39;(\xi) (b - a)\]</span></p><p>Lagrange 中值定理的几何意义：区间 <strong>端点的割线斜率</strong> <strong>等于</strong> 区间内部 <strong>一点的切线斜率</strong></p><p>如下图示可以方便读者理解这句话：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/20/55909_d2ef36924a-IMG_749C72FD38AB-1.jpeg" /></p><p>利用该几何意义，可以在一些题目中，快速帮我们 <strong>捋清证明思路</strong></p><p>利用两道往年例题，来为大家讲解如何利用 Lagrange 中值定理的几何意义</p><p>【<strong>2013年</strong>】证明：若函数 <span class="math inline">\(\varphi(x)\)</span> 具有二阶导数，且满足 <span class="math inline">\(\varphi(2) &gt; \varphi(1)\)</span>，<span class="math inline">\(\varphi(2) &gt; \displaystyle\int_2^3\varphi(x) dx\)</span>，则至少存在一点 <span class="math inline">\(\xi \in (1,3)\)</span>，s.t. <span class="math inline">\(\varphi&#39;&#39;(\xi) &lt; 0\)</span></p><p>【<strong>分析</strong>】首先，根据题干找出所有端点信息，考虑对积分 <span class="math inline">\(\displaystyle\int_2^3\varphi(x)dx\)</span> 用积分中值定理有：</p><p><span class="math inline">\(\varphi(x_0) = \displaystyle\int_2^3\varphi(x) dx\)</span>，其中 <span class="math inline">\(2 &lt; x_0 &lt; 3\)</span>，成功找出所有的端点信息：<span class="math inline">\(\varphi(1),\varphi(2),\varphi(x_0)\)</span></p><p>根据题干的不等关系，初步绘制图像，如下：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/20/55909_e0e0db614a-IMG_DAD7F610034F-1.jpeg" /></p><p>在三个端点相邻的区间使用 Lagrange 中值定理，估计出一点的斜率，然后用割线斜率代替，如下：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/21/55909_ed80a8dc4a-IMG_D671F44AB2F7-1.jpeg" /></p><p>得到一个一阶导数大于 0 的 <span class="math inline">\(\xi_1\)</span> 和一阶导数小于 0 的 <span class="math inline">\(\xi_2\)</span>，然后我们绘制 <span class="math inline">\(\varphi&#39;(x)\)</span> 与 <span class="math inline">\(x\)</span> 的图像：</p><p><img src="https://cdn.acwing.com/media/article/image/2021/11/21/55909_fc123c3a4a-IMG_A0A61C59EA67-1.jpeg" /></p><p><span class="math inline">\(\xi_1\)</span> 大于 0，位于 <span class="math inline">\(x\)</span> 轴上方；<span class="math inline">\(\xi_2\)</span> 小于 0，位于 <span class="math inline">\(x\)</span> 轴下方</p><p>然后我们继续利用 Lagrange 中值定理，估计出了第三个中值 <span class="math inline">\(\xi_3\)</span> 等于 该段区间的割线斜率 <span class="math inline">\(&lt;0\)</span></p><p>即答案所要求的点 <span class="math inline">\(\varphi&#39;&#39;(\xi) &lt; 0\)</span></p><p>该几何法，成功帮助我们梳理了一遍证明思路，直接根据上述步骤，转化为数学语言写出即可</p><p>【<strong>解</strong>】由 <strong>积分中值定理</strong> 可得：<span class="math inline">\(\exists x_0 \in (2,3)\)</span>，s.t. <span class="math inline">\(\varphi(x_0) = \displaystyle\int_2^3 \varphi(x) dx\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi_1\in(1, 2)\)</span>，s.t. <span class="math inline">\(\varphi&#39;(\xi_1) = \varphi(2) - \varphi(1) &gt; 0\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi_2\in(2,x_0)\)</span>，s.t. <span class="math inline">\(\varphi&#39;(\xi_2) = \varphi(x_0) - \varphi(2) &lt; 0\)</span></p><p>由 Lagrange 中值定理：<span class="math inline">\(\exists \xi\in(\xi_1, \xi_2)\)</span>，s.t. <span class="math inline">\(\varphi&#39;&#39;(\xi) = \varphi&#39;(\xi_2) - \varphi&#39;(\xi_1) &lt; 0\)</span> QED</p><h1 id="辅助多项式法-多项式拟合法">辅助多项式法 / 多项式拟合法</h1><p><strong>欲证结论为 <span class="math inline">\(f^{(n)}(\xi) = k \quad (k\ne 0)\)</span>，且题干中关于 <span class="math inline">\(f(x)\)</span> 的信息特别多</strong></p><p>我们可以构造一个 <span class="math inline">\(n\)</span> 次多项式 <span class="math inline">\(p(x)\)</span>，使得 <span class="math inline">\(p(x)\)</span> 也同时满足 <span class="math inline">\(f(x)\)</span> 所满足的所有条件</p><p>然后构造一个原函数 <span class="math inline">\(F(x) = f(x) - p(x)\)</span>，由于一切 <span class="math inline">\(f(x)\)</span> 满足的条件 <span class="math inline">\(g(x)\)</span> 也满足</p><p>故对于 <strong>任意条件</strong>，两者同时满足，然后做差后差为 <span class="math inline">\(0\)</span>，这样没对应一个 <strong>条件</strong>，就有一个 <strong>零点</strong></p><p>然后零点之间 <strong>两两罗尔罗尔再罗尔</strong> 便可得到欲证结论 <span class="math inline">\(f^{(n)}(\xi) = k \quad (k\ne 0)\)</span></p><blockquote><p>辅助多项式法，一般 <span class="math inline">\(p(x)\)</span> 令为关于 <span class="math inline">\(x\)</span> 的一元 <span class="math inline">\(n\)</span> 次多项式，<span class="math inline">\(n\)</span> 就是欲证结论的阶数</p></blockquote><p><strong>【例】设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0, 4]\)</span> 二阶可导，<span class="math inline">\(f(0) = 0, f(1) = 1, f(4) = 2\)</span></strong></p><p><strong>【证】<span class="math inline">\(\exists \xi \in (0, 4), s.t. f&#39;&#39;(\xi) = -\dfrac{1}{3}\)</span></strong></p><p><strong>【解】</strong> 令 <strong>辅助多项式</strong> 为 <span class="math inline">\(p_2(x) = ax^2 + bx + c\)</span>（题目要求二阶导数信息，故令出二阶多项式）</p><p>代入 <span class="math inline">\(f(x)\)</span> 的条件，让 <span class="math inline">\(p(x)\)</span> 也满足：<span class="math inline">\(\begin{cases} p(0) = c \xlongequal{令} 0 \\\\ p(1) = a + b + c \xlongequal{令} 1 \\\\ p(4) = 16a + 4b + c \xlongequal{令} 2 \end{cases}\)</span>，解得 <span class="math inline">\(\begin{cases} a = -\dfrac{1}{6}\\\\ b = \dfrac{7}{6}\\\\ c = 0 \end{cases}\)</span></p><p>故 <span class="math inline">\(p_2(x) = -\dfrac{1}{6}x^2 - \dfrac{7}{6}x\)</span>，构造辅助函数 <span class="math inline">\(F(x) = f(x) - p_2(x)\)</span></p><p>则易知：<span class="math inline">\(F(0) = F(1) = F(4) = 0\)</span></p><p>由 Rolle 定理：<span class="math inline">\(\exists \xi_1 \in(0, 1), s.t. F&#39;(\xi_1) = 0\)</span></p><p>由 Rolle 定理：<span class="math inline">\(\exists \xi_2 \in(1, 4), s.t. F&#39;(\xi_2) = 0\)</span></p><p>由 Rolle 定理：<span class="math inline">\(\exists \xi \in(\xi_1, \xi_2), s.t. F&#39;&#39;(\xi) = 0\)</span>，即 <span class="math inline">\(f&#39;&#39;(\xi) = p_2&#39;&#39;(\xi) = -\dfrac{1}{3} \quad QED\)</span></p><p>更多有关辅助多项式的应用，可以观看该视频学习 <a href="https://www.bilibili.com/video/BV1Z64y1v7EP">中值定理 从入门到精通(第2集 通杀一类题)</a></p><blockquote><p>辅助多项式的方法，可以用于 <strong>2007 / 2019</strong> 年的中值定理证明题中。</p><p>辅助多项式好处在于构造简单，坏处在于使用范围小，不过还是一个很值得学习的方法。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【专题】公共数学_多元函数极值专题</title>
      <link href="/graduate_exam/math_special/0x01/"/>
      <url>/graduate_exam/math_special/0x01/</url>
      
        <content type="html"><![CDATA[<p><strong>Author: Colopen 彩色铅笔</strong></p><p><strong>Link: https://www.colopen-blog.com</strong></p><p><strong>Download the pdf: <a href="/download/colopen_多元函数极值专题.pdf">多元函数极值专题.pdf</a></strong></p><p><strong>last publication: 2021-12-11 18:00</strong></p><hr /><h1 id="无条件极值">无条件极值</h1><p>无条件极值属于多元函数极值中，较为简单的一类问题，其解决的问题描述一般是： <span class="math display">\[\text{给定一个多元函数 } z=f(x,y)\text{，求解他在实数域上的极值}\]</span> 解决该类问题的思路也很简单，直接沿用我们在 <strong>一元函数</strong> 中的手段：通过 <strong>驻点</strong> 找 <strong>极值点</strong></p><p>用 <span class="math inline">\(z\)</span> 对 <span class="math inline">\(x,y\)</span> 分别求 <strong>偏导</strong>，然后令 <strong>一阶偏导数</strong> 为零，找出 <strong>驻点</strong></p><p>如何判断 <strong>驻点</strong> 是否是 <strong>极值点</strong> ？常用手段是 <strong>黑塞矩阵（Hessian Matrix）判别式</strong></p><p>他是用于研究函数在一点处 <strong>曲率</strong> 的变化而存在的（就像一元函数求二阶导数的行为，本质相同）</p><p><strong>黑塞矩阵判别式：</strong> <span class="math inline">\(\begin{vmatrix}f_{xx} &amp; f_{xy} \\\\f_{yx} &amp; f_{yy}\end{vmatrix} \xlongequal{?} 0\)</span></p><p>若 <strong>黑塞矩阵判别式</strong> ：</p><ol type="1"><li><p>大于 <span class="math inline">\(0\)</span>，则该驻点是极值点</p><ol type="1"><li>若 <span class="math inline">\(f_{xx} &gt; 0\)</span> 则为极小值点</li><li>若 <span class="math inline">\(f_{xx} &lt; 0\)</span> 则为极大值点</li></ol></li><li><p>小于 <span class="math inline">\(0\)</span>，则该驻点不是极值点</p></li><li><p>等于 <span class="math inline">\(0\)</span>，则 <strong>判别式失效</strong></p><p>当 <strong>判别式失效</strong> 时，我们可以利用 <strong>极值的定义</strong>，然后通过一个 <strong>二元极限</strong> 判断该点是否是<strong>极值点</strong></p><ol type="1"><li>如果找到两条路径，一条路径极限大于该点值，一条路径极限小于该点值，则非 <strong>极值点</strong></li><li>如果 <strong>去心邻域</strong> 内的值都大于或小于该驻点的值，则该驻点为<strong>极值点</strong></li></ol></li></ol><p>关于 <strong>无条件极值</strong>，各大辅导书上步骤都有详细讲解，故这里就不准备例题了，只帮助大家理清思路</p><h1 id="条件极值">条件极值</h1><p><strong>条件极值</strong> 是考研中常考的，方法超固定，计算超复杂的一类问题</p><p><strong>条件极值</strong> 围绕着 <strong>目标函数</strong>、<strong>约束条件</strong> 两个关键字展开</p><p>求解的是 <strong>目标函数</strong> 在 <strong>约束条件</strong> 下的 <strong>极值</strong> 问题</p><p>其问题描述一般为： <span class="math display">\[\text{已知函数 }z = f(x,y) \text{，求解 }z \text{ 在约束条件 } D = \{(x,y)|g(x,y)=0\}\text{ 下的最值}\]</span> <strong>通法</strong> 是 <strong>拉格朗日数乘法</strong>：是一种寻找变量受一个或多个条件所限制的多元函数的极值的方法</p><p>构造如下方程组：</p><p><span class="math display">\[L(x,y,\lambda) = f(x,y) + \lambda g(x,y) \xlongequal{\text{令}} 0\]</span></p><p><span class="math display">\[\begin{cases}L_x = f_x(x,y) + \lambda g_x(x,y) \xlongequal{\text{令}} 0\\L_y = f_y(x,y) + \lambda g_y(x,y) \xlongequal{\text{令}} 0\\L_\lambda = g_x(x,y) \xlongequal{\text{令}} 0\end{cases}\]</span></p><p>然后解该方程组，便可以得到 <strong>目标函数</strong> 在 <strong>约束条件</strong> 下的 <strong>极值点</strong></p><p>然后比较几个 <strong>极值点</strong>，选出 <strong>最大最小值</strong> 即可</p><blockquote><p>不过 <strong>条件极值</strong> 难，从来都不是难在做法上，而是构造的 <strong>拉格朗日数乘法方程</strong> 难解</p><p>接下来的内容，将会围绕优化解方程出发，分享几个我常用的方法</p></blockquote><h2 id="利用轮换对称式化简拉格朗日乘子">利用轮换对称式化简拉格朗日乘子</h2><p>在下方的 <strong>利用齐次式化简拉格朗日乘子</strong> 中介绍过：（这个专题我是从下往上写的 w）</p><p><strong>拉格朗日函数</strong> 是一个 <strong>多项式函数</strong>，可以利用很多 <strong>多项式的特性</strong> 对计算进行化简</p><p>而本篇中，提到的方法便是 <strong>轮换对称式</strong></p><blockquote><p><strong>二元轮换对称式</strong> 的定义：</p><p>对于一个二元多项式 <span class="math inline">\(f(x,y)\)</span>，如果用 <span class="math inline">\(x\)</span> 代替 <span class="math inline">\(y\)</span>，用 <span class="math inline">\(y\)</span> 代替 <span class="math inline">\(x\)</span>，后 <strong>代数式</strong> 保持不变，则称 <span class="math inline">\(f(x,y)\)</span> 具有 <strong>轮换对称性</strong></p><p>上述定义可以扩充到 <span class="math inline">\(n\)</span> 元，此外 <strong>二元轮换对称式</strong> 也是一个 <strong>完全对称式</strong></p><p>轮换对称性用简单一个点的话来说就是，如果交换 <span class="math inline">\(x,y\)</span> 后，<span class="math inline">\(f(x,y)\)</span> 保持不变</p></blockquote><p>对于具有 <strong>轮换对称性</strong> 的函数，一定有解 <span class="math inline">\(y = x\)</span></p><p>因此我们不妨直接让 <span class="math inline">\(L_x - L_y\)</span> 然后提出 <span class="math inline">\((y-x)\)</span> 的因式</p><p>然后分类讨论两个因式分别为 <span class="math inline">\(0\)</span> 的解</p><p><strong>【例】设计一个容积为 <span class="math inline">\(V\)</span> 的长方体开口水箱，长宽高分别为多少时最节省材料</strong></p><p>【解】根据题意可得 <strong>目标函数:</strong> <span class="math inline">\(S = 2xz + 2zy + xy\)</span>，约束条件 <span class="math inline">\(V = xyz\)</span></p><p>构造拉格朗日函数：<span class="math inline">\(L = 2xz + 2zy + xy + \lambda (xyz - V)\)</span></p><blockquote><p>显然 <span class="math inline">\(x,y\)</span> 具有轮换对称性</p></blockquote><p><span class="math display">\[\begin{cases}L_x = 2z + y + \lambda yz \xlongequal{\text{令}} 0 \\L_y = 2z + x + \lambda xz \xlongequal{\text{令}} 0 \\L_z = 2x + 2y + \lambda xy \xlongequal{\text{令}} 0 \\L_\lambda = xyz \xlongequal{\text{令}} V\end{cases}\]</span></p><p>利用轮换对称性，让 <span class="math inline">\(L_x - L_y\)</span> 得：</p><p><span class="math display">\[\begin{aligned}(y-x) + \lambda z(y - x) &amp;= 0 \\(y-x) \cdot (1 + \lambda z) &amp;= 0 \\\end{aligned}\]</span></p><ol type="1"><li><span class="math inline">\(x = y\)</span> 时：<span class="math inline">\(L_z: 4x + \lambda x^2 = 0 \Rightarrow x(4 + \lambda x) = 0 \Rightarrow \lambda = -\dfrac{4}{x}\)</span></li></ol><p><span class="math inline">\(L_\lambda : z = \dfrac{V}{x^2}\)</span>，<span class="math inline">\(L_x : \dfrac{2V}{x^2} + x - 4 \cdot \dfrac{V}{x^2} = 0 \Rightarrow x^3 = 2V \Rightarrow x = \sqrt[3]{2V}\)</span></p><p>故 <span class="math inline">\(\begin{cases} x = \sqrt[3]{2V} \\ y = \sqrt[3]{2V} \\ z = \dfrac{\sqrt[3]{V}}{2^{\frac{2}{3}}} \end{cases}\)</span></p><ol start="2" type="1"><li><span class="math inline">\(1 + \lambda z = 0\)</span> 时：<span class="math inline">\(L_x : -\dfrac{2}{\lambda} + y - y = 0 \Rightarrow \dfrac{2}{\lambda} = 0\)</span> 无解</li></ol><p>由于题目保证一定有解，故最小值解为：<span class="math inline">\(\begin{cases} x = \sqrt[3]{2V} \\ y = \sqrt[3]{2V} \\ z = \dfrac{\sqrt[3]{V}}{2^{\frac{2}{3}}} \end{cases}\)</span></p><blockquote><p>2013年超难解的多元极值问题，就可以利用本技巧化简运算，读者可以去试一下</p></blockquote><h2 id="三角换元法">三角换元法</h2><blockquote><p>这个方法很简单，本质就是沿用了大家在 <strong>二重积分</strong> 里常用的 <strong>极直互化</strong> 技巧</p></blockquote><p>考虑按照 <strong>约束条件</strong> 的形式，将 <strong>直角坐标</strong> 转化成 <strong>极坐标</strong> 形式</p><p>这样就从原来的 <span class="math inline">\(f(x,y)\)</span> 极值问题，转化为 <span class="math inline">\(f(r,\theta)\)</span> 极值问题</p><p>由于是基于 <strong>约束条件</strong> 转换的坐标，转化过来后 <span class="math inline">\(r,\theta\)</span> 是带着 <strong>约束条件</strong> 的 <strong>取值范围限制</strong></p><p>故 <span class="math inline">\(f(r,\theta)\)</span> 最后可以通过 <strong>三角恒等变形</strong> 化成一个 <span class="math inline">\(ar\sin(\theta + \varphi)\)</span> 的形式</p><p>然后就可以根据 <span class="math inline">\(r\)</span> 范围直接写出 <span class="math inline">\(f\)</span> 的 <strong>取值范围</strong></p><p><strong>【例】<span class="math inline">\(4x^2+y^2 \le 25\)</span>，求 <span class="math inline">\(L = x^2 + 12xy + 2y^2\)</span> 的取值范围</strong></p><p>【解】根据 <strong>约束条件</strong> 的形式，进行 <strong>极直互化</strong></p><p>不妨令 <span class="math inline">\(2x = r\cos \theta\)</span>，<span class="math inline">\(y = r\sin \theta\)</span>，则 <span class="math inline">\(r^2 \le 25 \Rightarrow (0 \le r \le 5\)</span>，<span class="math inline">\(0 \le \theta \le 2\pi)\)</span></p><p>对 <strong>目标函数</strong> 转 <strong>极坐标</strong>：</p><p><span class="math display">\[\begin{aligned}L&amp;=x^2 + 12xy + 2y^2\\&amp;=\dfrac{r^2}{4}\cos^2\theta + 6r^2\sin\theta\cos\theta + 2r^2\sin^2\theta\\&amp;=\dfrac{r^2}{4} \cdot \dfrac{1+\cos 2\theta}{2} + 3r^2\sin 2\theta + 2r^2\cdot \dfrac{1-\cos 2\theta}{2}\\&amp;=\dfrac{r^2}{8} + \dfrac{r^2}{8}\cos 2\theta + 3r^2\sin 2\theta + r^2 - r^2\cos 2\theta\\&amp;=\dfrac{r^2}{8} \cdot \bigg({    9 + 24\sin 2\theta - 7\cos 2\theta}\bigg)\\&amp;=\dfrac{r^2}{8} \cdot \bigg({    9 + \sqrt{24^2 + 7^2} \sin(2\theta + \varphi)}\bigg)\\&amp;=\dfrac{r^2}{8} \cdot \bigg({    9 + 25 \sin(2\theta + \varphi)}\bigg)\\\end{aligned}\]</span></p><p>由于 <span class="math inline">\(\theta \in [0, 2\pi], r \in [0, 5]\)</span>，故 <span class="math inline">\(f(r,\theta)\in [-50, \dfrac{425}{4}]\)</span></p><blockquote><p>该方法同样适用于 <strong>三个变量平方和的等式</strong> 下</p><p>由于是等式，故可以选择<strong>两个变量</strong>建立<strong>极坐标</strong>，让<strong>第三个变量</strong>代替 <span class="math inline">\(r\)</span> 作为参数限制</p><p>如下面这题</p></blockquote><p>【例】<span class="math inline">\(x^2+y^2+z^2=10\)</span>，求 <span class="math inline">\(L = xy + 2yz\)</span> 的取值范围</p><p>【解】对 <span class="math inline">\(L\)</span> 进行变形：<span class="math inline">\(L = y \cdot (x + 2z)\)</span>，考虑围绕 <span class="math inline">\(x,z\)</span> 建立极坐标</p><p>对约束条件进行恒等变形：<span class="math inline">\(x^2 + z^2 = 10 - y^2\)</span></p><p>建立极坐标：<span class="math inline">\(x = \sqrt{10 - y^2} \cos \theta, z = \sqrt{10 - y^2} \sin \theta\)</span></p><p>易得 <span class="math inline">\(-\sqrt{10} \le y &lt; \sqrt{10}\)</span>，<span class="math inline">\(0 \le \theta \le 2\pi\)</span></p><p>对目标函数进行换元：</p><p><span class="math display">\[\begin{aligned}L &amp;=y \cdot \bigg({    \sqrt{10 - y^2} \cos\theta + 2\sqrt{10 - y^2}\sin\theta}\bigg)\\&amp;=y \sqrt{10 - y^2} \cdot     \sqrt{5} \sin (\theta + \varphi)\end{aligned}\]</span></p><p>根据 <span class="math inline">\(y\in[-\sqrt{10},\sqrt{10}]\)</span>，有 <span class="math inline">\(y\sqrt{10-y^2} \in [-5, 5]\)</span> （读者自证不难）</p><p>而 <span class="math inline">\(\sqrt{5} \sin (\theta + \varphi) \in [-\sqrt{5}, \sqrt{5}]\)</span></p><p>故 <span class="math inline">\(L = y \sqrt{10 - y^2} \cdot \sqrt{5} \sin (\theta + \varphi) \in [-5\sqrt{5}, 5\sqrt{5}]\)</span></p><h2 id="利用齐次式化简拉格朗日乘子">利用齐次式化简拉格朗日乘子</h2><blockquote><p>部分参考自 <span class="citation" data-cites="考研竞赛凯哥">[@考研竞赛凯哥]</span>()，及其他参考文献</p></blockquote><blockquote><p>这一部分，有一些数学知识作为前置铺垫，不过最后得出来的结论相当简单</p><p>如果没有想要了解的想法，只是以考试为主要目的的同学，可以直接往下滑</p></blockquote><p>解 <strong>多元函数条件极值</strong> 问题时，需要用到 <strong>拉格朗日乘数法</strong> 构造 <strong>拉格朗日函数</strong></p><p><span class="math display">\[L(x_1,x_2,x_2,\lambda) = f(x_1,x_2,x_3) + \lambda [g(x_1,x_2,x_3) - m]\]</span></p><p>其中 <span class="math inline">\(\lambda\)</span> 为参数</p><p>由于 <span class="math inline">\(\lambda\)</span> 是作为参数存在的，故研究 <strong>拉格朗日函数</strong> 实际上是在研究一个 <strong>多项式函数</strong></p><p>而当研究对象转换到 <strong>多项式函数</strong> 后，就可以用到很多 <strong>特殊多项式函数</strong> 的性质</p><p>例如，本篇中会介绍的 <strong>齐次函数</strong>（如果该次数是二次型，推荐用下一个二次型解法）</p><blockquote><p><strong>k 次式的齐次函数</strong> 的 <strong>定义</strong> 为：<span class="math inline">\(f(\lambda x_1,\lambda x_2,\cdots,\lambda x_n) = \lambda^kf(x_1,x_2,\cdots,x_n)\)</span></p></blockquote><p>对于 <span class="math inline">\(k\)</span> 次 <strong>齐次函数</strong> ，有 <strong>齐次函数</strong> 的 <strong>欧拉定理</strong>：</p><p><span class="math display">\[x_1\dfrac{\partial f}{\partial x_1} + x_2\dfrac{\partial f}{\partial x_2} + \cdots + x_n\dfrac{\partial f}{\partial x_n} = k f(x_1,x_2,\cdots,x_n)\]</span></p><blockquote><p><strong>简单证明：</strong></p><p>对于 <span class="math inline">\(k\)</span> 次齐次函数 <span class="math inline">\(f(x_1,x_2,\cdots,x_n)\)</span>，对定义式两边求全微分：</p><p><span class="math display">\[\dfrac{d}{d\lambda} f(\lambda x_1,\lambda x_2,\cdots,\lambda x_n) = \sum_{i=1}^n \dfrac{\partial f}{\partial(\lambda x_i)} \cdot \dfrac{d(\lambda x_i)}{d\lambda} = \sum_{i=1}^n x_i \dfrac{\partial f}{\partial(\lambda x_i)}\]</span></p><p><span class="math display">\[\dfrac{d}{d\lambda} \lambda^k f(x_1,x_2,\cdots,x_n) = k\lambda^{k-1}f(x_1,x_2,\cdots,x_n)\]</span></p><p>通过这个 <strong>算两次</strong> 的思想，由于两个 <strong>全微分</strong> 必相等，于是：</p><p><span class="math display">\[\sum_{i=1}^n x_i \dfrac{\partial f}{\partial(\lambda x_i)} = k\lambda^{k-1}f(x_1,x_2,\cdots,x_n)\]</span></p><p>取 <span class="math inline">\(\lambda = 1\)</span>，得：</p><p><span class="math display">\[\sum_{i=1}^n x_i \dfrac{\partial f}{\partial(\lambda x_i)} = kf(x_1,x_2,\cdots,x_n) \qquad QED\]</span></p></blockquote><p>回到 <strong>多元函数条件极值</strong> 问题上来</p><p>若目标函数 <span class="math inline">\(f\)</span> 和约束条件 <span class="math inline">\(g = m\)</span> 满足 <span class="math inline">\(f\)</span> 和 <span class="math inline">\(g\)</span> 是 <span class="math inline">\(k\)</span> 次多项式，那么 <span class="math inline">\(F = f + \lambda g\)</span> 也是 <span class="math inline">\(k\)</span> 次多项式。</p><p>对于 <strong>拉格朗日乘子</strong> <span class="math inline">\(L = f + \lambda(g-m)\)</span>，<span class="math inline">\(L_x = 0, L_y = 0\)</span></p><p>可以考虑 <span class="math inline">\(xL_x + yL_y = 0\)</span>，即 <span class="math inline">\(xF_x + yF_y = 0\)</span>（常数 <span class="math inline">\(m\)</span> 求偏导后被干掉了）</p><p>根据 <strong>欧拉定理</strong>，<span class="math inline">\(kF = 0\)</span>，再根据条件 <span class="math inline">\(g = m\)</span>，<span class="math inline">\(kF = 0\)</span> 可以进一步化简为 <span class="math inline">\(f = -\lambda m\)</span></p><p>因此考虑 <span class="math inline">\(f\)</span> 的最值问题，就化为考虑 <span class="math inline">\(-\lambda m\)</span> 的最值问题</p><blockquote><p>理论铺垫多说无益，我们直接来一道实战题目进行讲解</p><p>题选自李林预测卷，我是在群里找来的到的</p></blockquote><p><strong>【例】求中心在坐标原点的椭圆 <span class="math inline">\(x^2 - 4xy + 5y^2 = 1\)</span> 的长半轴和短半轴长度</strong></p><p>【解】椭圆长/短半轴长度就是椭圆上离中心点最 远/近 的距离长度</p><p>故可以目标函数就是 <span class="math inline">\(\sqrt{x^2 + y^2}\)</span>，但为了化简计算，不妨设目标函数为 <span class="math inline">\(x^2 + y^2\)</span></p><p>构造拉格朗日乘数法：<span class="math inline">\(L(x,y,\lambda) = x^2 + y^2 + \lambda(x^2 - 4xy + 5y^2 - 1)\)</span></p><p><span class="math display">\[\begin{cases}L_x = 2x + 2\lambda x - 4\lambda y \xlongequal{\text{令}} 0\\L_y = 2y + 10\lambda y - 4\lambda x \xlongequal{\text{令}} 0\\L_\lambda = x^2 - 4xy + 5y^2 - 1 \xlongequal{\text{令}} 0\end{cases}\]</span></p><p>考虑使用齐次型化简转化研究对象，让 <span class="math inline">\(xL_x + yL_y\)</span>：</p><p><span class="math display">\[2(x^2 + y^2) + 2\lambda (x^2 - 4xy + 5y^2) = 0\]</span></p><p>由于已知约束条件 <span class="math inline">\(x^2 - 4xy + 5y^2 = 1\)</span>，故直接代入上式得：</p><p><span class="math display">\[x^2 + y^2 = -\lambda\]</span></p><p>求 <span class="math inline">\(x^2 + y^2\)</span>最值的问题，成功转化为求 <span class="math inline">\(-\lambda\)</span> 最值的问题了</p><p>由于 <span class="math inline">\((x,y) \ne (0,0)\)</span> 否则肯定不满足第三个方程 <span class="math inline">\(L_\lambda(0,0) = -1 \ne 0\)</span></p><p>故一、二两个方程 <span class="math inline">\(L_x\)</span> 和 <span class="math inline">\(L_y\)</span> 一定含有 <strong>非零解</strong>，故他们的 <strong>系数矩阵行列式</strong> = <span class="math inline">\(0\)</span>：</p><p><span class="math display">\[\begin{vmatrix}2+2\lambda &amp; -4\lambda \\-4\lambda &amp; 2 + 10\lambda\end{vmatrix} = 4\lambda^2 + 24\lambda + 4 = 0 \quad\Rightarrow\quad \lambda = -3 \pm 2\sqrt{2}\]</span></p><p>由此可知 <span class="math inline">\(x^2 + y^2\)</span> 的最大值为 <span class="math inline">\(3 + 2\sqrt{2}\)</span>，最小值为 <span class="math inline">\(3 - 2\sqrt{2}\)</span></p><p>对应到 <span class="math inline">\(d = \sqrt{x^2 + y^2}\)</span>，<span class="math inline">\(d_{min} = \sqrt{2} - 1\)</span>，<span class="math inline">\(d_{max} = \sqrt{2} + 1\)</span></p><h2 id="利用二次型求解">利用二次型求解</h2><p>根据 <strong>线性代数</strong> 知识我们知道，<strong>二次型</strong> 化成 <strong>标准型</strong>，可以通过 <strong>正交变换</strong> 实现</p><p>而 <strong>正交变换</strong> 有一个非常好的性质：保向量 <strong>模长</strong> 相等</p><p>这样就能利用该 <strong>性质</strong>，把原有的 <strong>约束条件</strong>，运用到新坐标下，产生新的 <strong>约束条件</strong></p><p>适用的题型要求：</p><ol type="1"><li><strong>目标函数</strong> <span class="math inline">\(f(x_1,x_2,x_3)\)</span> 是二次型</li><li><strong>约束条件</strong> <span class="math inline">\(g\)</span> 只含有平方项，形如 <span class="math inline">\(x_1^2+x_2^2+x_3^2 = m\)</span></li></ol><p>这样，我们最终要找的 <strong>目标函数</strong> 最值，就分别是该 <strong>二次型矩阵</strong> 的 <strong>最大最小特征值</strong></p><blockquote><p>上述为直接结论，我会在下面这道例题中详细讲解原理</p></blockquote><p><strong>【例】求 <span class="math inline">\(f(x_1,x_2,x_3)=x_1^2+x_2^2+3x_3^2-2x_1x_2\)</span> 在约束条件 <span class="math inline">\(x_1^2+x_2^2+x_3^2=1\)</span> 上的最值</strong></p><p>【解】<strong>目标函数</strong> 是 <strong>二次型</strong>，且 <strong>约束条件</strong> 为 <strong>平方和</strong>，考虑使用 <strong>二次型</strong> 计算</p><p>令 <strong>二次型</strong> <span class="math inline">\(f\)</span> 对应的矩阵 <span class="math inline">\(A = \begin{pmatrix} 1 &amp; -1 &amp; 0 \\ -1&amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 3 \end{pmatrix}\)</span></p><p>求出 <span class="math inline">\(A\)</span> 的 <strong>特征值</strong>，令 <span class="math inline">\(|A - \lambda E| =0\)</span></p><p><span class="math display">\[\begin{vmatrix}1-\lambda &amp; -1 &amp; 0 \\-1&amp; 1-\lambda &amp; 0 \\0 &amp; 0 &amp; 3-\lambda\end{vmatrix} = - (\lambda - 3) \cdot \lambda \cdot (\lambda - 2)\]</span></p><p>故可得特征值：<span class="math inline">\(\lambda_1 = 0, \lambda_2 = 2, \lambda_3 = 3\)</span></p><p><span class="math inline">\(\lambda = 0\)</span> 时：<span class="math inline">\((A - 0 \cdot E) \rightarrow \begin{pmatrix} 1 &amp; -1 &amp; 0 \\ 0 &amp; 0 &amp; 1 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} \quad\Rightarrow\quad \xi_1 = \begin{pmatrix} 1\\ 1\\ 0 \end{pmatrix} \quad\Rightarrow\quad e_1 = \dfrac{1}{\sqrt{2}}\begin{pmatrix} 1\\ 1\\ 0 \end{pmatrix}\)</span></p><p><span class="math inline">\(\lambda = 2\)</span> 时：<span class="math inline">\((A - 2 \cdot E) \rightarrow \begin{pmatrix} 1 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 1 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} \quad\Rightarrow\quad \xi_2 = \begin{pmatrix} -1\\ 1\\ 0 \end{pmatrix} \quad\Rightarrow\quad e_1 = \dfrac{1}{\sqrt{2}}\begin{pmatrix} -1\\ 1\\ 0 \end{pmatrix}\)</span></p><p><span class="math inline">\(\lambda = 3\)</span> 时：<span class="math inline">\((A - 3 \cdot E) \rightarrow \begin{pmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 \\ 0 &amp; 0 &amp; 0 \end{pmatrix} \quad\Rightarrow\quad \xi_3 = \begin{pmatrix} 0\\ 0\\ 1 \end{pmatrix} \quad\Rightarrow\quad e_3 = \begin{pmatrix} 0\\ 0\\ 1 \end{pmatrix}\)</span></p><p>故存在 <strong>正交矩阵</strong> <span class="math inline">\(Q = (e_1,e_2,e_3), s.t. Q^TAQ = \Lambda = \begin{pmatrix} 0 &amp; &amp; \\ &amp; 2 &amp; \\ &amp; &amp; 3 \end{pmatrix}\)</span></p><p>故存在 <strong>正交变换</strong> <span class="math inline">\(x = Q y, s.t. f(y_1,y_2,y_3) = 2y_2^2 + 3y_3^2\)</span></p><p>由于 <strong>正交变换</strong> 是保向量模长的，故 <span class="math inline">\(||x|| = ||y|| \Rightarrow y_1^2 + y_2^2 + y_3^2 = x_1^2 + x_2^2 + x_3^2 = 1\)</span></p><p>故原命题就等价于：<strong>目标函数</strong>：<span class="math inline">\(f(y_1,y_2,y_3) = 2y_2^2 + 3y_3^2\)</span> 在 <strong>约束条件</strong>：<span class="math inline">\(y_1^2 + y_2^2 + y_3^2 = 1\)</span> 下的最值问题</p><p>因此，<span class="math inline">\(f\)</span> 的<strong>最大值</strong>就是把全部<strong>模长</strong>分给<strong>系数最大</strong>的<strong>分量</strong>，<strong>最小值</strong>就是分给<strong>系数最小</strong>的<strong>分量</strong></p><blockquote><p>即我在开头说过的，最大最小特征值</p></blockquote><p>故 <span class="math inline">\(f_{min} = 0, f_{max} = 3\)</span></p><h2 id="利用常见不等式求解">利用常见不等式求解</h2><p>这里不会使用额外其他的不等式，我只介绍考研中常用的 <strong>均值不等式</strong> 和 <strong>柯西不等式</strong></p><p><strong>柯西不等式：</strong></p><p><span class="math display">\[(a_1^2+a_2^2+\cdots+a_n^2) \times (b_1^2+b_2^2+\cdots+b_n^2) \ge (a_1b_1+a_2b_2+\cdots+a_nb_n)^2\]</span></p><p>当且仅当 <span class="math inline">\(\dfrac{a_1}{b_1} = \dfrac{a_2}{b_2} = \dots = \dfrac{a_n}{b_n}\)</span> 时，等号成立</p><p><strong>均值不等式：</strong></p><p><span class="math display">\[\dfrac{a_1^2 + a_2^2 + \cdots + a_n^2}{n} \ge \sqrt[n]{a_1 \cdot a_2 \cdots a_n}\]</span></p><p>当且仅当 <span class="math inline">\(a_1 = a_2 = \cdots = a_n\)</span> 时，等号成立</p><p><strong>柯西不等式</strong> 建立的是 <strong>多项平方和</strong> <span class="math inline">\(\ge\)</span> <strong>多项和</strong> 的不等式</p><p><strong>均值不等式</strong> 建立的是 <strong>多项平方和</strong> <span class="math inline">\(\ge\)</span> <strong>多项积</strong> 的不等式</p><p>一个是 <strong>平方和</strong> 到 <strong>和</strong>，一个是 <strong>平方和</strong> 到 <strong>积</strong>，这是我们考虑使用不等式时，首先要考虑的问题</p><p><strong>【2018年19题】将 <span class="math inline">\(2m\)</span> 的铁丝分成三段，依次围城圆、正方形、正三角形。三个图形的面积之和是否存在最小值？若存在，求出最小值。</strong></p><p>【解】令铁丝分给三个图形的长度分别为 <span class="math inline">\(a ,b, c\)</span>，则 <span class="math inline">\(a + b + c = 2\)</span></p><p>通过已知周长分别计算出三个图形的面积，应为：<span class="math inline">\(\dfrac{a^2}{4\pi}, \dfrac{b^2}{16}, \dfrac{c^2}{12\sqrt{3}}\)</span></p><p>故 <span class="math inline">\(S = \dfrac{a^2}{4\pi}+ \dfrac{b^2}{16}+ \dfrac{c^2}{12\sqrt{3}}\)</span></p><p>原命题就等价于，<strong>目标函数</strong> 为 <span class="math inline">\(S(a,b,c)\)</span>，在 <strong>约束条件</strong> <span class="math inline">\(a + b + c = 2\)</span> 下的最小值</p><p>目标函数是 <strong>多项平方和</strong>，约束条件是 <strong>多项和</strong>，考虑选用 <strong>柯西不等式</strong> 放缩</p><p>构造柯西不等式：</p><p><span class="math display">\[\begin{aligned}\bigg[(\dfrac{a}{2\sqrt{\pi}})^2 + (\dfrac{b}{4})^2 + (\dfrac{c}{\sqrt{12\sqrt{3}}})^2\bigg] \cdot \bigg[(2\sqrt{\pi})^2 + 4^2 + (\sqrt{12\sqrt{3}})^2\bigg] &amp;\ge (a + b + c)^2 \\S \cdot \bigg[4\pi + 16 + 12\sqrt{3}\bigg] &amp;\ge 4\\\dfrac{4}{4\pi + 16 + 12\sqrt{3}} &amp;\le S\\\dfrac{1}{\pi + 4 + 3\sqrt{3}} &amp;\le S\end{aligned}\]</span></p><p>故 <span class="math inline">\(S_{min} = \dfrac{1}{\pi + 4 + 3\sqrt{3}}\)</span>，当且仅当 <span class="math inline">\(\dfrac{a}{4\pi} = \dfrac{b}{16} = \dfrac{c}{12\sqrt{3}}\)</span> 时等号成立</p><p><strong>【2021年数一】设 <span class="math inline">\(x,y,z\)</span>，满足 <span class="math inline">\(\begin{cases} x^2 + 2y^2-z = 6 \\ 4x + 2y + z = 30 \end{cases}\)</span>，求 <span class="math inline">\(z\)</span> 的取值范围</strong></p><p>【解】<strong>目标函数</strong> <span class="math inline">\(z\)</span>，<strong>约束条件</strong> <span class="math inline">\(\begin{cases} x^2 + 2y^2 = z + 6 \\ 4x + 2y = 30 - z \end{cases}\)</span></p><ol type="1"><li>式左侧是 <strong>多项平方和</strong>，(2) 式左侧式 <strong>多项和</strong> 考虑 <strong>柯西不等式</strong> 放缩</li></ol><p>构造 <strong>柯西不等式</strong>：</p><p><span class="math display">\[\begin{aligned}(x^2 + (\sqrt{2} y)^2) \cdot (4^2 + (\sqrt{2})^2) &amp;\ge (4x + 2y)^2\\(z + 6) \cdot 18 &amp;\ge (30 - z)^2\\z^2 - 78z + 792 &amp;\le 0\\(z - 12)(z - 66) &amp;\le 0\\\end{aligned}\]</span></p><p>故 <span class="math inline">\(z\in[12, 66]\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22考研政治30天带背计划</title>
      <link href="/graduate_exam/Policy/policy_recite/"/>
      <url>/graduate_exam/Policy/policy_recite/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>30天带背音频</strong> 可以微信里搜 <strong>腿姐考研政治课堂</strong></p></blockquote><blockquote><p><strong>史纲历次重要会议总结：Day01 ~ Day04</strong> <strong>史纲重要人物及其著作总结：Day05 ~ Day09</strong> <strong>史纲历次土地政策总结：Day10 ~ Day11</strong> <strong>史纲思想解放总结：Day12</strong> <strong>马原分析题素材：Day13 ~ Day21</strong> <strong>毛中特分析题素材：Day22 ~ Day26</strong> <strong>史纲分析题素材：Day27 ~ Day31</strong> <strong>思修分析题素材：Day32 ~ Day33</strong></p></blockquote><h1 id="史纲历次重要会议总结">史纲历次重要会议总结</h1><p><strong>考试重点及今年时政热点会议：</strong></p><p><strong>(1)中共一大、(3)国民党一大、(4)八七会议、(5)遵义会议、(6)瓦窑堡会议、(7)洛川会议、(9)六届七中全会、(13)中共十八大、(15)十一届六中全会、(16)中共十二大、(17)南方谈话</strong></p><h2 id="天带背-day01">30天带背 · Day01</h2><p>（1）<strong>中共一大</strong> 确定党的名称为 ________，制定了党的纲领是 ________。</p><p>（2）中共三大 正式决定全体共产党员以 ________ 加入国民党，同孙中山领导的国民党建立统一战线。</p><p>（3）<strong>国民党一大</strong> 对三民主义做了新的解释，在民族主义中突出了 ________ 的内容，在民权主义中强调了民主权利应 ________，把民生主义概括为 ________，后来又提出了 ________。大会实际上确定了 ________ 三大政策。国民党一大的成功召开，标志着 ________。</p><blockquote><p><strong>answers：</strong> （1）<strong>中共一大</strong> 确定党的名称为 <strong>中国共产党</strong>，制定了党的纲领是 <strong>《中国共产党第一个纲领》</strong> 。 （2）中共三大正式决定全体共产党员以 <strong>个人名义</strong> 加入国民党，同孙中山领导的国民党建立统一战线。 （3）<strong>国民党一大</strong> 对三民主义做了新的解释，在民族主义中突出了 <strong>反帝</strong> 的内容，在民权主义中强调了民主权利应 <strong>为一般平民所共有</strong>，把民生主义概括为 <strong>“平均地权”、“节制资本”</strong>，后来又提出了 <strong>“耕者有其田”</strong>。大会实际上确定了 <strong>联俄、联共、扶助农工</strong> 三大政策。国民党一大的成功召开，标志着 <strong>第一次国共合作的正式形成</strong> 。</p></blockquote><h2 id="天带背-day02">30天带背 · Day02</h2><p>（4）<strong>八七会议</strong> 彻底 <strong>清算</strong> 了大革命后期 ________，确定了 ________ 和 ________ 的总方针。毛泽东在会上提出了 ________ 的思想，八七会议的召开标志着从 ________ 的失败到 ________ 兴起的 <strong>转折</strong>。</p><p>（5）<strong>遵义会议</strong> 集中解决了当时具有 <strong>决定</strong> 意义的 ________ 和 ________，会议开始确立以 ________ 为主要代表的马克思主义的正确路线在党中央的领导地位。遵义会议是党的历史上 ________ 的 <strong>转折点</strong>，它标志着中国共产党在政治上 ________。</p><p>（6）<strong>瓦窑堡会议</strong> 阐明建立 ________ 的可能性，批判了 ________ 主义错误，强调共产党在抗日民族统一战线中的领导作用，决定用 ________ 代替“工农共和国”。</p><p>（7）<strong>洛川会议</strong> 制定了 ________ 十大纲领。强调要打倒日本帝国主义，关键在于使 ________ 成为 ________。会议提出必须实行全国 ________ 的总动员、全国 ________ 的总动员，会议强调必须坚持统一战线中 ________ 的领导权，在敌人后方放手发动独立自主的山地 ________。</p><blockquote><p><strong>answers：</strong> （4）八七会议彻底 <strong>清算</strong> 了大革命后期 <strong>陈独秀右倾机会主义错误</strong>，确定了 <strong>土地革命</strong> 和 <strong>武装反抗国民党反动统治</strong> 的总方针。毛泽东在会上提出了 <strong>“须知政权是由枪杆子中取得的”</strong> 的思想，八七会议的召开标志着从 <strong>大革命</strong> 的失败到 <strong>土地革命</strong> 兴起的转折。 （5）遵义会议集中解决了当时具有 <strong>决定</strong> 意义的 <strong>军事问题</strong> 和 <strong>组织问题</strong> ，会议开始确立以 <strong>毛泽东</strong> 为主要代表的马克思主义的正确路线在党中央的领导地位。遵义会议是党的历史上 <strong>生死攸关</strong> 的转折点，它标志着中国共产党在政治上 <strong>开始走向成熟</strong> 。 （6）瓦窑堡会议 阐明建立 <strong>抗日民族统一战线</strong> 的可能性，批判了 <strong>"左"倾关门</strong> 主义错误，强调共产党在抗日民族统一战线中的领导作用，决定用 <strong>"人民共和国"</strong> 代替“工农共和国”。 （7）洛川会议制定了 <strong>抗日救国</strong> 十大纲领。强调要打倒日本帝国主义，关键在于使 <strong>已经发动的抗战</strong> 成为 <strong>全面的全民族的抗战</strong>。会议提出必须实行全国 <strong>军事的</strong> 的总动员、全国 <strong>人民的</strong> 的总动员，会议强调必须坚持统一战线中 <strong>无产阶级</strong> 的领导权，在敌人后方放手发动独立自主的山地 <strong>游击战争</strong> 。</p></blockquote><h2 id="天带背-day03">30天带背 · Day03</h2><p>（8）六届六中全会 <strong>第一次</strong> 明确提出了 ________ 这个命题。</p><p>（9）<strong>六届七中全会</strong> 通过了 ________ 这一重要文件，文件运用了 ________ 和 ________ 原理对党的历史及基本经验教训做了总结。六届七中全会肯定了 ________ 在全党的领导地位的重大意义，此次会议标志着 ________ 的胜利结束，为党的第七次代表大会的召开在 ________ 做了充分的准备。</p><p>（10）中共七大上，毛泽东做了题为 ________ 的书面报告和 ________ 的闭幕词，会议上总结了我党的三大优良作风，分别是 ________ 、 ________ 、 ________。此次会议将 ________ 确立为党的指导思想，中国共产党在 ________ 的基础上，达到空前的团结和统一。</p><p>（11）七届二中全会中提出了党的工作重心必须由 ________，指出了中国由 ________ 转变为 ________、由 ________ 转变为 ________ 的总任务和主要途径。此次会议上，毛泽东提出了 ________ 的思想。</p><blockquote><p><strong>answers：</strong> （8）六届六中全会第一次明确提出了 <strong>马克思主义中国化</strong> 这个命题。 （9）六届七中全会通过了 <strong>《关于若干历史问题的决议》</strong> 这一重要文件，文件运用了 <strong>辩证唯物主义</strong> 和 <strong>历史唯物主义</strong> 原理对党的历史及基本经验教训做了总结。六届七中全会肯定了 <strong>毛泽东</strong> 在全党的领导地位的重大意义，此次会议标志着 <strong>整风运动</strong> 的胜利结束，为党的第七次代表大会的召开在 <strong>思想上</strong> 做了充分的准备。 （10）中共七大上，毛泽东做了题为 <strong>《论联合政府》</strong> 的书面报告和 <strong>《愚公移山》</strong> 的闭幕词，会议上总结了我党的三大优良作风，分别是 <strong>理论与实践相结合</strong> 、 <strong>和人民群众紧密地联系在一起</strong> 、 <strong>自我批评</strong> 。此次会议将 <strong>毛泽东思想</strong> 确立为党的指导思想，中国共产党在 <strong>毛泽东思想</strong> 的基础上，达到空前的团结和统一。 （11）七届二中全会中提出了党的工作重心必须由 <strong>乡村移向城市</strong> ，指出了中国由 <strong>农业国</strong> 转变为 <strong>工业国</strong> 、由 <strong>新民主主义社会</strong> 转变为 <strong>社会主义社会</strong> 的总任务和主要途径。此次会议上，毛泽东提出了 <strong>“两个务必”</strong> 的思想。</p></blockquote><h2 id="天带背-day04">30天带背 · Day04</h2><p>（12）七届三中全会提出的中心任务是要在三年左右的时间内，争取 ________ 的基本好转。</p><p>（13）<strong>中共八大</strong> 在经济上提出了 ________，即 ________ 的方针以及 ________ 的思想；在政治建设上提出要扩大 ________、健全社会主义法制；在执政党建设中强调要提高全党的 ________ 思想水平。</p><p>（14）十一届三中全会把工作重点转移到 ________ 上来和实行 ________ 的战略决策，<strong>重新确立</strong> 了马克思主义的 ________ 、________ 和 ________。会议形成了以 ________ 为核心的党的中央领导集体，解开了 ________ 的序幕。</p><p>（15）<strong>十一届六中全会</strong> 审议通过了 ________，实事求是的评价了毛泽东的历史地位，对毛泽东思想的科学体系和活的灵魂（即 ________ ）作了概括，《决议》标志着 ________ 的胜利完成。</p><p>（16）<strong>中共十二大</strong> 第一次提出了 ________________ 的命题。</p><p>（17）<strong>南方谈话</strong> 是 ________ 的集大成之作，也标志着 ________ 逐步走向成熟。</p><blockquote><p><strong>answers：</strong> （12）七届三中全会提出的中心任务是要在三年左右的时间内，争取 <strong>国内财政经济情况</strong> 的基本好转。 （13）中共八大在经济上提出了 <strong>既反保守又反冒进</strong> ，即 <strong>在综合平衡中稳步前进</strong> 的方针以及 <strong>“三个主体，三个补充”</strong> 的思想；在政治建设上提出要扩大 <strong>社会主义民主</strong> 、健全社会主义法制；在执政党建设中强调要提高全党的 <strong>马克思列宁主义</strong> 思想水平。 （14）十一届三中全会把工作重点转移到 <strong>社会主义现代化建设</strong> 上来和实行 <strong>改革开放</strong> 的战略决策，重新确立了马克思主义的 <strong>思想路线</strong> 、<strong>政治路线</strong> 和 <strong>组织路线</strong> 。会议形成了以 <strong>邓小平</strong> 为核心的党的中央领导集体，解开了 <strong>改革开放</strong> 的序幕。 （15）十一届六中全会审议通过了 <strong>《关于建国以来党的若干历史问题的决议》</strong> ，实事求是的评价了毛泽东的历史地位，对毛泽东思想的科学体系和活的灵魂（即 <strong>实事求是、群众路线、独立自主</strong>）作了概括，《决议》标志着 <strong>党在指导思想上拨乱反正</strong> 的胜利完成。 （16）中共十二大第一次提出了 <strong>建设有中国特色的社会主义</strong> 的命题。 （17）南方谈话是 <strong>邓小平理论</strong> 的集大成之作，也标志着 <strong>邓小平理论</strong> 逐步走向成熟。</p></blockquote><h1 id="史纲重要人物及其著作总结">史纲重要人物及其著作总结</h1><blockquote><p>今年时政，辛亥革命 110 周年，（4）要背出来</p></blockquote><h2 id="天带背-day05">30天带背 · Day05</h2><p>（1）林则徐编成 ________ 一书，被誉为近代中国 ________ 。</p><p>（2）魏源编成 ________ 一书，开创了中国近代 ________ 的新风。</p><p>（3）郑观应所著的《盛世危言》中，在经济上提出了大力发展 ________ ，同西方国家进行 ________ ；在政治上提出了 ________ ，实行了 ________ 等主张。</p><p><strong>（4）如何理解 “辛亥革命永远是中华民族伟大征程上一做巍然屹立的里程碑” ？ 辛亥革命虽然没有完成 ________ ，没有结束 ________ ，没有改变 ________ 。但是，辛亥革命开创了 ________ 的序幕，极大的促进了 ________ ，传播了 ________ ，打开了 ________ 的闸门。同时，撼动了 ________ 的根基，在中华大地上建立起亚洲第一个 ________ 的国家，推动了中国社会的变革，为中华民族伟大复兴的实现探索了道路。</strong></p><p>（5）孙中山建立了第一个资产阶级革命团体 ________ ，建立了第一个资产阶级革命政党 ________ ，并确立了 ________ 的革命纲领，结束了 ________ 制度。</p><p>（6）旧民主主义革命结束的标志是 ________ 。</p><blockquote><p><strong>answers：</strong> （1）林则徐编成 <strong>《海国图志》</strong> 一书，被誉为近代中国 <strong>睁眼看世界第一人</strong> 。 （2）魏源编成 <strong>《四洲志》</strong> 一书，开创了中国近代 <strong>向西方学习</strong> 的新风。 （3）郑观应所著的《盛世危言》中，在经济上提出了大力发展 <strong>民族工商业</strong> ，同西方国家进行 <strong>"商战"</strong> ；在政治上提出了 <strong>设立议院</strong> ，实行了 <strong>"君民共主"</strong> 等主张。 （<code>4</code>）如何理解 “辛亥革命永远是中华民族伟大征程上一做巍然屹立的里程碑” ？ 辛亥革命虽然没有完成 <strong>反帝反封建的民主革命遗留任务</strong> ，没有结束 <strong>半殖民地半封建社会的性质</strong> ，没有改变 <strong>中国人落后悲惨的命运</strong> 。但是，辛亥革命开创了 <strong>完全意义上的近代民族民主革命</strong> 的序幕，极大的促进了 <strong>思想解放</strong> ，传播了 <strong>民主共和</strong> ，打开了 <strong>中国进步潮流</strong> 的闸门。同时，撼动了 <strong>反动统治秩序</strong> 的根基，在中华大地上建立起亚洲第一个 <strong>共和制</strong> 的国家，推动了中国社会的变革，为中华民族伟大复兴的实现探索了道路。 （5）孙中山建立了第一个资产阶级革命团体 <strong>兴中会</strong> ，建立了第一个资产阶级革命政党 <strong>同盟会</strong> ，并确立了 <strong>三民主义</strong> 的革命纲领，结束了 <strong>封建君主专制</strong> 制度。 （6）旧民主主义革命结束的标志是 <strong>护法运动</strong> 。</p></blockquote><h2 id="天带背-day06">30天带背 · Day06</h2><p>（7）新文化运动是从 1915 年 9 月陈独秀在上海创办 ________ 开始的。</p><p>（8）新文化运动是一次 ________ 的思想解放，宣传了 ________ ，冲破了人们的 ________ 闸门，使得 ________ 流派传入中国，为后期宣传 ________ 准备了基础和条件。</p><p>（9）新文化运动的局限性在于提倡 ________ ，并不能为人们提供一种思想武器去认识中国，去有效地对中国社会进行改造；将 ________ 置于优先地位；没有 ________ 批判精神。</p><p>（10）五四后的新文化运动主张 ________ 。从程度上来说，五四后的新文化运动提出反对 ________ ；从范围上来说，五四后的新文化运动强调 ________ ；从地位上来说， ________ 成为五四后新文化运动的居于主体地位的思想。</p><p>（11）李大钊第一次正确的阐述十月革命性质的文章 ________ ；李大钊深刻揭露一战本质，歌颂十月革命胜利的文章是 ________ ；标志着李大钊已经成为中国的第一个马克思主义者的文章是 ________ 。</p><blockquote><p><strong>answers：</strong> （7）新文化运动是从 1915 年 9 月陈独秀在上海创办 <strong>《青年杂志》</strong> 开始的。 （8）新文化运动是一次 <strong>前所未有的空前深刻的</strong> 的思想解放，宣传了 <strong>西方的民主与科学</strong> ，冲破了人们的 <strong>思想</strong> 闸门，使得 <strong>各种思想</strong> 流派传入中国，为后期宣传 <strong>马克思主义</strong> 准备了基础和条件。 （9）新文化运动的局限性在于提倡 <strong>资产阶级民主主义</strong> ，并不能为人们提供一种思想武器去认识中国，去有效地对中国社会进行改造；将 <strong>改造国民性</strong> 置于优先地位；没有 <strong>马克思主义</strong> 批判精神。 （10）五四后的新文化运动主张 <strong>社会主义的民主和科学</strong> 。从程度上来说，五四后的新文化运动提出反对 <strong>产生封建思想的社会制度</strong> ；从范围上来说，五四后的新文化运动强调 <strong>全社会解放</strong> ；从地位上来说， <strong>马克思主义</strong> 成为五四后新文化运动的居于主体地位的思想。 （11）李大钊第一次正确的阐述十月革命性质的文章 <strong>《法俄革命之比较观》</strong> ；李大钊深刻揭露一战本质，歌颂十月革命胜利的文章是 <strong>《庶民的胜利》和《波尔什维的胜利》</strong> ；标志着李大钊已经成为中国的第一个马克思主义者的文章是 <strong>《我的马克思主义观》</strong> 。</p></blockquote><h2 id="天带背-day07">30天带背 · Day07</h2><p>（12）中国革命的首要问题是 ________ 。</p><p>（13）国民革命的中心问题是 ________ 。</p><p>（14）中国革命的中心问题是 ________ 。</p><p>（15）毛泽东思想开始形成的时期是 ________ 。</p><p>（16）标志着毛泽东思想初步形成的著作是 ________ 。</p><p>（17）《中国的红色政权为什么能够存在》、《井冈山的斗争》提出了 ________ 的思想。</p><p>（18）《反对本本主义》阐明了 ________ 的原则的极端重要性，提出了 ________ 和 ________ 的重要思想，反映了毛泽东思想活的灵魂，即 ________ 。</p><p>（19）《论反对日本帝国主义的策略》系统地解决了党的 ________ 上的问题。</p><p>（20）总结土地革命战争中内在 <strong>军事问题</strong> 的大争论的著作是 ________ 。</p><p>（21）科学的阐明了党的马克思主义思想路线、对党的思想路线做了系统的哲学论证的著作是 ________ 。</p><blockquote><p><strong>answers：</strong> （12）中国革命的首要问题是 <strong>分清敌友</strong> 。 （13）国民革命的中心问题是 <strong>农民问题</strong> 。 （14）中国革命的中心问题是 <strong>无产阶级领导权问题</strong> 。 （15）毛泽东思想开始形成的时期是 <strong>土地革命时期</strong> 。 （16）标志着毛泽东思想初步形成的著作是 <strong>《反对本本主义》</strong> 。 （17）《中国的红色政权为什么能够存在》、《井冈山的斗争》提出了 <strong>工农武装割据</strong> 的思想。 （18）《反对本本主义》阐明了 <strong>坚持理论与实际相结合</strong> 的原则的极端重要性，提出了 <strong>“没有调查就没有发言权”</strong> 和 <strong>中国革命斗争的胜利要靠中国同志了解中国情况</strong> 的重要思想，反映了毛泽东思想活的灵魂，即 <strong>实事求是、群众路线、独立自主（食物中毒）</strong> 。 （19）《论反对日本帝国主义的策略》系统地解决了党的 <strong>政治路线</strong> 上的问题。 （20）总结土地革命战争中内在 <strong>军事问题</strong> 的大争论的著作是 <strong>《中国革命战争的战略问题》</strong> 。 （21）科学地阐明了党的马克思主义思想路线、对党的思想路线做了系统的哲学论证的著作是 <strong>《实践论》、《矛盾论》</strong> 。</p></blockquote><h2 id="天带背-day08">30天带背 · Day08</h2><p>（22）《论持久战》科学地预测了抗日战争的发展进程，即抗日战争将经过 ________ 、 ________ 、 ________ 三个阶段。</p><p>（23）中国抗日战争取得最后胜利的最关键阶段是 ________ 阶段。</p><p>（24）《论持久战》提出了 ________________ 的论断。</p><p>（25）《<共产党人>发刊词》总结了中国共产党在中国革命中战胜敌人的三个法宝，分别是 ________ 、 ________ 、 ________ 。</p><p>（26）中国革命的两个基本武器是 ________ 和 ________ 。</p><p>（27）整风运动首先在党的高级干部中进行的相关著作是 ________ 。</p><p>（28）整风运动在全党范围普遍展开的相关著作是 ________ 。</p><p>（29）延安整风是一场伟大的 ________ 思想解放运动，在全党范围内确立了 ________ 的思想路线。</p><p>（30）整风运动的内容包括：反对 ________ 以整顿学风，反对 ________ 以整顿党风，反对 ________ 以整顿文风。其中最主要的任务是反对 ________ ，重点是反对 ________ 。</p><p>（31）整风运动中指出党犯“左”和右的错误的思想认识根源是 ________ ，主观主义的实质是 ________ 。</p><blockquote><p><strong>answers：</strong> （22）《论持久战》科学地预测了抗日战争的发展进程，即抗日战争将经过 <strong>战略防御</strong> 、 <strong>战略相持</strong> 、 <strong>战略反攻</strong> 三个阶段。 （23）中国抗日战争取得最后胜利的最关键阶段是 <strong>战略相持</strong> 阶段。 （24）《论持久战》提出了 <strong>"兵民是胜利之本"</strong> 的论断。 （25）《<共产党人>发刊词》总结了中国共产党在中国革命中战胜敌人的三个法宝，分别是 <strong>统一战线</strong> 、 <strong>武装斗争</strong> 、 <strong>党的建设</strong> 。 （26）中国革命的两个基本武器是 <strong>统一战线</strong> 和 <strong>武装斗争</strong> 。 （27）整风运动首先在党的高级干部中进行的相关著作是 <strong>《改造我们的学习》</strong> 。 （28）整风运动在全党范围普遍展开的相关著作是 <strong>《整顿党的作风》和《反对党八股》</strong> 。 （29）延安整风是一场伟大的 <strong>马克思主义</strong> 思想解放运动，在全党范围内确立了 <strong>马克思主义实事求是</strong> 的思想路线。 （30）整风运动的内容包括：反对 <strong>主观主义</strong> 以整顿学风，反对 <strong>宗派主义</strong> 以整顿党风，反对 <strong>党八股</strong> 以整顿文风。其中最主要的任务是反对 <strong>主观主义</strong> ，重点是反对 <strong>教条主义</strong> 。 （31）整风运动中指出党犯“左”和右的错误的思想认识根源是 <strong>主观主义</strong> ，主观主义的实质是 <strong>理论脱离实际</strong> 。</p></blockquote><h2 id="天带背-day09">30天带背 · Day09</h2><p>（32）《论十大关系》明确提出了以苏为鉴、独立自主地 ________ 适合中国情况的社会主义建设道路。</p><p>（33）《论十大关系》的基本方针是 ________ 。</p><p>（34）《论十大关系》的标志是共产党人 ________ 。</p><p>（35）《论十大关系》论述的第一大关系是 ________ 。</p><p>（36）《<strong>关于正确处理人民内部矛盾的问题</strong>》明确提出要走一条 ________ 的中国工业化道路。</p><p>（37）《<strong>关于正确处理人民内部矛盾的问题</strong>》中提出敌我矛盾是 ________ 矛盾，要用 ________ 的方法来解决；人民内部矛盾是 ________ 矛盾，要用 ________ 的方法来解决。</p><p>（38）<strong>人民内部矛盾的民主解决方式</strong>主要有： 1. 政治思想领域： ________ 的方针； 2. 物质利益分配方面： ________ 的方针； 3. 科学文化领域： ________ 的方针； 4. 对于共产党和民主党派的矛盾： ________ 的方针。</p><p>（39）社会主义国家政治生活的 <strong>主题</strong> 是 ________ ，这一论断的根本着眼点在于 ________ ，把全党的注意力转到社会主义建设上来。</p><p>（40） ________ 成为了开辟中国特色社会主义新道路、开创中国特色社会主义新理论的宣言书。</p><blockquote><p><strong>answers：</strong> （32）《论十大关系》明确提出了以苏为鉴、独立自主地 <strong>探索</strong> 适合中国情况的社会主义建设道路。 （33）《论十大关系》的基本方针是 <strong>调动一切积极因素为社会主义服务</strong> 。 （34）《论十大关系》的标志是共产党人 <strong>开始探索中国自己的社会主义建设道路</strong> 。 （35）《论十大关系》论述的第一大关系是 <strong>重工业、轻工业和农业</strong> 。 （36）《关于正确处理人民内部矛盾的问题》明确提出要走一条 <strong>有别于苏联</strong> 的中国工业化道路。 （37）《关于正确处理人民内部矛盾的问题》中提出敌我矛盾是 <strong>对抗性</strong> 矛盾，要用 <strong>专政</strong> 的方法来解决；人民内部矛盾是 <strong>非对抗性</strong> 矛盾，要用 <strong>民主</strong> 的方法来解决。 （38）人民内部矛盾的民主解决方式主要有： 1. 政治思想领域： <strong>团结-批评-团结</strong> 的方针； 2. 物质利益分配方面： <strong>统筹兼顾、适当安排</strong> 的方针； 3. 科学文化领域： <strong>"百花齐放、百家争鸣"</strong> 的方针； 4. 对于共产党和民主党派的矛盾： <strong>"长期共存、互相监督"</strong> 的方针。 （39）社会主义国家政治生活的主题是 <strong>关于正确处理人民内部矛盾的问题</strong> ，这一论断的根本着眼点在于 <strong>调动一切积极因素，团结一切可以团结的力量</strong> ，把全党的注意力转到社会主义建设上来。 （40） <strong>《解放思想、实事求是，团结一致向前看》</strong> 成为了开辟中国特色社会主义新道路、开创中国特色社会主义新理论的宣言书。</p></blockquote><h1 id="史纲历次土地政策总结">史纲历次土地政策总结</h1><blockquote><p>重要的土地政策：《天朝田亩制度》、《兴国土地法》、《中国土地法大纲》、《中华人民共和国土地改革法》</p></blockquote><h2 id="天带背-day10">30天带背 · Day10</h2><p>（1）最能体现太平天国社会理想的纲领性文件是 ________ ，它确立了 ________ 的方案</p><p>（2）《天朝田亩制度》实际上是起义农民提出的一个以 ________ 为中心的比较完整的社会改革方案，从根本上否定了封建社会的基础，即 ________ 。</p><p>（3）《天朝田亩制度》并没有超出 ________ 的狭隘眼界，具有不切实际的 ________ 性质，并未付诸实施。</p><p>（4）第一个提出发展资本主义的方案是 ________ 。</p><p>（5）三民主义的民生主义内容是 ________ ，“平均地权” 并没有将 ________ 归还农民，也没有 ________ 封建地主土地所有制。</p><p>（6）新三民主义的内容为 ________ 和 ________ 的原则，后来又提出了 ________ ，并提出要改善 ________ 的生活状况。</p><blockquote><p><strong>answers：</strong> （1）最能体现太平天国社会理想的纲领性文件是 <strong>《天朝田亩制度》</strong> ，它确立了 <strong>平均分配土地</strong> 的方案 （2）《天朝田亩制度》实际上是起义农民提出的一个以 <strong>解决土地问题</strong> 为中心的比较完整的社会改革方案，从根本上否定了封建社会的基础，即 <strong>封建地主土地所有制</strong> 。 （3）《天朝田亩制度》并没有超出 <strong>农民小生产者</strong> 的狭隘眼界，具有不切实际的 <strong>空想</strong> 性质，并未付诸实施。 （4）第一个提出发展资本主义的方案是 <strong>《资政新篇》</strong> 。 （5）三民主义的民生主义内容是 <strong>平均地权</strong> ，“平均地权” 并没有将 <strong>土地所有权</strong> 归还农民，也没有 <strong>正面触及</strong> 封建地主土地所有制。 （6）新三民主义的内容为 “<strong>平均地权</strong>” 和 “<strong>节制资本</strong>” 的原则，后来又提出了 “<strong>耕者有其田</strong>” ，并提出要改善 <strong>工农</strong> 的生活状况。</p></blockquote><h2 id="天带背-day11">30天带背 · Day11</h2><p>（7）《兴国土地法》的一个原则性改正是将 ________ 改为 ________ ，保护了 ________ 的利益。</p><p>（8）《兴国土地法》的阶级路线是依靠 ________ ，联合 ________ ，限制 ________ ，保护 ________ ，消灭 ________ 。</p><p>（9）《兴国土地法》中的土地分配是以 ________ 为单位，按 ________ 平分，在原耕地的基础上，实行 ________ 。</p><p>（10）中国共产党历史上第一个土地法是 ________ 。</p><p>（11）中国历史上第一个制定的可以付诸实施的比较完整的土地革命纲领是 ________ 。</p><p>（12）抗日战争时期的土地政策是 ________ 。</p><p>（13）明确规定“废除封建性及半封建性剥削的土地制度，实现耕者有其田的土地制度”的土地政策是 ________ 。</p><p>（14）《中国土地法大纲》所具有的积极意义包括 ________ 的革命热情被激发出来，促进了 ________ 的发展，为 ________ 的胜利奠定了物质基础。</p><p>（15）我国历史上规模最大，也是历次土改运动中进行的最好的一次土地改革政策是 ________ 。</p><p>（16）《中华人民共和国土地改革法》中对待富农的政策是 ________ 。</p><p>（17）《中华人民共和国土地改革法》的目的是废除 ________ 的土地所有制，实行 ________ 的土地所有制。</p><blockquote><p><strong>answers：</strong> （7）《兴国土地法》的一个原则性改正是将 <strong>"没收一切土地"</strong> 改为 <strong>"没收一切公共土地及地主阶级的土地"</strong> ，保护了 <strong>中农</strong> 的利益。 （8）《兴国土地法》的阶级路线是依靠 <strong>贫农、雇农</strong> ，联合 <strong>中农</strong> ，限制 <strong>富农</strong> ，保护 <strong>中小工商业者</strong> ，消灭 <strong>地主阶级</strong> 。 （9）《兴国土地法》中的土地分配是以 <strong>乡</strong> 为单位，按 <strong>人口</strong> 平分，在原耕地的基础上，实行 <strong>抽多补少、抽肥补瘦</strong> 。 （10）中国共产党历史上第一个土地法是 <strong>《井冈山土地法》</strong> 。 （11）中国历史上第一个制定的可以付诸实施的比较完整的土地革命纲领是 <strong>《兴国土地法》</strong> 。 （12）抗日战争时期的土地政策是 <strong>减租减息</strong> 。 （13）明确规定“废除封建性及半封建性剥削的土地制度，实现耕者有其田的土地制度”的土地政策是 <strong>《中国土地法大纲》</strong> 。 （14）《中国土地法大纲》所具有的积极意义包括 <strong>农民</strong> 的革命热情被激发出来，促进了 <strong>社会生产力</strong> 的发展，为 <strong>解放战争</strong> 的胜利奠定了物质基础。 （15）我国历史上规模最大，也是历次土改运动中进行的最好的一次土地改革政策是 <strong>《中华人民共和国土地改革法》</strong> 。 （16）《中华人民共和国土地改革法》中对待富农的政策是 <strong>保护富农经济</strong> 。 （17）《中华人民共和国土地改革法》的目的是废除 <strong>地主阶级封建剥削</strong> 的土地所有制，实行 <strong>农民</strong> 的土地所有制。</p></blockquote><h1 id="史纲思想解放总结">史纲思想解放总结</h1><blockquote><p><strong>新文化运动</strong> 和 <strong>五四以后的新文化运动</strong>，在 <strong>人物篇</strong> 的 <strong>陈独秀</strong> 那里背过了 <strong>延安整风运动</strong> 在 <strong>人物篇</strong> <strong>毛泽东</strong> 那里背过了</p></blockquote><h2 id="天带背-day12">30天带背 · Day12</h2><p>（1）民族资产阶级和封建地主阶级的第一次论战标志着 ________ 思想与 ________ 思想在中国的第一次正面交锋。</p><p>（2）民资资产阶级和封建地主阶级的第一次论战的中心是 ________ 。</p><p>（3）民资资产阶级维新派和民族资产阶级革命派的论战划清了 ________ 与 ________ 的界限。</p><p>（4） ________ 是继五四运动和延安整风运动之后又一场马克思主义思想解放运动，其实质在于 ________ 。</p><p>（5）关于真理标准问题的讨论明确的解决了党的 ________ 问题，为党重新确立实事求是的思想路线、纠正长期以来的“左”倾错误、实现历史性的转折做了 ________ 准备。</p><blockquote><p><strong>answers：</strong> （1）民族资产阶级和封建地主阶级的第一次论战标志着 <strong>资产阶级</strong> 思想与 <strong>封建主义</strong> 思想在中国的第一次正面交锋。 （2）民资资产阶级和封建地主阶级的第一次论战的中心是 <strong>要不要变法</strong> 。 （3）民资资产阶级维新派和民族资产阶级革命派的论战划清了 <strong>革命</strong> 与 <strong>改良</strong> 的界限。 （4）<strong>关于真理标准问题的讨论</strong> 是继五四运动和延安整风运动之后又一场马克思主义思想解放运动，其实质在于 <strong>是不是坚持马克思列宁主义、毛泽东思想</strong> 。 （5）关于真理标准问题的讨论明确的解决了党的 <strong>思想路线</strong> 问题，为党重新确立实事求是的思想路线、纠正长期以来的“左”倾错误、实现历史性的转折做了 <strong>思想理论</strong> 准备。</p></blockquote><h1 id="马原分析题素材">马原分析题素材</h1><ol type="1"><li><strong>辩证法</strong><ol type="1"><li><strong>联系与发展</strong></li><li><strong>矛盾分析法</strong><ol type="1"><li><strong>矛盾同一性斗争性</strong></li><li><strong>矛盾普遍性与特殊性</strong><ol type="1"><li><strong>矛盾普遍性</strong></li><li><strong>矛盾特殊性</strong></li><li><strong>共性个性的关系</strong></li></ol></li><li><strong>两点论重点论</strong><ol type="1"><li><strong>主次矛盾与矛盾主次方面</strong></li></ol></li></ol></li><li><strong>人与自然</strong><ol type="1"><li><strong>实践是处理人与自然关系的基础</strong></li><li><strong>客观规律与主观能动性的统一</strong></li></ol></li><li><strong>联系与发展的基本环节 / 辩证法基本范畴</strong><ol type="1"><li><strong>原因与结果</strong></li><li><strong>现象与本质</strong></li><li><strong>必然与偶然</strong></li></ol></li></ol></li><li><strong>认识论</strong><ol type="1"><li><strong>实践与认识</strong><ol type="1"><li><strong>实践决定认识</strong></li><li><strong>认识主体能动作用 / 认识的本质</strong></li></ol></li><li><strong>认识的规律</strong><ol type="1"><li><strong>感性认识与理性认识</strong></li><li><strong>非理性因素的作用</strong></li><li><strong>认识反复性与无限性的统一</strong></li></ol></li><li><strong>真理</strong><ol type="1"><li><strong>真理与谬误</strong></li><li><strong>绝对真理与相对真理</strong></li><li><strong>实践标准</strong></li></ol></li></ol></li><li>其他<ol type="1"><li>科技</li><li><strong>人民群众的作用</strong></li><li>万能发散性模板</li></ol></li></ol><h2 id="天带背-day13">30天带背 · Day13</h2><p>（1）联系的观点：(循环、链、相互、桥梁、中介、关) 联系就是 ________ 之间及 ________ 之间相互制约相互影响的关系。<strong>联系是事物 ________ ，具有 ________ 。世界上一切事物都处于 ________ 之中，整个世界是一个普遍联系的整体。</strong> 所以我们应用 ________ 的观点看问题，把握事物 ________ 的联系，提高活动的 ________ 。</p><p>（2）发展的观点：(创新、推进、过程、超越) ________ 的产生和 ________ 的灭亡。事物的发展是一个 ________ ，一切事物只有经过一定的 ________ 才能实现自身的发展。 所以我们要用 ________ 的眼光看问题，<strong>推动 ________ 的发展，将事物看作一个 ________ 的过程</strong>。</p><p>（3）矛盾的同一性与斗争性的辩证统一：(正反义词、转化 change A to B) 矛盾的同一性是 ________ 。矛盾的斗争性是 ________ 。<strong>同一性不能脱离斗争性而存在，没有 ________ 就没有 ________ ，因为矛盾的同一性是以 ________ 为前提的，是包含 ________ 的同一；斗争性也不能脱离同一性而存在， ________ 寓于 ________ 之中</strong>。 所以我们在分析和解决矛盾时，<strong>必须从 ________ ，促进事物的 ________</strong> 。</p><blockquote><p><strong>answers：</strong> （1）联系的观点： 联系就是 <strong>事物内部各要素</strong> 之间及 <strong>事物</strong> 之间相互制约相互影响的关系。联系是事物 <strong>固有的、客观的</strong> ，具有 <strong>客观性、普遍性、多样性</strong> 。世界上一切事物都处于 <strong>普遍联系</strong> 之中，整个世界是一个普遍联系的整体。 所以我们应用 <strong>联系</strong> 的观点看问题，把握事物 <strong>固有</strong> 的联系，提高活动的 <strong>自觉性</strong> 。 （2）发展的观点： <strong>新事物</strong> 的产生和 <strong>旧事物</strong> 的灭亡。事物的发展是一个 <strong>过程</strong> ，一切事物只有经过一定的 <strong>过程</strong> 才能实现自身的发展。 所以我们要用 <strong>发展</strong> 的眼光看问题，推动 <strong>新事物</strong> 的发展，将事物看作一个 <strong>不断变化</strong> 的过程。 （3）矛盾的同一性与斗争性的辩证统一 矛盾的同一性是 <strong>相对的、有条件的</strong> 。矛盾的斗争性是 <strong>绝对的、无条件的</strong> 。同一性不能脱离斗争性而存在，没有 <strong>斗争性</strong> 就没有 <strong>同一性</strong> ，因为矛盾的同一性是以 <strong>差别和对立</strong> 为前提的，是包含 <strong>差别和对立</strong> 的同一；斗争性也不能脱离同一性而存在， <strong>斗争性</strong> 寓于 <strong>同一性</strong> 之中。 所以我们在分析和解决矛盾时，必须从 <strong>对立中把握统一，统一中把握对立</strong> ，促进事物的 <strong>转化</strong> 。</p></blockquote><h2 id="天带背-day14">30天带背 · Day14</h2><p>（4）矛盾具有普遍性和客观性：(任何时间不可避免、面对和处理、一定会有、到处都是、正视和解决问题) 矛盾是事物之间的 ________ 及其关系。<strong>矛盾存在于一切事物 ________ 始终，无时不在，无处不有。</strong> 所以我们要 ________ 矛盾、 ________ 矛盾，全面看待 ________ 矛盾。</p><p>（5）矛盾具有特殊性：("xxx"的主语大于1，多个、几个、不同、差异) 矛盾的特殊性是指 ________ 所包含的矛盾以及每一矛盾的 ________ 都有其特点。具体表现为： 1.________ 的矛盾各有其特点； 2.同一事物的矛盾在 ________ 各有不同特点； 3.构成事物的 ________ 以及 ________ 各有不同的性质、地位和作用 所以我们要坚持 ________ ，这是马克思主义活的灵魂</p><p>（6）矛盾具有普遍性和特殊性的辩证统一：(<strong>概括</strong>、举一反三、应用、提炼) 矛盾的普遍性和特殊性是 ________ 的。任何现实存在的事物都是 ________ 和 ________ 的有机统一， <strong>________ 背后隐藏着 ________ ， ________ 寓于 ________ 之中</strong>。世界上没有脱离共性的个性，也没有脱离个性的共性。 所以我们要坚持事物 ________ 与 ________ 的统一，从 ________ 中把握 ________ ，学会举一反三。</p><p>（7）两点论和重点论的统一：（一般用于分析题第二题，有关启示） 事物的发展来自事物 ________ 运动的结果。主要矛盾 ________ 事物的发展，次要矛盾也 ________ 着事物发展的方向。 <strong>所以我们要坚持 ________ 和 ________ 的统一，既要抓住事物发展的 ________ ，分清主次，把握事物发展的 ________ ，也要看到事物的 ________ ，综合运用 ________ 认识和解决问题。</strong></p><blockquote><p><strong>answers：</strong> （4）矛盾具有普遍性和客观性 矛盾是事物之间的 <strong>对立统一</strong> 及其关系。矛盾存在于一切事物 <strong>发展过程</strong> 始终，无时不在，无处不有。 所以我们要 <strong>承认</strong> 矛盾、 <strong>正视</strong> 矛盾，全面看待 <strong>分析、解决</strong> 矛盾。 （5）矛盾具有特殊性 矛盾的特殊性是指 <strong>具体事物</strong> 所包含的矛盾以及每一矛盾的 <strong>各个方面</strong> 都有其特点。具体表现为： 1.<strong>不同事物</strong> 的矛盾各有其特点； 2.同一事物的矛盾在 <strong>不同发展过程和发展阶段</strong> 各有不同特点； 3.构成事物的 <strong>诸多矛盾</strong> 以及 <strong>每一矛盾不同方面</strong> 各有不同的性质、地位和作用 所以我们要坚持 <strong>具体问题具体分析</strong> ，这是马克思主义活的灵魂 （6）矛盾具有普遍性和特殊性的辩证统一 矛盾的普遍性和特殊性是 <strong>相互联结、不可分离</strong> 的。任何现实存在的事物都是 <strong>共性</strong> 和 <strong>个性</strong> 的有机统一， <strong>个性</strong> 背后隐藏着 <strong>共性</strong> ， <strong>共性</strong> 寓于 <strong>个性</strong> 之中。世界上没有脱离共性的个性，也没有脱离个性的共性。 所以我们要坚持事物 <strong>共性</strong> 与 <strong>个性</strong> 的统一，从 <strong>个别</strong> 中把握 <strong>一般</strong> ，学会举一反三。 （7）两点论和重点论的统一 事物的发展来自事物 <strong>内部矛盾</strong> 运动的结果。主要矛盾 <strong>决定</strong> 事物的发展，次要矛盾也 <strong>影响</strong> 着事物发展的方向。 所以我们要坚持 <strong>两点论</strong> 和 <strong>重点论</strong> 的统一，既要抓住事物发展的 <strong>重点和主流</strong> ，分清主次，把握事物发展的 <strong>根本</strong> ，也要看到事物的 <strong>整体</strong> ，综合运用 <strong>矛盾分析法</strong> 认识和解决问题。</p></blockquote><h2 id="天带背-day15">30天带背 · Day15</h2><p>（8）现象与本质辩证统一：(表面、内在、征状、表征、表里不一) <strong>现象和本质是揭示客观事物的 ________ 和 ________ 相互关系的范畴</strong>，两者是辩证统一的。 A. 本质是事物的 ________ ，是 ________ 的，深藏于事物的 ________ ，只有通过 ________ 才能把握。 B. 现象是事物的 ________ 和 ________ ，是 ________ 的，可以直接为人的感官所感知。 ________ 决定 ________ ，本质问题通过一定的现象表现自己的存在，任何现象都从某方面表现本质，本质总要通过现象表现。 所以我们要 ________ 。</p><p>（9）必然性与偶然性辩证统一：(机遇、机会、灵机一动、灵感) <strong>必然与偶然是揭示事物 ________ 和 ________ 过程中的不同趋势的一对范畴。必然与偶然是对立统一的。</strong> A. 首先，<strong>必然性与偶然性 ________ 。</strong>没有脱离偶然的必然，不通过偶然而只表现为纯粹的必然的情况是不存在的。 ________ 要通过 ________ 表现出来，并为自己开辟道路。同时也没有脱离必然的偶然。 B. 其次，<strong>必然与偶然在一定条件下 ________ 。</strong> 所以我们在认识和实践中，必须重视事物发展的 ________ 和 ________ ，但同时也要充分估计到各种偶然因素的作用，把握有利于事物发展的机遇。</p><p>（10）原因与结果辩证统一：(原因、后果、结局等一切成因因果关系的) <strong>原因和结果是解释事物的 ________ 的关系范畴。</strong> 原因和结果是辩证统一，原因与结果 ________ ，在一定条件下可以 ________ 。有一因多果、同因一果等。 所以我们要辩证的分析事物的 ________ ，分析存在和发展的不同原因以及不同结果，增强活动的 ________ 和 ________ 。</p><blockquote><p><strong>answers:</strong> （8）现象与本质辩证统一： 现象和本质是揭示客观事物的 <strong>外部表现</strong> 和 <strong>内部联系</strong> 相互关系的范畴，两者是辩证统一的。 A. 本质是事物的 <strong>根本性质</strong> ，是 <strong>相对稳定</strong> 的，深藏于事物的 <strong>内部</strong> ，只有通过 <strong>理性思维</strong> 才能把握。 B. 现象是事物的 <strong>外部联系</strong> 和 <strong>表面特征</strong> ，是 <strong>个别的、具体的、多变易逝的</strong> 的，可以直接为人的感官所感知。 <strong>本质</strong> 决定 <strong>现象</strong> ，本质问题通过一定的现象表现自己的存在，任何现象都从某方面表现本质，本质总要通过现象表现。 所以我们要 <strong>通过现象看清事物的本质</strong> 。 （9）必然性与偶然性辩证统一： 必然与偶然是揭示事物 <strong>产生、发展</strong> 和 <strong>衰亡</strong> 过程中的不同趋势的一对范畴。必然与偶然是对立统一的。 A. 首先，必然性与偶然性 <strong>相互依存</strong> 。没有脱离偶然的必然，不通过偶然而只表现为纯粹的必然的情况是不存在的。 <strong>必然</strong> 要通过 <strong>偶然</strong> 表现出来，并为自己开辟道路。同时也没有脱离必然的偶然。 B. 其次，必然与偶然在一定条件下 <strong>相互转化</strong> 。 所以我们在认识和实践中，必须重视事物发展的 <strong>必然规律</strong> 和 <strong>发展趋势</strong> ，但同时也要充分估计到各种偶然因素的作用，把握有利于事物发展的机遇。 （10）原因与结果辩证统一： 原因和结果是解释事物的 <strong>前后相继、彼此制约</strong> 的关系范畴。 原因和结果是辩证统一，原因与结果 <strong>相互作用、相互渗透</strong> ，在一定条件下可以 <strong>相互转化</strong> 。有一因多果、同因一果等。 所以我们要辩证的分析事物的 <strong>因果关系</strong> ，分析存在和发展的不同原因以及不同结果，增强活动的 <strong>自觉性、预测性</strong> 和 <strong>调控性</strong> 。</p></blockquote><h2 id="天带背-day16">30天带背 · Day16</h2><p>（11）客观规律性与人的主观能动性的统一： 规律具有客观性，是物质世界本身所 ________ 的，是不以 ________ 为转移的，________ 是 ________ 的前提。人具有 ________ ，能够 ________ 和 ________ 规律积极 ________ 世界与 ________ 世界，具有 ________ 的反作用。 所以我们必须要承认 ________ 客观性，在尊重 ________ 的基础上,充分发挥人的 ________ 。只有充分发挥 ________ ，才能正确认识和利用客观规律。</p><p>（12）实践是人与自然关系的基础： 实践的本质是人 ________ 地改造世界的客观物质性活动，实践构成人类存在的基本方式，实践是使物质世界分化为 ________ 与 ________ 的 ________ ，又是使 ________ 与 ________ 统一起来的 ________ 。 ________ 是 ________ 形成的前提，人类社会的存在和发展，又反过来影响和制约自然界。人类只有遵循 ________ 才能防止在开发利用自然上走弯路。所以我们要树立正确的实践观念和方式，促进人与自然 ________ 。</p><blockquote><p><strong>answers：</strong> （11）客观规律性与人的主观能动性的统一： 规律具有客观性，是物质世界本身所 <strong>固有的</strong> 的，是不以 <strong>人的意志</strong> 为转移的，<strong>尊重客观规律</strong> 是 <strong>正确发挥主观能动性</strong> 的前提。人具有 <strong>主观能动性</strong> ，能够 <strong>认识</strong> 和 <strong>利用</strong> 规律积极 <strong>反应</strong> 世界与 <strong>改造</strong> 世界，具有 <strong>能动</strong> 的反作用。 所以我们必须要承认 <strong>规律</strong> 客观性，在尊重 <strong>客观规律</strong> 的基础上,充分发挥人的 <strong>主观能动性</strong> 。只有充分发挥 <strong>主观能动性</strong> ，才能正确认识和利用客观规律。 （12）实践是人与自然关系的基础： 实践的本质是人 <strong>能动</strong> 地改造世界的客观物质性活动，实践构成人类存在的基本方式，实践是使物质世界分化为 <strong>自然界</strong> 与 <strong>人类社会</strong> 的 <strong>前提</strong> ，又是使 <strong>自然界</strong> 与 <strong>人类社会</strong> 统一起来的 <strong>基础</strong> 。 <strong>自然界</strong> 是 <strong>人类社会</strong> 形成的前提，人类社会的存在和发展，又反过来影响和制约自然界。人类只有遵循 <strong>自然规律</strong> 才能防止在开发利用自然上走弯路。所以我们要树立正确的实践观念和方式，促进人与自然 <strong>和谐共生</strong> 。</p></blockquote><h2 id="天带背-day17">30天带背 · Day17</h2><p>（13）实践与认识辩证统一 <strong>A.实践对认识的决定作用</strong> 实践的本质是人类 ________ 地改造世界的客观物质性活动。 ________ 是认识的基础，对认识具有决定作用。 实践是认识的 ________ ，也是认识的 ________ 。 所以我们要坚持 ________ ，坚持改造 ________ 同改造 ________ 相统一。 <strong>B.认识的能动反作用</strong> ________ 是认识的基础，认识是实践基础上主体对客体 ________ 的反应，具有 ________ ，对实践具有 ________ 的指导作用。 所以我们要运用正确的 ________ 指导实践的进程，实现 ________ 和 ________ 的良性互动，坚持改造 ________ 同改造 ________ 相统一。</p><p>（14）认识过程的反复性和无限性的统一（认识的规律） 认识的规律就是在实践的基础上从 ________ 到 ________ ，再从 ________ 到 ________ 两次飞跃的辩证过程。认识的发展是 ________ 和 ________ 的统一。认识运动的反复性是指人们对一个复杂事物的认识，往往要经过由 ________ 到 ________ 、由 ________ 到 ________ 的多次反复才能完成。 所以我们要坚持认识与实践 ________ 统一，不断推进认识的深化。</p><blockquote><p><strong>answers：</strong> （13）实践与认识辩证统一 <strong>A.实践对认识的决定作用</strong> 实践的本质是人类 <strong>能动</strong> 地改造世界的客观物质性活动。 <strong>实践</strong> 是认识的基础，对认识具有决定作用。 实践是认识的 <strong>来源、动力、检验标准</strong> ，也是认识的 <strong>目的</strong> 。 所以我们要坚持 <strong>一切从实际出发、实事求是</strong> ，坚持改造 <strong>主观世界</strong> 同改造 <strong>客观世界</strong> 相统一。 <strong>B.认识的能动反作用</strong> <strong>实践</strong> 是认识的基础，认识是实践基础上主体对客体 <strong>能动</strong> 的反应，具有 <strong>目的性、计划性、创造性</strong> ，对实践具有 <strong>能动</strong> 的指导作用。 所以我们要运用正确的 <strong>理性认识</strong> 指导实践的进程，实现 <strong>理论创新</strong> 和 <strong>实践创新</strong> 的良性互动，坚持改造 <strong>主观世界</strong> 同改造 <strong>客观世界</strong> 相统一。 （14）认识过程的反复性和无限性的统一（认识的规律） 认识的规律就是在实践的基础上从 <strong>感性认识</strong> 到 <strong>理性认识</strong> ，再从 <strong>理性认识</strong> 到 <strong>实践</strong> 两次飞跃的辩证过程。认识的发展是 <strong>反复性</strong> 和 <strong>无限性</strong> 的统一。认识运动的反复性是指人们对一个复杂事物的认识，往往要经过由 <strong>实践</strong> 到 <strong>认识</strong> 、由 <strong>认识</strong> 到 <strong>实践</strong> 的多次反复才能完成。 所以我们要坚持认识与实践 <strong>具体的、历史的</strong> 统一，不断推进认识的深化。</p></blockquote><h2 id="天带背-day18">30天带背 · Day18</h2><p>（15）感性认识和理性认识的辩证统一 感性认识是认识的 ________ ，理性认识是认识的 ________ 。感性认识和理性认识是 ________ 的。 所以我们要促进 ________ 向 ________ 的飞跃。具体来说就是要占有 ________ 的感性材料，运用 ________ 对感性材料进行加工制作。做到 ________ 。</p><p><strong>（16）非理性因素对认识过程的推动作用</strong> 在认识的辩证运动中，我们既要注重理性因素，同时也不可忽略非理性因素的重要作用。 A.理性因素是指人的 ________ 等能力，他在认识活动中的作用主要是有 ________ 和 ________ 等。 B.非理性因素主要是认识主体的 ________ 。非理性因素对于人的认识能力和认识活动具有 ________ 和 ________ 作用。 所以我们要重视 ________ 的作用，推动认识能力的提升。</p><blockquote><p><strong>answers：</strong> （15）感性认识和理性认识的辩证统一 感性认识是认识的 <strong>低级阶段</strong> ，理性认识是认识的 <strong>高级阶段</strong> 。感性认识和理性认识是 <strong>相互依赖、相互渗透</strong> 的。 所以我们要促进 <strong>感性认识</strong> 向 <strong>理性认识</strong> 的飞跃。具体来说就是要占有 <strong>丰富而真实</strong> 的感性材料，运用 <strong>科学的思维方法</strong> 对感性材料进行加工制作。做到 <strong>去粗取精、去伪存真、由此及彼、由表及里</strong> 。 （16）非理性因素对认识过程的推动作用 在认识的辩证运动中，我们既要注重理性因素，同时也不可忽略非理性因素的重要作用。 A.理性因素是指人的 <strong>理性直观、理性思维</strong> 等能力，他在认识活动中的作用主要是有 <strong>指导作用、解释作用</strong> 和 <strong>预见作用</strong> 等。 B.非理性因素主要是认识主体的 <strong>情感和意志</strong> 。非理性因素对于人的认识能力和认识活动具有 <strong>激活、驱动</strong> 和 <strong>控制</strong> 作用。 所以我们要重视 <strong>非理性因素</strong> 的作用，推动认识能力的提升。</p></blockquote><h2 id="天带背-day19">30天带背 · Day19</h2><blockquote><p>价值的基本特性包括： ________ 、 ________ 、 ________ 和 ________ 。</p></blockquote><p>（17）真理与价值在实践中的辩证统一 任何成功的实践都是 ________ 和 ________ 的统一，是 ________ 和 ________ 的统一。一方面， ________ 必须以 ________ 为前提。另一方面，人类自身需要的内在尺度，推动着人们不断发现新的真理。基于实践的 ________ 和 ________ ，真理尺度与价值尺度的统一也是 ________ 和 ________ ，真理尺度与价值尺度是辩证统一的。</p><p>（18）真理的绝对性与相对性辩证统一 真理的绝对性，是指真理的内容表明了 ________ 的确定性和发展的无限性。真理的相对性，是指人们在一定条件下对事物的 ________ 的正确认识总是有限度的。绝对真理和相对真理是 ________ 的。真理的 ________ 寓于真理的 ________ 之中，无数 ________ 的总和构成 ________ 。 所以我们要坚持两者的统一，在实践中不断推进真理的发展与深化。</p><p>（19）真理与谬误辩证统一 一方面，真理和谬误在确定的范围内是 ________ 的，是性质不同的两种认识。真理是 ________ 的正确反应，谬误是对 ________ 的错误反应。另一方面，真理和谬误是统一的，真理和谬误 ________ 而存在， ________ 相互转化。 所以我们要坚持真理的 ________ ，与谬误作斗争，同时也要促进谬误在 ________ 向真理转化。</p><blockquote><p><strong>answers：</strong> 价值的基本特性包括： <strong>主体性</strong> 、 <strong>客观性</strong> 、 <strong>多维性</strong> 和 <strong>社会历史性</strong> 。 （17）真理与价值在实践中的辩证统一 任何成功的实践都是 <strong>真理尺度</strong> 和 <strong>价值尺度</strong> 的统一，是 <strong>合规律性</strong> 和 <strong>合目的性</strong> 的统一。一方面， <strong>价值尺度</strong> 必须以 <strong>真理</strong> 为前提。另一方面，人类自身需要的内在尺度，推动着人们不断发现新的真理。基于实践的 <strong>具体性</strong> 和 <strong>历史性</strong> ，真理尺度与价值尺度的统一也是 <strong>具体的</strong> 和 <strong>历史的</strong> ，真理尺度与价值尺度是辩证统一的。 （18）真理的绝对性与相对性辩证统一 真理的绝对性，是指真理的内容表明了 <strong>主客观统一</strong> 的确定性和发展的无限性。真理的相对性，是指人们在一定条件下对事物的 <strong>客观过程及其发展规律</strong> 的正确认识总是有限度的。绝对真理和相对真理是 <strong>相互依存、相互包含</strong> 的。真理的 <strong>绝对性</strong> 寓于真理的 <strong>相对性</strong> 之中，无数 <strong>相对真理</strong> 的总和构成 <strong>绝对真理</strong> 。 所以我们要坚持两者的统一，在实践中不断推进真理的发展与深化。 （19）真理与谬误辩证统一 一方面，真理和谬误在确定的范围内是 <strong>对立</strong> 的，是性质不同的两种认识。真理是 <strong>客观事物的本质和规律</strong> 的正确反应，谬误是对 <strong>客观事物的本质和规律</strong> 的错误反应。另一方面，真理和谬误是统一的，真理和谬误 <strong>相比较</strong> 而存在， <strong>在一定条件下</strong> 相互转化。 所以我们要坚持真理的 <strong>一元性</strong> ，与谬误作斗争，同时也要促进谬误在 <strong>一定条件下</strong> 向真理转化。</p></blockquote><h2 id="天带背-day20">30天带背 · Day20</h2><p>（20）实践标准（选择题考点） 实践作为检验认识真理性的标准，既是 ________ ，又是 ________ ，是 ________ 与 ________ 的统一。实践标准是确定和绝对的，因为只有 ________ 才能检验认识的真理性，凡经过实践证明了的一切认识都是 ________ ，都具有 ________ 的性质。</p><p>（21）实现理论创新和实践创新的良性互动 创新是社会发展的 ________ ，人类发展进步的历史就是不断创新的历史。人类的创新活动具有丰富的内容和表现，其中主要是理论创新和实践创新两个基本方面。 第一， ________ 为 ________ 提供不竭的动力源泉。 第二， ________ 为 ________ 提供科学的行动指南。 第三， 我们要努力实现 ________ 和 ________ 的良性互动。 所谓良性互动是指两者之间存在 ________ 相互作用和相互影响，或者说二者之间形成 ________ 的因果关系。这种良性互动需要人的努力才能完成。</p><blockquote><p><strong>answers：</strong> （20）实践标准（选择题考点） 实践作为检验认识真理性的标准，既是 <strong>确定的</strong> ，又是 <strong>不确定的</strong> ，是 <strong>确定性</strong> 与 <strong>不确定性</strong> 的统一。实践标准是确定和绝对的，因为只有 <strong>实践</strong> 才能检验认识的真理性，凡经过实践证明了的一切认识都是 <strong>客观真理</strong> ，都具有 <strong>不可推翻</strong> 的性质。 （21）实现理论创新和实践创新的良性互动 创新是社会发展的 <strong>不竭动力</strong> ，人类发展进步的历史就是不断创新的历史。人类的创新活动具有丰富的内容和表现，其中主要是理论创新和实践创新两个基本方面。 第一， <strong>实践创新</strong> 为 <strong>理论创新</strong> 提供不竭的动力源泉。 第二， <strong>理论创新</strong> 为 <strong>实践创新</strong> 提供科学的行动指南。 第三， 我们要努力实现 <strong>理论创新</strong> 和 <strong>实践创新</strong> 的良性互动。 所谓良性互动是指两者之间存在 <strong>良好的、积极的</strong> 相互作用和相互影响，或者说二者之间形成 <strong>相互激发、共同促进</strong> 的因果关系。这种良性互动需要人的努力才能完成。</p></blockquote><h2 id="天带背-day21">30天带背 · Day21</h2><p>（22）科学技术的作用 科学技术是推动 ________ 的动力之一。在现代，科学技术日益成为生产发展的 ________ 因素。科学技术是先进生产力的 ________ 和 ________ ，是 ________ 。 但科学技术是一把双刃剑，科学技术的作用既受到一定 ________ 的制约，也收到一定主观条件的影响，有时会 “表现为异己的、敌对的和统治的权利” 。 所以我们必须正确发挥 ________，始终坚持使科学技术为 ________ 服务，让科技为人类造福。</p><p><strong>（23）人民群众的作用</strong>（今年热点） 人的本质是 ________ ，人的本质属性是 ________ 。在社会历史发展过程中，人民群众起着 ________ 的作用。 人民群众是一个历史范畴。 从质上看，人民群众是指一切对 ________；从量上看，人民群众是指社会人口中的 ________ 。 人民群众是社会历史的 ________ ，是历史的创造者。人民群众是社会 ________ 的创造者。人民群众是社会 ________ 的创造者。 <strong>人民群众是社会变革的 ________ 力量。人民群众创造历史的作用是同 ________ 推动社会前进的过程相一致的。人民群众的总体意愿和行动代表了历史发展的方向，人民群众的社会实践最终 ________ 历史发展的结局。</strong> 所以我们必须坚持 ________ 和 ________ ，充分相信群众，坚决依靠群众，密切联系群众，全心全意为人民群众服务。</p><p><strong>（24）万能模板（用于第二问，写完主原理后，发散部分直接默上去拿满分）</strong> 我们应该用 ________ 观点看待问题，学习和运用矛盾分析法，坚持两点论和重点论的统一，透过现象看本质，在把握事物规律性的基础上充分发挥人的 ________ ，不断创新，把握机遇，从偶然中发现必然。 同时还要注重实践，坚持一切从 ________ 出发，实事求是，在实践中坚持和发展真理。不断推动认识的深化发展，将改造 ________与改造 ________ 相结合，推动认识与实践 ________ 发展</p><blockquote><p><strong>answers：</strong> （22）科学技术的作用 科学技术是推动 <strong>社会发展</strong> 的动力之一。在现代，科学技术日益成为生产发展的 <strong>决定性</strong> 因素。科学技术是先进生产力的 <strong>集中体现</strong> 和 <strong>主要标志</strong> ，是 <strong>第一生产力</strong> 。 但科学技术是一把双刃剑，科学技术的作用既受到一定 <strong>客观条件</strong> 的制约，也收到一定主观条件的影响，有时会 “表现为异己的、敌对的和统治的权利” 。 所以我们必须正确发挥 <strong>主观能动性</strong>，始终坚持使科学技术为 <strong>人类社会的健康发展</strong> 服务，让科技为人类造福。 （23）人民群众的作用 人的本质是 <strong>社会关系的总合</strong> ，人的本质属性是 <strong>社会性</strong> 。在社会历史发展过程中，人民群众起着 <strong>决定性</strong> 的作用。 人民群众是一个历史范畴。 从质上看，人民群众是指一切对 <strong>社会历史发展起推动作用的人</strong>； 从量上看，人民群众是指社会人口中的 <strong>绝大多数</strong> 。 人民群众是社会历史的 <strong>主体</strong> ，是历史的创造者。人民群众是社会 <strong>物质财富</strong> 的创造者。人民群众是社会 <strong>精神财富</strong> 的创造者。 人民群众是社会变革的 <strong>决定</strong> 力量。人民群众创造历史的作用是同 <strong>社会基本矛盾运动</strong> 推动社会前进的过程相一致的。人民群众的总体意愿和行动代表了历史发展的方向，人民群众的社会实践最终 <strong>决定</strong> 历史发展的结局。 所以我们必须坚持 <strong>群众观点</strong> 和 <strong>群众路线</strong> ，充分相信群众，坚决依靠群众，密切联系群众，全心全意为人民群众服务。 （24）万能模板 我们应该用 <strong>联系的、发展的、全面的</strong> 观点看待问题，学习和运用矛盾分析法，坚持两点论和重点论的统一，透过现象看本质，在把握事物规律性的基础上充分发挥人的 <strong>主观能动性</strong> ，不断创新，把握机遇，从偶然中发现必然。 同时还要注重实践，坚持一切从 <strong>实际</strong> 出发，实事求是，在实践中坚持和发展真理。不断推动认识的深化发展，将改造 <strong>主观世界</strong> 与改造 <strong>客观世界</strong> 相结合，推动认识与实践 <strong>历史的、具体的</strong> 发展</p></blockquote><h1 id="毛中特分析题素材">毛中特分析题素材</h1><h2 id="天带背-day22">30天带背 · Day22</h2><blockquote><p>三新一高选择题考点</p></blockquote><p>（1）新发展阶段 是什么： 新发展阶段是 ________ 中的一个阶段，同时是其中经过 ________ 的一个阶段。新发展阶段是我们党带领人民 ________ 从站起来、富起来到强起来历史性的跨越的新阶段。 为什么： 从理论上来看，马克思主义是 ________ 和 ________ 相统一的统一论者。 从历史依据看，新发展阶段是人民迎来从站起来、富起来到强起来 ________ 跨越的新阶段。 从现实依据看，我们已经拥有了实现新的更高目标的 ________ 。</p><p>（2）新发展理念 是什么： ________ 是引领发展的<strong>第一动力</strong>； ________ 是持续健康发展的内在要求； ________ 是<strong>国家繁荣</strong>的必由之路（根本之路）； ________ 是中国特色社会主义的本质要求； ________ 是<strong>永续</strong>发展的必要条件。 进入新发展阶段，必须更加注重 ________ 问题；通过 ________ 提供<strong>保障</strong>；围绕新发展理念，加强 ________ 。 为什么： 新发展理念是针对________、世界经济复苏乏力形势提出的 ________；是针对发展问题提出的 ________，具有很强的 ________ 、 ________ 、 ________ 。</p><p>（3）构建新发展格局 怎么做： ________ 是构建新发展格局的战略<strong>基点</strong>； ________ 是构建新发展格局的<strong>关键</strong>； ________ 是构建新发展格局的最<strong>本质</strong>特征。</p><p>（4）推动高质量发展（速度no，质量yes） 经济社会发展要以推动高质量发展为 ________ ，这是保持经济持续健康发展的 ________ ，是全面建设社会主义现代化国家的 ________ 。________ 是推动高质量发展的主线。</p><blockquote><p><strong>answers：</strong> （1）新发展阶段 是什么： 新发展阶段是 <strong>社会主义初级阶段</strong> 中的一个阶段，同时是其中经过 <strong>几十年积累、站到了新的起点上</strong> 的一个阶段。新发展阶段是我们党带领人民 <strong>迎来</strong> 从站起来、富起来到强起来历史性的跨越的新阶段。 为什么： 从理论上来看，马克思主义是 <strong>历史必然性</strong> 和 <strong>发展阶段性</strong> 相统一的统一论者。 从历史依据看，新发展阶段是人民迎来从站起来、富起来到强起来 <strong>历史性</strong> 跨越的新阶段。 从现实依据看，我们已经拥有了实现新的更高目标的 <strong>雄厚物质基础</strong> 。 （2）新发展理念 是什么： <strong>创新</strong> 是引领发展的第一动力； <strong>协调</strong> 是持续健康发展的内在要求； <strong>开放</strong> 是<strong>国家繁荣</strong>的必由之路（根本之路）； <strong>共享</strong> 是中国特色社会主义的本质要求； <strong>绿色</strong> 是<strong>永续</strong>发展的必要条件。 进入新发展阶段，必须更加注重 <strong>共同富裕</strong> 问题；通过 <strong>改革</strong> 提供保障；围绕新发展理念，加强 <strong>精确施策</strong>。 为什么： 新发展理念是针对 <strong>我国经济发展进入新常态</strong>、世界经济复苏乏力形势提出的 <strong>治本之策</strong>；是针对发展问题提出的 <strong>战略指引</strong>，具有很强的 <strong>战略性、纲领性、引领性</strong>。 （3）构建新发展格局 怎么做： <strong>扩大内需</strong> 是构建新发展格局的战略基点； <strong>经济循环畅通无阻</strong> 是构建新发展格局的关键； <strong>实现高水平的自立自强</strong> 是构建新发展格局的最本质特征。 （4）推动高质量发展（速度no，质量yes） 经济社会发展要以推动高质量发展为 <strong>主题</strong>，这是保持经济持续健康发展的 <strong>必然要求</strong>，是全面建设社会主义现代化国家的 <strong>必然选择</strong>。<strong>深化供给侧结构性改革</strong> 是推动高质量发展的主线。</p></blockquote><h2 id="天带背-day23">30天带背 · Day23</h2><p>（5）建设现代化经济体系： 牢筑现代化经济体系的<strong>坚实基础</strong>是 ________ 。 现代化经济体系的<strong>重要基础</strong>是 ________ 。 现代化经济体系的<strong>战略支撑</strong>是 ________ 。</p><p>（6）创新关键字 人才 — ________ 创新 — ________ 科技 — ________</p><p>（7）处理好政府与市场的关系（市场资源配置、政府作用、基本经济制度） ________ 是社会主义市场经济的重要组成部分。 ________ 在资源配置中起决定性作用</p><blockquote><p><strong>answers：</strong> （5）建设现代化经济体系： 牢筑现代化经济体系的坚实基础是 <strong>实体经济</strong> 。 现代化经济体系的重要基础是 <strong>乡村振兴战略</strong> 。 现代化经济体系的战略支撑是 <strong>创新驱动发展战略</strong> 。 （6）创新关键字 人才 — <strong>资源</strong> 创新 — <strong>第一动力、战略支撑、根本之策、核心位置、关键</strong> 科技 — <strong>生产</strong> （7）处理好政府与市场的关系（市场资源配置、政府作用、基本经济制度） <strong>公有制经济和非公有制经济</strong> 是社会主义市场经济的重要组成部分。 <strong>市场</strong> 在资源配置中起决定性作用</p></blockquote><h2 id="天带背-day24">30天带背 · Day24</h2><p>（8）全面深化改革 / 改革开放 ________ 是社会主义制度的自我完善和发展，是中国人民和中华民族发展史上一次伟大革命。 ________ 是决定当代中国命运的 <strong>关键一招</strong>，是实现中华民族伟大复兴的 <strong>关键一招</strong>。</p><p>（9）开发性经济与全面对外开放 ________ 是实现国家繁荣富强的根本出路。 ________ 是国家繁荣发展的必由之路。</p><blockquote><p><strong>answers：</strong> （8）全面深化改革 / 改革开放 <strong>改革</strong> 是社会主义制度的自我完善和发展，是中国人民和中华民族发展史上一次伟大革命。 <strong>改革开放</strong> 是决定当代中国命运的关键一招，是实现中华民族伟大复兴的关键一招。 （9）开发性经济与全面对外开放 <strong>全面开放</strong> 是实现国家繁荣富强的根本出路。 <strong>对外开放</strong> 是国家繁荣发展的必由之路。</p></blockquote><h2 id="天带背-day25">30天带背 · Day25</h2><p><strong>（10）人民代表大会制度</strong> ________ 是我国最高国家权力机关。人民代表大会制度是坚持 ________ 、 ________ 、 ________ 有机统一的根本制度安排，是符合中国国情、体现中国社会主义国家性质、能够保证中国人民当家做主的 ________ ，也是党在国家政权中充分发扬民主、贯彻群众路线的 ________ ，是中国社会主义政治文明的重要制度载体。 要支持和保证人民代表大会行使国家权力，发挥人大及其常委会在立法工作中的 <strong>主导</strong> 作用，健全人大组织制度和工作制度。必须坚持党的全民领导，必须保证和发展人民当家做主。</p><p>（11）社会主义民主 ________ 是社会主义民主政治的 <strong>本质特征</strong>（本质与核心）。我国社会主义民主是维护人民根本利益的最 ________ 、最 ________ 、 最 ________ 的民主。 发挥社会主义民主政治要体现 ________ 、 保障 ________ 、 激发 ________ ， 用制度体系保证人民当家做主。</p><blockquote><p><strong>answers：</strong> <strong>（10）人民代表大会制度</strong> <strong>全国人民代表大会制度</strong> 是我国最高国家权力机关。人民代表大会制度是坚持 <strong>党的领导</strong> 、 <strong>人民当家做主</strong> 、 <strong>依法治国</strong> 有机统一的根本制度安排，是符合中国国情、体现中国社会主义国家性质、能够保证中国人民当家做主的 <strong>根本政治制度和最高实现形式</strong> ，也是党在国家政权中充分发扬民主、贯彻群众路线的 <strong>最好实现形式</strong> ，是中国社会主义政治文明的重要制度载体。 要支持和保证人民代表大会行使国家权力，发挥人大及其常委会在立法工作中的 <strong>主导</strong> 作用，健全人大组织制度和工作制度。必须坚持党的全民领导，必须保证和发展人民当家做主。 （11）社会主义民主 <strong>人民当家做主</strong> 是社会主义民主政治的 <strong>本质特征</strong>（本质与核心）。我国社会主义民主是维护人民根本利益的最 <strong>广泛</strong> 、最 <strong>真实</strong> 、 最 <strong>管用</strong> 的民主。 发挥社会主义民主政治要体现 <strong>人民意志</strong> 、 保障 <strong>人民权益</strong> 、 激发 <strong>人民创造活力</strong> ， 用制度体系保证人民当家做主。</p></blockquote><h2 id="天带背-day26">30天带背 · Day26</h2><p>（12）生态文明与美丽中国 建设 ________ 是中华民族永续发展的千年大计，是一场涉及 ________ 、 ________ 、 ________ 和 ________ 的革命性变革。绿色发展就其要义来讲，是要解决好 ________ 问题。改善生态环境就是发展生产力，生态环境归根到底是 ________ 问题。 （13）全面建设社会主义现代化国家 我国脱贫攻坚战取得了全面胜利，现行标准下 ________ 全部脱贫，解决了 ________ ，完成了消除 ________ 的艰巨任务。 ________ 为实现全面小康社会目标任务做出了关键性贡献。改革开放以来，我们党领导的全国人民创造了世所罕见的 ________ 奇迹和 ________ 奇迹。 （14）乡村振兴 ________ 是解决新时代我国社会主要矛盾、实现 “两个一百年” 奋斗目标和中华民族伟大复兴中国梦的必然要求。实现中华民族伟大复兴，最艰巨最繁重的任务依然在 ________ ，最广泛最深厚的基础依然在 ________ 。实施乡村振兴战略是立足 ________ ，贯彻 ________ 、 构建 ________ 提出的必然要求。</p><blockquote><p><strong>answers:</strong> （12）生态文明与美丽中国 建设 <strong>生态文明</strong> 是中华民族永续发展的千年大计，是一场涉及 <strong>生产方式</strong> 、 <strong>生活方式</strong> 、 <strong>思维方式</strong> 和 <strong>价值观念</strong> 的革命性变革。绿色发展就其要义来讲，是要解决好 <strong>人与自然和谐共生</strong> 问题。改善生态环境就是发展生产力，生态环境归根到底是 <strong>经济发展方式</strong> 问题。 （13）全面建设社会主义现代化国家 我国脱贫攻坚战取得了全面胜利，现行标准下 <strong>农村贫困人口</strong> 全部脱贫，解决了 <strong>区域性整体贫困</strong> ，完成了消除 <strong>绝对贫困</strong> 的艰巨任务。 <strong>脱贫攻坚战的全面胜利</strong> 为实现全面小康社会目标任务做出了关键性贡献。改革开放以来，我们党领导的全国人民创造了世所罕见的 <strong>经济快速发展</strong> 奇迹和 <strong>社会长期稳定</strong> 奇迹。 （14）乡村振兴 <strong>实施乡村振兴战略</strong> 是解决新时代我国社会主要矛盾、实现 “两个一百年” 奋斗目标和中华民族伟大复兴中国梦的必然要求。实现中华民族伟大复兴，最艰巨最繁重的任务依然在 <strong>乡村</strong> ，最广泛最深厚的基础依然在 <strong>乡村</strong> 。实施乡村振兴战略是立足 <strong>新发展阶段</strong> ，贯彻 <strong>新发展理念</strong> 、 构建 <strong>新发展格局</strong> 提出的必然要求。</p></blockquote><h1 id="史纲分析题素材">史纲分析题素材</h1><h2 id="天带背-day27">30天带背 · Day27</h2><blockquote><p>史纲分析题，对于不同的设问角度，需要对不同的素材进行排列组合连接起来，拼成答案</p></blockquote><p>（1）民族复兴的主题（为何要探寻国家出路？或者解释“近代”以来）为什么要实现民族复兴 近代中国的两大主要矛盾： ________ 的矛盾， ________ 的矛盾 近代中国社会的两大历史任务： ________ ， ________ 。 近代国情： ________</p><p>（2）过去的失败（党成立之前各种方案的失败，引出党的伟大历史贡献） 近代包括 ________ 、 ________ 、________ 在内的中华民族为实现民族复兴进行了不屈不挠的斗争，然而不触动封建根基的 ________ 、 ________ 、________ 和 照搬西方的种种方案都失败了。 只有 ________ 才能运用科学先进的马克思主义理论，不断将 ________ （理论角度） ，最终领导人民完成 ________ 、 ________ 、 ________ 的历史任务，逐步实现中华民族伟大复兴（时间维度）。</p><blockquote><p><strong>answers：</strong> （1）民族复兴的主题（为何要探寻国家出路？或者解释“近代”以来）为什么要实现民族复兴 近代中国的两大主要矛盾： <strong>帝国主义和中华民族</strong> 的矛盾， <strong>封建主义和人民大众</strong> 的矛盾 近代中国社会的两大历史任务： <strong>争取民族独立、人民解放</strong> ， <strong>国家富强、人民富裕</strong> 近代国情： <strong>半殖民地半封建社会</strong> （2）过去的失败（党成立之前各种方案的失败，引出党的伟大历史贡献） 近代包括 <strong>普通民众</strong> 、 <strong>先进地主阶级</strong> 、 <strong>民族资产阶级</strong> 在内的中华民族为实现民族复兴进行了不屈不挠的斗争，然而不触动封建根基的 <strong>自强运动</strong> 、 <strong>改良主义</strong> 、 <strong>旧式的农民战争</strong> 和 照搬西方的种种方案都失败了。 只有 <strong>中国共产党</strong> 才能运用科学先进的马克思主义理论，不断将 <strong>马克思主义中华化</strong> （理论角度） ，最终领导人民完成 <strong>革命</strong> 、 <strong>建设</strong> 、 <strong>改革</strong> 的历史任务，逐步实现中华民族伟大复兴（时间维度）。</p></blockquote><h2 id="天带背-day28">30天带背 · Day28</h2><blockquote><p>背诵手册上是七一讲话的内容，这里的是最新的六中全会说法，背这里的</p></blockquote><p>（3）党百年成就（四个简写） 一百年来，党领导人民： 1. 创造了 <strong>新民主主义革命的伟大成就</strong> ，为实现中华民族伟大复兴创造 ________ ，实现了中国从几千年 ________ 向 ________ 的伟大飞跃。 2. 创造了 <strong>社会主义革命和建设的伟大成就</strong> ，为实现中华民族伟大复兴奠定根本 ________ 和 ________ ，实现了 ________ 大步迈进 ________ 的伟大飞跃。________ 是马克思主义中国化的第一次历史性飞跃。 3. 创造了 <strong>改革开放和社会主义现代化建设</strong> 的伟大成就，实现了人民生活从 ________ 到 ________ 、奔向 ________ 的历史性跨越，推进了中华民族从 ________ 到 ________ 的伟大飞跃。形成了 ________ 理论体系，实现了马克思主义中国化新的飞跃。 4. 创造了 <strong>新时代中国特色社会主义的伟大成就</strong>，为实现中华民族伟大复兴提供了（三个更为）更为完善的 ________ 、更为坚实的 ________ 、 更为主动的 ________ ，中华民族迎来了从 ________ 、 ________ 到 ________ 的伟大飞跃。________ 是当代中国马克思主义、二十一世纪马克思主义，是中华文化和中国精神的时代精华，实现了马克思主义中国化新的飞跃。</p><p>（4）新时代中国特色社会主义的成就（第四个的详写） 党的十八大以来，中国特色社会主义进入新时代，我们坚持和加强党的全面领导，统筹推进 ________ 的总体布局、协调推进 ________ 战略布局，坚持和完善 ________ 制度，推进国家 ________ 现代化。 党和国家事业取得历史性成就、发生历史性变革，为中华民族伟大复兴提供了更为完善的 ________ 、 更为坚实的 ________ 、 更为主动的 ________ 。</p><blockquote><p><strong>answers：</strong> （3）党百年成就（四个简写） 一百年来，党领导人民： 1. 创造了 <strong>新民主主义革命的伟大成就</strong> ，为实现中华民族伟大复兴创造 <strong>根本社会条件</strong> ，实现了中国从几千年 <strong>封建专制政治</strong> 向 <strong>人民民主</strong> 的伟大飞跃。 2. 创造了 <strong>社会主义革命和建设的伟大成就</strong> ，为实现中华民族伟大复兴奠定根本 <strong>政治前提</strong> 和 <strong>制度基础</strong> ，实现了 <strong>一穷二白、人口众多的东方大国</strong> 大步迈进 <strong>社会主义社会</strong> 的伟大飞跃。<strong>毛泽东思想</strong> 是马克思主义中国化的第一次历史性飞跃。 3. 创造了 <strong>改革开放和社会主义现代化建设</strong> 的伟大成就，实现了人民生活从 <strong>温饱不足</strong> 到 <strong>总体小康</strong> 、奔向 <strong>全面小康</strong> 的历史性跨越，推进了中华民族从 <strong>站起来</strong> 到 <strong>富起来</strong> 的伟大飞跃。形成了 <strong>中国特色社会主义</strong> 理论体系，实现了马克思主义中国化新的飞跃。 4. 创造了 <strong>新时代中国特色社会主义的伟大成就</strong>，为实现中华民族伟大复兴提供了（三个更为）更为完善的 <strong>制度保障</strong> 、更为坚实的 <strong>物质基础</strong> 、 更为主动的 <strong>精神力量</strong> ，中华民族迎来了从 <strong>站起来</strong> 、 <strong>富起来</strong> 到 <strong>强起来</strong> 的伟大飞跃。<strong>习近平新时代中国特色社会主义思想</strong> 是当代中国马克思主义、二十一世纪马克思主义，是中华文化和中国精神的时代精华，实现了马克思主义中国化新的飞跃。</p><p>（4）新时代中国特色社会主义的成就（第四个的详写） 党的十八大以来，中国特色社会主义进入新时代，我们坚持和加强党的全面领导，统筹推进 <strong>“五位一体”</strong> 的总体布局、协调推进 <strong>“四个全面”</strong> 战略布局，坚持和完善 <strong>中国特色社会主义</strong> 制度，推进国家 <strong>治理体系和治理能力</strong> 现代化。 党和国家事业取得历史性成就、发生历史性变革，为中华民族伟大复兴提供了更为完善的 <strong>制度保证</strong> 、 更为坚实的 <strong>物质基础</strong> 、 更为主动的 <strong>精神力量</strong> 。</p></blockquote><h2 id="天带背-day29">30天带背 · Day29</h2><p>（5）辛亥革命 辛亥革命极大促进了中华民族的 ________ 解放，传播了 ________ 的理念，打开了中国 ________ 的闸门，撼动了 ________ 的根基，在中华大地上建立起亚洲第一个 ________ 国家。 辛亥革命之后，中国人民和中国先进分子继续探寻救国救民道路。在中国人民和中华民族的伟大觉醒中，在马克思列宁主义同中国工人运动的紧密结合中， ________ 应运而生，这是开天辟地的大事变！实现 ________ 的灯塔由此点亮。</p><p>（6）新文化运动（选） 新文化运动在社会上掀起了一股空前深刻的 ________ 潮流。这股潮流冲绝了 ________ 。而这个闸门一被打开， ________ 的涌流就不可避免了。</p><p>（7）五四运动（选） ________ 是新民主主义革命的开端。 五四运动是一场 ________ 的伟大爱国革命运动。 五四运动促进了马克思主义同中国工人运动相结合，为中国共产党成立作了 ________ 的准备。 五四运动是自鸦片战争以来第一次 ________ 觉醒。 五四运动在近代以来中华民族追求 ________ 和 ________ 的历史进程中具有里程碑意义。</p><blockquote><p><strong>answers：</strong> （5）辛亥革命 辛亥革命极大促进了中华民族的 <strong>思想</strong> 解放，传播了 <strong>民主共和</strong> 的理念，打开了中国 <strong>进步潮流</strong> 的闸门，撼动了 <strong>反动统治秩序</strong> 的根基，在中华大地上建立起亚洲第一个 <strong>共和制</strong> 国家。 辛亥革命之后，中国人民和中国先进分子继续探寻救国救民道路。在中国人民和中华民族的伟大觉醒中，在马克思列宁主义同中国工人运动的紧密结合中， <strong>中国共产党</strong> 应运而生，这是开天辟地的大事变！实现 <strong>中华民族伟大复兴</strong> 的灯塔由此点亮。 （6）新文化运动（选） 新文化运动在社会上掀起了一股空前深刻的 <strong>思想解放</strong> 潮流。这股潮流冲绝了 <strong>禁锢人们的思想闸门</strong> 。而这个闸门一被打开， <strong>各种新思潮</strong> 的涌流就不可避免了。 （7）五四运动（选） <strong>五四运动</strong> 是新民主主义革命的开端。 五四运动是一场 <strong>彻底反帝反封</strong> 的伟大爱国革命运动。 五四运动促进了马克思主义同中国工人运动相结合，为中国共产党成立作了 <strong>思想上干部上</strong> 的准备。 五四运动是自鸦片战争以来第一次 <strong>全面</strong> 觉醒。 五四运动在近代以来中华民族追求 <strong>民族独立</strong> 和 <strong>发展进步</strong> 的历史进程中具有里程碑意义。</p></blockquote><h2 id="天带背-day30">30天带背 · Day30</h2><p>（8）十月革命与马克思主义中国化 ________ 充分暴露了帝国主义国家侵略的实质，使得中国的知识分子对西方的资本主义方案产生怀疑与失望。十月革命一声炮响， ________ 作为一种救国的主义和信仰开始传入中国。 ________ 中，马克思主义得以广泛传播并在思想领域日渐取得 ________ 地位。</p><blockquote><p><strong>answers：</strong> （8）十月革命与马克思主义中国化 <strong>第一次世界大战</strong> 充分暴露了帝国主义国家侵略的实质，使得中国的知识分子对西方的资本主义方案产生怀疑与失望。十月革命一声炮响， <strong>马克思主义</strong> 作为一种救国的主义和信仰开始传入中国。 <strong>五四运动后的新文化运动</strong> 中，马克思主义得以广泛传播并在思想领域日渐取得 <strong>主导</strong> 地位。</p></blockquote><h2 id="天带背-day31">30天带背 · Day31</h2><blockquote><p>加分项，可不背</p></blockquote><p>（9）马克思主义中国化 中国人民经过反复比较，选择了马克思主义。历史证明，只有 ________ 才能救中国，只有 ________ 才能发展中国。</p><p>（10）党建 我们党作为百年大党，必须始终牢记 ________ ，不断加强党的建设。只有这样，才能真正勇担实现 ________ 的中国梦的责任。</p><p>（11）中华民族伟大复兴 一百年来，中国共产党团结带领中国人民进行一切奋斗、一切牺牲、一切创造，归结起来就是一个主题： ________ 。</p><p>（12）中国道路 改革开放新时期坚持 ________ 道路，才能真正实现党为 ________ 的“初心” 、为 ________ 的使命。</p><blockquote><p><strong>answers：</strong> （9）马克思主义中国化 中国人民经过反复比较，选择了马克思主义。历史证明，只有 <strong>社会主义</strong> 才能救中国，只有 <strong>社会主义</strong> 才能发展中国。 （10）党建 我们党作为百年大党，必须始终牢记 <strong>初心和使命</strong> ，不断加强党的建设。只有这样，才能真正勇担实现 <strong>中华民族伟大复兴</strong> 的中国梦的责任。 （11）中华民族伟大复兴 一百年来，中国共产党团结带领中国人民进行一切奋斗、一切牺牲、一切创造，归结起来就是一个主题： <strong>实现中华民族伟大复兴</strong> 。 （12）中国道路 改革开放新时期坚持 <strong>中国特色社会主义</strong> 道路，才能真正实现党为 <strong>人民谋幸福</strong> 的“初心” 、为 <strong>中华民族谋复兴</strong> 的使命。</p></blockquote><h1 id="思修分析题素材">思修分析题素材</h1><h2 id="天带背-day32">30天带背 · Day32</h2><p>（1）人生价值 人生价值内在地包含了人生的 ________ 和 ________ ，它们相互区别又相互联系，共同构成了人生价值的矛盾统一体。 ________ 是为社会创造更大价值的前提。 ________ 是实现个体自我完善发展的保障。 人生价值评价的根本尺度是一个人的人生活动是否符合 ________ ，是否通过 ________ 促进了 ________ 。 人生价值评价的基本尺度是一个人是否通过 ________ 和 ________ 对 ________ 和 ________ 做贡献。 人生价值的评价方法包括： A. 坚持 ________ 与 ________ 相统一 B. 坚持 ________ 与 ________ 相统一 A. 坚持 ________ 与 ________ 相统一 ________ 是人生价值真正的源头活水，是实现人生价值的必由之路。</p><blockquote><p><strong>answers：</strong> （1）人生价值 人生价值内在地包含了人生的 <strong>自我价值</strong> 和 <strong>社会价值</strong> ，它们相互区别又相互联系，共同构成了人生价值的矛盾统一体。 <strong>自我价值</strong> 是为社会创造更大价值的前提。 <strong>社会价值</strong> 是实现个体自我完善发展的保障。 人生价值评价的根本尺度是一个人的人生活动是否符合 <strong>社会发展的规律</strong> ，是否通过 <strong>实践</strong> 促进了 <strong>历史的进步</strong> 。 人生价值评价的基本尺度是一个人是否通过 <strong>劳动</strong> 和 <strong>聪明才智</strong> 对 <strong>社会</strong> 和 <strong>他人</strong> 做贡献。 人生价值的评价方法包括： A. 坚持 <strong>能力有大小</strong> 与 <strong>贡献需尽力</strong> 相统一 B. 坚持 <strong>物质贡献</strong> 与 <strong>精神贡献</strong> 相统一 A. 坚持 <strong>完善自身</strong> 与 <strong>贡献社会</strong> 相统一 <strong>社会实践</strong> 是人生价值真正的源头活水，是实现人生价值的必由之路。</p></blockquote><h2 id="天带背-day33">30天带背 · Day33</h2><p>（2）幸福奋斗观 ________ 是奋斗出来的，奋斗本身就是一种 ________ 。 只有奋斗的人生才称得上幸福的人生。只有在为 ________ 作贡献、为 ________ 服务的过程，我们才能获得幸福所需要的 ________ 和 ________ ，产生更大的幸福，实现 ________ 与 ________ 的相互促进。</p><p>（3）个人理想与社会理想 个人理想与社会理想的关系实质上是 ________ 的反映。 ________ 的实现必须以 ________ 的实现为前提和基础。 ________ 是理想体系中最根本、最重要的。 ________ 从属于 ________ ， ________ 的实现依赖于 ________ 的实现。 ________ 规定、指引着 ________ 。</p><p>（4）理想信念 ________ 是人的精神世界的核心，是人类特有的精神现象，是人精神上的“钙”。 理想信念是人生发展的 ________ ，昭示人生的 ________ 。提供人生的 ________ ，是衡量精神境界高下的 ________ 。</p><p>（5）理想与现实 理想中包含着现实，在一定条件下，理想可以转化为 ________ 。 ________ 是在 ________ 的基础上发展起来的。</p><blockquote><p><strong>answers：</strong> （2）幸福奋斗观 <strong>幸福</strong> 是奋斗出来的，奋斗本身就是一种 <strong>幸福</strong> 。 只有奋斗的人生才称得上幸福的人生。只有在为 <strong>社会</strong> 作贡献、为 <strong>他人</strong> 服务的过程，我们才能获得幸福所需要的 <strong>环境</strong> 和 <strong>条件</strong> ，产生更大的幸福，实现 <strong>个人幸福</strong> 与 <strong>社会进步</strong> 的相互促进。 （3）个人理想与社会理想 个人理想与社会理想的关系实质上是 <strong>个人与社会的关系在理想层面</strong> 的反映。 <strong>个人理想</strong> 的实现必须以 <strong>社会理想</strong> 的实现为前提和基础。 <strong>社会理想</strong> 是理想体系中最根本、最重要的。 <strong>个人理想</strong> 从属于 <strong>社会理想</strong> ， <strong>个人理想</strong> 的实现依赖于 <strong>社会理想</strong> 的实现。 <strong>社会理想</strong> 规定、指引着 <strong>个人理想</strong> 。 （4）理想信念 <strong>理想信念</strong> 是人的精神世界的核心，是人类特有的精神现象，是人精神上的“钙”。 理想信念是人生发展的 <strong>内在动力</strong> ，昭示人生的 <strong>奋斗目标</strong> 。提供人生的 <strong>前行动力</strong> ，是衡量精神境界高下的 <strong>重要标尺</strong> 。 （5）理想与现实 理想中包含着现实，在一定条件下，理想可以转化为 <strong>未来的现实</strong> 。 <strong>理想</strong> 是在 <strong>现实</strong> 的基础上发展起来的。</p></blockquote><h1 id="keywords-整理">keywords 整理</h1><h2 id="关于-第一开端起点-的总结">关于 “第一/开端/起点” 的总结</h2><ol type="1"><li>近代中国睁眼看世界第一人是 <strong>林则徐</strong></li><li>近代中国第一个比较系统的发展资本主义的方案是 <strong>《资政新篇》</strong></li><li>最早对洋务事业的指导思想做出比较完整的表述的是 <strong>冯桂芬</strong></li><li>中国近代化的开端是 <strong>洋务运动</strong></li><li>中国近代史的开端是 <strong>鸦片战争</strong></li><li>中国近代教育的开始是 <strong>洋务运动</strong> （京师同文馆）</li><li>近代高等教育的起点是 <strong>维新变法</strong> （京师大学堂）</li><li>中国民族资产阶级登上政治舞台的第一次表演是 <strong>戊戌维新</strong></li><li>孙中山到檀香山组建的第一个革命团体是 <strong>兴中会</strong></li><li>近代中国第一个领导资产阶级革命的全国性政党是 <strong>同盟会</strong></li><li>同盟会成立后发动的第一次武装起义是 <strong>萍浏醴起义</strong></li><li>中国历史上第一部具有资产阶级共和国宪法性质的法典是 <strong>《中华民国临时约法》</strong></li><li>共产主义小组领导的第一个工会是 <strong>上海机器工会</strong></li><li>第一次提出了反帝反封建的民主革命纲领是 <strong>中共二大</strong></li><li>中国第一个工人运动的高潮是在 <strong>1922年1月香港海员罢工到1923年2月京汉铁路工人罢工</strong></li><li>掀起了全国范围的大革命高潮是 <strong>五卅运动</strong></li><li>中国抗日战争的起点是 <strong>九一八事变</strong></li><li>整风运动中第一个重要的问题是 <strong>学风问题</strong></li><li>第一次提出了新民主主义革命的科学概念和总路线的内容是 <strong>《中国革命和中国共产党》</strong></li><li>第一生产力 — <strong>科学技术</strong>，推动人类社会发展的第一动力 — <strong>创新</strong></li><li>道德起源的第一个历史前提是 <strong>劳动</strong></li><li>党探索中国社会主义建设道路的良好开端是 <strong>《论十大关系》</strong></li><li>第一次正确阐述十月革命的性质的著作是 <strong>《法俄革命之比较观》</strong></li><li>第一次公开打出 “工农革命军” 的旗帜是 <strong>秋收起义</strong></li><li>新时代党的建设中摆在首位的是 <strong>政治建设</strong></li><li>人与自然相处时应秉持的首要态度是 <strong>尊重自然</strong></li><li>社会主义法律的基本属性、社会主义法治的基本要求是 <strong>平等</strong></li><li>人类社会赖以存在和发展的基础和一切活动的首要前提是 <strong>物质生产活动及生产方式</strong></li><li>人类最基本的关系 <strong>物质生产实践</strong></li><li>劳动力成为商品要具备的两个基本条件（四选二）<ol type="1"><li><strong>劳动者是自由人</strong>，能够把自己的劳动力当作自己的商品来支配</li><li><strong>劳动者没有别的商品可以出卖</strong>，自由的一无所获</li></ol></li><li>经济危机的基本特征是 <strong>生产相对过剩</strong></li></ol><h2 id="关于-核心焦点中心-的总结">关于 “核心/焦点/中心” 的总结</h2><ol type="1"><li>整风运动最重要的任务：<strong>反对主观主义</strong></li><li>整风运动的重点：<strong>教条主义</strong></li><li>抗日战争取得完全胜利的重要标志：<strong>台湾以及澎湖列岛由中国收回</strong></li><li>党的思想路线的实质和核心：<strong>实事求是</strong></li><li>中国革命的中心问题、新民主主义革命理论的核心问题：<strong>无产阶级领导权</strong></li><li>中国特色社会主义的本质要求和重要保障：<strong>全面依法治国</strong></li><li>中国特色社会主义的本质要求和重要保障：<strong>共享</strong></li><li>集体主义的最高层次：<strong>无私奉献</strong>、<strong>一心为公</strong></li><li>政治上层建筑的核心：<strong>国家政权</strong></li><li>社会再生产的核心问题：<strong>社会总产品的实现问题</strong></li><li>社会主义民主政治的本质和核心：<strong>人民当家做主</strong></li><li>民族精神的核心：<strong>爱国主义</strong></li><li>时代精神的核心：<strong>改革创新</strong></li><li>生态文明的核心：<strong>坚持人与自然和谐共处</strong></li><li>合作共赢的新型国际关系的核心：<strong>维护联合国宪章的宗旨和原则</strong></li><li>中国特色社会主义最本质的特征：<strong>党的领导</strong>（中特最本质特征、中特最大优势、所有的根本保证）</li><li>人生观的核心：<strong>人生目的</strong></li><li>全面提升实体经济的重点：<strong>加快发展新进制造业</strong></li><li>党最大的政治优势是：<strong>密切联系群众</strong></li><li>党最鲜明的品格：<strong>勇于自我革命</strong>，从严管党治党</li><li>辛亥革命的失败原因从根本上说是 <strong>在帝国主义时代，在半殖民地半封建的中国，资本主义的建国方案是行不通的</strong></li><li>从根本上摧毁中国封建制度根基的社会大变革是 <strong>土地制度改革</strong></li><li>中国革命取得胜利的根本保证是 <strong>党的领导</strong></li><li>社会发展的最根本的决定因素是 <strong>生产力</strong></li><li>社会主义的根本任务是 <strong>发展生产力</strong></li><li>国家富强、民族振兴的根本出发点和落脚点是 <strong>人民幸福</strong></li><li>社会主义法治最根本的保证是 <strong>党的领导</strong></li><li>个人与社会的关系中最根本的是 <strong>个人利益与社会利益的关系</strong></li><li>中华传统美德的根本要求是 <strong>"公义胜私欲"</strong></li><li>物质的根本属性是 <strong>运动</strong></li><li>物质的唯一特性是 <strong>客观实在性</strong></li><li>人类认识世界和改造世界的根本目标是 <strong>认识必然，争取自由</strong></li><li>社会发展的根本动力是 <strong>社会基本矛盾运动</strong></li><li>资本主义经济危机爆发的根本原因是 <strong>资本主义的基本矛盾</strong></li><li>党的根本工作路线是 <strong>群众路线</strong></li><li>党区别于其他一切政党的根本标志是 <strong>全心全意为人民服务</strong></li><li>党领导和建立统一战线最根本的经验是 <strong>正确处理好与资产阶级的关系</strong></li><li>实现国家繁荣富强的根本出路是 <strong>全面开放</strong></li><li>一国经济的立身之本、财富创造的根本源泉、国家强盛的重要支柱、现代化经济体系的坚实基础是 <strong>实体经济</strong></li><li>真题的绝对性与相对性根源于 <strong>人的认识能力、思维能力的矛盾本性</strong> ，是人的思维的 <strong>至上性</strong> 和 <strong>非至上性</strong> 或人的认识能力的 <strong>无限性</strong> 和 <strong>优先性</strong> 的矛盾</li><li>资本主义社会失业现象产生的根源在于 <strong>资本积累</strong></li><li>中国共产党内反复出现 “左” 、右倾错误的思想认识根源是 <strong>主观主义</strong></li><li>东欧剧变、苏联解体，最根本的原因是放弃了 <strong>社会主义道路</strong> 、 <strong>无产阶级专政</strong> 、 <strong>共产党的领导地位</strong> 、 <strong>马克思列宁主义</strong> ，把社会主义建设和党的建设中的失误归咎于 <strong>领袖个人</strong></li></ol><h2 id="关于-反侵略斗争-总结">关于 “反侵略斗争” 总结</h2><ol type="1"><li>中国近代史上中国人第一次大规模的反侵略武装斗争是 <strong>广州三元里人民抗英斗争</strong></li><li>在粉碎帝国主义列强瓜分中国的斗争中发挥了重大的历史作用是 <strong>义和团运动</strong></li><li>同盟会发动的影响最大的起义是 <strong>广州起义（黄花岗起义）</strong></li><li>成为时局转换的枢纽，十年内战的局面由此结束，国内和平基本实现：<strong>西安事变的和平解决</strong></li></ol><h2 id="关于-方针-原则-总结">关于 “方针” 、 “原则” 总结</h2><ol type="1"><li>抗日民族统一战线的策略总方针是发展 <strong>进步势力</strong> 、争取 <strong>中间势力</strong> 、 孤立 <strong>顽固势力</strong></li><li>新中国成立期间，毛泽东提出的三大外交方针是 <strong>“另起炉灶”</strong> 、 <strong>“打扫干净屋子再请客”</strong>、<strong>“一边倒”</strong></li><li>对农业改造的方针是 <strong>积极领导、稳步前进</strong></li><li>对农业改造的原则是 <strong>共商共建共享</strong></li><li>社会主义道德建设的原则是 <strong>集体主义</strong></li><li>我国宪法的基本原则包括：<strong>党的领导</strong> 、 <strong>人民主权</strong> 、 <strong>尊重和保障人权</strong> 、 <strong>社会主义法治</strong> 、 <strong>民主集中制</strong></li><li>仲裁的原则包括 <strong>自愿</strong> 、 <strong>仲裁独立</strong> 、 <strong>一裁终局</strong></li><li>现代法治的原则是 <strong>法律权利</strong> 与 <strong>法律义务</strong> 平等</li></ol><h2 id="易混淆词">易混淆词</h2><ol type="1"><li>中特的根本任务 <strong>解放和发展生产力</strong></li><li>中特的基本目标 <strong>实现共同富裕</strong></li><li>中特的本质要求 <strong>共享</strong></li><li>中特的必由之路 <strong>改革开放</strong></li><li>中特的本质特征 <strong>党的领导</strong></li><li>中特制度最大优势 <strong>党的领导</strong></li><li>中特的根本目的 <strong>人民群众</strong></li><li>富有中国特色、符合中国国情的改革方式是 <strong>加强定策设计</strong> 和 <strong>摸着石头过河</strong> 相结合</li><li>新时代的生态文明建设要把 <strong>节约资源</strong> 放在首位</li><li>在环保工作中要把 <strong>预防为主、源头治理</strong> 放在首位</li><li>在生态系统保护和修复中要把 <strong>利用自然力修复生态系统</strong> 放在首位</li><li>“四个伟大” 中起决定性作用的是 <strong>党的建设伟大工程</strong></li><li>社会治理的重心要向 <strong>基层</strong> 下移，落到 <strong>城乡社区</strong></li><li>中国梦的本质是 <strong>国家富强 、民族振兴、人民幸福</strong></li><li>中国梦是 <strong>中华民族团结奋斗</strong> 的最大公约数</li><li>党最鲜明的品格是 <strong>勇于自我革命、从严管党治党</strong></li><li>构建新发展格局最本质特征是 <strong>实现高水平的自立自强</strong></li><li>构建新发展格局关键 <strong>经济循环畅通无阻</strong></li><li>构建新发展格局起主导作用的是 <strong>国内大循环</strong></li><li>构建新发展格局战略基点 <strong>扩大内需</strong></li><li>控制国民经济命脉，对经济发展起主导作用 <strong>国有经济</strong></li><li>两岸关系的政治基础是 <strong>九二共识（一个中国）</strong></li><li>两岸关系最大障碍和最大威胁是 <strong>“台独”</strong></li><li>中华民族的“根”和“魂” 是 <strong>中华民族传统文化</strong></li><li>一国两制提出首先是为了 <strong>实现和维护国家统一</strong></li><li>国家哎的生命线、人民的幸福线是 <strong>党的基本路线</strong></li><li>当代中国爱国主义的本质是 <strong>坚持爱国和爱党、爱社会主义高度统一</strong></li><li>实现社会主义初级阶段奋斗目标的根本立足点是 <strong>自力更生，艰苦创业</strong></li><li>中国梦的最大特点是把 <strong>国家、民族</strong> 和 <strong>个人</strong> 作为一个命运共同体</li><li><strong>创新驱动发展战略</strong> 是强化现代化经济体系的战略支撑</li><li><strong>乡村振兴战略</strong> 是夯实现代化经济体系的重要基础，是新时代“三农”工作总抓手</li><li>在政治协商制度中，<strong>中国共产党的领导</strong> 是多党合作的首要前提和根本保证，<strong>多党合作</strong> 是核心内容</li></ol>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研政治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【专题】公共英语二_大作文</title>
      <link href="/graduate_exam/English/BC/"/>
      <url>/graduate_exam/English/BC/</url>
      
        <content type="html"><![CDATA[<p>参考书目：<span class="citation" data-cites="扇贝考研训练营">[@扇贝考研训练营]</span>()</p><h1 id="我的作文模板">我的作文模板</h1><p><strong>开头段：</strong></p><p>点明描述对象</p><p>The chart / graph / table illustratues ...</p><p>交代数据细节</p><p>A(n) + 形容词(dramatic) + 趋势名词(rise) + was seen in + 描述对象 (house prices in China.)</p><p>进行数据比较</p><p>...., while / whereas ....</p><p><strong>主体段：</strong></p><p>There are two / three / several resasons to explain this phenomenon.</p><p>First and foremost, .... Another possible / primary cause is (that) .... Most important of all, ...</p><p><strong>结尾段：</strong></p><p>As what is mentioned above, it is concluded that ....</p><p>It is expected that + 描述对象 + will</p><p>It is suggested / imperative that ...</p><h1 id="preface">Preface：</h1><p>在我看来，一篇英语作文的高与低，好与坏，不在于你对题目的角度有多新颖，思想有多好；而在于你对于一个观点的表述能力，这是他区别于语文作文 的不同之处。因此，华丽的词藻、复杂的句式，是英语作文得以获得高分的一大原因。</p><p>因此，不管写什么，几种倒装结构和强调句结构直接往上堆，分一般不会低。</p><p>想要写出一篇高分英语作文，最快捷的途径就是模仿（<code>imitate</code>）。</p><p>不过模仿的方式，不是直接背诵高分作文（我不否认这样做或许会有点效果），而是去背诵行文思路，和背诵好词好句。</p><p>说的简单一点，就是找到一篇高分英语作文，先 <strong>中译英</strong>，再 <strong>英译中</strong></p><p><strong>中译英</strong> 学习 <strong>写什么</strong>；<strong>英译中</strong> 学习 <strong>怎么写</strong></p><p><strong>关于英二大作文</strong></p><p>英一大作文多是 <strong>图画类作文</strong>，英二大作文多是 <strong>图表类作文</strong></p><p>因此本篇主要讲述关于如何写 <strong>图表类作文</strong></p><p><span class="math inline">\(GLHF\)</span></p><h1 id="解读图表">解读图表</h1><h2 id="明确对象">明确对象</h2><p>即这是一个什么类型的图表，以及图表描述的是一个什么数据</p><p>常见 <strong>图表类型</strong> 总结：</p><ol type="1"><li><p>折线图<code>line graph</code></p></li><li><p>柱状图<code>bar/column chart</code></p></li><li><p>饼状图<code>pie chart</code></p></li><li><p>表格<code>table</code></p></li></ol><h2 id="明确时间">明确时间</h2><p>图表中包含的时间，决定了我们描述图表时的 <strong>时态</strong></p><p>一般 <strong>有时间信息</strong> 的图表，多是过去的时间，故描述时用 <strong>一般过去时</strong></p><p>而对 <strong>没有时间信息</strong> 的图表，描述时就 <strong>默认</strong> 用 <strong>一般现在时</strong></p><h2 id="挑选数据">挑选数据</h2><p>这个不用多解释，作文不可能让你把整个图表的方方面面都分析到位</p><p>我们只需抓住重点进行描述，即 <strong>最大值</strong>、<strong>最小值</strong>、<strong>起点</strong>、<strong>终点</strong></p><h1 id="开头段">开头段</h1><h2 id="开头段的框架">开头段的框架</h2><ol type="1"><li><strong>点名描述对象</strong> 用一句话对整个图表所反应的内容进行概括（可以通过改写标题来实现）</li><li><strong>交代数据细节</strong> <strong>挑选数据</strong> 时提到的 <strong>重点信息</strong>，对他们进行额外的描述</li></ol><h2 id="基础表达">基础表达</h2><h3 id="数字以及时间">数字以及时间</h3><p><strong>（1）目测数据</strong></p><p><code>roughly / appoximately</code> +  数字（大约）</p><p><code>just over / just under</code> + 基准数值（比 ··· 略高/略低）</p><p><strong>（2）一段时间 t1 ~ t2</strong></p><p><code>from t1 to t2</code></p><p><code>between t1 and t2</code></p><p><code>during the entire period</code> (在整个时期)</p><p><code>throughout the period</code> (在整个时期)</p><p><code>during the same period</code> (在同一时期)</p><h3 id="变化趋势类词汇">变化趋势类词汇</h3><p><strong>（1）上升下降</strong></p><ol type="1"><li>上升：<code>rise</code>,<code>increase</code>,<code>grow</code></li><li>下降：<code>fall</code>,<code>decrease</code>,<code>drop</code>,<code>decline</code></li></ol><blockquote><p>表示上升下降时，都是不及物动词，不能做被动语态</p></blockquote><p><strong>（2）保持不变</strong></p><p><code>stay / remain unchanged</code>；(<code>unchanged -&gt; stable / steady / constant</code>)</p><p><code>stay / remain at the same level</code>；</p><p><code>maintain the same level</code>；</p><h3 id="变化速率类词汇">变化速率类词汇</h3><p><strong>（1）较大幅度的变化</strong></p><p>大的：<code>significant, substantial, considerable (considerably)</code></p><p>急剧的：<code>steep, sharp, drastic (drastically), dramatic (dramatically)</code></p><p>明显的：<code>notable (notably), noticeable (noticeably), markde, remarkable</code></p><p><strong>（2）中等幅度的变化</strong></p><p>逐渐的：<code>gradual</code></p><p>持续的：<code>steady</code></p><p>适度的：<code>moderate</code></p><p><strong>（3）较小幅度的变化</strong></p><p><code>slight, minimal, marginal</code></p><h3 id="词性搭配变化趋势-变化速率">词性搭配：变化趋势 + 变化速率</h3><p><strong>【v. + adv.】</strong></p><p><code>grow sharply; rise steadily; drop slightly</code></p><p><strong>【adj. + n.】</strong></p><p><code>sharp growth; steady rise; slight drop</code></p><h3 id="常用句型">常用句型</h3><p><strong>描述数据趋势</strong></p><p><code>描述对象 + v. + adv.</code> <code>描述对象 + saw a(n) + adj. + n.</code></p><p>【例】中国房价在 2010 至 2018 年期间飞速上升。 【译】 <code>Between 2010 and 2018, house prices in China rose dramatically.</code> 【译】 <code>From 2010 to 2018, house prices in China saw a dramatic rise.</code></p><p><code>There was a(n) + adj. + n. + in + 描述对象</code> <code>时间 / 地点 + saw a(n) + adj. + n. + in + 描述对象</code> <code>A(n) + adj. + n. + was seen in + 描述对象</code></p><p>【例】中国房价在 2010 至 2018 年期间飞速上升。 【译】 <code>There's a dramatic rise in house prices in China from 2010 to 2018.</code> 【译】 <code>The 2010-2018 period saw a dramatic rise in house prices in China.</code> 【译】 <code>China saw a dramatic rise in house prices from 2010 to 2018.</code> 【译】 <code>A dramatic rise was seen in house prices in China from 2010 to 2018.</code></p><p><strong>描述具体数据</strong></p><p><strong>上升/下降 </strong>到** N：<code>v. / n. + to N</code>**</p><p>【例】留学生人数上升到了 100 万。 【译】<code>The number of students studying abroad increased to 1 million.</code> 【译】<code>There was an increase to 1 million in the number of students studying abroad.</code></p><p><strong>上升/下降 </strong>了** N：<code>v. + by N</code> 或 <code>n. + of N</code>**</p><p>【例】留学生人数上升了 100 万。 【译】<code>The number of students studying abroad increased by 1 million.</code> 【译】<code>There was an increase of 1 million in the number of students studying abroad.</code></p><p><strong>保持在 / 处于 N：<code>stay / remain / stand + at N</code></strong></p><p>【例】留学生人数稳定在 100 万上下。 【译】<code>The number of students studying abroad stayed/remained/stood at 1 million.</code></p><h3 id="进行数据比较">进行数据比较</h3><p>一句话内：<code>A, while / whereas B.</code></p><p>两句话间：<code>A. By / In contrast, B.</code></p><p>【例】美国的失业率上升，中国的失业率下降。 【译】<code>The rate of unemployment in the US rose, while/whereas the jobless rate in Chinal fell.</code> 【译】<code>The rate of unemployment in the US rose. By/In contrast, the jobless rate in Chinal fell.</code></p><blockquote><p>图表类作文第一段非常的 <strong>套路</strong>，这几种固定的表达也不用死记硬背，一开始写的时候可以照着上面抄，抄着抄着慢慢的就一定会写了。</p></blockquote><h1 id="主体段">主体段</h1><h2 id="写作框架">写作框架</h2><ol type="1"><li><strong>总起句</strong></li><li><strong>分论点</strong><ol type="1"><li><strong>原因一（必写）</strong></li><li><strong>原因二（必写）</strong></li><li><strong>原因三（可选）</strong></li></ol></li></ol><p>一般按照 <strong>先总后分</strong> 的顺序来写。</p><p>首先，通过一句 <strong>总起句</strong>，告之读者该 <strong>主体段</strong> 的写作目的：<strong>分析原因</strong>。</p><p>进而提出若干的 <strong>分论点</strong>，列举可能的原因并加以论述。</p><p>在分析具体原因的时候，可以围绕人的需求写。</p><ol type="1"><li>物质需求 (人对基本生活用品及自身安全保障的需求)</li><li>精神需求 (主要包括情感归属、社交娱乐及自我实现三个方面)</li></ol><p>具体可以参照 <strong>马斯洛需求层次理论</strong> 来分析（真是自高中以来都考他看问题）。</p><p>也可以从一些客观角度来看，如社会、经济、科技、政府等因素。</p><h2 id="功能句型">功能句型</h2><h3 id="总起句">总起句</h3><p><code>The contributors to this phenomenon are twofold / threefold / as follows.</code> 造成这一现象的原因有两个 / 三个 / 如下。</p><p><code>Two / Three / Some possible factors may cause this phenomenon.</code> 两个 / 三个 / 某些因素可能造成了这一现象。</p><p><code>There are two / three / several reasons to explain this phenomenon.</code> 有两个 / 三个 / 几个原因可以解释这一现象</p><h3 id="分论点的衔接">分论点的衔接</h3><p><code>The first and foremost reason is (that) ...</code> 首要的原因是 ···</p><p><code>One possible reason is (that) ...</code> 一个可能的原因是 ···</p><p><code>One of the main / major reasons is (that) ...</code> 主要的原因可能是 ···</p><p><code>Another possible / primary cause is (that) ...</code> 另一个可能 / 主要的原因是 ···</p><p><code>The most important contributor is (that) ...</code> 最重要的原因是 ···</p><blockquote><p>主题段的模板就这么点，且剩下要读者补充的部分，才是一篇英语作文的核心部分</p><p>虽然那部分没有固定模板，但可以通过我在开头说过的 <strong>中英中</strong> 方法进行学习锻炼</p></blockquote><h1 id="结尾段">结尾段</h1><h2 id="写作框架-1">写作框架</h2><p>结尾段核心就是 <strong>归纳总结</strong></p><ol type="1"><li>总结前文内容</li><li>预测未来趋势</li><li>提出建议措施</li></ol><p>往往后两点任选其一即可</p><p>总结前文比较简单，一般就是 <strong>重申原因</strong> 或者 <strong>改写论点</strong></p><p>预测未来趋势则需要分情况：</p><ol type="1"><li><p>图表反应的是 <strong>正面、积极</strong> 现象，那么预测 <strong>数据结果仍会持续</strong></p></li><li><p>图表反应的是 <strong>负面、消极</strong> 现象，那么预测 <strong>数据可能会发生一定的变化</strong></p></li></ol><p>提出措施建议也分情况：</p><ol type="1"><li><p>图表反应的是 <strong>正面、积极</strong> 现象，那么应该想办法加以 <strong>鼓励和倡导</strong></p></li><li><p>图表反应的是 <strong>负面、消极</strong> 现象，那么应该想办法予以 <strong>改进和完善</strong></p></li></ol><blockquote><p>真题中暂时没考到过负面的</p></blockquote><p>具体建议和措施，可以用 <strong>扇贝经典 5W1H</strong> 分析法来思考</p><ol type="1"><li>Who 谁来解决 — 有赖谁的参与 / 需要依靠谁的力量</li><li>How 怎么去解决 — 总体措施 + 具体做法</li><li>Why 为何能解决 — 措施起到的作用 / 做法带来的效果</li></ol><p>一般常见措施： 1. 个人 — 严于律己 2. 政府 — 政策立法 3. 企业 — 赚钱行善 4. 学校 / 家庭 — 教育引导 5. 媒体 — 推广宣传</p><h2 id="功能句型-1">功能句型</h2><h3 id="总结前文">总结前文</h3><p><code>As what is mentioned above, we can safely say that ...</code> 正如上文中提到的，我们可以有把握地说 ···</p><p><code>All in all, it is clear / not difficult to see (that) ...</code> 总而言之，可以清楚地看出 / 不难看出 ···</p><h3 id="预测未来趋势">预测未来趋势</h3><p><code>sth. + be expected to ...</code></p><p><code>It is expected that + sth. + will ...</code></p><h3 id="提出措施建议">提出措施建议</h3><p><code>What sb. should do is to do sth.</code> 某人应该做的事情是 ···</p><p><code>sb. can / could do sth. by doing sth.</code> 某人通过做某事能 ···</p><p><code>It is suggested / imperative that ...</code> 建议某人 ··· / 当务之急是 ···</p><h2 id="常用表达">常用表达</h2><p><strong>个人—严于律己</strong></p><p><code>build into good habits</code> 养成良好的行为习惯</p><p><code>conform to the code of ethics</code> 遵守社会道德规范</p><p><code>set up correct world view, values and outlook on life</code> 树立正确的 "三观"</p><p><code>continuously pursue self-fulfillment</code> 不断追求自我实现</p><p><strong>政府—政策立法</strong></p><p><code>formulate and implement policies</code> 制定贯彻落实政策</p><p><code>incentive measures</code> 奖励措施</p><p><code>financail support</code> 资金支持；<code>fiscal subsides</code> 财政补贴</p><p><code>reduce and exempt taxes</code> 减免税收</p><p><code>punitive measures</code> 处罚措施</p><p><code>impose fines on sb.</code> 罚款</p><p><code>levy taxes on sb.</code> 征税</p><p><code>give sb. a sentence</code> 判刑</p><p><strong>企业—赚钱行善</strong></p><p><code>invest more in research and development (R&amp;D)</code> 加大研发投入</p><p><code>satisfy the needs of consumers</code> 满足消费者需求</p><p><code>create jobs positions</code> 创造就业岗位</p><p><code>offer employment opportunities</code> 提供就业机会</p><p><code>help the government tackle problems</code> 帮助政府排忧解难</p><p><code>optimize the salary system</code> 优化薪酬体系</p><p><code>reinforce job security</code> 加强职业安全感</p><p><strong>学校 / 家庭—教育引导</strong></p><p><code>set up lectures / courses</code> 开设讲座</p><p><code>organize on-campus and off-campus activities</code> 组织校内外活动</p><p><code>class meeting with a special theme</code> 主题班会</p><p><code>knowledge contest</code> 知识竞赛；<code>socail practice</code> 社会实践</p><p><code>seve as a role model</code> 以身作则</p><p><code>instruct and influence sb. by one's words and deeds</code> 言传身教</p><p><code>set an example for sb. to follow</code> 树立榜样</p><p><strong>媒体—推广宣传</strong></p><p><code>shoot and produce public service advertisements</code> 创作拍摄公益广告</p><p><code>draw / attract wide public attention ; raise widespread public concern</code> 引起公众的广泛关注</p><p><code>deepen one's understanding of / about</code> 加深对 ··· 的认识</p><p><code>raise / strengthen one's awareness of</code> 提高对 ··· 的认识</p><h1 id="writing_partb">2011_Writing_PartB</h1><h2 id="中文思路">中文思路</h2><p>开头段：</p><ol type="1"><li>这张柱状图比较了 2008 和 2009 年三类汽车品牌在国内市场中的占比情况。</li><li>国产品牌的市场份额大幅上升了约 7%，而日系品牌的市场份额则从略低于 35% 显著下降到了 25% 略高一点，降幅近 10%。</li><li>美系品牌的这一数字几乎保持不变，这两年均维持在 13% 上下。</li></ol><p>主体段：</p><ol type="1"><li>国产汽车品牌卓越的市场表现可以归结为下列因素。</li><li>首先，相比于国外汽车的高价格，国产汽车的价格相对可以承受，对普通的中国消费者而言更有吸引力。</li><li>另外一个重要的原因是，中国的汽车制造商通过加大创新和研发投入，已经缩小了与外国竞争者之间的技术差距。</li><li>这打破了国产汽车质量不如外国汽车的传统偏见，并赢得了国内消费者越来越多的认可。</li></ol><p>结尾段：</p><ol type="1"><li>预计在未来一段时间内，国产汽车品牌仍将维持良好的发展势头。</li><li>建议政府出台优惠政策并为国内汽车生产商提供财政支持，以提升其产品的核心竞争力。</li></ol><h2 id="英文范文">英文范文</h2><p>开头段：</p><p>(点名描述对象)</p><ol type="1"><li><strong>The bar chart compares</strong> the percentage of three car brands in the domestic market between 2008 nad 2009.</li></ol><p>(交代数据细节)</p><ol start="2" type="1"><li><strong>There was a steep rise of</strong> approximately 7% <strong>in</strong> the market share of native-owned brands, <strong>while</strong> that of Japanese brands <strong>declined noticeably</strong> by nearly 10%, <strong>from just under 35% to just over 25%</strong>.</li></ol><p>(交代数据细节)</p><ol start="3" type="1"><li>The figure for American brands <strong>remained almost constant</strong>, at around 13% in both years.</li></ol><p>主体段：</p><p>(总起句)</p><ol type="1"><li><p><strong>There are two reasons to explain the extraordinary market performance</strong> of native-owned car brands.</p></li><li><p><strong>First and foremost</strong>, the affordable price of domestically made cars is more appealing to average consumers in China when compared with the high price of foreign cars.</p></li><li><p><strong>Another primary cause is that</strong> Chinese auto manufactures have managed to narrow the technology gap with their foreign competitors by increasing investment in innovation and research and developemnt.</p></li><li><p>This has broken the traditional stereotype that homemade cars are inferior in quality to their foreign counterparts, and has won growing recognition from domestic consumers.</p></li></ol><p>结尾段：</p><p>(预测未来趋势)</p><ol type="1"><li><strong>It is expected that</strong> native-owned car brands will <strong>maintain a sound momentum of development for some time in the future</strong>.</li></ol><p>(提出建议措施)</p><ol start="2" type="1"><li><strong>What the government should do is to</strong> <strong>introduce preferential policies</strong> and <strong>provide financial support to</strong> domestic auto producers to boost the core competitiveness of their products.</li></ol><h1 id="writing_partb-1">2017_Writing_PartB</h1><h2 id="中文思路-1">中文思路</h2><p>开头段：</p><ol type="1"><li><p>这张折线图比较了中国博物馆的数量及其参观人数在 2013 至 2015 年之间的变化。</p></li><li><p>2013 年中国有 4165 家博物馆，这一数字上升到了 2015 年的 4697 家。</p></li><li><p>同一时期，参观博物馆的人数也显著增加，从不足 6.4 亿人升至超过 7.8 亿人。</p></li></ol><p>主体段：</p><ol type="1"><li><p>这一现象是由以下因素造成的。</p></li><li><p>首先，博物馆是一个展示并保存成堆文物和古董的地方。</p></li><li><p>参观者可以通过亲眼目睹这些物件更好地了解当地的历史、文化、传统、风俗还有生活方式。</p></li><li><p>另一个主要原因是中国政府近些年来一直高度重视文化设施的建设，以丰富人们的精神生活。</p></li><li><p>在这种背景之下，许多新的博物馆在全国各地的城市落成也就不足为奇了。</p></li></ol><p>结尾段：</p><ol type="1"><li><p>综上所述，博物馆及其参观者的数字预计将持续增加。</p></li><li><p>建议各级政府加大对当地博物馆的资金投入，确保其向公众免费开放。</p></li></ol><h2 id="英文范文-1">英文范文</h2><p>开头段：</p><ol type="1"><li><p><strong>The line graph compares the changes in the number of</strong> China's museums and their visitors between 2013 and 2015.</p></li><li><p>There were 4,165 museums in China in 2013 and this figure rose to 4,697 in 2015.</p></li><li><p><strong>The same period also saw a notable growth in the number of</strong> people who visited museums, up from just under 640 million to just over 780 million.</p></li></ol><p>主体段：</p><ol type="1"><li><p><strong>This phenomenon is caused by the following factors.</strong></p></li><li><p><strong>First and foremost,</strong> a museum is a place where a collection of old relics and antique things are exhibited and conserved.</p></li><li><p>Visitors can gain a better understanding of the local history, culture, traditions, customs as well as ways of life by seeing first-hand these objects.</p></li><li><p><strong>Another primary reason is that</strong> the Chinese government has been attaching great importance to the construction of cultural facilities in recent years to enrich peoples's spiritual life.</p></li><li><p>Against this background, it is no wonder that many new museums have been built in cities across the country.</p></li></ol><p>结尾段：</p><ol type="1"><li><p><strong>As what is mentioned above,</strong> the figures for museums and their visitors are expected to continue growing.</p></li><li><p><strong>It is suggested that</strong> governments at all levels increase funding for local museums to ensure that they are free and open to the public.</p></li></ol><h1 id="writing_partb-2">2013_Writing_PartB</h1><h2 id="中文思路-2">中文思路</h2><p>开头段：</p><ol type="1"><li><p>这张柱状图显示了某高校学生参加兼职工作的比例。</p></li><li><p>接近 68% 的大一新生做兼职，大二和大三学生的这一数字小幅升至 72% 不到一点。</p></li><li><p>兼职者的比例在大四毕业生中最高，略多于 88%。</p></li></ol><p>主体段 4. 有两个主要原因可以解释这一现象。</p><ol start="5" type="1"><li><p>首先，就业竞争正变得越来越激烈。</p></li><li><p>通过兼职工作，大学生能够获得一些未来职场所需的动手技能和实践经验</p></li><li><p>这将有助于他们在如今竞争激烈的就业市场中脱颖而出。</p></li><li><p>另一个关键因素是兼职工作为大学生提供了一个额挣钱的途径，这可以减轻他们家庭的经济负担，尤其是那些农村家庭。</p></li></ol><p>结尾段</p><ol type="1"><li><p>综上所述,大学期间从事兼职工作的学生比例在可预见的未来估计仍将会上升。</p></li><li><p>他们应该做的就是努力平衡好学业与打工之间的关系。</p></li></ol><h2 id="英文范文-2">英文范文</h2><p>开头段：</p><ol type="1"><li><p><strong>The bar chart illustrates the percentage of</strong> students at a certain university who take part-time jobs.</p></li><li><p>Nearly 68% of freshmen work part-time and this figure rises slightly to just under 72% for those in their second and third year of college.</p></li><li><p>The proportion of part-timers is highest among graduating students, at just over 88%.</p></li></ol><p>主体段：</p><ol type="1"><li><p><strong>There are two major reasons to explain this phenomenon.</strong></p></li><li><p><strong>First and foremost,</strong> the competition for jobs is becoming increasingly intense.</p></li><li><p>By doing part-time work, undergraduates are able to gain some hands-on skills and practical experience required for the future workplace.</p></li><li><p>This would help them stand out in today's highly competitive job market.</p></li><li><p><strong>Another key contributor is that</strong>　working on a part-time basis serves as a way for undergraduates to earn extra money, which could ease the financial burden on their families, especially those in rural areas.</p></li></ol><p>结尾段：</p><ol type="1"><li><p><strong>As what is mentioned above,</strong> the proportion of students engaging in part-time jobs during college is expected to increase in the foreseeable future.</p></li><li><p><strong>What they should do is to</strong> spare no effort to strike a balance between academic study and part-time work.</p></li></ol><h1 id="writing_partb-3">2014_Writing_PartB</h1><h2 id="中文思路-3">中文思路</h2><p>开头段：</p><ol type="1"><li><p>这张柱状图比较了 20 年间中国城乡人口的变化。</p></li><li><p>城镇人口从 1990 年的 3 亿人大幅上升到了 2010 年的 6.8 亿人左右，乡村人口则在同一时期从大约 8.2 亿人逐步下降 到了不足 7 亿人。</p></li></ol><p>主体段：</p><ol start="3" type="1"><li><p>导致中国城市化的主要原因如下。</p></li><li><p>首先，生活在城市既舒适又方便。</p></li><li><p>我这么说的意思是，城市居民往往享有更好的住房条件、更优质的医疗保健服务、更丰富的教育资源。</p></li><li><p>这满足了他们内心追求更高生活质量的渴望。</p></li><li><p>此外，高铁技术的最新进展促使越来越多的农村人来到城市寻找工作并定居在那里。</p></li></ol><p>结尾段：</p><ol start="8" type="1"><li><p>总之，结论是城市生活的巨大便利和铁路运输系统的快速发展导致了中国城市化进程的加快。</p></li><li><p>预计这一趋势在未来数年内将会继续。</p></li></ol><h2 id="英文范文-3">英文范文</h2><p>开头段：</p><ol type="1"><li><p>The column chart compares the changes in China's population in urban and rural areas over a 20 year period.</p></li><li><p>While its urban population saw a dramatic rise from 300 million in 1990 to roughly 680 milion in 2010, its rural population fell steadily from approximately 820 million to just under 700 million during the same period.</p></li></ol><p>主体段：</p><ol type="1"><li><p>The main causes of urbanization in China are as follows.</p></li><li><p>To begin with, it is comfortable and convenient to live in cities.</p></li><li><p>By this I mean that urban residents tend to enjoy better housing conditions, superior healthcare services and richer educational resources.</p></li><li><p>This satisfies their inner desire to pursue a higher quality of life.</p></li><li><p>In addition, recent advances in high speed rail technology have prompted an increasing number of people in the countryside to come to cities to look for jobs and then settle down there.</p></li></ol><p>结尾段：</p><ol type="1"><li><p>As mentioned above, it is concluded that the great convenience of city life and the rapid development of railway transport systems have contributed to the acceleration of China' s urbanization process.</p></li><li><p>It is expected that this trend will continue in the years ahead.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第356 - 367题</title>
      <link href="/graduate_exam/Math/0x164-0x16F/"/>
      <url>/graduate_exam/Math/0x164-0x16F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目356">题目356</h1><p>已知 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{e^xf(x)+\sin x}{x^2} = 1\)</span>，求 <span class="math inline">\(\lim\limits_{x\to 0} \dfrac{f(x) + \sin x}{x^2}\)</span></p><h2 id="解答">解答</h2><p>像这种已知极限，反求抽象函数，最好的方法是 <strong>等式脱帽法</strong>，其次是 <strong>泰勒展开</strong> 配凑</p><p>由 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{e^xf(x)+\sin x}{x^2} = 1 \quad\Rightarrow\quad \dfrac{e^xf(x)+\sin x}{x^2} = 1 + \alpha \quad\)</span> 其中 <span class="math inline">\(\lim\limits_{x\to0} \alpha = 0\)</span></p><p><span class="math display">\[e^xf(x)+\sin x = x^2 + o(x^2) \quad \Rightarrow \quad f(x) = \dfrac{x^2 - \sin x + o(x^2)}{e^x}\]</span></p><p>代入所求极限：</p><p><span class="math display">\[\lim\limits_{x\to 0} \dfrac{f(x) + \sin x}{x^2} = \lim\limits_{x\to 0} \dfrac{x^2 - \sin x + e^x\sin x}{e^xx^2}\]</span></p><p>对于没有 <strong>抽象函数</strong> 在的极限，我们的手段就很多了，这里既可以 <strong>拆项</strong> 做，也可以 <strong>洛必达</strong></p><p><span class="math display">\[\lim\limits_{x\to 0} \dfrac{x^2 - \sin x + e^x\sin x}{x^2} =\lim\limits_{x\to 0} \dfrac{x^2}{x^2} + \lim\limits_{x\to 0} \dfrac{\sin x(e^x - 1)}{x^2} = 2\]</span></p><h1 id="题目357">题目357</h1><p><span class="math display">\[\lim_{x\to0^+} \bigg( \dfrac{x}{(e^x-1)\cos\sqrt{x}} \bigg)^{\dfrac{1}{(1+\sin x^2)^{\frac{1}{x}}-1}}\]</span></p><h2 id="解答-1">解答</h2><p>幂指函数求极限，先取指对数，然后单独处理指数部分</p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0^+} \dfrac{\ln(\dfrac{x}{(e^x-1)\cos\sqrt{x}})}{(1+\sin x^2)^{\frac{1}{x}}-1}\\\\=&amp;\lim_{x\to0^+} \dfrac{x - (e^x-1)\cos\sqrt{x}}{[(e^x-1)\cos\sqrt{x}](1+\sin x^2)^{\frac{1}{x}}-1}\\\\=&amp;\lim_{x\to0^+} \dfrac{x - (e^x-1)\cos\sqrt{x}}{x^2}\end{aligned}\]</span></p><p>分子是加减法，且在加号处直接拆开精度不够，可以考虑 <strong>加减交叉项</strong>，或考虑 <strong>泰勒展开</strong></p><p><span class="math display">\[(e^x - 1) \cdot \cos\sqrt{x} = [x + \dfrac{1}{2}x^2 + o(x^2)][1 - \dfrac{1}{2}x + \dfrac{1}{24}x^2 + o(x^2)] = x - \dfrac{1}{2}x^2+ \dfrac{1}{2}x^2 + o(x^2)\]</span></p><p>故极限 $ = _{x0^+}  = 0$</p><p>原极限 $ = e^0 = 1$</p><h1 id="题目358">题目358</h1><p>设 <span class="math inline">\(f(x)\)</span> 连续，且 <span class="math inline">\(f(0) \ne 0\)</span>，则 <span class="math inline">\(\lim\limits_{x\to 0} [1 + \displaystyle\int_0^x(x - t)f(t) dt]^{\dfrac{1}{x\int_0^xf(x - t)dt}}\)</span></p><h2 id="解答-2">解答</h2><p>幂指函数先取指对数，然后单独处理指数部分</p><p>变上限积分函数求极限，考虑求导去积分符号</p><p>而被积函数中如果含有积分上限变量，优先考虑分离</p><p><span class="math inline">\(\displaystyle\int_0^x(x - t)f(t) dt = x\displaystyle\int_0^xf(t) dt - \displaystyle\int_0^xtf(t) dt\)</span></p><p><span class="math inline">\(\displaystyle x\int_0^xf(x - t)dt \xlongequal{\text{令}x-t=u}\displaystyle x\int_0^x f(u)du\)</span></p><p><span class="math display">\[\begin{aligned}&amp;\lim\limits_{x\to 0} \dfrac{x\displaystyle\int_0^xf(t) dt - \displaystyle\int_0^xtf(t) dt}{x\displaystyle\int_0^xf(u)du}    \\\\\xlongequal{L&#39;} &amp;\lim_{x\to 0} \dfrac{\displaystyle\int_0^xf(t) dt + xf(x) - xf(x)}{\displaystyle\int_0^xf(u)du + xf(x)}\\\\= &amp;\lim_{x\to 0} \dfrac{\displaystyle\int_0^xf(t) dt}{\displaystyle\int_0^xf(t)dt + xf(x)}\\\\= &amp;\lim_{x\to 0} \dfrac{xf(\xi)}{xf(\xi) + xf(x)}\\\\= &amp;\lim_{x\to 0} \dfrac{f(\xi)}{f(\xi) + f(x)}\\\\= &amp;\lim_{x\to 0} \dfrac{f(0)}{f(0) + f(0)}\\\\=&amp; \dfrac{1}{2}\end{aligned}\]</span></p><blockquote><p>倒数第四步用了 <strong>积分中值定理</strong>，然后又由于 <span class="math inline">\(f(x)\)</span> 连续，且 <span class="math inline">\(f(0) \ne 0\)</span> 故直接带入</p></blockquote><p>故原极限 = <span class="math inline">\(e^{\frac{1}{2}}\)</span></p><h1 id="题目359">题目359</h1><p><span class="math display">\[\lim_{x\to0}\dfrac{\displaystyle\int_0^{2x}|t - x|\sin t dt}{|x|^3}\]</span></p><h2 id="解答-3">解答</h2><p>遇到绝对值，先考虑去绝对值，这里直接分类讨论即可</p><p><span class="math display">\[\begin{aligned}\lim_{x\to0^+}\dfrac{\displaystyle\int_0^{2x}|t - x|\sin t dt}{|x|^3} &amp;= \lim_{x\to0^+}\dfrac{\displaystyle\int_0^{2x}|t - x|t dt}{|x|^3}\\\\&amp;= \lim_{x\to0^+}\dfrac{\displaystyle\int_0^{x}(xt - t^2) dt + \int_x^{2x}(t^2 - xt) dt}{x^3}\end{aligned}\]</span></p><p>写到这一步，就不用考虑用洛必达去积分符号了，可以考虑直接把积分解出来</p><p><span class="math display">\[\lim_{x\to0^+}\dfrac{(\dfrac{1}{2}xt^2 - \dfrac{1}{3}t^3)\bigg|_0^x + (\dfrac{1}{3}t^3 - \dfrac{1}{2}xt)\bigg|_x^{2x}}{x^3} = 1\]</span></p><p>然后不难发现，分母从头到尾都没动过，故其实是不用分类讨论的，可以直接得出：</p><p><span class="math display">\[\lim_{x\to0}\dfrac{\displaystyle\int_0^{2x}|t - x|\sin t dt}{|x|^3} = 1\]</span></p><h1 id="题目360">题目360</h1><p><span class="math display">\[\lim_{x\to0}\dfrac{e^{(1+x)^{\frac{1}{x}}} - (1 + x)^{\frac{e}{x}}}{x^2}\]</span></p><h2 id="解答-4">解答</h2><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0}\dfrac{e^{(1+x)^{\frac{1}{x}}} - (1 + x)^{\frac{e}{x}}}{x^2}\\\\=&amp;\lim_{x\to0}\dfrac{e^{(1+x)^{\frac{1}{x}}} - e^{\frac{e\ln(1 + x)}{x}}}{x^2}\\\\=&amp;e^e \cdot \lim_{x\to0}\dfrac{e^{e^{\frac{\ln(1 + x)}{x}} - \frac{e\ln(1 + x)}{x}} - 1}{x^2}\\\\=&amp;e^{e + 1} \cdot \lim_{x\to0}\dfrac{e^{\frac{\ln(1 + x) - x}{x}} - \frac{\ln(1 + x)}{x}}{x^2}\\\\=&amp;e^{e + 1} \cdot \lim_{x\to0}\dfrac{e^{\frac{\ln(1 + x) - x}{x}} - 1 - \frac{\ln(1 + x) - x}{x}}{x^2}\\\\\end{aligned}\]</span></p><p><span class="math display">\[e^{\frac{\ln(1 + x) - x}{x}} - 1 \sim \frac{\ln(1 + x) - x}{x} \sim  -\dfrac{1}{2}x\]</span></p><p><span class="math display">\[e^x - 1 - x \sim \frac{1}{2} x^2\]</span></p><p><span class="math display">\[e^{\frac{\ln(1 + x) - x}{x}} - 1 - \frac{\ln(1 + x) - x}{x} \sim \frac{1}{2} \cdot \frac{1}{4} \cdot x^2 = \dfrac{1}{8}x^2\]</span></p><p>故原式 $ = e^{e + 1} _{x0} = e^{e + 1}$</p><h1 id="题目361">题目361</h1><p><span class="math display">\[\lim_{n\to\infty}\sum_{k=1}^n(1-\dfrac{k}{n})\ln(1+\dfrac{k}{n^2})\]</span></p><h2 id="解答-5">解答</h2><p>无限项的合式极限，考研范围内只需要掌握的两种方法：</p><ol type="1"><li>放缩夹逼</li><li>定积分定义</li></ol><p>本题形式很像是 <strong>定积分定义</strong>，但是怎么都凑不出想要的形式</p><p>这时又看见了 <span class="math inline">\(\ln(1 + x)\)</span> 的因式，故想到一个常见不等式 <span class="math inline">\(\dfrac{x}{x+1}&lt;\ln(1 + x) &lt; x\)</span></p><p><span class="math display">\[\begin{aligned}\frac{\dfrac{k}{n^2}}{\dfrac{k}{n^2} + 1} \lt &amp;\ln(1+\dfrac{k}{n^2}) \lt \dfrac{k}{n^2}\\\\\frac{k}{n^2 + k} \lt &amp;\ln(1+\dfrac{k}{n^2}) \lt \dfrac{k}{n^2}\\\\(1 - \dfrac{k}{n}) \cdot \frac{k}{n^2 + k} &lt; &amp;(1-\dfrac{k}{n})\ln(1+\dfrac{k}{n^2}) &lt; (1 - \dfrac{k}{n}) \cdot \dfrac{k}{n^2}\\\\\dfrac{k}{n^2 + k} - \dfrac{k^2}{n^3 + nk} &lt; &amp;(1-\dfrac{k}{n})\ln(1+\dfrac{k}{n^2}) &lt; \dfrac{k}{n^2} - \dfrac{k^2}{n^3}\end{aligned}\]</span></p><p>右侧可以用定积分定义，左边放缩分母继续夹逼</p><p>右侧：</p><p><span class="math display">\[\lim_{n\to\infty}\sum_{k=1}^n(\dfrac{k}{n^2} - \dfrac{k^2}{n^3}) = \lim_{n\to\infty}\frac{1}{n}\sum_{k=1}^n (\dfrac{k}{n} - \dfrac{k^2}{n^2}) = \int_0^1 (x - x^2)dx =  \dfrac{1}{6}\]</span></p><p>左侧：</p><p><span class="math display">\[\begin{aligned}\frac{k}{n^2 + n} &lt; &amp;\frac{k}{n^2 + k} &lt; \frac{k}{n^2}\\\\\sum_{k=1}^n\frac{k}{n^2 + n} &lt; &amp;\sum_{k=1}^n\frac{k}{n^2 + k} &lt; \sum_{k=1}^n\frac{k}{n^2}\\\\\frac{\dfrac{n(n+1)}{2}}{n^2 + n} &lt; &amp;\sum_{k=1}^n\frac{k}{n^2 + k} &lt; \frac{\dfrac{n(n+1)}{2}}{n^2}\\\\\dfrac{1}{2} &lt; &amp;\lim_{n\to\infty}\sum_{k=1}^n\frac{k}{n^2 + k} &lt; \dfrac{1}{2}\\\\\end{aligned}\]</span></p><p>同理：</p><p><span class="math display">\[\begin{aligned}\dfrac{k^2}{n^3 + n^2} &lt; &amp;\dfrac{k^2}{n^3 + nk} &lt; \dfrac{k^2}{n^3}\\\\\sum_{k=1}^n\dfrac{k^2}{n^3 + n^2} &lt; &amp;\sum_{k=1}^n\dfrac{k^2}{n^3 + nk} &lt; \sum_{k=1}^n\dfrac{k^2}{n^3}\\\\\dfrac{\dfrac{n(n+1)(2n+1)}{6}}{n^3 + n^2} &lt; &amp;\sum_{k=1}^n\dfrac{k^2}{n^3 + nk}  &lt; \dfrac{\dfrac{n(n+1)(2n+1)}{6}}{n^3}\\\\\dfrac{1}{3} &lt; &amp;\lim_{n\to\infty}\sum_{k=1}^n\dfrac{k^2}{n^3 + nk}  &lt; \dfrac{1}{3}\\\\\end{aligned}\]</span></p><p>故：<span class="math inline">\(\lim\limits_{n\to\infty}(\dfrac{k}{n^2 + k} - \dfrac{k^2}{n^3 + nk}) = \dfrac{1}{6}\)</span></p><p>于是有：</p><p><span class="math display">\[\dfrac{1}{6} &lt; \lim\limits_{n\to\infty}(1-\dfrac{k}{n})\ln(1+\dfrac{k}{n^2}) &lt; \dfrac{1}{6}\]</span></p><p>由夹逼准则可得：<span class="math inline">\(\lim\limits_{n\to\infty}(1-\dfrac{k}{n})\ln(1+\dfrac{k}{n^2}) = \dfrac{1}{6}\)</span></p><h1 id="题目362">题目362</h1><p><span class="math display">\[\lim_{n\to\infty}[\dfrac{n}{n^2 + n + \ln 1} + \dfrac{n}{n^2 + n + \ln 2} + \cdots + \dfrac{n}{n^2 + n + \ln n}]^n\]</span></p><h2 id="解答-6">解答</h2><p>幂指函数化成指对数，单独处理指数部分：</p><p><span class="math display">\[A = \lim_{n\to\infty} n\ln [\dfrac{n}{n^2 + n + \ln 1} + \dfrac{n}{n^2 + n + \ln 2} + \cdots + \dfrac{n}{n^2 + n + \ln n}]\]</span></p><p>无穷项合式极限，考虑放缩：</p><p><span class="math display">\[\begin{aligned}\sum_{k=1}^n \dfrac{n}{n^2 + n + \ln n} \le &amp;\sum_{k=1}^n \dfrac{n}{n^2 + n + \ln k} \le\sum_{k=1}^n \dfrac{n}{n^2 + n}\\\\\dfrac{n^2}{n^2 + n + \ln n} \le &amp;\sum_{k=1}^n \dfrac{n}{n^2 + n + \ln k} \le\dfrac{n^2}{n^2 + n}\\\\\end{aligned}\]</span></p><p>求出左侧极限：</p><p><span class="math display">\[\lim_{n\to\infty} n\ln \dfrac{n^2}{n^2 + n + \ln n}  = \lim_{n\to\infty} \dfrac{- n^2 - n\ln n}{n^2 + n + \ln n}  =  -1\]</span></p><p>求出右侧极限：</p><p><span class="math display">\[\lim_{n\to\infty} n\ln \dfrac{n^2}{n^2 + n}  = \lim_{n\to\infty} \dfrac{- n^2}{n^2 + n} = -1\]</span></p><p>由夹逼准则可得：</p><p><span class="math display">\[\lim_{n\to\infty} \sum_{k=1}^n \dfrac{n}{n^2 + n + \ln k} = -1\]</span></p><p>故原极限：</p><p><span class="math display">\[\lim_{n\to\infty}[\dfrac{n}{n^2 + n + \ln 1} + \dfrac{n}{n^2 + n + \ln 2} + \cdots + \dfrac{n}{n^2 + n + \ln n}]^n = e^{-1}\]</span></p><h1 id="题目363">题目363</h1><p><span class="math display">\[\lim_{n\to\infty} [\sum_{k=1}^n \dfrac{1}{\sqrt{n^2 + k^2}}]^n\]</span></p><h2 id="解答-7">解答</h2><p>幂指函数化成指对数，单独处理指数部分：</p><p><span class="math display">\[A = \lim_{n\to\infty} n \ln \sum_{k=1}^n \dfrac{1}{\sqrt{n^2 + k^2}}\]</span></p><p>单独观察对数部分，由于 <span class="math inline">\(k\)</span> 与 <span class="math inline">\(n\)</span> 是同一个数量级的 <span class="math inline">\(o(n^2)\)</span>，故考虑定积分定义</p><p><span class="math display">\[\lim_{n\to\infty}\sum_{k=1}^n \dfrac{1}{\sqrt{n^2 + k^2}} = \lim_{n\to\infty} \dfrac{1}{n} \sum_{k=1}^n \dfrac{1}{\sqrt{1 + \dfrac{k^2}{n^2}}} = \int_0^1 \dfrac{1}{\sqrt{x^2 + 1}}dx = \ln(1+\sqrt{2})\]</span></p><p>由于该结果是非零因式，直接代入指数的极限中：</p><p><span class="math display">\[A = \lim_{n\to\infty} n \ln \sum_{k=1}^n \dfrac{1}{\sqrt{n^2 + k^2}} = \ln\ln(1+\sqrt{2}) \cdot \lim_{n\to\infty} n\]</span></p><p>由于 <span class="math inline">\(1 &lt; 1 + \sqrt{2} &lt; e\)</span>，故 <span class="math inline">\(\ln(1 + \sqrt{2}) &lt; 1\)</span>，因此 <span class="math inline">\(\ln\ln(1+\sqrt{2}) &lt; 0\)</span></p><p>由此可知：<span class="math inline">\(A = - \infty\)</span></p><p>故原极限为：<span class="math inline">\(e^A = 0\)</span></p><h1 id="题目364">题目364</h1><p>下列结论中正确的是</p><p>（A）若 <span class="math inline">\(\lim\limits_{n\to\infty}x_n = 0\)</span>，且 <span class="math inline">\(\lim\limits_{n\to\infty} f(x_n) = A\)</span>，则 <span class="math inline">\(\lim\limits_{x\to0}f(x) = A\)</span></p><p>（B）若 <span class="math inline">\(\lim\limits_{n\to\infty}x_n = 0\)</span>，且 <span class="math inline">\(\lim\limits_{x\to0} f(x) = A\)</span>，则 <span class="math inline">\(\lim\limits_{n\to\infty} f(x_n) = A\)</span></p><p>（C）若 <span class="math inline">\(\lim\limits_{n\to\infty}f(n) = A\)</span>，则 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = A\)</span></p><p>（D）若 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = A\)</span>，则 <span class="math inline">\(\lim\limits_{n\to\infty}f(n) = A\)</span></p><h2 id="解答-8">解答</h2><p><strong>（A）选项</strong></p><p>显然不对，我们直接构造分段函数 <span class="math inline">\(f(x) = \begin{cases} A &amp; x\in x_n \\\\ 1 &amp; x\not\in x_n \end{cases}\)</span></p><p>则 <span class="math inline">\(\lim\limits_{n\to\infty} = f(x_n) = A\)</span>，且 <span class="math inline">\(\lim\limits_{x\to0}f(x) \not \exists\)</span></p><p><strong>（B）选项</strong></p><p>错误，<span class="math inline">\(\lim\limits_{x\to0} f(x) = A\)</span> 说的是去心邻域情况，故我们可以挖空 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x = 0\)</span> 处的定义</p><p>然后令 <span class="math inline">\(x_n \equiv 0\)</span>，则 <span class="math inline">\(f(x_n) = f(0)\)</span> 显然无意义</p><blockquote><p>如果这题限制 <span class="math inline">\(f(x)\)</span> 必须在 <span class="math inline">\(x=0\)</span> 邻域内有定义，则可以让 <span class="math inline">\(x=0\)</span> 为可去间断点</p></blockquote><p><strong>（C）选项</strong></p><p>显然不对，构造分段函数 <span class="math inline">\(f(x) = \begin{cases} A &amp; x \in \mathbf{N} \\\\ x &amp; x\not\in \mathbf{N} \end{cases}\)</span></p><p><strong>（D）选项</strong></p><p>显然正确，海涅准则：收敛函数 <span class="math inline">\(\Leftrightarrow\)</span> 任意子列都收敛</p><h1 id="题目365">题目365</h1><p>设数列 {<span class="math inline">\(x_n\)</span>}，已知 <span class="math inline">\(\lim\limits_{n\to\infty}(x_{n+1} - x_n) = 0\)</span>，则下列结论正确的是（ ）</p><p>（A）{<span class="math inline">\(x_n\)</span>} 必收敛；</p><p>（B）若 {<span class="math inline">\(x_n\)</span>} 单调，则 {<span class="math inline">\(x_n\)</span>} 必收敛；</p><p>（C）若 {<span class="math inline">\(x_n\)</span>} 有界，则 {<span class="math inline">\(x_n\)</span>} 必收敛；</p><p>（D）若 {<span class="math inline">\(x_{3n}\)</span>} 收敛，则 {<span class="math inline">\(x_n\)</span>} 必收敛；</p><h2 id="解答-9">解答</h2><p><strong>（A）选项</strong></p><p>显然错，<span class="math inline">\(\lim\limits_{n\to\infty}(x_{n+1} - x_n) = 0\)</span>，可能是 "<span class="math inline">\(\infty - \infty\)</span>" 型</p><p>例如：<span class="math inline">\(x_n = \sqrt{n}\)</span>，<span class="math inline">\(\lim\limits_{n\to\infty}(x_{n+1} - x_n) = \lim\limits_{n\to\infty} \sqrt{n + 1} - \sqrt{n} = \lim\limits_{n\to\infty} \dfrac{1}{\sqrt{n + 1} + \sqrt{n}} = 0\)</span></p><p><strong>（B）选项</strong></p><p>显然错，反例：<span class="math inline">\(x_n = \sqrt{n}\)</span></p><p><strong>（C）选项</strong></p><p>错误，反例：<span class="math inline">\(\sin\sqrt{n}\)</span></p><p><span class="math inline">\(\lim\limits_{n\to\infty}(x_{n+1} - x_n) \rightarrow \lim\limits_{x\to+\infty}(\sin\sqrt{x + 1} - \sin\sqrt{x}) = -\lim\limits_{x\to+\infty}\cos\sqrt{\xi} \cdot \dfrac{1}{2\sqrt{\xi}} = 0\)</span></p><p><strong>（D）选项</strong></p><p>正确，<span class="math inline">\(\lim\limits_{n\to\infty}x_{3n} \xlongequal[\text{令}]{\text{存在}} A\)</span>，则 <span class="math inline">\(\lim\limits_{n\to\infty}(x_{3n+1} - x_{3n}) = \lim\limits_{n\to\infty}x_{3n+1} - \lim\limits_{n\to\infty}x_{3n} = 0\)</span> <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(\lim\limits_{n\to\infty}x_{3n+1} = A\)</span></p><p>同理 <span class="math inline">\(\lim\limits_{n\to\infty}x_{3n+2} = A\)</span>，则所有子列都收敛到同一个值 <span class="math inline">\(\Rightarrow\)</span> 原数列也收敛该值</p><h1 id="题目366">题目366</h1><p>设 <span class="math inline">\(f(x)\)</span> 有连续一阶导数，且 <span class="math inline">\(0 &lt; f&#39;(x) \le \dfrac{\ln(2 + x^2)}{2(1+x^2)}\)</span></p><p>数列 <span class="math inline">\(x_0 = a, x_n = f(x_{n-1}), n = 1, 2, \cdots\)</span>.</p><p>证明：极限 <span class="math inline">\(\lim\limits_{n\to\infty} x_n\)</span> 存在且是方程 <span class="math inline">\(f(x) = x\)</span> 的唯一实根.</p><h2 id="解答逆用牛顿莱布尼茨公式">解答（逆用牛顿莱布尼茨公式）</h2><p>由于 <span class="math inline">\(f&#39;(x) &gt; 0\)</span>，则数列 {<span class="math inline">\(x_n\)</span>} 单调，又</p><p><span class="math display">\[\begin{aligned}|x_n| &amp;= |f(x_{n-1})| = |f(x_0) + f(x_{n-1}) - f(x_0)| = |f(x_0) + \displaystyle\int_{x_0}^{x_{n-1}}f&#39;(x)dx|\\\\&amp; \le|f(x_0)| + |\displaystyle\int_{x_0}^{x_{n-1}}f&#39;(x)dx|\le|f(x_0)| + |\displaystyle\int_{x_0}^{x_{n-1}}\dfrac{\ln(2 + x^2)}{2(1+x^2)}dx|\\\\&amp; \le |f(x_0)| + |\displaystyle\int_{-\infty}^{+\infty}\dfrac{\ln(2 + x^2)}{2(1+x^2)}dx|\end{aligned}\]</span></p><p>易知 <span class="math inline">\(\displaystyle\int_{-\infty}^{+\infty}\dfrac{\ln(2 + x^2)}{2(1+x^2)}dx\)</span> 收敛（比较在广义瑕点的阶）</p><p>由单调有界准则：{<span class="math inline">\(x_n\)</span>} 收敛，故 <span class="math inline">\(\lim\limits_{n\to\infty} x_n\)</span> 存在</p><p>令 <span class="math inline">\(\lim\limits_{n\to\infty} x_n = A\)</span>，则有 <span class="math inline">\(A = f(A)\)</span>，故 <span class="math inline">\(x = A\)</span> 是 <span class="math inline">\(f(x) = x\)</span> 的一个解</p><p>于是 <span class="math inline">\(f(x) = x\)</span> 至少有一个解，现证明至多有一个解</p><p>令 <span class="math inline">\(F(x) = f(x) - x\)</span>，则 <span class="math inline">\(0 &lt; F&#39;(x) = f&#39;(x) - 1 \le \dfrac{\ln(2 + x^2)}{2(1+x^2)} &lt; 1\)</span>，故 <span class="math inline">\(F(x)\)</span> 单调递增</p><p>所以 <span class="math inline">\(F(x)\)</span> 至多有一解，综上 <span class="math inline">\(x = A\)</span> 为 <span class="math inline">\(f(x) = x\)</span> 的唯一解</p><h1 id="题目367">题目367</h1><p>设 <span class="math inline">\(p(x) = a + bx + cx^2 + dx^3\)</span>，且当 <span class="math inline">\(x\to 0\)</span> 时，</p><p><span class="math inline">\(p(x) - \ln(x + \sqrt{1 + x^2})\)</span> 是比 <span class="math inline">\(x^3\)</span> 高阶的无穷小，则（ ）</p><p>（A）<span class="math inline">\(a = 1\)</span> （B）<span class="math inline">\(b = 2\)</span> （C）<span class="math inline">\(c = 3\)</span> （D）<span class="math inline">\(d = -\frac{1}{6}\)</span></p><h2 id="解答-10">解答</h2><blockquote><p>常用展开：<span class="math inline">\(\ln(x+\sqrt{1+x^2}) = x - \dfrac{1}{6}x^3 + o(x^3)\)</span></p></blockquote><p>正常做，直接用抽象泰勒展开即可</p><p>但是这题是选择题，应该用选择题的技巧</p><p>首先 <span class="math inline">\(\ln(x + \sqrt{1 + x^2})\)</span> 是奇函数，故 <span class="math inline">\(c = 0\)</span></p><p>又 <span class="math inline">\(\ln(x + \sqrt{1 + x^2}) \sim x\)</span> ，故 <span class="math inline">\(a = 0, b = 1\)</span></p><p><strong>A、B、C 全部划掉，这题选 （D）</strong></p><h1 id="加餐题目367">加餐题目367</h1><p>设 <span class="math inline">\(f(x) = x + a\ln(a + x) + \dfrac{bx\sin x}{1+x^2}, g(x) = kx^3\)</span></p><p>若 <span class="math inline">\(f(x)\)</span> 与 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x\to 0\)</span> 时是等价无穷小，求参数.</p><h2 id="解答-11">解答</h2><p>泰勒展开：</p><p><span class="math display">\[a\ln(1 + x) = ax - \dfrac{a}{2}x^2 + \dfrac{a}{3}x^3 + o(x^3)\]</span></p><p><span class="math display">\[\dfrac{1}{1 + x^2} = 1 - x^2 + x^4 + o(x^4)\]</span></p><p><span class="math display">\[x\sin x = x^2 - \dfrac{1}{6}x^4 + o(x^4)\]</span></p><p><span class="math display">\[\dfrac{bx\sin x}{1+x^2} = bx^2 + o(x^3)\]</span></p><p><span class="math display">\[f(x) = x + ax - \dfrac{a}{2}x^2 + \dfrac{a}{3}x^3+ bx^2 + o(x^3) = (1 + a)x + (b - \dfrac{a}{2})x^2 + \dfrac{a}{3}x^3 + o(x^3)\]</span></p><p>故 <span class="math inline">\(a = -1, b = -\dfrac{1}{2}, k = -\dfrac{1}{3}\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导航栏</title>
      <link href="/index/"/>
      <url>/index/</url>
      
        <content type="html"><![CDATA[<h1 id="博客分类整理">博客分类整理</h1><h2 id="算法竞赛相关">算法竞赛相关</h2><p>我把以前写的差不多都删光了，打算重新写</p><ol type="1"><li>《算法竞赛进阶指南》笔记整理（编写中）<ol type="1"><li>0x00 基础算法<ol type="1"><li><a href="/Algorithm/lydguid/z0x01_位运算/">0x01 位运算</a></li><li><a href="/Algorithm/lydguid/z0x02_递推与递归/">0x02 递推与递归</a></li><li><a href="/Algorithm/lydguid/z0x03_前缀和与差分/">0x03 前缀和与差分</a></li><li><a href="/Algorithm/lydguid/z0x04_二分/">0x04 二分</a></li><li><a href="/Algorithm/lydguid/z0x05_排序/">0x05 排序</a></li><li><a href="/Algorithm/lydguid/z0x06_倍增/">0x06 倍增</a></li><li><a href="/Algorithm/lydguid/z0x07_贪心/">0x07 贪心</a></li><li><a href="/Algorithm/lydguid/z0x08_总结与练习/">0x08 总结与练习</a></li></ol></li><li>0x01 基本数据结构<ol type="1"><li><a href="/Algorithm/lydguid/z0x11_栈/">0x11 栈</a></li><li><a href="/Algorithm/lydguid/z0x12_队列/">0x12 队列</a></li><li><a href="/Algorithm/lydguid/z0x13_链表与邻接表/">0x13 链表与邻接表</a></li></ol></li></ol></li><li>算法专题内容（计划中）</li></ol><h2 id="工程项目教程">工程项目教程</h2><ol type="1"><li>AcWing工程系列课<ol type="1"><li><a href="/Engineer/acw_linux/">AcWing Linux 基础课</a></li><li><a href="/Engineer/acw_django/">AcWing Django 框架课</a></li></ol></li></ol><h2 id="研究生入学考试相关">研究生入学考试相关</h2><ol type="1"><li>公共数学<ol type="1"><li>高等数学专题<ol type="1"><li><a href="/graduate_exam/math_special/0x01/">【专题】公共数学_多元函数极值专题</a></li><li><a href="/graduate_exam/math_special/0x02/">【专题】公共数学_中值定理证明题</a></li></ol></li><li><a href="/graduate_exam/Math/analogue">22届模拟卷整理</a></li><li>武忠祥老师每日一题<ol type="1"><li><a href="/graduate_exam/Math/0x0D3-0x0DF/">武忠祥老师每日一题｜第211 - 223题</a></li><li><a href="/graduate_exam/Math/0x0E0-0x0EF/">武忠祥老师每日一题｜第224 - 239题</a></li><li><a href="/graduate_exam/Math/0x0F0-0x0FF/">武忠祥老师每日一题｜第240 - 255题</a></li><li><a href="/graduate_exam/Math/0x100-0x10F/">武忠祥老师每日一题｜第256 - 271题</a></li><li><a href="/graduate_exam/Math/0x110-0x11F/">武忠祥老师每日一题｜第272 - 287题</a></li><li><a href="/graduate_exam/Math/0x120-0x12F/">武忠祥老师每日一题｜第288 - 303题</a></li><li><a href="/graduate_exam/Math/0x130-0x13F/">武忠祥老师每日一题｜第304 - 319题</a></li><li><a href="/graduate_exam/Math/0x140-0x14F/">武忠祥老师每日一题｜第320 - 335题</a></li><li><a href="/graduate_exam/Math/0x150-0x152/">武忠祥老师每日一题｜第336 - 338题</a></li><li><a href="/graduate_exam/Math/0x164-0x16F/">武忠祥老师每日一题｜第356 - 367题</a></li><li><a href="/graduate_exam/Math0x170-0x17C/">武忠祥老师每日一题｜第368 - 380题</a></li></ol></li></ol></li><li>公共英语<ol type="1"><li><a href="/graduate_exam/English/SC/">公共英语二小作文</a></li><li><a href="/graduate_exam/English/BC/">公共英语二大作文</a></li></ol></li><li>考研政治<ol type="1"><li><a href="/graduate_exam/Policy/policy_recite/">22考研政治30天带背计划</a></li><li><a href="/graduate_exam/Policy/22policy/">22考研政治套卷整理</a></li></ol></li><li>其他<ol type="1"><li><a href="/graduate_exam/experience/">22届考研个人感想篇</a></li><li>22届考研个人经验篇（计划中）</li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第336 - 338题</title>
      <link href="/graduate_exam/Math/0x150-0x152/"/>
      <url>/graduate_exam/Math/0x150-0x152/</url>
      
        <content type="html"><![CDATA[<h1 id="题目336">题目336</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 二阶可导，且 <span class="math inline">\(f&#39;(x) = f(1-x),f(0) = 1\)</span>，求 <span class="math inline">\(f(x)\)</span></p><h2 id="解答">解答</h2><p>换元：<span class="math inline">\(f&#39;(1-x) = f(x) \quad \Rightarrow \quad f&#39;(1) = f(0) = 1\)</span></p><p>再求导：<span class="math inline">\(f&#39;&#39;(x) = -f&#39;(1 - x)\)</span></p><p>联立两式：<span class="math inline">\(f&#39;&#39;(x) + f(x) = 0\)</span> 为 <strong>二阶常系数齐次微分方程</strong></p><p>特征根：<span class="math inline">\(\lambda^2 + 1 = 0 \quad\Rightarrow\quad \lambda = 0 \pm i\)</span></p><p>齐次通解：<span class="math inline">\(y = C_1\cos x + C_2 \sin x \quad \Rightarrow \quad y&#39; = C_2\cos x - C_1\sin x\)</span></p><p>代入初值：<span class="math inline">\(y(0) = C_1 = 1\)</span>, <span class="math inline">\(y&#39;(1) = C_2\cos 1 - \sin 1 = 1 \quad \Rightarrow \quad C_2 = \dfrac{1 + \sin 1}{\cos 1}\)</span></p><p>综上所述：<span class="math inline">\(f(x) = \cos x + \dfrac{1 + \sin 1}{\cos 1} \cdot \sin x\)</span></p><h1 id="题目337">题目337</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 可导，且对任意实数 <span class="math inline">\(x,h\)</span> 满足 <span class="math inline">\(f(x+h) = \int_x^{x+h}t[f(t+h)+t^2]dt + f(x)\)</span></p><p><span class="math inline">\(\lim\limits_{x\to0}[1+f(x)]^{\frac{1}{x^4}} = a\)</span> ，求 <span class="math inline">\(f(x)\)</span> 的表达式及常数 <span class="math inline">\(a\)</span></p><h2 id="解答-1">解答</h2><p>求 <span class="math inline">\(f(x)\)</span> 的表达式，考虑微分方程；题目又给了 <span class="math inline">\(f(x+h)\)</span> 的表达式，考虑导数定义来构造方程</p><p><span class="math display">\[f&#39;(x) = \lim_{h\to0}\frac{f(x + h) - f(x)}{h} = \lim_{h\to0}\frac{\int_x^{x+h} t[f(t+h)+t^2]dt }{h} = xf(x)+x^3\]</span></p><p>得到微分方程：<span class="math inline">\(y&#39; - xy = x^3\)</span> 为 <strong>一阶线性微分方程</strong></p><p><span class="math display">\[y = e^{\int xdx} \cdot \Big[ \int x^3 e^{\int-xdx} dx + C_1 \Big] = -e^{\frac{1}{2}x^2} \cdot (x^2 e^{-\frac{1}{2}x^2} + 2e^{-\frac{1}{2}x^2} + C_2) = -x^2 - 2 + Ce^{\frac{1}{2}x^2}\]</span></p><blockquote><p>下面这一步是错的，事实上 <span class="math inline">\(f(x) = -0.5 \Rightarrow a = 0.5^{+\infty} = 0\)</span> 极限也是存在的 这题就是错题，需要额外添加条件 <span class="math inline">\(a &gt; 0\)</span> 且 <span class="math inline">\(a \ne 1\)</span></p></blockquote><p>又 <span class="math inline">\(\lim\limits_{x\to0}[1+f(x)]^{\frac{1}{x^4}} = a\)</span> 存在，故 <span class="math inline">\(f(0) = 0 \quad\Rightarrow\quad C = 2 \quad\Rightarrow\quad y = -x^2 - 2 + 2e^{\frac{1}{2}x^2}\)</span></p><p><span class="math display">\[\begin{aligned}  &amp; \lim_{x\to0}[1+f(x)]^{\frac{1}{x^4}} \\\\= &amp; \lim_{x\to0} (-x^2 - 1 + 2e^{\frac{1}{2}x^2})^{\frac{1}{x^4}} \\\\= &amp; \exp[ \lim_{x\to0}\frac{-x^2-2+2e^{\frac{1}{2}x^2}}{x^4} ] \\\\\= &amp; \exp[ \lim_{x\to0}\frac{\dfrac{1}{4}x^4 + o(x^4)}{x^4} ] \\\\\= &amp; \exp[ \frac{1}{4} ] \\\\\\end{aligned}\]</span></p><p>故 <span class="math inline">\(a = e^\frac{1}{4}\)</span></p><h1 id="题目338">题目338</h1><p>设 <span class="math inline">\(f(x)\)</span> 为 <span class="math inline">\([0,+\infty)\)</span> 上的正值连续函数，已知曲线 <span class="math inline">\(y=\int_0^x f(u)du\)</span> 和 <span class="math inline">\(x\)</span> 轴</p><p>及直线 <span class="math inline">\(x=t(t&gt;0)\)</span> 所围区域绕 <span class="math inline">\(y\)</span> 轴旋转所得体积与曲线 <span class="math inline">\(y=f(x)\)</span> 和两坐</p><p>标轴及直线 <span class="math inline">\(x=t(t&gt;0)\)</span> 所围区域的面积之和为 <span class="math inline">\(t^2\)</span>，求曲线 <span class="math inline">\(y = f(x)\)</span> 方程</p><h2 id="解答-2">解答</h2><p><strong>微分方程的几何应用</strong>，按照题目要求，列出式子，最后建立方程求解即可</p><p><span class="math display">\[V = 2\pi\iint\limits_{D_1}xd\sigma = 2\pi\int_0^tdx\int_0^{\int_0^xf(u)du} xdy = 2\pi\int_0^tx\int_0^xf(u)dudx\]</span></p><p><span class="math display">\[S = \int_0^t f(u)du\]</span></p><p><span class="math display">\[t^2 = V + S \quad\Rightarrow\quad 2\pi\int_0^tx\int_0^xf(u)dudx + \int_0^t f(u)du = t^2\]</span></p><p>该式对两侧求导，然后令变上限积分函数 <span class="math inline">\(g(x) = \int_0^x f(u)du\)</span>，则 <span class="math inline">\(g(0) = 0\)</span></p><p><span class="math display">\[2\pi t\int_0^t f(u)du + f(t) = 2t \quad\Rightarrow\quad y&#39; + 2\pi xy = 2x\]</span></p><p>此为 <strong>变量可分离型</strong> 微分方程：</p><p><span class="math display">\[\frac{dy}{\pi y - 1} = -2xdx \quad\Rightarrow\quad\ln(\pi y - 1) = - \pi x^2 + C_1\quad\Rightarrow\quady = \frac{1}{\pi} (Ce^{-\pi x^2} + 1)\]</span></p><p>代入初值：$y(0) =  (C + 1) = 0 C = -1  y =  (1 - e<sup>{-x</sup>2}) $</p><p>两侧对 <span class="math inline">\(x\)</span> 求导，便可得出最终答案：</p><p><span class="math display">\[f(x) = 2xe^{-\pi x^2}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第320 - 335题</title>
      <link href="/graduate_exam/Math/0x140-0x14F/"/>
      <url>/graduate_exam/Math/0x140-0x14F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目320">题目320</h1><p><span class="math display">\[设 f(x) 有连续一阶偏导数，(xy-yf(x))dx + (f(x) + y^2)dy = du(x,y)\]</span></p><p><span class="math display">\[且 f(0) = -1，求 u(x,y)\]</span></p><h2 id="解答">解答</h2><p>本题考查的是 <strong>多元函数的全微分</strong> ：</p><p><span class="math display">\[dz = \frac{\partial z}{\partial x} dx + \frac{\partial z}{\partial y} dy\]</span></p><p>故：</p><p><span class="math display">\[\frac{\partial u}{\partial x} = xy-yf(x)\qquad\frac{\partial u}{\partial y} = f(x) + y^2\]</span></p><p>求二阶偏导：</p><p><span class="math display">\[\frac{\partial^2 u}{\partial x\partial y} = x - f(x) \qquad\frac{\partial^2 u}{\partial y\partial x} = f&#39;(x)\]</span></p><p>由于一阶偏导数 <strong>连续</strong>，所以 <span class="math inline">\(\dfrac{\partial^2 u}{\partial x\partial y} = \dfrac{\partial^2 u}{\partial y\partial x}\)</span></p><p>故建立 <strong>微分方程</strong>：<span class="math inline">\(x - f(x) = f&#39;(x) \Rightarrow f&#39; + f = x\)</span> 是 <strong>常系数一阶齐次线性微分方程</strong></p><p>由公式可知：</p><p><span class="math display">\[f(x) = e^{-\int 1 dx} \cdot [\int x e ^{\int 1 dx} + C] = x - 1 + Ce^{-x}\]</span></p><p>代入 <strong>初值</strong>：$ -1 = f(0) = -1 + C C = 0 f(x) = x - 1$</p><p>则：<span class="math inline">\(\dfrac{\partial u}{\partial x} = y \Rightarrow u = xy + \varphi(y)\)</span>，<span class="math inline">\(u_y = x + \varphi&#39;(y)= x + y^2 - 1 \Rightarrow \varphi(y) = \dfrac{1}{3} y^3 - y + C\)</span></p><p>故 <span class="math inline">\(u(x,y) = xy + \dfrac{1}{3}y^3 - y + C\)</span>，其中 <span class="math inline">\(C\)</span> 为任意常数</p><h2 id="解答-1">解答</h2><p>已知 <strong>全微分具体形式，求原函数：</strong></p><ol type="1"><li><strong>偏积分（见法一）</strong></li><li><strong>凑微分（见本篇）</strong></li></ol><p>又上题求出 <span class="math inline">\(f(x) = x - 1\)</span> 继续：</p><p><span class="math display">\[\begin{aligned}du&amp;= ydx + (x + y ^2 - 1)dy \\\\du&amp;= ydx + (x-1)dy + d\frac{1}{3}y^3 \\\\du&amp;= yd(x - 1) + (x - 1)dy + d\frac{1}{3}y^3 \quad(这一步凑乘积的求导公式，我只能说妙！)\\\\du&amp;= d(y(x - 1)) + d\frac{1}{3}y^3 \\\\du&amp;= d(xy - y + \frac{1}{3}y^3) \\\\u(x,y)&amp;= xy - y + \frac{1}{3}y^3 + C\end{aligned}\]</span></p><h1 id="题目321">题目321</h1><p><span class="math display">\[设 f_x(x,y) 和 f_y(x,y) 都在点 (x_0,y_0) 处连续，证明 f(x,y) 在点 (x_0,y_0) 可微\]</span></p><h2 id="解答-2">解答</h2><p><strong>书本定理证明：</strong> <span class="math display">\[一阶偏导数连续 \Rightarrow 可微\]</span></p><p><strong>先写出微分定义式，即我们要证明的目标</strong></p><p><span class="math inline">\(微分的定义式：\Delta z = f_x(x_0,y_0)\Delta x + f_y(x_0,y_0)\Delta y + o(\rho)\)</span></p><p><strong>在写出微分的增量式</strong></p><p><span class="math inline">\(\begin{aligned} 微分的全增量： \Delta z &amp;= f(x_0+\Delta x,y_0+\Delta y) - f(x_0,y_0) \\\\  &amp;= f(x_0+\Delta x,y_0+\Delta y) - f(x_0,y_0 + \Delta y) + f(x_0,y_0 + \Delta y) - f(x_0,y_0) \end{aligned}\)</span></p><p>由 <strong>拉格朗日中值定理</strong> 的 <strong>增量式</strong>：<span class="math inline">\(\exist \theta \in (0,1),s.t.\)</span> <span class="math display">\[f(x_0 + \Delta x, y_0 + \Delta y) - f(x_0,y_0 + \Delta y) = f_x(x_0 + \theta\Delta x,y_0 + \Delta y)\Delta x\]</span></p><p>又 <span class="math inline">\(f_x(x,y)\)</span> 在 <span class="math inline">\((x_0,y_0)\)</span> 连续，故 <span class="math inline">\(\lim\limits_{(\Delta x,\Delta y) \to (0,0)} f_x(x_0 + \theta\Delta x,y_0 + \Delta y) = f_x(x_0,y_0)\)</span></p><p><strong>回代可得：</strong> $ f(x_0 + x, y_0 + y) - f(x_0,y_0 + y) = f_x(x_0,y_0)x + _1x$</p><p><strong>同理可证：</strong> $ f(x_0, y_0 + y) - f(x_0,y_0) = f_y(x_0,y_0)y + _2y$</p><p><strong>合并两式：</strong> $ z = f_x(x_0,y_0)x + f_y(x_0,y_0)y + _1x + _2y $</p><p>比较 <strong>定义式</strong> 和 <strong>化简后的增量式</strong>，发现唯一的区别是 <span class="math inline">\(o(\rho)\)</span> 和 <span class="math inline">\(\alpha_1\Delta x + \alpha_2\Delta y\)</span></p><p>要想证明他们 <strong>等价</strong>，考虑 <strong>不等式放缩夹逼：</strong></p><p><span class="math display">\[0\le\frac{|\alpha_1\Delta x + \alpha_2\Delta y|}{\sqrt{(\Delta x)^2 + (\Delta y)^2}}\le\frac{|\alpha_1||\Delta x| + |\alpha_2||\Delta y|}{\sqrt{(\Delta x)^2 + (\Delta y)^2}}\le|\alpha_1| + |\alpha_2|\]</span></p><p>故 <span class="math inline">\(\frac{|\alpha_1\Delta x + \alpha_2\Delta y|}{\sqrt{(\Delta x)^2 + (\Delta y)^2}} \to 0 \Rightarrow \alpha_1\Delta x + \alpha_2\Delta y = o(\rho)\)</span></p><p>故增量式 <span class="math inline">\(\Delta z = f_x(x_0,y_0)\Delta x + f_y(x_0,y_0)\Delta y + o(\rho)\)</span></p><p>满足微分定义式，故可微</p><h1 id="题目322">题目322</h1><p>设函数 <span class="math inline">\(z = z(x,y)\)</span> 由方程 <span class="math inline">\(e^{x+2y+3z} + \dfrac{xyz}{\sqrt{1+x^2+y^2+z^2}} = 1\)</span> 确定，求 <span class="math inline">\(dz\bigg|_{(0,0)}\)</span></p><h2 id="解法一">解法一</h2><p><strong>隐函数求全微分</strong>，有两种常用做法：<strong>隐函数直接求导套公式</strong> <span class="math inline">\(\dfrac{\partial z}{\partial x} = - \dfrac{F_x}{F_z}\)</span>、<strong>求偏导凑</strong></p><p>由于题目直接要求出，故隐函数一般都是存在的，不用根据隐函数存在定理推一遍存在性</p><p><span class="math inline">\(x=0,y=0\)</span> 时，<span class="math inline">\(e^{3z} = 1 \Rightarrow z = 0\)</span></p><p>令：<span class="math inline">\(F(x,y,z) = e^{x+2y+3z} + \dfrac{xyz}{\sqrt{1+x^2+y^2+z^2}} - 1\)</span></p><p><span class="math display">\[F_x = e^{x+2y+3z} + yz \cdot (1+x^2+y^2+z^2)^{\frac{1}{2}} + x^2yz \cdot (1+x^2+y^2+z^2)^{-\frac{3}{2}}\]</span></p><p><span class="math display">\[F_y = 2e^{x+2y+3z} + xz \cdot (1+x^2+y^2+z^2)^{\frac{1}{2}} + xy^2z \cdot (1+x^2+y^2+z^2)^{-\frac{3}{2}}\]</span></p><p><span class="math display">\[F_z = 3e^{x+2y+3z} + xy \cdot (1+x^2+y^2+z^2)^{\frac{1}{2}} + xyz^2 \cdot (1+x^2+y^2+z^2)^{-\frac{3}{2}}\]</span></p><p>则 <span class="math inline">\(\dfrac{\partial z}{\partial x}\bigg|_{(0,0)} = - \dfrac{1}{3}\)</span>，<span class="math inline">\(\dfrac{\partial z}{\partial y}\bigg|_{(0,0)} = - \dfrac{2}{3}\)</span>，故 <strong>全微分</strong> <span class="math inline">\(dz\bigg|_{(0,0)} = -\dfrac{1}{3}dx - \dfrac{2}{3} dy\)</span></p><h2 id="解法二">解法二</h2><p>求偏导数，直接求过于复杂，多元函数考虑 <strong>先代后求再代</strong>：</p><p>考虑对 <span class="math inline">\(x\)</span> 求偏导，则不妨令 <span class="math inline">\(y = 0\)</span>：<span class="math inline">\(e^{x + 3z} \cdot (1 + 3 \cdot \dfrac{\partial z}{\partial x})\bigg|_{(0,0)} = 0 \Rightarrow \dfrac{\partial z}{\partial x}\bigg|_{(0,0)} = -\dfrac{1}{3}\)</span></p><p>考虑对 <span class="math inline">\(y\)</span> 求偏导，则不妨令 <span class="math inline">\(x = 0\)</span>：<span class="math inline">\(e^{2y + 3z} \cdot (2 + 3 \cdot \dfrac{\partial z}{\partial y})\bigg|_{(0,0)} = 0 \Rightarrow \dfrac{\partial z}{\partial y}\bigg|_{(0,0)} = -\dfrac{2}{3}\)</span></p><p>故 <strong>全微分</strong> <span class="math inline">\(dz\bigg|_{(0,0)} = -\dfrac{1}{3}dx - \dfrac{2}{3} dy\)</span></p><h1 id="题目323">题目323</h1><p>设 <span class="math inline">\(f(t)\)</span> 在 <span class="math inline">\([1,+\infty)\)</span> 上有 <strong>连续二阶导数</strong>，且 <span class="math inline">\(f(1) = 0, f&#39;(1) = 1, z = (x^2 + y^2)f(x^2 + y^2)\)</span></p><p>满足 <span class="math inline">\(\dfrac{\partial^2z}{\partial x^2} + \dfrac{\partial^2z}{\partial y^2} = 0\)</span>. 求 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([1,+\infty) 的最大值\)</span></p><h2 id="解答-3">解答</h2><p>这题分为两个步骤：1.解出 <span class="math inline">\(f(x)\)</span> 表达式 2.求出极值</p><p>第一步毫无疑问，那就是微分方程了，考虑如何对 <span class="math inline">\(z\)</span> 求导：</p><p>直接做不好做，观察发现方程右侧是关于 <span class="math inline">\(x^2+y^2\)</span> 得函数，故不妨令 <span class="math inline">\(x^2+y^2 = u\)</span>，则 <span class="math inline">\(\dfrac{\partial u}{\partial x} = 2x, \dfrac{\partial u}{\partial y} = 2y, z(u) = uf(u)\)</span></p><p>方程两侧对 <span class="math inline">\(x\)</span> 求偏导：</p><p><span class="math display">\[\dfrac{\partial z}{\partial x} = \dfrac{\partial z}{\partial u} \cdot \dfrac{\partial u}{\partial x} = z&#39;(u) \cdot 2x \qquad \dfrac{\partial^2 z}{\partial x^2} = z&#39;&#39;(u) \cdot 4x^2 + 2 z&#39;(u)\]</span></p><p>由于 <span class="math inline">\(x\)</span> 与 <span class="math inline">\(y\)</span> 在多项式中具有轮换对称性，故：<span class="math inline">\(\dfrac{\partial^2 z}{\partial y^2} = z&#39;&#39;(u) \cdot 4y^2 + 2 z&#39;(u)\)</span></p><p>代入偏微分方程中：</p><p><span class="math display">\[z&#39;&#39;(u) \cdot 4y^2 + 2 z&#39;(u) + z&#39;&#39;(u) \cdot 4x^2 + 2 z&#39;(u) = 0 \Rightarrow uz&#39;&#39; + z&#39; = 0 \]</span></p><p><span class="math display">\[\Rightarrow 令 z&#39; = p: u p&#39; = -p \Rightarrow u \cdot \frac{dp}{du} = -p \Rightarrow \frac{dp}{p} = -\frac{du}{u}\]</span></p><p><span class="math display">\[\Rightarrow \ln p = -\ln u + C_1 \Rightarrow p = C_2\frac{1}{u} \Rightarrow \dfrac{dz}{du} = C_2 \frac{1}{u}\]</span></p><p><span class="math display">\[\Rightarrow z = C_2 \cdot (\ln u + C_3)\]</span></p><p>接下来就是代入初值，解出任意常数 <span class="math inline">\(C\)</span> 即可</p><p><span class="math inline">\(z&#39; = f(u) + uf&#39;(u) 且 f&#39;(1) = 1 \Rightarrow z&#39;(1) = 1 \Rightarrow p(1) = C_2 = 1\)</span></p><p><span class="math inline">\(z(1)=f(1)=0\)</span> 代入：<span class="math inline">\(z = C_3 = 0\)</span></p><p>故 <span class="math inline">\(z = \ln u\)</span>，可以推得：<span class="math inline">\(f(u) = \dfrac{\ln u}{u} \Rightarrow f&#39;(u) = \dfrac{1 - \ln u}{u^2}\)</span></p><p>故 <span class="math inline">\(f(u)\)</span> 在 <span class="math inline">\([1, e]\)</span> 单调增，在 <span class="math inline">\([e,+\infty)\)</span> 单调减，由 <strong>极值判别的充要条件</strong> 可知：<span class="math inline">\(x=e\)</span> 为 <strong>极大值点</strong></p><p>比较区间的端点后，发现该 <strong>极值点</strong> 为 <strong>最值点</strong>，故 <span class="math inline">\(\max\{f(x)\} = f(e) = \dfrac{1}{e}\)</span></p><h1 id="题目324">题目324</h1><p>设 <span class="math inline">\(u = f(x,y,z), z = z(x,y)\)</span> 是由方程 <span class="math inline">\(\varphi(x+y,z) = 1\)</span> 所确定的隐函数</p><p>求 <span class="math inline">\(\dfrac{\partial u}{\partial x}, du, \dfrac{\partial^2 u}{\partial x \partial y}\)</span>. 其中 <span class="math inline">\(f\)</span> 和 <span class="math inline">\(\varphi\)</span> 有二阶连续偏导数且 <span class="math inline">\(\varphi_2 \ne 0\)</span></p><h2 id="解答-4">解答</h2><p>根据题意，易得 <span class="math inline">\(z\)</span> 是关于 <span class="math inline">\(x,y\)</span> 的函数，本题考察的就是链式求导法则</p><p><span class="math display">\[\dfrac{\partial u}{\partial x} = f_1 \cdot 1 + f_3 \cdot \dfrac{\partial z}{\partial x}, \qquad\dfrac{\partial \varphi}{\partial x} = \varphi_1 + \varphi_2 \cdot \dfrac{\partial z}{\partial x} = 0\Rightarrow\dfrac{\partial z}{\partial x} = -\frac{\varphi_1}{\varphi_2}\]</span></p><p>联立二式：<span class="math inline">\(\dfrac{\partial u}{\partial x} = f_1 - \dfrac{\varphi_1}{\varphi_2} \cdot f_3\)</span>，由于 <span class="math inline">\(x,y\)</span> 在方程中具有轮换对称性，故同理可得：<span class="math inline">\(\dfrac{\partial u}{\partial y} = f_2 - \dfrac{\varphi_1}{\varphi_2} \cdot f_3\)</span></p><p>故可以写出 <strong>全微分</strong>：</p><p><span class="math display">\[du = \dfrac{\partial u}{\partial x} dx + \dfrac{\partial u}{\partial y}dy = \bigg({f_1  - \dfrac{\varphi_1}{\varphi_2} \cdot f_3}\bigg) dx + \bigg({f_2  - \dfrac{\varphi_1}{\varphi_2} \cdot f_3}\bigg) dy\]</span></p><p>再求一阶偏导：</p><p><span class="math display">\[\dfrac{\partial^2 u}{\partial x \partial y} = f_{12}  - \dfrac{\varphi_1}{\varphi_2} \cdot f_{13} - \dfrac{\varphi_1}{\varphi_2} \cdot f_{32} + (\dfrac{\varphi_1}{\varphi_2})^2 \cdot f_{33}\]</span></p><h1 id="题目325">题目325</h1><p>设函数 <span class="math inline">\(z = z(x,y)\)</span> 的微分 <span class="math inline">\(dz = (2x + 12y) dx + (12x + 4y)dy\)</span> 且 <span class="math inline">\(z(0,0) = 0\)</span></p><p>求函数 <span class="math inline">\(z = z(x,y)\)</span> 在 <span class="math inline">\(4x^2 + y^2 \le 25\)</span> 上的最大值</p><h2 id="解法官方题解-拉格朗日乘数法">解法（官方题解-拉格朗日乘数法）</h2><p>这里没有使用 <strong>偏积分</strong>，而是用的 <strong>凑微分</strong> 法：</p><p><span class="math display">\[dz = 2xdx + 12ydx + 12xdy + 4ydy = d(x^2) + d(12xy) + d(2y^2) = d(x^2 + 12xy + 2y^2)\]</span></p><p><span class="math display">\[z = x^2 + 12xy + 2y^2 + C\]</span></p><p>代入 <span class="math inline">\((0,0)\)</span> 可得：<span class="math inline">\(z(0,0) = C = 0\)</span>，求得 <span class="math inline">\(z = x^2 + 12xy + 2y^2\)</span></p><p>武佬用的 <strong>拉格朗日乘数法</strong>：</p><p>令 <span class="math inline">\(F(x,y,\lambda) = x^2 + 12xy + 2y^2 + \lambda(4x^2 + y^2 - 25)\)</span></p><p><span class="math display">\[\text{令}\begin{cases}F_x = 2x + 12y + 8\lambda x = 0 \\\\F_y = 12x + 4y + 2\lambda y = 0 \\\\F_\lambda = 4x^2 + y^2 -25 = 0\end{cases}\]</span></p><p>我们想要解出的是 <strong>椭圆上边界的点</strong>，故 <span class="math inline">\(x\ne 0, y\ne 0\)</span></p><p>根据 <strong>线性代数</strong> 方程组的知识可知，我们想要求的是 <strong>齐次方程组</strong> <span class="math inline">\(\begin{cases}  (1 + 4\lambda)x + 6y = 0 \\\\  6x + (2y + \lambda) y = 0 \end{cases}\)</span> 的非零解</p><p>故该方程组的 <strong>系数矩阵行列式为零</strong> <span class="math inline">\(\begin{vmatrix}  1 + 4\lambda &amp; 6 \\\\ 6 &amp; 2y + \lambda \end{vmatrix} = 0 \Rightarrow \lambda = 2 \text{ 或 } -\dfrac{17}{4}\)</span></p><p>解得： <span class="math inline">\(\lambda=2\)</span> 时，<span class="math inline">\(x = 2, y = -3 \quad or \quad x = -2, y = 3\)</span>，此时 <span class="math inline">\(z = -50\)</span></p><p><span class="math inline">\(\lambda=-\dfrac{17}{4}\)</span> 时，<span class="math inline">\(x = \dfrac{3}{2}, y = 4 \quad or \quad x = -\dfrac{3}{2}, y = -4\)</span>，此时 <span class="math inline">\(z = \dfrac{425}{4}\)</span></p><h2 id="解答一不等式放缩找上界最小值">解答一（不等式放缩找上界最小值）</h2><strong>全微分：</strong> <span class="math inline">\(dz = \dfrac{\partial z}{\partial x} dx + \dfrac{\partial z}{\partial y} dy\)</span>，由 <strong>一阶微分形式不变性</strong>：$<span class="math display">\[\begin{cases}\dfrac{\partial z}{\partial x} = 2x + 12y \\\\\dfrac{\partial z}{\partial y} = 12x + 4y\end{cases}\]</span><p>$</p><p>利用求 <strong>偏积分</strong> 来解出函数表达式：<span class="math inline">\(\dfrac{\partial z}{\partial x} = 2x + 12y ~ \Rightarrow ~ z = x^2 + 12xy + \varphi(y)\)</span></p><p>再求 <strong>偏导</strong> 然后 <strong>联立</strong> 方程二：<span class="math inline">\(\dfrac{\partial z}{\partial y} = 12x + \varphi&#39;(y) = 12x + 4y \Rightarrow \varphi&#39;(y) = 4y \Rightarrow \varphi(y) = 2y^2 + C\)</span></p><p>由于 <span class="math inline">\(z(0,0) = 0\)</span>，故 <span class="math inline">\(C = 0 \Rightarrow z = x^2 + 12xy + 2y^2\)</span></p><p>求 <strong>目标函数</strong>：<span class="math inline">\(z = x^2 + 12xy + 2y^2\)</span> 在 <strong>限制条件</strong>：<span class="math inline">\(4x^2 + y^2 \le 25\)</span> 上的 <strong>最大值</strong></p><p><strong>普遍性方法</strong> 是 <strong>拉格朗日数乘法</strong>，但这题很显然，可以用 <strong>不等式放缩</strong> 来做，避免求 <strong>拉格朗日乘子</strong> 的 <strong>复杂计算</strong></p><p><strong>加减法放缩乘除法 -&gt; 基本不等式</strong>、<strong>加减法放缩加减法 -&gt; 柯西不等式</strong>，本题显然是用 <strong>基本不等式</strong> 来求解</p><p>我们要求的是 <strong>目标函数的最大值</strong>，等价于求 <strong>上界约束的最小值</strong></p><p>由 <strong>基本不等式</strong> 变形：<span class="math inline">\(xy \le \dfrac{64x^2 + 9y^2}{48}\)</span>，可以推得：</p><p><span class="math display">\[12xy \le \dfrac{64x^2 + 9y^2}{4} \Rightarrow z = x^2 + 12xy + 2y^2 \le \dfrac{17}{4} \cdot (4x^2 + y^2) \le \frac{425}{4}\]</span></p><p>故 <strong>最大值</strong> 为：<span class="math inline">\(\dfrac{425}{4}\)</span></p><h2 id="解答二三角换元找函数的最大值">解答二（三角换元找函数的最大值）</h2><p>求 <strong>目标函数</strong>：<span class="math inline">\(z = x^2 + 12xy + 2y^2\)</span> 在 <strong>限制条件</strong>：<span class="math inline">\(4x^2 + y^2 \le 25\)</span> 上的 <strong>最大值</strong></p><p>看见 <strong>平方项相加</strong>，想到我们熟悉的 <strong>三角换元法</strong>：令 <span class="math inline">\(\begin{cases}  2x &amp;= r \cos \theta \\\\  y &amp;= r \sin \theta \end{cases} \quad r\in[0,5], \theta\in[0,2\pi]\)</span>，<strong>原题化为：</strong></p><p>问题变为：求 <strong>目标函数</strong>：$z = r<sup>2</sup>2 + 3r^2 2 + 2r^2 ^2 $ 在 <strong>限制条件</strong>：<span class="math inline">\(r\in[0,5], \theta\in[0,2\pi]\)</span> 上的 <strong>最大值</strong></p><p><span class="math display">\[\begin{aligned}z &amp;= r^2 \cdot \bigg({\frac{\cos^2\theta + 12\sin2\theta + 8\sin^2\theta}{4}}\bigg) = r^2 \cdot \bigg({\frac{1 + 12\sin2\theta + 7\sin^2\theta}{4}}\bigg) \\\\&amp;= r^2 \cdot \bigg({\frac{1 + 12\sin2\theta + \dfrac{7}{2} \cdot (1 - \cos2\theta)}{4}}\bigg)\\\\&amp;= r^2 \cdot \bigg({\frac{9 + 24\sin2\theta - 7\cos2\theta)}{8}}\bigg)\\\\&amp;= r^2 \cdot \bigg({\frac{9 + 25 \sin (2\theta + \varphi)}{8}}\bigg)\\\\&amp;= \frac{9}{8}r^2 + \frac{25}{8} r^2 \sin(2\theta + \varphi)\end{aligned}\]</span></p><p>故 <span class="math inline">\(z \in [-50, \dfrac{425}{4}] \Rightarrow \max\bigg({z(r,\theta)}\bigg) = \dfrac{425}{4}\)</span></p><h1 id="题目326">题目326</h1><p><span class="math display">\[累次积分 \int_0^{\frac{\pi}{4}}d\theta \int_0^{2\cos\theta} f(r\cos\theta,r\sin\theta)r dr 等于\]</span></p><p><span class="math display">\[\begin{aligned}&amp;(A) \int_0^1dy\int_y^{1-\sqrt{1-y^2}} f(x,y)dx \quad(B) \int_0^2dx\int_0^{\sqrt{2x-x^2}} f(x,y)dy \\\\&amp;(C) \int_0^2dr\int_0^{\frac{\pi}{4}} f(r\cos\theta,r\sin\theta)d\theta \\\\&amp;(D) \int_0^{\sqrt{2}}dr\int_0^{\frac{\pi}{4}} f(r\cos\theta,r\sin\theta)r d\theta + \int_{\sqrt{2}}^2dr\int_0^{\arccos \frac{r}{2}} f(r\cos\theta,r\sin\theta)r d\theta\\\\\end{aligned}\]</span></p><h2 id="解答-5">解答</h2><p><strong>（A）（B）</strong> 选项是 <strong>直角坐标</strong>，<strong>（C）（D）</strong> 选项都是 <strong>极坐标</strong></p><p>故考虑对该积分区域进行 <strong>坐标变化</strong> 和 <strong>交换积分次序</strong> 来比较 <strong>4</strong> 个选项</p><p>由 <span class="math inline">\(r\)</span> 的积分上限计算可得：<span class="math inline">\(r = 2\cos \theta \Rightarrow r\cos\theta = 2\cos^2\theta \Rightarrow x = 2\cos^2\theta = 1+\cos 2\theta\)</span></p><p>，同理 <span class="math inline">\(y = \sin 2\theta\)</span>，故积分区域是部分圆：<span class="math inline">\((x-1)^2 + y^2 = 1\)</span></p><p>换元成 <strong>直角坐标</strong>：<strong>（后积先定限，限内画条线，先交写下限，后交写上限）</strong></p><p><span class="math display">\[\begin{aligned}&amp;\int_0^1 dx \int_0^{y} f(x,y) dy + \int_1^2 dx \int_0^{\sqrt{2x - x^2}} f(x,y) dy\\\\&amp;\int_0^1 dy \int_y^{1+\sqrt{1-y^2}} f(x,y) dx\end{aligned}\]</span></p><p><strong>极坐标交换积分次序</strong>：<strong>（直接把 <span class="math inline">\(\theta\)</span> 当作 <span class="math inline">\(x\)</span>，<span class="math inline">\(r\)</span> 当作 <span class="math inline">\(y\)</span> 会变得很简单）</strong></p><p>画出 <span class="math inline">\(\theta, r\)</span> 得 <strong>积分区域</strong> 后，发现是一个 <strong>曲边梯形</strong>，故 <strong>分开积分</strong></p><p><span class="math display">\[\int_0^{\sqrt{2}} dr \int_0^{\frac{\pi}{4}} f(r\cos\theta,r\sin\theta)r d\theta + \int_{\sqrt{2}}^2 dr \int_0^{\arccos\frac{r}{2}} f(r\cos\theta,r\sin\theta)r d\theta\]</span></p><p><strong>故正确答案为</strong> <span class="math inline">\(D\)</span></p><h1 id="题目327">题目327</h1><p><strong>求二重积分：</strong></p><p><span class="math display">\[\int_0^{\frac{\pi}{4}}d\theta\int_0^{\frac{1}{\cos \theta}} \rho^2d\rho + \int_1^{\sqrt{2}}dx\int_0^{\sqrt{2-x^2}}\sqrt{x^2 + y^2}dy\]</span></p><h2 id="解答-6">解答</h2><p>一般来说，求一个 <strong>二重积分</strong> 的 <strong>和</strong>，是 <strong>出题人</strong> 有意的 <strong>拆分了积分区域</strong></p><p>拆开后，通过 <strong>极直互化</strong> 或 <strong>交换积分次序</strong> 变成两个完全不一样的 <strong>积分</strong></p><p>出题人不会让你一道二重积分题，算两个二重积分然后再加起来的 <del>（如果是的话，明天我就去命题组）</del></p><p>本题是 <strong>极坐标二重积分 + 直角坐标二重积分</strong>，经过初步观察，考虑 <strong>直角坐标</strong> 转 <strong>极坐标</strong></p><p>通过简单的 <strong>积分区域绘制</strong> （电脑不太好画就不画了），是一个 <strong>四分之一圆</strong>，如我们先前 <strong>预判</strong> 的一样</p><p><span class="math display">\[\begin{aligned}\text{原式}&amp;=\int_0^{\frac{\pi}{4}}d\theta\int_0^{\frac{1}{\cos \theta}} \rho^2d\rho + \int_1^{\sqrt{2}}dx\int_0^{\sqrt{2-x^2}}\sqrt{x^2 + y^2}dy\\\\&amp;=\int_0^{\frac{\pi}{4}}d\theta\int_0^{\frac{1}{\cos \theta}} \rho^2d\rho + \int_0^{\frac{\pi}{4}}d\theta\int_{\frac{1}{\cos \theta}}^{\sqrt{2}} \rho^2d\rho\\\\&amp;=\int_0^{\frac{\pi}{4}}d\theta\int_0^{\sqrt{2}} \rho^2d\rho\\\\&amp;=\frac{\pi}{4} \cdot \frac{2^{\frac{3}{2}}}{3}\\\\&amp;=\frac{\sqrt{2}}{6} \pi\end{aligned}\]</span></p><h1 id="题目328">题目328</h1><p><span class="math display">\[\text{求二重积分：} \int_0^1dy\int_y^1 x\sqrt{2xy-y^2} dx\]</span></p><h2 id="解答-7">解答</h2><p>对于 <span class="math inline">\(x\sqrt{x-1}\)</span> 这个函数 <strong>直接积分</strong> 是不太好积的，考虑 <strong>极直互化</strong> 或 <strong>交换积分次序</strong></p><p>本题的 <strong>积分区域</strong> 是一个 <strong>角型区域</strong>，考虑化 <strong>极坐标</strong></p><p><span class="math display">\[\begin{aligned}&amp;\int_0^\frac{\pi}{4} d\theta \int_0^\frac{1}{\cos\theta} r\cos\theta\sqrt{2r^2\cos\theta\sin\theta - r^2\sin^2\theta} rdr \\\\=&amp;\int_0^{\frac{\pi}{4}} d\theta \int_0^\frac{1}{\cos\theta} r^3\cos\theta \sqrt{2\sin\theta\cos\theta - \sin^2\theta} dr \\\\=&amp;\frac{1}{4}\int_0^\frac{\pi}{4} \cos\theta \sqrt{2\sin\theta\cos\theta - \sin^2\theta} \cdot \frac{1}{\cos^4\theta} d\theta \\\\=&amp;\frac{1}{4}\int_0^\frac{\pi}{4} \sqrt{2\tan\theta - \tan^2\theta} \cdot \frac{1}{\cos^2\theta} d\theta \\\\=&amp;\frac{1}{4}\int_0^\frac{\pi}{4} \sqrt{2\tan\theta - \tan^2\theta}d\tan\theta \\\\=&amp;\frac{1}{4}\int_0^1 \sqrt{2u - u^2} du = \frac{1}{4}\int_{-\frac{\pi}{2}}^0 \cos^2t dt = \frac{1}{4}\int_0^{\frac{\pi}{2}} \cos^2t dt \\\\=&amp; \frac{1}{4} \cdot \frac{1}{2} \cdot \frac{\pi}{2} \quad (\text{点火公式})\\\\=&amp; \frac{\pi}{16}\end{aligned}\]</span></p><h1 id="题目329">题目329</h1><p><span class="math display">\[\lim_{n\to\infty} \frac{\sqrt[n]{2}-1}{\sqrt[n]{2n+1}} \cdot \sum_{i=1}^n\int_1^{\frac{2i-1}{2n}}e^{-y^2}dy\]</span></p><h2 id="解答-8">解答</h2><blockquote><p>这题我问了一下我数学 <span class="math inline">\(150\)</span> 的同学，他给我分析的明明白白的，接下来我来洗稿（不是）</p></blockquote><p><strong>和式极限</strong> 无外乎两种做法：</p><ol type="1"><li><strong>定积分定义</strong></li><li><strong>夹逼准则</strong></li></ol><p>本题的 <strong>和式</strong> 过于复杂，<strong>放缩</strong> 不好掌握尺度，故考虑 <strong>凑定积分定义</strong></p><p>本题是把 <strong>区间</strong> <span class="math inline">\([0,1]\)</span> 拆分成 <span class="math inline">\(n\)</span> 个 <strong>子区间</strong>，每个 <strong>子区间</strong> 范围为 <span class="math inline">\([\dfrac{i-1}{n}, \dfrac{i}{n}]\quad i = 1,2,...,n\)</span></p><p>一般的 <strong>定积分定义</strong> 我们在每个 <strong>子区间</strong> 进行 <strong>估计</strong> 的时候，都是用的 <strong>右端点</strong> <span class="math inline">\(\dfrac{i}{n}\)</span></p><p>但实际上， <strong>定积分定义</strong> 中的 <strong>估计点</strong> 可以是该 <strong>子区间</strong> 中的 <strong>任意一点</strong>，比如本题用的 <strong>中点</strong> <span class="math inline">\(\dfrac{2i-1}{2n}\)</span></p><p>这就是 <strong>本题</strong> 的 <strong>唯一考点</strong> 了，考察学生对于 <strong>定积分定义</strong> 的了解，如果只是 <strong>背模板</strong> 取 <strong>右端点</strong> 就会 <strong>死的很惨</strong></p><p><span class="math display">\[\begin{aligned}&amp;\quad\lim_{n\to\infty} \frac{\sqrt[n]{2}-1}{\sqrt[n]{2n+1}} \cdot \sum_{i=1}^n\int_1^{\frac{2i-1}{2n}}e^{-y^2}dy \\\\=&amp;\quad\lim_{n\to\infty} \frac{e^{\frac{\ln 2}{n}}-1}{(1+2n)^{\frac{1}{n}}} \cdot \sum_{i=1}^n\int_1^{\frac{2i-1}{2n}}e^{-y^2}dy \\\\=&amp;\quad\ln 2 \cdot \lim_{n\to\infty} \frac{1}{n} \cdot \sum_{i=1}^n\int_1^{\frac{2i-1}{2n}}e^{-y^2}dy \\\\=&amp; \quad \ln 2 \cdot \lim_{n\to\infty} \frac{1}{n} \cdot f(\frac{2i-1}{2n}) \\\\=&amp;\quad -\ln 2 \cdot \int_0^1dx\int_x^1e^{-y^2} dx  \\\\=&amp; \quad -\ln 2 \cdot \int_0^1dy\int_0^ye^{-y^2} dx \\\\=&amp;\quad \frac{\ln 2}{2} \cdot \int_0^1e^{-y^2} d(-y^2)  \\\\=&amp; \quad  \frac{\ln 2}{2}\cdot e^{-y^2}\bigg|_0^1  \\\\=&amp; \quad  \frac{\ln 2(1-e)}{2e}\end{aligned}\]</span></p><h1 id="题目330">题目330</h1><p>设 <span class="math inline">\(D\)</span> 是由 <span class="math inline">\(0\le x \le 1, 0 \le y \le 1\)</span> 所确定的平面区域，求 <span class="math inline">\(\iint\limits_D\sqrt{x^2+y^2}dxdy\)</span></p><h2 id="解答-9">解答</h2><p><strong>被积函数</strong> 里有 <span class="math inline">\(x^2+y^2\)</span>，考虑转换成 <strong>极坐标</strong></p><p><span class="math display">\[\begin{aligned}\text{原式} \quad= \quad &amp;\int_0^{\frac{\pi}{4}}d\theta\int_0^{\frac{1}{\cos\theta}} r^2dr + \int_{\frac{\pi}{4}}^\frac{\pi}{2}d\theta\int_0^{\frac{1}{\sin\theta}} r^2dr\\\\= \quad &amp;\frac{1}{3}\bigg(\int_0^{\frac{\pi}{4}} \sec^3\theta d\theta + \int_{\frac{\pi}{4}}^\frac{\pi}{2} \csc^3\theta d\theta\bigg)\\\\= \quad &amp;\frac{2}{3}\bigg(\int_0^{\frac{\pi}{4}} \sec^3\theta d\theta\bigg)\\\\\end{aligned}\]</span></p><p><span class="math display">\[\begin{aligned}\int \sec^3x dx = \tan x\sec x - \int \tan^2 x \sec x dx = \tan x\sec x - \int (\sec^3 - \sec x) dx \\\\=\tan x\sec x - I + \int\sec xdx \Rightarrow I = \frac{1}{2}\tan x \sec x + \frac{1}{2} \ln (\tan x + \sec x) + C\end{aligned}\]</span></p><p><span class="math display">\[\text{原式} =\frac{1}{3}\tan x \sec x + \frac{1}{3} \ln (\tan x + \sec x) \bigg|_0^{\frac{\pi}{4}} = \frac{\sqrt{2}}{3}+\frac{1}{3}\ln (1+\sqrt{2})\]</span> # 题目331</p><p><span class="math display">\[\text{计算积分：} \int_{\frac{\pi}{4}}^{\frac{3\pi}{4}}d\theta\int_0^{2\sin\theta} [\sin\theta + \cos\theta\sqrt{1+r^2\sin^2\theta}]r^2dr\]</span></p><h2 id="解答-10">解答</h2><p>直接积不好积，考虑 <strong>极直互化</strong></p><blockquote><p><strong>二重积分</strong> 一般考只考两个知识点： 1. <strong>极直互化</strong> 2. <strong>交换积分次序</strong></p><p>不会让你上来直接做两次积分就能求出来的，这也是 <strong>命题人</strong> 的 <strong>套路</strong></p></blockquote><p>求出积分域，<span class="math inline">\(r = 2\sin\theta \Rightarrow r^2 = 2r\sin\theta \Rightarrow x^2 + y^2 = 2y \Rightarrow x^2 + (y-1)^2 = 1\)</span></p><p>是 <strong>一个圆</strong>，在 <span class="math inline">\(y=x, y = -x\)</span> 的 <strong>上方区域</strong>，因此具有天然 <strong>对称性</strong>：关于 <span class="math inline">\(y\)</span> 轴对称</p><p>所以，<strong>被积函数</strong> 有一部分可以直接等于 <span class="math inline">\(0\)</span></p><p><span class="math display">\[\begin{aligned}\text{原式} \quad = &amp;\quad\iint\limits_D(y + x\sqrt{1+y^2}) d\sigma\\\\= &amp;\quad\iint\limits_Dy d\sigma\\\\= &amp;\quad2\int_0^1dx\int_x^{1 + \sqrt{1-x^2}} ydy\\\\= &amp;\quad2\int_0^1 (1-x^2+2\sqrt{1-x^2}) dx\\\\= &amp;\quad2 \cdot (1 - \frac{1}{3} + \frac{\pi}{4})\\\\= &amp;\quad\frac{4}{3} + \frac{\pi}{2}\\\\\end{aligned}\]</span></p><h1 id="题目332">题目332</h1><p><span class="math inline">\(D = \\{(x,y)||x| + |y| \le \dfrac{\pi}{2}\\}\)</span>，比较积分大小： <span class="math display">\[I_1=\iint\limits_D\sqrt{x^2+y^2}d\sigma,I_2=\iint\limits_D\sin\sqrt{x^2+y^2}d\sigma,I_3=\iint\limits_D(1-\cos\sqrt{x^2+y^2})d\sigma\]</span></p><h2 id="解答-11">解答</h2><p>由于积分区域相同，故只需比较被积函数大小</p><p>令 <span class="math inline">\(x^2+y^2 = u^2\)</span></p><p><span class="math display">\[I_1 = \iint\limits_D u d\sigma,I_2 = \iint\limits_D \sin u d\sigma,I_3 = \iint\limits_D (1-\cos u) d\sigma,\]</span></p><p>令 <span class="math inline">\(f(x) = x -1+ \cos x\)</span>，则 <span class="math inline">\(f(0) = 0, f&#39;(x) = 1 - \sin x &gt; 0\)</span></p><p>故 <span class="math inline">\(x &gt; 1-\cos x\)</span></p><p>令 <span class="math inline">\(f(x) = \sin x -1+ \cos x\)</span>，则 <span class="math inline">\(f(0) = 0, f&#39;(x) = \cos x - \sin x\)</span></p><p>易得：<span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0, \dfrac{\pi}{4}]\)</span> 单增，在 <span class="math inline">\([\dfrac{\pi}{4}, \dfrac{\pi}{2}]\)</span> 单减，且 <span class="math inline">\(f(0) = 0, f(\dfrac{\pi}{2}) = 0\)</span></p><p>故 <span class="math inline">\(f(x) &gt; 0 \Rightarrow \sin x &gt; 1-\cos x\)</span></p><p>综上：<span class="math inline">\(x &gt; \sin x &gt; 1- \cos x\)</span></p><p>故：<span class="math inline">\(I_1 &gt; I_2 &gt; I_3\)</span></p><h1 id="题目333">题目333</h1><p><span class="math inline">\(D = \\{(x,y)||x| + |y| \le \dfrac{\pi}{2}\\}\)</span>，比较积分大小：</p><p><span class="math display">\[I_1=\iint\limits_D(2x^2+\tan(xy^2))d\sigma,I_2=\iint\limits_D(x^2y+2\tan y^2)d\sigma,I_3=\iint\limits_D(|xy|+y^2)d\sigma\]</span></p><h2 id="解答-12">解答</h2><p><strong>相同积分域</strong> 的 <strong>积分比大小</strong>，只需比较 <strong>被积函数</strong> 大小即可</p><p>本题积分域同上题，是由 <strong>四条直线</strong> 围成的 <strong>正方形区域</strong></p><p>由于 <strong>被积函数</strong> 过于复杂，考虑利用 <strong>对称性</strong> 和 <strong>奇偶性</strong> 进行 <strong>化简</strong>，显然图像关于 <span class="math inline">\(x,y\)</span> 轴对称</p><p>而剩余部分都是关于 <span class="math inline">\(x,y\)</span> 的偶函数，直接对称到第一象限，从而去掉绝对值</p><p><span class="math display">\[I_1 = 4\iint\limits_{D_1} 2x^2 d\sigma，I_2 = 4\iint\limits_{D_1} 2\tan y^2 d\sigma，I_3 = 4\iint\limits_{D_1} (xy+y^2) d\sigma\]</span></p><p>观察积分域 <span class="math inline">\(D\)</span>，具有明显的 <strong>轮换对称性</strong>，又根据 <span class="math inline">\(I = \dfrac{1}{2}\iint\limits_D[f(x,y)+f(y,x)]dxdy\)</span> 得:</p><p><span class="math inline">\(\tan x &gt; x \Rightarrow I_2 &gt; I_1\)</span></p><p><span class="math display">\[I_1 = 2\iint\limits_{D_1} (2x^2+2y^2) d\sigma,I_3 = 2\iint\limits_{D_1} (x^2+y^2+2xy) d\sigma \lt2\iint\limits_{D_1} (x^2+y^2+x^2+y^2) d\sigma\]</span></p><p>故 <span class="math inline">\(I_3 \lt I_1 &lt; I_2\)</span></p><h1 id="题目334">题目334</h1><p><span class="math display">\[\text{可微函数} f(x) \text{满足} f&#39;(x) = f(x) + \int_0^1f(x)dx\text{，且} f(0) = 1\text{，求} f(x)\]</span></p><h2 id="解答-13">解答</h2><p>看见求原函数 <span class="math inline">\(f(x)\)</span> 那只有一条途径：<strong>微分方程</strong></p><p>所给的 <strong>方程</strong> 中含有 <strong>定积分</strong>，做法一般都是先把 <strong>定积分</strong> 令为 <strong>常数</strong> <span class="math inline">\(A\)</span> 从而化简运算</p><p>令 <span class="math inline">\(\int_0^1f(x)dx = A\)</span>，则有微分方程：<span class="math inline">\(y&#39; - y = A\)</span>，变量可分离型：<span class="math inline">\(\dfrac{dy}{dx} = A + y\)</span></p><p><span class="math display">\[\frac{dy}{A+y} = dx \quad\Rightarrow\quad \ln(A+y) = x + C \quad\Rightarrow\quady = Ce^x - A\]</span></p><p>对 <span class="math inline">\(y\)</span> 在 <span class="math inline">\((0,1)\)</span> 上进行积分：</p><p><span class="math display">\[A = C\int_0^1e^xdx - A \quad\Rightarrow\quad A = \frac{C(e - 1)}{2}\]</span></p><p>代入初值 <span class="math inline">\(y(0) = 1\)</span>：</p><p><span class="math display">\[1 = C - \frac{C(e - 1)}{2} \quad\Rightarrow\quad 2 = C \cdot (2 - e + 1) \quad\Rightarrow\quad C = \frac{2}{3-e}\]</span></p><p><span class="math display">\[\text{综上所述：} f(x) = \frac{2e^x - e + 1}{3-e}\]</span></p><h1 id="题目335">题目335</h1><p>设 <span class="math inline">\(f(x)\)</span> 是可导函数，且 <span class="math inline">\(f(0) = 0, g(x) = \int_0^1xf(tx)dt\)</span>，并满足方程 <span class="math inline">\(f&#39;(x)+g&#39;(x)=x\)</span>，</p><p>求由曲线 <span class="math inline">\(y=f(x), y = e^{-x}\)</span> 及直线 <span class="math inline">\(x=0,x=2\)</span> 围成的平面图形的面积</p><h2 id="解答-14">解答</h2><p>先对 <span class="math inline">\(g(x)\)</span> 的 <strong>自变量</strong> 和 <strong>积分变量</strong> 进行分离，令 <span class="math inline">\(tx = u\)</span>，则 <span class="math inline">\(xdt = du, g(x) = \int_0^x f(u)du\)</span></p><p>故 <span class="math inline">\(g&#39;(x) = f(x)\)</span> 代入方程得：<span class="math inline">\(f&#39;(x) + f(x) = x\)</span> 为 <strong>一阶线性微分方程</strong>，写出通解：</p><p><span class="math display">\[f(x) = e^{-\int 1 dx} \cdot \big[\int x \cdot e^{\int 1dx}dx + C\big] = e^{-x} \cdot\big[ xe^x - e^x + C \big] = x - 1 + Ce^{-x}\]</span></p><p><strong>代入初值</strong>：<span class="math inline">\(f(0) = C - 1 = 0 \quad \Rightarrow \quad C = 1\)</span></p><p>剩余问题为，求解：<strong>由曲线 <span class="math inline">\(y=x-1+e^{-x}, y = e^{-x}\)</span> 及直线 <span class="math inline">\(x=0,x=2\)</span> 围成的平面图形的面积</strong></p><p>该图像不是很好绘制，但是可以明显观察到，<span class="math inline">\(y_1 &lt; y_2 (x &lt; 1), y_1 &gt; y_2(x &gt; 1)\)</span></p><p>故我们可以意象出他的一个曲边梯形模样，直接套对应区间的定积分公式即可：</p><p><span class="math display">\[\begin{aligned}&amp; \quad \int_0^2 |y_1 - y_2|dx \\\\=&amp;\quad\int_0^1(y_2-y_1)dx + \int_1^2(y_1-y_2)dx\\\\=&amp;\quad\int_0^1 (1-x) dx + \int_1^2 (x - 1) dx\\\\=&amp;\quad(x - \frac{1}{2}x^2) \bigg|_0^1 + (\frac{1}{2}x^2 - x) \bigg|_1^2\\\\=&amp;\quad\frac{1}{2} + \frac{1}{2}\\\\=&amp;\quad1\\\\\end{aligned}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第304 - 319题</title>
      <link href="/graduate_exam/Math/0x130-0x13F/"/>
      <url>/graduate_exam/Math/0x130-0x13F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目304">题目304</h1><p><span class="math display">\[\begin{aligned}设 f(x) = \lim_{n\to\infty} \frac{x^{n+1}-x^2}{x^n+1}, &amp;F(x) = \int_0^xf(t)dt,则() \\\\(A)f(x)有1个间断点，F(x)有1个不可导点 \quad&amp;(B)f(x)有1个间断点，F(x)有2个不可导点 \\\\(C)f(x)有2个间断点，F(x)有1个不可导点 \quad&amp;(D)f(x)有2个间断点，F(x)有2个不可导点\end{aligned}\]</span></p><h2 id="解答">解答</h2><p>首先先解出 <span class="math inline">\(f(x)\)</span> 的分段表达式：</p><p><strong>|x| &lt; 1 时：</strong> <span class="math inline">\(f(x) = \lim\limits_{n\to\infty} \dfrac{x^{n+1}-x^2}{x^n+1} = \dfrac{0-x^2}{0 + 1} = -x^2\)</span></p><p><strong>x = +1 时：</strong> <span class="math inline">\(f(x) = \lim\limits_{n\to\infty} \dfrac{x^{n+1}-x^2}{x^n+1} = \dfrac{1-1}{1+1} = 0\)</span></p><p><strong>x = -1 时：</strong> <span class="math inline">\(f(x) = \lim\limits_{n\to\infty} \dfrac{x^{n+1}-x^2}{x^n+1} = \dfrac{(-1)^{n+1}-1}{(-1)^n+1} = 不存在\)</span></p><p><strong>|x| &gt; 1 时：</strong> <span class="math inline">\(f(x) = \lim\limits_{n\to\infty} \dfrac{x^{n+1}-x^2}{x^n+1} = \dfrac{x - \frac{1}{x^{n-2}}}{1 + \frac{1}{x^n}} = x\)</span></p><p>故 <span class="math inline">\(f(x) = \begin{cases}  -x^2 &amp; |x| &lt; 1 \\\\  0 &amp; x = 1\\\\  x &amp; |x| &gt; 1 \end{cases}\)</span></p><p>因此可以轻易观察出 <span class="math inline">\(f(x)\)</span> 的间断点：可去间断点 <span class="math inline">\(x = - 1\)</span>，跳跃间断点 <span class="math inline">\(x = 1\)</span></p><p>研究可导性，可以用 <strong>导数定义</strong>：</p><p><span class="math inline">\(F&#39;_-(-1) = \lim\limits_{x\to-1^-}\dfrac{\int\limits_0^xf(t)dt - \dfrac{1}{3}}{x + 1} = \lim\limits_{x\to-1^-}f(x) = -1\)</span></p><p><span class="math inline">\(F&#39;_+(-1) = \lim\limits_{x\to-1^+}\dfrac{\int\limits_0^xf(t)dt - \dfrac{1}{3}}{x + 1} = \lim\limits_{x\to-1^+}f(x) = -1\)</span></p><p>由 <strong>导数极限定理：</strong> <span class="math inline">\(F&#39;(-1) = F&#39;_-(-1) = F&#39;_+(-1) = -1\)</span></p><p><span class="math inline">\(F&#39;_-(1) = \lim\limits_{x\to1^-}\dfrac{\int\limits_0^xf(t)dt + \dfrac{1}{3}}{x + 1} = \lim\limits_{x\to1^-}f(x) = -1\)</span></p><p><span class="math inline">\(F&#39;_+(1) = \lim\limits_{x\to1^+}\dfrac{\int\limits_0^xf(t)dt + \dfrac{1}{3}}{x + 1} = \lim\limits_{x\to1^+}f(x) = 1\)</span></p><p>由 <strong>极限的唯一性：</strong> <span class="math inline">\(F(x)\)</span> 在 <span class="math inline">\(x=1\)</span> 处，不可导</p><h1 id="题目305">题目305</h1><p><span class="math display">\[设 f(x) 在 [1,+\infty)上有连续一阶导数，f&#39;(x)=\dfrac{1}{1+f^2(x)}\bigg[{\sqrt{\frac{1}{x}} - \sqrt{\ln(1+\frac{1}{x})}}\bigg]\\\quad\\证明：\lim_{x\to+\infty}f(x)存在\]</span></p><h2 id="解答-1">解答</h2><p>证明<strong>极限的存在性</strong>： 1. <strong>单调有界准则</strong>（<strong>抽象型</strong>函数） 2. <strong>夹逼准则</strong>（<strong>具体型</strong>函数）</p><p>本题对于抽象型函数，应考虑使用 <strong>单调有界准则</strong></p><p>由 <strong>常见不等式</strong>：<span class="math inline">\(\dfrac{1}{x+1} \lt \ln(1+\dfrac{1}{x}) \lt \dfrac{1}{x}\)</span>，可知：<span class="math inline">\({\sqrt{\dfrac{1}{x}} - \sqrt{\ln(1+\dfrac{1}{x})}} &gt; 0\)</span></p><p>故 $f'(x) &gt; 0 $ 函数 <strong>单调增</strong></p><p>现还需证明函数 <strong>上有界</strong>，但是题干中只给了 <strong>一阶导数</strong> 信息</p><p>联系<strong>一阶导数</strong>与<strong>函数</strong>的桥梁有：<strong>拉格朗日中值定理</strong>、<strong>逆用牛顿莱布尼兹公式</strong></p><p>本题我们是希望把函数还原到区间 <span class="math inline">\([1,+\infty)\)</span> 上的，用 <strong>中值定理</strong> 来区间估计误差会很大（带个正无穷）</p><p>因此考虑 <strong>逆用牛顿莱布尼茨公式</strong>，对方程两次进行积分：</p><p><span class="math display">\[\begin{aligned}\int_1^xf&#39;(t)dt&amp;=   \int_1^x\dfrac{1}{1+f^2(t)}\bigg[{\sqrt{\frac{1}{t}} - \sqrt{\ln(1+\frac{1}{t})}}\bigg]dt \\\\f(x) - f(1)&amp;=   \int_1^x\dfrac{1}{1+f^2(t)}\bigg[{\sqrt{\frac{1}{t}} - \sqrt{\ln(1+\frac{1}{t})}}\bigg]dt \\\\&amp;\le \int_1^x\bigg[{\sqrt{\frac{1}{t}} - \sqrt{\ln(1+\frac{1}{t})}}\bigg]dt （系数放缩）\\&amp;\le \int_1^x\bigg[{\sqrt{\frac{1}{t}} - \sqrt{\frac{1}{t+1}}}\bigg]dt \quad(不等式放缩)\\\\&amp;\le \int_1^x\bigg[{\frac{1}{2}\xi^{-\frac{3}{2}}}\bigg]dt \quad(其中\xi\in(t,t+1)，拉格朗日中值定理)\\\\&amp;\le \frac{1}{2}\int_1^x{t^{-\frac{3}{2}}}dt （放缩\xi）\\\\f(x) &amp;\le f(1) + \frac{1}{2}\int_1^x{t^{-\frac{3}{2}}}dt\end{aligned}\\\quad\\\\则 \lim_{x\to+\infty}f(x) = f(1) + \frac{1}{2}\int_1^{+\infty}{t^{-\frac{3}{2}}}dt\]</span></p><p>由 <strong>反常积分的常用结论—p积分</strong> 可知：<span class="math inline">\(f(x)收敛 \Rightarrow f(x) 有上界\)</span></p><p>由 <strong>单调有界准则：</strong> <span class="math inline">\(\lim\limits_{x\to+\infty}f(x)存在\)</span></p><h1 id="题目306">题目306</h1><p><span class="math display">\[设 f(x) = \int_{-1}^x(1-|t|)dt (x\ge-1),求曲线y=f(x)与x轴所围图形的面积\]</span></p><h2 id="解答-2">解答</h2><p>看见绝对值，想办法去掉就好了，分段讨论即可</p><p><strong>-1 &lt; x &lt; 0 时:</strong></p><p><span class="math display">\[f(x) = \int_{-1}^x(1+t)dt = t + \frac{1}{2}t^2 \bigg|_{-1}^x = \frac{1}{2}x^2 + x + \frac{1}{2}\]</span></p><p><strong>0 &lt; x 时：</strong></p><p><span class="math display">\[f(x) = \frac{1}{2} + \int_{0}^x(1-t)dt = \frac{1}{2} + t - \frac{1}{2}t^2 \bigg|_{0}^x = -\frac{1}{2}x^2 + x + \frac{1}{2}\]</span></p><p><strong>综上所述：</strong></p><p><span class="math display">\[f(x) =\begin{cases}\dfrac{1}{2}x^2 + x + \dfrac{1}{2} &amp; -1 &lt; x \le 0\\\\-\dfrac{1}{2}x^2 + x + \dfrac{1}{2} &amp; 0 &lt; x\end{cases}\]</span></p><p>通过简单的绘图（此处省略）可以简单通过定积分计算出图像面积：</p><p><span class="math display">\[S = \int_{-1}^0 (\dfrac{1}{2}x^2 + x + \dfrac{1}{2}) dx + \int_0^{1 + \sqrt{2}} (-\dfrac{1}{2}x^2 + x + \dfrac{1}{2}) dx = 1 + \frac{2}{3}\sqrt{2}\]</span></p><h1 id="题目307">题目307</h1><p>求曲线 <span class="math inline">\(y = \dfrac{x^2}{1+x^2}\)</span> 与其渐近线所围区域绕该渐近线旋转所得旋转体体积</p><h2 id="解答-3">解答</h2><p>看到绕 <strong>渐近线旋转</strong> 的题，不要害怕，考研范围内只学过绕垂直于 <strong>x y 轴</strong> 的直线旋转，不会考超纲</p><p><strong>求渐近线</strong></p><p><span class="math inline">\(y&#39;=\dfrac{2x}{(1+x^2)^2}\)</span> 未找到无定义点，所以没有 <strong>铅锤渐近线</strong></p><p>$ _{x}  = 1 $ 故存在 <strong>水平渐近线</strong> <span class="math inline">\(y = 1\)</span></p><p>观察 <span class="math inline">\(f(x)\)</span> 是一个偶函数，故可以化简区间（我只能说，没看出来也能做）</p><h3 id="体积微元法">体积微元法</h3><p><span class="math display">\[\begin{aligned}V&amp;= \pi \int_{-\infty}^{+\infty} (\frac{x^2}{1+x^2} - 1)^2 dx \\\\&amp;=2\pi \int_{0}^{+\infty} \frac{1}{(1+x^2)^2} dx \\\\&amp;=2\pi \int_{0}^{\frac{\pi}{2}} \frac{1}{\sec^2 t} dt \quad(三角换元)\\\\&amp;=2\pi \int_{0}^{\frac{\pi}{2}} \cos^2t dt = \pi \int_{0}^{\frac{\pi}{2}} (1+\cos 2t) dt\\\\&amp;= \pi \bigg({    t + \frac{1}{2}\sin 2t}\bigg)\bigg|_0^{\frac{\pi}{2}}\\\\&amp;= \frac{\pi^2}{2}\end{aligned}\]</span></p><h3 id="面积微元法">面积微元法</h3><p><span class="math display">\[\begin{aligned}V &amp;= 2\pi\iint\limits_D (1-y)d\sigma\\\\&amp;= 4\pi\int_0^{+\infty}dx\int_{\frac{x^2}{1+x^2}}^1 (1-y)dy\\\\&amp;= 2\pi\int_0^{+\infty}\frac{1}{(1+x^2)^2}dx\\\\&amp;= 2\pi\int_0^{\frac{\pi}{2}} \cos^2t dt \\\\&amp;= \frac{\pi^2}{2}\end{aligned}\]</span></p><h1 id="题目308">题目308</h1><p>求曲线 <span class="math inline">\(y=x^2\)</span> 与直线 <span class="math inline">\(y=mx(m&gt;0)\)</span> 在第一象限内所围成的图形绕该直线旋转所形成的旋转体的体积 <span class="math inline">\(V\)</span></p><h2 id="解答-4">解答</h2><p>本题可以用体积微元，也可以用面积微元，我仅展示面积微元的做法</p><p>设区域内任意一点的坐标为 <span class="math inline">\((x,y)\)</span>，则该点到转动轴的距离为 <span class="math inline">\(r(x,y)=\dfrac{|y-mx|}{\sqrt{1+m^2}} = \dfrac{mx - y}{\sqrt{1+m^2}}\)</span></p><p>然后直接套公式计算 <strong>二重积分</strong> 即可：</p><p><span class="math display">\[\begin{aligned}V &amp;=2 \pi \iint\limits_D \dfrac{mx - y}{\sqrt{1+m^2}} d\sigma \\\\&amp;=2 \pi \int_0^m dx \int_{x^2}^{mx} \dfrac{mx - y}{\sqrt{1+m^2}} dy \\\\&amp;=\frac{2 \pi}{\sqrt{1+m^2}} \int_0^m dx \int_{x^2}^{mx} (mx - y) dy \\\\&amp;=\frac{2 \pi}{\sqrt{1+m^2}} (\frac{1}{6} - \frac{1}{4} + \frac{1}{10})m^5 \\\\&amp;=\frac{\pi m^5}{30\sqrt{1+m^2}}\\\\\end{aligned}\]</span></p><h1 id="题目309">题目309</h1><p>（2018年2，3）设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上 <span class="math inline">\(2\)</span> 阶可导，且 <span class="math inline">\(\int_0^1f(x)dx=0\)</span>，则（ ）</p><p>（A）当 <span class="math inline">\(f&#39;(x)&lt;0\)</span> 时，<span class="math inline">\(f(\frac{1}{2}) &lt; 0\)</span> （B）当 <span class="math inline">\(f&#39;&#39;(x)&lt;0\)</span> 时，<span class="math inline">\(f(\frac{1}{2}) &lt; 0\)</span></p><p>（C）当 <span class="math inline">\(f&#39;(x)&gt;0\)</span> 时，<span class="math inline">\(f(\frac{1}{2}) &lt; 0\)</span> （D）当 <span class="math inline">\(f&#39;&#39;(x)&gt;0\)</span> 时，<span class="math inline">\(f(\frac{1}{2}) &lt; 0\)</span></p><h2 id="分析">分析</h2><p>要用到 <strong>一阶导数</strong> 和 <strong>二阶导数</strong>，考虑使用 <strong>泰勒中值</strong></p><p>然后就是展开点的问题，选项中有暗示在 <strong>中点处展开</strong>，因此我们选择 <strong>中点</strong></p><p><span class="math display">\[f(x) = f(\frac{1}{2}) + f&#39;(\frac{1}{2})(x-\frac{1}{2}) + \frac{f&#39;&#39;(\frac{1}{2})}{2!}(x-\frac{1}{2})^2 + R\]</span></p><p>两侧同时积分，凑出题干里的积分：</p><p><span class="math display">\[\int_0^1f(x)dx = f(\frac{1}{2}) + f&#39;(\frac{1}{2})\int_0^1(x-\frac{1}{2})dx + \frac{f&#39;&#39;(\dfrac{1}{2})}{2}\int_0^1(x-\frac{1}{2})^2 + R \\\\0 = f(\frac{1}{2}) + \frac{1}{2}f&#39;&#39;(\frac{1}{2})\int_0^1(x-\frac{1}{2})^2dx+R\]</span></p><p>由于 <span class="math inline">\((x-\dfrac{1}{2})^2 &gt; 0\)</span>，故 <span class="math inline">\(\int_0^1(x-\frac{1}{2})^2 &gt; 0\)</span></p><p>又 <span class="math inline">\(f(\frac{1}{2}) &lt; 0\)</span>，故要使等号左端为 <span class="math inline">\(0\)</span>，必须满足：<span class="math inline">\(f&#39;&#39;(\dfrac{1}{2}) &lt; 0\)</span>，故 <strong>D选项</strong> 正确</p><h1 id="题目310">题目310</h1><p>已知正值连续函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上单调减少，则对任意的 <span class="math inline">\(a,b(0&lt;a&lt;b&lt;1)\)</span>，下列结论不正确的是（ ）</p><p>（A）<span class="math inline">\(a\int_0^bf(x)dx &gt; b\int_0^af(x)dx\)</span> （B）<span class="math inline">\(b\int_0^af(x)dx &gt; a\int_0^bf(x)dx\)</span></p><p>（C）<span class="math inline">\(a\int_0^b\sqrt{f(x)}dx &lt; b\int_0^a\sqrt{f(x)}dx\)</span> （B）<span class="math inline">\(b\int_0^a\sqrt{f(x)}dx &lt; b\int_0^b\sqrt{f(x)}dx\)</span></p><h2 id="解答一中值定理">解答一（中值定理）</h2><p>核心思想就是用 <strong>积分中值定理</strong> 配合上题干给的 <strong>单调性</strong> 进行不等号判断</p><p>但是由于 <span class="math inline">\([0,a]\)</span> 和 <span class="math inline">\([0,b]\)</span> 区间有交集，故考虑 <strong>拆分区间</strong></p><p><span class="math display">\[\begin{aligned}&amp;~~ a\int_0^bf(x)dx - b\int_0^af(x)dx\\\\=&amp;~~a\int_0^af(x)dx + a\int_a^bf(x)dx - b\int_0^af(x)dx\\\\=&amp;~~a^2 f(\xi) + a(b-a)f(\eta) - abf(\xi)\qquad \xi\in(0,a), \eta\in(a,b)\\\\=&amp;~~a^2\bigg({f(\xi) - f(\eta)}\bigg) + ab\bigg({f(\eta) - f(\xi)}\bigg)\\\\=&amp;~~a \cdot [f(\xi) - f(\eta)] \cdot (a-b) &lt; 0\\\\\end{aligned}\]</span></p><p>故 <strong>A选项错误</strong></p><h2 id="解答二换元法还原积分上限">解答二（换元法还原积分上限）</h2><p>不等式中的 <strong>定积分</strong>，他们的 <strong>被积函数</strong>一样，<strong>积分上限</strong> 不同</p><p>能不能把 <strong>积分上限</strong> 变成一样的，然后直接去比较 <strong>被积函数</strong> 呢？答：<strong>换元法</strong></p><p>换元要三换：一换被积函数，二换积分变量，三换积分上下限</p><p>我们想把积分限 <span class="math inline">\([0,b] \rightarrow [0, a]\)</span>，故令 <span class="math inline">\(x = \dfrac{b}{a} t\)</span></p><p><span class="math display">\[a\int_0^bf(x)dx - b\int_0^af(x)dx = a\int_0^a f(\frac{b}{a}t) d\frac{b}{a}t - b\int_0^af(x)dx = b\bigg({    \int_0^a f(\frac{b}{a}x) - f(x) }\bigg)dx\]</span></p><p>由于 <span class="math inline">\(b &gt; a\)</span>，故 <span class="math inline">\(\dfrac{b}{a} &gt; 1 \Rightarrow f(\dfrac{b}{a}x) &lt; f(x)\)</span>，</p><p><span class="math display">\[则~~ a\int_0^bf(x)dx - b\int_0^af(x)dx = b\bigg({ \int_0^a f(\frac{b}{a}x) - f(x) }\bigg)dx &lt; 0\]</span></p><p><strong>故 A 选项错误</strong></p><h2 id="解答三积分不等式常规解法变上限积分法">解答三（积分不等式常规解法—变上限积分法）</h2><p>统一替换上限参数（或者下限参数，有的题目替换下限计算量小）</p><p>令 <span class="math inline">\(F(x) = a\int_0^xf(t)dt - x\int_0^af(t)dt\)</span> （x &gt; a）</p><p>验证初值 <span class="math inline">\(F(a) = 0\)</span></p><p>求导：<span class="math inline">\(F&#39;(x) = af(x) - \int_0^af(t)dt = a(f(x) - f(\xi))\)</span></p><p>由于 <span class="math inline">\(\xi &lt; a &lt; x\)</span>，故 <span class="math inline">\(f(x) - f(\xi) &lt; 0 \Rightarrow F&#39;(x) &lt; 0\)</span></p><p>又 <span class="math inline">\(F(a) = 0\)</span>，故 <span class="math inline">\(F(x) &lt; 0 \Rightarrow F(b) &lt; 0\)</span></p><p><span class="math display">\[即：a\int_0^bf(x)dx &lt; b\int_0^af(x)dx\]</span></p><p><strong>故 A 选项错误</strong></p><h2 id="解答四统一参数进行比较">解答四（统一参数进行比较）</h2><blockquote><p>感觉有点像 OI 里常用的二元组排序法？</p></blockquote><p>对 A 选项进行变形：</p><p><span class="math display">\[a\int_0^bf(x)dx &gt; b\int_0^af(x)dx \Rightarrow \frac{\int_0^bf(x)dx}{b} &gt; \frac{\int_0^af(x)dx}{a}\]</span></p><p><span class="math display">\[于是我们可以令 F(x) = \dfrac{\int_0^xf(t)dt}{x}\]</span></p><p><span class="math display">\[则~~ F&#39;(x) = \frac{xf(x) - \int_0^xf(t)dt}{x^2} = \frac{x(f(x) - f(\xi))}{x^2} &lt; 0\]</span></p><p>故 <span class="math inline">\(F(b) &lt; F(a)\)</span> <strong>A选项错误</strong></p><h1 id="题目311">题目311</h1><p><span class="math display">\[设 I_1 = \int_0^\pi \frac{x\sin^2x}{1+e^{\cos^2x}}dx, I_2=\int_0^\pi\frac{\sin^2x}{1+e^{\cos^2x}}dx,I_3=\int_0^{\frac{\pi}{2}}\frac{\cos^2x}{1+e^{\sin^2x}}dx，比较三者的大小\]</span></p><h2 id="解答-5">解答</h2><p>看形式，其实就是考几个公式的变换，直接搞就完事了</p><p><span class="math display">\[I_1 = \int_0^\pi \frac{x\sin^2x}{1+e^{\cos^2x}}dx = \pi\int_0^{\frac{\pi}{2}}\frac{\sin^2x}{1+e^{\cos^2x}}dx\qquad\bigg(套公式\int_0^\pi xf(\sin x)dx = \pi\int_0^{\frac{\pi}{2}}f(\sin x)dx\bigg)\]</span></p><p><span class="math display">\[I_2 = \int_0^\pi\frac{\sin^2x}{1+e^{\cos^2x}}dx = 2 \int_0^\frac{\pi}{2}\frac{\sin^2x}{1+e^{\cos^2x}}dx\qquad\bigg(利用被积函数关于 x = \frac{\pi}{2} 的对称性\bigg)\]</span></p><p><span class="math display">\[I_3=\int_0^{\frac{\pi}{2}}\frac{\cos^2x}{1+e^{\sin^2x}}dx = \int_0^{\frac{\pi}{2}}\frac{\sin^2x}{1+e^{\cos^2x}}dx\qquad\bigg(区间再现：\int_a^bf(x)dx = \int_a^bf(a + b - x)dx\bigg)\]</span></p><p>综上:<span class="math inline">\(\begin{cases}  I_1 = \pi I_3\\\\  I_2 = 2 I_3 \\\\  I_3 = I_3 \end{cases} \qquad\Rightarrow\qquad I_1 &gt; I_2 &gt; I_3\)</span></p><h1 id="题目312">题目312</h1><p><span class="math display">\[设 f(x) 在 [0,1] 上有连续导数，且f(0)=f(1)=0,证明：\int_0^1f^2(x)dx \le \frac{1}{8}\int_0^1f&#39;^2(x)dx\]</span></p><h2 id="解答-6">解答</h2><p>积分不等式证明中，常用的六种手段：<strong>变量代换、积分中值定理、变上限积分、柯西不等式、逆用牛顿莱布尼茨公式、分布积分法</strong></p><p>本题中，需要建立起 <span class="math inline">\(f\)</span> 与 <span class="math inline">\(f&#39;\)</span> 之间的关系，故想到的方法有：<span class="math inline">\(Lagrange中值定理\)</span> 和 <span class="math inline">\(N-L公式\)</span></p><p>当这两种方法都能使用的时候，我推荐后者，因为 <span class="math inline">\(N-L公式\)</span> 是 <strong>还原原函数</strong>，不会损失精度</p><p>而 <strong>中值定理</strong> 是一种 <strong>区间估计</strong>，在 <strong>估计</strong> 的过程中，会 <strong>丢失精度</strong>，导致最终不等式不成立</p><p>逆用牛顿莱布尼茨公式： <span class="math inline">\(f(x) = f(x) - f(0) = f(x)\bigg|_0^x = \int_0^xf&#39;(t)dt\)</span>，接着用 <strong>柯西不等式</strong> 放缩</p><p><span class="math display">\[f^2(x) = \bigg(\int_0^xf&#39;(t)dt \bigg)^2 \le \int_0^x 1^2 dt \cdot\int_0^x f&#39;^2(t)dt = x\int_0^xf&#39;^2(t)dt\]</span></p><p>此处直接两侧积分去做，证明的 <strong>精度</strong> 是<span class="math inline">\(\dfrac{1}{2}\)</span> 不满足题目中的 <span class="math inline">\(\dfrac{1}{8}\)</span>，<strong>精度不够</strong></p><p>题目中还给了 <span class="math inline">\(f(1) = 0\)</span> 的条件，故考虑再搞一次：</p><p>逆用牛顿莱布尼茨公式： <span class="math inline">\(f(x) = f(x) - f(1) = f(x)\bigg|_1^x = \int_1^xf&#39;(t)dt\)</span>，接着用 <strong>柯西不等式</strong> 放缩</p><p><span class="math display">\[f^2(x) = \bigg(\int_x^1f&#39;(t)dt \bigg)^2 \le \int_x^1 1^2 dt \cdot\int_x^1 f&#39;^2(t)dt = (1 - x)\int_x^1f&#39;^2(t)dt\]</span></p><p>这里我们想要 <strong>精度尽可能高</strong> 等价于求 <strong>上界的最小值</strong> <strong>（有点类似差分约束的意思）</strong></p><p>因此我们希望 <strong>拆分区间</strong>，使得两个 <strong>估计方式</strong> 在每段区间上 <strong>值较小</strong> ：<span class="math inline">\(x \le 1-x \Rightarrow x \le \dfrac{1}{2}\)</span></p><p>在 <span class="math inline">\(\dfrac{1}{2}\)</span> 处切开，分别进行估计</p><p><span class="math display">\[\begin{cases}    f^2(x) &amp;\le x\int_0^xf&#39;^2(t)dt &amp;\le x\int_0^{\frac{1}{2}}f&#39;^2(t)dt &amp;(0\le x \le \frac{1}{2})\\\\    f^2(x) &amp;\le (1-x)\int_x^1f&#39;^2(t)dt &amp;\le (1-x)\int_{\frac{1}{2}}^1 f&#39;^2(t)dt &amp;(\frac{1}{2}\lt x \le 1)\end{cases}\]</span></p><p><span class="math display">\[\begin{aligned}\int_0^1 f^2(t)dt = \int_0^{\frac{1}{2}} f^2(t)dt + \int_{\frac{1}{2}}^1 f^2(t)dt &amp;\le \int_0^{\frac{1}{2}} x\int_0^{\frac{1}{2}}f&#39;^2(t)dt dx + \int_{\frac{1}{2}}^1 (1-x)\int_{\frac{1}{2}}^1 f&#39;^2(t)dt dx \\\\&amp;= \frac{1}{8}\int_0^{\frac{1}{2}}f&#39;^2(t)dt + \frac{1}{8}\int_{\frac{1}{2}}^1 f&#39;^2(t)dt = \frac{1}{8}\int_0^1 f&#39;^2(t)dt\end{aligned}\]</span></p><p><strong>得证</strong></p><h1 id="题目313">题目313</h1><p><span class="math display">\[设 f(x,y) = \begin{cases}    \dfrac{y^2\sin x}{x^2 + y^2}, &amp; (x,y)\ne(0,0)\\\\    0, &amp;(x,y)=(0,0)\end{cases}，则 f(x,y) 在 (0,0) 点处（ ）\\~~\\\begin{matrix}(A) &amp;不连续  &amp; (B)&amp;连续但不可导 \\\\(C) &amp;可导但不可微 &amp; (D) &amp;可微\end{matrix}\]</span></p><h2 id="解答-7">解答</h2><p>由我们熟知的 <strong>强弱</strong> 条件关系：一阶偏导数连续 &gt; 可微 &gt; 可导 &gt; 连续，从 <strong>弱到强</strong> 开始一个个验证</p><p><strong>连续性：（连续性定义）</strong></p><p><span class="math display">\[\lim_{(x,y)\to(0,0)} \frac{y^2\sin x}{x^2 + y^2} = \lim_{(x,y)\to(0,0)} \frac{xy^2}{x^2 + y^2}\]</span></p><p>这种情况直接考虑 <strong>常用不等式</strong> 进行 <strong>夹逼</strong>：</p><p><span class="math display">\[x^2 + y^2 \ge 2xy \Rightarrow \frac{1}{x^2+y^2} \le \frac{1}{2xy} \Rightarrow 0 \le |\frac{xy^2}{x^2 + y^2}| \le 2|y|\]</span></p><p>故 <span class="math inline">\(\lim\limits_{(x,y)\to(0,0)} \dfrac{y^2\sin x}{x^2 + y^2} = 0 = f(0,0) \quad \Rightarrow \quad f(x,y) 在 (0,0) 处连续\)</span></p><p><strong>可导性：（偏导数定义）</strong></p><p><span class="math display">\[\frac{\partial f}{\partial x}\bigg|_{x=0} = \lim_{\Delta x\to 0} \frac{f(\Delta x,0) - f(0,0)}{\Delta x} = \lim_{\Delta x\to 0} \frac{0}{\Delta x} = 0\]</span></p><p><span class="math display">\[\frac{\partial f}{\partial y}\bigg|_{y=0} = \lim_{\Delta y\to 0} \frac{f(0,\Delta y) - f(0,0)}{\Delta y} = \lim_{\Delta y\to 0} \frac{0}{\Delta y} = 0\]</span></p><p>故可偏导</p><p><strong>可微性：（可微定义式）</strong></p><p><span class="math display">\[\lim\limits_{(\Delta x,\Delta y)\to(0,0)} \frac{f(\Delta x,\Delta y) - f(0,0) - 0 \cdot (\Delta x-0) - 0 \cdot (\Delta y - 0)}{\sqrt{\Delta x^2 + \Delta y^2}} = \lim\limits_{(\Delta x,\Delta y)\to(0,0)} \dfrac{\Delta y^2 \Delta x}{(\Delta x^2 + \Delta y^2)^{\frac{3}{2}}}\]</span></p><p>取 <span class="math inline">\(\Delta y = k \Delta x\)</span> 的趋近方式：</p><p><span class="math display">\[\lim\limits_{\Delta x\to 0} \frac{k^2 \Delta x^3}{(1+k^2)^{\frac{3}{2}} \cdot \Delta x^3} = \frac{k^2}{(1+k^2)^{\frac{3}{2}}}\]</span></p><p><strong>极限值</strong> 随 <span class="math inline">\(k\)</span> 值变化而变化，<strong>不唯一</strong></p><p>于是由 <strong>极限</strong> 的 <strong>唯一性</strong> 可知，该 <strong>极限不存在</strong>，故该函数 <strong>不可微</strong></p><p><strong>正确答案</strong> 为 <strong>C：可导但不可微</strong></p><h1 id="题目314">题目314</h1><p>下列函数中，在 <span class="math inline">\((0,0)\)</span> 点可微的是（ ）</p><p><span class="math display">\[\begin{aligned}&amp;(A) f(x,y) = \sqrt{x^2+y^2}&amp;(B) g(x,y) = \begin{cases}    \dfrac{xy}{x^2+y^2} &amp;(x,y)\ne(0,0) \\    0 &amp; (x,y) = (0,0)\end{cases} \\\\&amp;(C) \varphi(x,y) = \begin{cases}    \dfrac{xy}{\sqrt{x^2+y^2}} &amp; (x,y) \ne (0,0) \\    0 &amp; (x,y) = (0,0)\end{cases}&amp;(D) \psi(x,y) = \begin{cases}    (x^2+y^2)\sin\dfrac{1}{x^2+y^2} &amp; (x,y) \ne (0,0) \\    0 &amp; (x,y) = (0,0)\end{cases}\end{aligned}\]</span></p><h3 id="解答-8">解答</h3><p>首先读者必须知道 <strong>可微定义式</strong>，然后就是纯的 <strong>极限计算</strong> 了</p><p><strong>可微定义式：</strong></p><p><span class="math display">\[\lim_{\begin{matrix}    \Delta x \to 0\\    \Delta y \to 0\end{matrix}}\frac{f(x_0+\Delta x, y_0 + \Delta y) - f(x_0, y_0) - f_x&#39;(x_0,y_0)(x-x_0) - f_y&#39;(x_0,y_0)(y - y_0)}{\sqrt{(\Delta x)^2 + (\Delta y)^2}}\]</span></p><h3 id="a">(A)</h3><p><span class="math inline">\(f&#39;_x(0,0) = \lim\limits_{x\to 0} \dfrac{|x|}{x}\)</span> 不存在，关于 <span class="math inline">\(x\)</span> 不可导 <span class="math inline">\(\Rightarrow\)</span> 不可微</p><h3 id="b">(B)</h3><p>在 <span class="math inline">\((0,0)\)</span> 点处 <strong>不连续</strong>，故 <strong>不可微</strong></p><h3 id="c">(C)</h3><p><span class="math inline">\(f&#39;_x(0,0) = f&#39;_y(0,0) = 0\)</span></p><p><span class="math display">\[\lim_{\begin{matrix}    \Delta x \to 0\\\\    \Delta y \to 0\end{matrix}}\frac{\Delta x \Delta y}{\Delta x^2 + \Delta y^2}\]</span></p><p>直接取 <span class="math inline">\(\Delta y = k \Delta x\)</span> 即可证明该 <strong>极限不存在</strong>，故 <strong>不可微</strong></p><h3 id="d">(D)</h3><p><span class="math inline">\(f&#39;_x(0,0) = f&#39;_y(0,0) = 0\)</span></p><p><span class="math display">\[\lim_{\begin{matrix}    \Delta x \to 0\\\\    \Delta y \to 0\end{matrix}}\frac{(\Delta x^2 + \Delta y^2)\sin\dfrac{1}{\Delta x^2 + \Delta y^2}}{\sqrt{\Delta x^2 + \Delta y^2}} = 0\]</span></p><p>故函数在 <span class="math inline">\((0,0)\)</span> 点处 <strong>可微</strong></p><p><strong>正确答案（D）</strong></p><h1 id="题目315">题目315</h1><p>已知函数 <span class="math inline">\(f(x,y)\)</span> 在 <span class="math inline">\((0,0)\)</span> 点的某邻域内有定义，则 <span class="math inline">\(\lim\limits _{x\to0} f_x&#39;(x,0) = f_x&#39;(0,0)\)</span>，<span class="math inline">\(\lim\limits _{y\to0} f_y&#39;(0,y) = f_y&#39;(0,0)\)</span> 是 <span class="math inline">\(f(x,y)\)</span> 在 <span class="math inline">\((0,0)\)</span> 点可微的（ ）条件</p><h2 id="解答-9">解答</h2><p>首先我们要知道，可微的 <strong>充分条件</strong> — <strong>偏导数连续</strong>，他长这样：</p><p><span class="math display">\[\begin{cases}\lim\limits_{(x,y)\to(x_0,y_0)} f_x&#39;(x,y) = f_x&#39;(0,0) \\\\\lim\limits_{(x,y)\to(x_0,y_0)} f_y&#39;(x,y) = f_y&#39;(0,0)\end{cases}\]</span></p><p>而题干里给的 <strong>一元函数极限</strong> 与 <strong>二元函数</strong> <strong>可微</strong> 基本没有什么关系</p><p><strong>充分性：</strong></p><p>该条件显然推不出 <strong>偏导数连续</strong>，反例：</p><p><span class="math display">\[f(x,y) = \begin{cases}a &amp; xy = 0,a \ne 0 \\\\0 &amp; xy \ne 0\end{cases}\]</span></p><p>该函数在 <span class="math inline">\(x/y\)</span> 轴上值为 <span class="math inline">\(a\)</span>，其他位置为 <span class="math inline">\(0\)</span>，显然在 <span class="math inline">\((0,0)\)</span> 点不连续，故不可微</p><p>但是，<span class="math inline">\(\lim\limits _{x\to0} f_x&#39;(x,0) = f_x&#39;(0,0) = 0\)</span>，<span class="math inline">\(\lim\limits _{y\to0} f_y&#39;(0,y) = f_y&#39;(0,0) = 0\)</span></p><p>故 <strong>不满足充分性</strong></p><p><strong>必要性：</strong></p><p>可微只能给出一个可微定义式极限存在，和上面的极限没有任何关系</p><p><strong>反例：</strong> 我们直接举一个 <strong>可微但偏导数不连续的例子</strong></p><p><span class="math display">\[f(x,y) = \begin{cases}(x^2+y^2)\sin\dfrac{1}{x^2 + y^2} &amp; (x,y) \ne (0,0)\\\\0 &amp; (x,y) = (0,0)\end{cases}\]</span></p><p><span class="math display">\[f&#39;_x(x,0) = 2x\sin\frac{1}{x^2} -\frac{2}{x}\cos \frac{1}{x^2} \Rightarrow \lim\limits _{x\to0} f_x&#39;(x,0) 不存在\]</span></p><p>故正确答案为：<strong>非充分非必要条件</strong></p><h1 id="题目316">题目316</h1><p><span class="math display">\[设 z = \frac{x\cos(y - 1) - (y - 1)\cos x}{1 + \sin x + \sin(y - 1)}，求 \frac{\partial z}{\partial y} \bigg|_{(0,1)}\]</span></p><h2 id="解答-10">解答</h2><p>计算题，直接套定义</p><p><span class="math display">\[\begin{aligned}f&#39;_y(0,1) &amp;= \lim_{\Delta y \to 0}\frac{\dfrac{- \Delta y}{1 + \sin(\Delta y)} - 0}{\Delta y}= \lim_{\Delta y \to 0}-\dfrac{1}{1 + \sin(\Delta y)} = -1\end{aligned}\]</span></p><h1 id="题目317">题目317</h1><p><span class="math display">\[已知f(x,y) = \begin{cases}xy\dfrac{x^2-y^2}{x^2+y^2} &amp;(x,y)\ne(0,0)\\\\0 &amp;(x,y) = (0,0)\end{cases}，求f_{xy}&#39;&#39;(0,0) \cdot f_{yx}&#39;&#39;(0,0)\]</span></p><h2 id="解答-11">解答</h2><p>先写出 <span class="math inline">\(f_{xy}(0,0)\)</span> 的 <strong>定义式</strong>，然后看 <strong>缺什么</strong> 就 <strong>求什么</strong></p><p><span class="math display">\[f_{xy}(0,0) = \frac{f_x(0,y) - f_x(0,0)}{y}\]</span></p><p>根据该定义式，求出其中的函数表达式：</p><p><span class="math display">\[f_x(0,0) = \lim_{x\to 0} \frac{f(x,0) - f(0,0)}{x - 0} = 0\]</span></p><p><span class="math display">\[f_x(0,y) = \lim_{x\to 0} \frac{f(x,y) - f(0,y)}{x - 0} = \lim_{x\to 0} y\dfrac{x^2-y^2}{x^2+y^2} = -\frac{y^3}{y^2} = -y\]</span></p><p><span class="math display">\[f_{xy}(0,0) = \frac{f_x(0,y) - f_x(0,0)}{y - 0} = \frac{-y}{y} = -1\]</span></p><p>同理，镜像求出 <span class="math inline">\(f_{yx}(0,0)\)</span>:</p><p><span class="math display">\[f_y(0,0) = \lim_{x\to 0} \frac{f(0,y) - f(0,0)}{y - 0} = 0\]</span></p><p><span class="math display">\[f_y(x,0) = \lim_{y\to 0} \frac{f(x,y) - f(x,0)}{y - 0} = \lim_{y\to 0} x\dfrac{x^2-y^2}{x^2+y^2} = x\]</span></p><p><span class="math display">\[f_{yx}(0,0) = \frac{f_y(x,0) - f_y(0,0)}{x - 0} = \frac{x}{x} = 1\]</span></p><p><strong>综上：</strong></p><p><span class="math display">\[f_{xy}&#39;&#39;(0,0) \cdot f_{yx}&#39;&#39;(0,0) = -1\]</span></p><h1 id="题目318">题目318</h1><p><span class="math display">\[若 \frac{\partial^2z}{\partial x\partial y} = 1,且当 x = 0 时,z=\sin y;当y=0时,z=\sin x.求z(x,y)\]</span></p><h2 id="解答-12">解答</h2><p>看到求一个 <strong>函数的表达式</strong>，那就是妥妥的 <strong>微分方程</strong> 了</p><p><span class="math display">\[z_{xy} = 1 \Rightarrow \int z_{xy} dy =  \int dy\Rightarrow z_x = y + \varphi(x)\]</span></p><p><span class="math display">\[\Rightarrow \int z_x dx = \int [y + \varphi(x)] dx\Rightarrow z = xy + \int \varphi(x) dx + \psi(y)\]</span></p><p>然后代入特值，计算式子中的待定项即可：</p><p>当 <span class="math inline">\(x=0\)</span> 时：<span class="math inline">\(z = \sin y = \psi(y)\)</span></p><p>当 <span class="math inline">\(y=0\)</span> 时：<span class="math inline">\(z = \sin x = \int \varphi(x)dx\)</span></p><p><span class="math display">\[故 z(x,y) = xy + \sin x + \sin y\]</span></p><h1 id="题目319">题目319</h1><p><span class="math display">\[设可微函数 f(x,y) 满足 \frac{\partial f}{\partial x} = -f(x,y),f(0,\frac{\pi}{2}) = 1，\\\ \quad \\\且 \lim_{n\to\infty} \bigg[{    \frac{f(0,y+\dfrac{1}{n})}{f(0,y)}}\bigg]^n = e^{\cot y}，求 f(x,y)\]</span></p><h2 id="解答-13">解答</h2><p>要求函数 <span class="math inline">\(f(x,y)\)</span> 的函数表达式，本题就是一个 <strong>微分方程</strong> 的问题</p><p><span class="math display">\[\frac{\partial f}{\partial x} = -f \Rightarrow \frac{\partial f}{f} = -1\partial x \Rightarrow\ln f = -x + C(y) \Rightarrowf = C_2(y)e^{-x}\]</span></p><p>现需要想办法把 <span class="math inline">\(C_2(y)\)</span> 解出来，试试看处理其他条件</p><p><span class="math inline">\(f(0,\dfrac{\pi}{2}) = 1\)</span> 这样的初值条件，在微分方程里只能用于确定任意常数 <span class="math inline">\(C\)</span></p><p><span class="math display">\[\lim_{n\to\infty} \bigg[{    \frac{f(0,y+\dfrac{1}{n})}{f(0,y)}}\bigg]^n =e^{\lim\limits_{n\to \infty} n \cdot \frac{f(0,y+\frac{1}{n}) - f(0,y)}{f(0,y)}} = e^{\lim\limits_{n\to \infty} \frac{f(0,y+\frac{1}{n}) - f(0,y)}{\frac{1}{n}} \cdot \frac{1}{f(0,y)}}= e^{\frac{f_y(0,y)}{f(0,y)}}\]</span></p><p>故建立 <strong>微分方程</strong>：<span class="math inline">\(\dfrac{f_y(0,y)}{f(0,y)} = \cot y \Rightarrow \dfrac{df}{f} = \cot ydy \Rightarrow \ln f = \ln(\sin y) + C_1\)</span></p><blockquote><p>这里由于 <span class="math inline">\(x=0\)</span> 故直接当成 <strong>一元函数</strong> <strong>一阶导</strong> 来处理</p></blockquote><p>得：<span class="math inline">\(f(0,y) = C_1 \cdot (\sin y)\)</span></p><p>代入初值 <span class="math inline">\(f(0,\dfrac{\pi}{2}) = 1\)</span> 得：<span class="math inline">\(1 = C_1 \cdot 1 \Rightarrow C_1 = 1 \Rightarrow f(0,y) = \sin y\)</span></p><p>代入<span class="math inline">\(f(0,y)=\sin y\)</span> 得：<span class="math inline">\(\sin y = C_2(y)\)</span></p><p>故 <span class="math inline">\(f(x,y) = \sin y \cdot e^{-x}\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第288 - 303题</title>
      <link href="/graduate_exam/Math/0x120-0x12F/"/>
      <url>/graduate_exam/Math/0x120-0x12F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目288">题目288</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\((-\infty,+\infty)\)</span> 上二阶可导，且 <span class="math inline">\(f&#39;&#39;(x)\ne0\)</span>，<span class="math inline">\(\lim\limits_{x\to\infty}\dfrac{\sqrt{x^2-x+1}}{xf&#39;(x)}=\alpha&gt;0\)</span>， 且存在一点 <span class="math inline">\(f(x_0)&lt;0\)</span>. 证明方程 <span class="math inline">\(f(x)=0\)</span> 在 <span class="math inline">\((-\infty,+\infty)\)</span> 上恰有两个实根</p><h2 id="解答">解答</h2><p>看到要证明 <strong>恰好</strong> ，基本上都是经典的 <strong>夹逼</strong> ：<span class="math inline">\(\text{最优解} \ge \text{贪心解} \&amp; \text{最优解} \le \text{贪心解} \Rightarrow \text{最优解} = \text{贪心解}\)</span></p><p>根据昨天证明的 <strong>罗尔原话</strong>，<span class="math inline">\(f&#39;&#39;(x)\ne0 \Rightarrow f(x)\text{至多2个根}\)</span></p><p>然后我们分类讨论极限趋于 <strong>正无穷</strong> 和 <strong>负无穷</strong> 两种情况即可：</p><p><strong>当 <span class="math inline">\(x \to +\infty\)</span> 时：</strong></p><p><span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{\sqrt{x^2-x+1}}{xf&#39;(x)}= \lim\limits_{x\to+\infty}\dfrac{1}{f&#39;(x)}=\alpha&gt;0\)</span></p><p>故根据 <strong>极限的保号性</strong>：<span class="math inline">\(\exists X_1 &gt; 0\)</span>，当 <span class="math inline">\(x &gt; X_1\)</span> 时，恒有 <span class="math inline">\(f&#39;(x) &gt; \dfrac{1}{2\alpha} &gt; 0\)</span></p><p>而我们要的是 <span class="math inline">\(f(x)\)</span> 不是 <span class="math inline">\(f&#39;(x)\)</span>，故想到 <strong>拉格朗日中值定理</strong> 建立 <span class="math inline">\(f\)</span> 与 <span class="math inline">\(f&#39;\)</span> 的关系</p><p><span class="math inline">\(\exists \xi \in(X_1, x),~~s.t.\\ f(x) = f(X_1) + f&#39;(\xi)(x - X_1) &gt; f(X_1) + \dfrac{1}{2\alpha}(x-X_1) = \text{常数} + \text{常数} \times \text{(无穷大 - 常数)} \to \infty\)</span></p><p>故 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = +\infty &gt; 0\)</span></p><p><strong>同理可证：当 <span class="math inline">\(x \to -\infty\)</span> 时，<span class="math inline">\(\lim\limits_{x\to-\infty}f(x) = +\infty &gt; 0\)</span></strong></p><p>因 <span class="math inline">\(f(-\infty) &gt; 0, f(x_0) &lt; 0, f(+\infty) &gt; 0\)</span></p><p>由 <strong>零点定理的推广定理</strong> 可知，至少存在两点 <span class="math inline">\(\zeta_1\in (-\infty,x_0), \zeta_2\in(x_0,+\infty), s.t. f(\zeta_1) = f(\zeta_2) = 0\)</span></p><p>由 <span class="math inline">\(\text{零点个数} \ge 2 ~\&amp;~ \text{零点个数} \le 2 \Rightarrow \text{零点个数} = 2\)</span></p><p>得证</p><h1 id="题目289">题目289</h1><p>（2020年2）设函数 <span class="math inline">\(f(x)\)</span> 在区间 <span class="math inline">\([-2,2]\)</span> 上可导，且 <span class="math inline">\(f&#39;(x)&gt;f(x)&gt;0\)</span>，则（ ）</p><p>（A）<span class="math inline">\(\dfrac{f(-2)}{f(-1)}&gt;1\)</span> （B）<span class="math inline">\(\dfrac{f(0)}{f(-1)}&gt;e\)</span> （C）<span class="math inline">\(\dfrac{f(1)}{f(-1)}&lt;e^2\)</span> （D）<span class="math inline">\(\dfrac{f(2)}{f(-1)}&lt;e^3\)</span></p><h2 id="解答-1">解答</h2><p>题目给出了 <span class="math inline">\(f\)</span> 与 <span class="math inline">\(f&#39;\)</span>的 <strong>大小关系</strong>，为了利用该 <strong>关系</strong> 建立 <strong>不等式</strong>，立刻就想到了 <strong>中值定理</strong></p><blockquote><p>插一句，这种给定 <strong>不等式关系</strong> 的题目，<span class="math inline">\(80\%\)</span> 最后都是利用 <strong>不等号方向</strong> 把某 <strong>余项</strong> 放缩掉，这个思想很重要</p></blockquote><p>首先排除 <strong>罗尔定理</strong>，因为题目中没有明确给出相等的两点；而 <strong>泰勒中值</strong> 一般用于高阶，有些牛刀杀鸡的意思</p><p>那么还剩下 <strong>柯西中值</strong> 和 <strong>拉格朗日中值</strong> 了。<strong>A选项</strong> 可以用 <strong>拉格朗日中值</strong> 快速判断出答案：</p><p><span class="math inline">\(f(-1) - f(-2) = f&#39;(\xi_1) &gt; 0\)</span> ，故 <span class="math inline">\(f(-1) &gt; f(-2) &gt; 0 \Rightarrow \dfrac{f(-2)}{f(-1)} &lt; 1\)</span> <strong>故A错误</strong></p><p>但是后三个不太行，通过观察发现右侧是一个同样在 <strong>随参数变化</strong> 的 <strong>指数函数</strong>，因此我们考虑构造 <strong>辅助函数</strong></p><p>B：<span class="math inline">\(\dfrac{e^0 \cdot f(0)}{e^{-1} \cdot f(-1)}&gt;1\)</span> 。令 <span class="math inline">\(F(x) = e^x \cdot f(x)\)</span>，再对 <span class="math inline">\(F(x)\)</span> 使用 <strong>拉格朗日中值定理</strong> 即可：</p><p><span class="math inline">\(F(0) = F(-1) + F&#39;(\xi_2) &gt; F(-1) \Rightarrow \dfrac{F(0)}{F(-1)} &gt; 1 \Rightarrow \dfrac{e^0 \cdot f(0)}{e^{-1} \cdot f(-1)}&gt;1 \Rightarrow \dfrac{f(0)}{f(-1)} &gt; e\)</span> 故 <strong>B 正确</strong></p><p><span class="math inline">\(F(1) = F(-1) + F&#39;(\xi_3) &gt; F(-1) \Rightarrow \dfrac{F(1)}{F(-1)} &gt; 1 \Rightarrow \dfrac{e^1 \cdot f(1)}{e^{-1} \cdot f(-1)}&gt;1 \Rightarrow \dfrac{f(1)}{f(-1)} &gt; e^2\)</span> 故 <strong>C 错误</strong></p><p><span class="math inline">\(F(2) = F(-1) + F&#39;(\xi_4) &gt; F(-1) \Rightarrow \dfrac{F(2)}{F(-1)} &gt; 1 \Rightarrow \dfrac{e^2 \cdot f(2)}{e^{-1} \cdot f(-1)}&gt;1 \Rightarrow \dfrac{f(2)}{f(-1)} &gt; e^3\)</span> 故 <strong>D 错误</strong></p><p>综上，正确的选项为 <strong>B</strong></p><h1 id="题目290">题目290</h1><p>（2018年2）已知常数 <span class="math inline">\(k\ge \ln2 - 1\)</span>，证明：<span class="math inline">\((x-1)(x-\ln^2 x+2k\ln x-1)\ge0\)</span></p><h2 id="解答-2">解答</h2><p><strong>微分不等式</strong> 的题目都是套路，按照套路一步步做就好了</p><p>观察到不等式左边是两个因式积的形式，直接乘开不好做，故我们分类讨论即可：</p><p><strong>1.<span class="math inline">\(x\gt 1\)</span> 时：</strong></p><p>令 <span class="math inline">\(f(x) = x-\ln^2 x+2k\ln x-1\)</span>，</p><p>则 <span class="math inline">\(f&#39;(x)=1-\dfrac{2\ln x}{x} + \dfrac{2k}{x} = \dfrac{x-2\ln x + 2k}{x}\)</span></p><p>令 <span class="math inline">\(g(x) = x - 2\ln x + 2k\)</span>，则 <span class="math inline">\(g&#39;(x) = \dfrac{x-2}{x} \xlongequal{令}0\)</span>，得：<span class="math inline">\(g&#39;(2) = 0\)</span></p><p>故 <span class="math inline">\(g(x)\)</span> 在 <span class="math inline">\(x=2\)</span> 取极小值，<span class="math inline">\(g(2) = 2\cdot \big[k-(\ln 2 - 1)\big] \ge 0\)</span></p><p><span class="math inline">\(\Rightarrow f&#39;(x) \ge 0 \Rightarrow f(x) \text{单调递增} \Rightarrow (x-1)f(x)\text{单调递增}\)</span></p><p><strong>2.<span class="math inline">\(0 \lt x\lt 1\)</span> 时：</strong></p><p>同理可证得 <span class="math inline">\((x-1)f(x)\text{单调递减}\)</span></p><p>由 <strong>极值的定义</strong> 可知，<span class="math inline">\((x-1)f(x)\)</span> 在 <span class="math inline">\(x=1\)</span> 取极小值，且该 <strong>局部极小值</strong> 为 <strong>全局最小值</strong></p><p><span class="math inline">\(\bigg[(x-1)f(x)\bigg]_{min} = \bigg[(1-1)f(1)\bigg] = 0 \Rightarrow (x-1)(x-\ln^2 x+2k\ln x-1)\ge0\)</span></p><h1 id="题目291">题目291</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 二阶可导，<span class="math inline">\(f(0)=1, f&#39;(0)=0\)</span>，且对任意 <span class="math inline">\(x\ge0\)</span> 有</p><p><span class="math inline">\(f&#39;&#39;(x)-5f&#39;(x)+6f(x)\ge0\)</span>，证明不等式 <span class="math inline">\(f(x)\ge3e^{2x}-2e^{3x},(x\ge0)\)</span></p><h2 id="解答-3">解答</h2><p>微分不等式，套路题</p><p>构造辅助函数 <span class="math inline">\(F(x)=f(x)-3e^{2x}+2e^{3x}\)</span>，<span class="math inline">\(F(0) = 0\)</span></p><p>则：<span class="math inline">\(F&#39;(x) = f&#39;(x)-6e^{2x}+6e^{3x}\)</span>，<span class="math inline">\(F&#39;(0) = 0\)</span></p><p>则：<span class="math inline">\(F&#39;&#39;(x)=f&#39;&#39;(x)-12e^{2x} + 18e^{3x}\)</span>，利用题目中最后给的不等式，有：</p><p><span class="math display">\[F&#39;&#39;(x)-5F&#39;(x)+6F(x)=f&#39;&#39;(x)-5f&#39;(x)+6f(x)\ge0\]</span></p><p>故 <span class="math inline">\(F&#39;(x) \ge 0 \quad\Rightarrow\quad F(x)\ge 0 \quad\Rightarrow\quad f(x) \ge 3e^{2x}-2e^{3x}\)</span></p><h1 id="题目292">题目292</h1><p>证明不等式：<span class="math inline">\(\bigg|{  \dfrac{\sin x - \sin y}{x - y} - \cos y }\bigg| \le \dfrac{1}{2} |x - y|\quad(x \ne y)\)</span></p><h2 id="解答-4">解答</h2><p>看到有碍眼的 <strong>绝对值</strong> ，在不等式的证明中，常见的去绝对值的方法有 <strong>绝对值不等式</strong></p><p>但是本题 <span class="math inline">\(x,y\)</span> 都是参数，且满足 <span class="math inline">\(x\ne y\)</span>，因此我们不妨设 <span class="math inline">\(x&gt;y\)</span>：</p><p><span class="math display">\[\begin{aligned}    \bigg|\frac{\sin x - \sin y}{x - y} - \cos y\bigg| &amp;\le \frac{1}{2}(x-y) \\\\     \sin x - \sin y - \cos y(x - y) &amp;\le \frac{1}{2}(x-y)^2\end{aligned}\]</span></p><p>常见的微分不等式处理两个参数时，可以把另一个给令成变量 <span class="math inline">\(x\)</span> 然后求导找单调性</p><p>但是本体做不了，不过通过观察，我们发现化简后的不等式中出现了 <strong>泰勒展开</strong> 的形式</p><p>考虑把 <span class="math inline">\(\sin x\)</span> 在 <span class="math inline">\(x=y\)</span> 处展开：<span class="math inline">\(\sin x = \sin y + \cos x(x-y)-\dfrac{\sin y}{2}(\xi-y)^2\)</span></p><p>化简不等式左侧：<span class="math inline">\(-\dfrac{\sin y}{2}(\xi-y)^2\)</span></p><p>由于 <span class="math inline">\(-1 \le \sin y \le 1\)</span>，故 <span class="math inline">\(-\dfrac{1}{2}(\xi-y)^2\le -\dfrac{\sin y}{2}(\xi-y)^2\le\dfrac{1}{2}(\xi-y)^2\)</span></p><p>又 <span class="math inline">\(y &lt; \xi &lt; x\)</span>，故 <span class="math inline">\(-\dfrac{\sin y}{2}(\xi-y)^2\le\dfrac{1}{2}(\xi-y)^2 \lt \dfrac{1}{2}(x-y)^2\)</span></p><p>得证</p><blockquote><p>做到这里一看，前面去绝对值的操作挺多余的，本题核心还是同乘 <span class="math inline">\(x-y\)</span> 化简</p></blockquote><h1 id="题目293">题目293</h1><p>（2020年数二）设函数 <span class="math inline">\(f(x)=\int_1^xe^{t^2}dt\)</span></p><ol type="1"><li><p>证明：存在 <span class="math inline">\(\xi\in(1,2)，s.t. f(\xi)=(2-\xi)e^{\xi^2}\)</span></p></li><li><p>证明：存在 <span class="math inline">\(\eta\in(1,2)，s.t. f(2)=\ln 2 \cdot \eta e^{\eta^2}\)</span></p></li></ol><h2 id="解答-5">解答</h2><p>中值定理的题干中给出了 <span class="math inline">\(f(x)\)</span> 的积分形式，那么这题一般是要用到 <strong>积分中值定理</strong> 的</p><p>构造 <span class="math inline">\(F(x) = f(x) - (2-x)e^{x^2}\)</span>，则 <span class="math inline">\(F(1) = -e &lt; 0，F(2)=\int_1^2e^{t^2}dt &gt; 0\)</span></p><p>由 <strong>零点定理</strong> 可知：<span class="math inline">\(\exists \xi\in(1,2), s.t. F(\xi)=0\)</span>，即 <span class="math inline">\(f(\xi)=(2-\xi)e^{\xi^2}\)</span> <strong>得证</strong></p><p>对 <span class="math inline">\(f(2)\)</span> 使用 <strong>积分中值定理</strong>：<span class="math inline">\(\exists \zeta \in(1,2),s.t.f(2)=e^{\zeta^2}\)</span></p><p>构造 <span class="math inline">\(G(x) = e^{\zeta^2} - \ln 2 \cdot x \cdot e^{x^2}\)</span></p><p>则 <span class="math inline">\(G(1) = e^{\zeta^2} - \ln 2 e^1 = e\cdot [e^{\zeta^2 - 1} - \ln 2] &gt; 0\)</span></p><p>又 <span class="math inline">\(G(2) = e^{\zeta^2} - 2\ln 2 e^2 = e^2\cdot [e^{\zeta^2 - 2} - \ln 4] &lt; 0\)</span></p><p>故，由 <strong>零点定理</strong> 可知，<span class="math inline">\(\exists \eta\in(1,2)，s.t.f(2)=\ln 2 \cdot \eta e^{\eta^2}\)</span></p><hr /><p>看了一下武老师的方法，先把右侧除到左侧做一次恒等变形，如下：</p><p><span class="math inline">\(\dfrac{f(2)}{\eta}=\ln 2 \cdot f&#39;(\eta)\)</span>，故可构造 <span class="math inline">\(F(x) = f(2)\ln x - \ln 2 \cdot f(x)\)</span></p><p>则 <span class="math inline">\(F(1) = F(2) = 0 \Rightarrow F&#39;(\eta) = 0\)</span> （<strong>罗尔定理</strong>）</p><hr /><p>武老师的 <strong>方法二</strong> 是把常数放一边，变量放另一边（<strong>这个思想很重要！！</strong>），如下：</p><p><span class="math inline">\(\dfrac{f(2)}{\ln 2} = \dfrac{f&#39;(\eta)}{\dfrac{1}{\eta}}\)</span>，故可构造 <span class="math inline">\(F(x) = \dfrac{f(x)}{\ln x}\)</span>，则由 <strong>柯西中值定理：</strong> <span class="math inline">\(\dfrac{f(2) - f(1)}{\ln 2 - \ln 1} = \dfrac{f&#39;(\eta)}{\dfrac{1}{\eta}}\)</span></p><p>中值定理的证明题，一题有多解，个人建议做题时每一中都要学会，思想很重要</p><h1 id="题目294">题目294</h1><p>(2019年2) 已知函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上具有二阶导数，且 <span class="math inline">\(f(0)=0,f(1)=1\)</span>,<span class="math inline">\(\int_0^1 f(x)dx = 1\)</span></p><p>证明： 1. 存在 <span class="math inline">\(\xi \in(0, 1),s.t.f&#39;(\xi)=0\)</span> 2. 存在 <span class="math inline">\(\eta\in(0, 1),s.t.f&#39;&#39;(\eta)\le -2\)</span></p><h2 id="解答-6">解答</h2><p>第一问还是比较裸的送分题，既然要 <strong>估计</strong> 出 <strong>一阶导数</strong> 为<span class="math inline">\(0\)</span>的，那么必然想到了 <strong>罗尔定理</strong></p><p>由于 <span class="math inline">\(f(0)=0,f(1)=1,\int_0^1f(x)dx=1\)</span>，设<span class="math inline">\(M\)</span>为<span class="math inline">\(f(x)\)</span>在<span class="math inline">\((0,1)\)</span>上的最大值</p><p>故 <span class="math inline">\(\exist \xi\in(0,1),s.t.f(\xi)=M\)</span>（最值不在端点处取到，则一定在区间内部的极值处取到）</p><p>由 <strong>费马引理：</strong> <span class="math inline">\(f&#39;(\xi)=0\)</span> 得证</p><p>第二问牵扯到了高阶导数，一般用 <strong>泰勒中值</strong> 来做</p><p>考虑 <strong>展开点</strong> 的问题，这题 <strong>泰勒</strong> 要展开到 <strong>2阶</strong>，故 <strong>一阶导数</strong> 是要想办法 <strong>消掉</strong> 的</p><p>而第一问中求出的 <span class="math inline">\(f&#39;(\xi)=0\)</span> 就可以很好的接上了，因此选取 <strong>端点</strong> 在 <span class="math inline">\(x=\xi\)</span> <strong>展开</strong></p><p><span class="math inline">\(f(x)=f(\xi) + f&#39;(\xi)(x-\xi) + \dfrac{f&#39;&#39;(\zeta)}{2}(x-\xi)^2 ~\Rightarrow~ f&#39;&#39;(\zeta) = 2\cdot \dfrac{f(x)-f(\xi)}{(x-\xi)^2}\)</span></p><p>令 <span class="math inline">\(x=0\)</span> 可得：<span class="math inline">\(f&#39;&#39;(\zeta) = \dfrac{-2M}{\xi^2}\le -2\)</span></p><p>故 <span class="math inline">\(\exist \eta\in(0,\xi)\subset(0,1),s.t.f&#39;&#39;(\eta)\le -2\)</span></p><h2 id="第二问的辅助多项式解法">第二问的辅助多项式解法</h2><hr /><p>令 <span class="math inline">\(F(x) = f(x) - (ax^2+bx+c)\)</span>，代入给个点的值：</p><p>令$ \begin{cases} F(0)=-c = 0 \\ F(1)=1-(a+b+c) = 0 \\ _0^1F(x)dx = _0^1f(x)dx -  -  = 0 \end{cases} $</p><hr /><p><code>以上不应该出现在答题纸上，这些是草稿纸上的步骤</code></p><p>解得：<span class="math inline">\(F(x) = f(x)+3x^2-4x\)</span></p><p>则 <span class="math inline">\(F(0)=F(1)= F(x_0)=0 \quad(\text{其中}x_0\in(0, 1))\)</span> <strong>(积分中值定理)</strong></p><p>连续使用 <strong>罗尔定理</strong> 可得：</p><p><span class="math inline">\(\exist \xi_1\in(0, x_0),s.t.F&#39;(\xi_1)=0\)</span></p><p><span class="math inline">\(\exist \xi_2\in(x_0, 1),s.t.F&#39;(\xi_2)=0\)</span></p><p><span class="math inline">\(\exist \xi\in(\xi_1, \xi_2),s.t.F&#39;&#39;(\xi)=0\)</span></p><p>故：<span class="math inline">\(f&#39;&#39;(x)=-6\le -2\)</span> <strong>得证</strong></p><h1 id="题目295">题目295</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上二阶可导，且 <span class="math inline">\(\lim\limits_{x\to0^+}\dfrac{f(x)}{x}=2,\int_0^1f(x)dx=1\)</span></p><p>试证： 1. 存在 <span class="math inline">\(\xi\in(0,1), s.t.f&#39;(\xi)=f(\xi)-2\xi+2\)</span> 2. 存在 <span class="math inline">\(\eta\in(0,1),s.t.f&#39;&#39;(\eta) = 0\)</span> 3. 存在 <span class="math inline">\(\zeta\in(0,1),s.t.\int_0^\zeta f(t)dt+\zeta f(\zeta) = 2\zeta\)</span> 4. 存在 <span class="math inline">\(\mu\in(0,1),s.t.\mu f(\mu)=2\int_0^\mu f(t)dt\)</span></p><h2 id="解答-7">解答</h2><p>这是一场 <strong>构造题专场</strong>，四个问完全不相干，每一题都要构造一个新的辅助函数，就当加深一下思维了</p><p>由题干可以简单得出的几个条件：<span class="math inline">\(f(0)=0,f&#39;(0)=2,f(x_0)=0\quad(0&lt;x_0&lt;1)\)</span></p><h3 id="第一问">第一问</h3><p>证明的等式中出现了：<span class="math inline">\(g&#39;(x)-g(x)\)</span> 得形式，故构造辅助函数 <span class="math inline">\(F(x) = \big(f(x)-2x\big) e^{-x}\)</span></p><p>则 <span class="math inline">\(F&#39;(x) = e^{-x}\cdot\Big({f&#39;(x)-2-f(x)+2x}\Big)\)</span></p><p>又 <span class="math inline">\(\int_0^1F(x)e^xdx = 0 \Rightarrow F(x_1) = 0\)</span> （积分中值定理，其中<span class="math inline">\(x_1\in(0,1)\)</span>）</p><p>故由 <span class="math inline">\(F(0) = F(x_1)=0 \Rightarrow F&#39;(\xi) = e^{-\xi}\cdot \Big(f&#39;(\xi)-f(\xi)+2\xi-2\Big) = 0\)</span></p><p>(罗尔定理) 其中 <span class="math inline">\(\xi \in (0, x_1)\subset (0, 1)\)</span> <strong>故得证</strong></p><h3 id="第二问">第二问</h3><p>这一问可以直接借助上一问的辅助函数继续操作：<span class="math inline">\(F&#39;(0)=F&#39;(\xi) = 0 \Rightarrow F&#39;&#39;(\eta) = 0\)</span></p><p>（罗尔定理）其中 <span class="math inline">\(\eta\in(0,\xi)\subset(0,1)\)</span> <strong>故得证</strong></p><h3 id="第三问">第三问</h3><p>看到等式左边出现了 <span class="math inline">\(u&#39;v+uv&#39;\)</span> 的形式，故考虑用 <strong>乘积的求导公式</strong> 还原原函数</p><p>构造辅助函数：<span class="math inline">\(G(x) = x\int_0^xf(t)dt - x^2\)</span>，则 <span class="math inline">\(G&#39;(x) = \int_0^xf(t)dt - xf(x) - 2x\)</span></p><p>由 <span class="math inline">\(G(0)=G(1)=0 \Rightarrow G&#39;(\xi)=0\)</span>（罗尔定理）其中 <span class="math inline">\(\xi\in(0, 1)\)</span> <strong>故得证</strong></p><h3 id="第四问">第四问</h3><p>看到有 <span class="math inline">\(u&#39;v - uv&#39;\)</span> 的形式，故考虑用 <strong>商的求导公式</strong> 还原原函数</p><p>构造辅助函数：<span class="math inline">\(H(x) = \dfrac{\int_0^2f(t)dt}{x^2}\)</span>，则 <span class="math inline">\(H&#39;(x) = \dfrac{xf(x)-2\int_0^xf(t)dt}{x^3}\)</span></p><p>由于该函数在 <span class="math inline">\(x = 0\)</span> 处没有定义，故我们需要进行补充定义：<span class="math inline">\(H(x) = \begin{cases}  1 &amp; x = 0\\  \dfrac{\int_0^2f(t)dt}{x^2} &amp; 0 &lt; x &lt; 1 \end{cases}\)</span></p><p>则 <span class="math inline">\(H(0) = H(1) = 1 \Rightarrow H&#39;(\mu) = 0\)</span> （罗尔定理）其中 <span class="math inline">\(\mu\in(0,1)\)</span> <strong>故得证</strong></p><h1 id="题目296">题目296</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上连续，在 <span class="math inline">\((0,1)\)</span> 内可导，且 <span class="math inline">\(f(0)=1,f(1)=0\)</span></p><p>证明： 1. 存在两个不同的点 <span class="math inline">\(\xi_1,\xi_2\in(0,1),s.t.f&#39;(\xi_1)+f&#39;(\xi_2)=-2\)</span> 2. 存在两个不同的点 <span class="math inline">\(\eta,\zeta\in(0,1),s.t.f&#39;(\eta)f&#39;(\zeta)=1\)</span></p><h2 id="第一问解答">第一问解答</h2><p>本题为中值定理中的一类经典模型：<strong>双中值问题</strong></p><p>解决方法也很简单，那就是 <strong>拆分区间</strong>，然后分别在两个区间上进行 <strong>区间估计</strong></p><p>要把区间拆分成什么样，一开始我们是不知道了，因此需要从答案入手开始尝试试出来</p><hr /><p>先不妨令该拆分点为 <span class="math inline">\(x(0&lt;x&lt;1)\)</span>，则分别两左右两个区间上使用 <strong>拉格朗日中值定理</strong> 可得：</p><p><span class="math display">\[\begin{cases}    f(x)-1=f&#39;(\xi_1)\cdot x\\\\    -f(x)=f&#39;(\xi_2)\cdot (1 - x)\end{cases}\]</span></p><p>将两者加起来可得：<span class="math inline">\(f&#39;(\xi_1)+f&#39;(\xi_2)=\dfrac{f(x)-1}{x}+\dfrac{-f(x)}{1-x}\)</span></p><p>为了让 <strong>右式</strong> 与原题中的 <span class="math inline">\(-2\)</span> 对应上，观察可得 <strong>分子</strong> 若 <strong>直接相加</strong>，和为 <strong>常数</strong> <span class="math inline">\(1\)</span></p><p>假使 <strong>分母</strong> 能够 <strong>相等</strong> 且为 <span class="math inline">\(\dfrac{1}{2}\)</span> ，那么这题将绝杀</p><p>经过观察发现是这样的，令 <span class="math inline">\(x = 1-x \Rightarrow x = \dfrac{1}{2}\)</span> 这样第一问分析就结束了（<strong>以上步骤只出现在草稿纸上</strong>）</p><hr /><p><strong>答题纸上的步骤：</strong></p><p>在区间 <span class="math inline">\([0,\dfrac{1}{2}]\)</span> 上使用 <span class="math inline">\(Lagrange\)</span> 中值定理：<span class="math inline">\(\exist\xi_1\in(0,\dfrac{1}{2}),s.t. f&#39;(\xi_1) = \dfrac{f(\frac{1}{2}) - 1}{\frac{1}{2}}\)</span></p><p>在区间 <span class="math inline">\([\dfrac{1}{2},1]\)</span> 上使用 <span class="math inline">\(Lagrange\)</span> 中值定理：<span class="math inline">\(\exist\xi_2\in(\dfrac{1}{2},1),s.t. f&#39;(\xi_2) = \dfrac{-f(\frac{1}{2})}{\frac{1}{2}}\)</span></p><p>则 <span class="math inline">\(f(\xi_1)+f(\xi_2)= -2\)</span> <strong>得证</strong></p><h2 id="第二问解答">第二问解答</h2><p>同样是 <strong>双中值问题</strong>，因此我们继续沿用上一问分析中的等式：</p><p><span class="math display">\[\begin{cases}    f(x)-1=f&#39;(\xi_1)\cdot x\\\\    -f(x)=f&#39;(\xi_2)\cdot (1 - x)\end{cases}\]</span></p><p>则 <span class="math inline">\(f&#39;(\xi_1)\cdot f&#39;(\xi_2) = \dfrac{f(x)-1}{x} \cdot \dfrac{f(x)}{x - 1}\)</span></p><p>为了让 <strong>右式</strong> 与原题中的 <span class="math inline">\(1\)</span> 对应上，观察可得我们需要该 <strong>乘积</strong> 中的 <strong>分子分母</strong> 互相 <strong>抵消</strong></p><p>该等式 <strong>非常不好看</strong>，我们试着 <strong>交换</strong> 他们的分子分母，把 <strong>同形式</strong> 的放在一起（<strong>常用手段，相同系数/形式放一起</strong>）</p><p><span class="math inline">\(f&#39;(\xi_1)\cdot f&#39;(\xi_2) = \dfrac{f(x)-1}{x - 1} \cdot \dfrac{f(x)}{x}\)</span></p><p>这样秒观察出来，我们需要找的点，就是满足 <span class="math inline">\(f(x)=x\)</span> 的点 <strong>(以上为分析步骤，只出现在草稿纸上)</strong></p><hr /><p><strong>答题纸上的步骤：</strong></p><p><strong>构造辅助函数：</strong> <span class="math inline">\(F(x) = f(x)-x\)</span>，则 <span class="math inline">\(F(0)=1&gt;0, F(1)=-1 &lt; 0\)</span></p><p>故由 <strong>零点定理</strong> 可知，<span class="math inline">\(\exist x\in(0,1),s.t.F(x) = 0 \Rightarrow f(x) = x\)</span></p><p>在区间 <span class="math inline">\([0,x]\)</span> 上使用 <span class="math inline">\(Lagrange\)</span> 中值定理：<span class="math inline">\(\exist\eta\in(0,x),s.t. f&#39;(\eta) = \dfrac{x - 1}{x}\)</span></p><p>在区间 <span class="math inline">\([x,1]\)</span> 上使用 <span class="math inline">\(Lagrange\)</span> 中值定理：<span class="math inline">\(\exist\zeta\in(x,1),s.t. f&#39;(\zeta) = \dfrac{-x}{1-x}\)</span></p><p>则 <span class="math inline">\(f&#39;(\eta)f&#39;(\zeta)=1\)</span> <strong>得证</strong></p><h1 id="题目296-1">题目296</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\([0,1]\)</span> 上连续，且 <span class="math inline">\(\int_0^1 f(x)dx = I \ne 0\)</span></p><p>证明：存在两个不同的点 <span class="math inline">\(\xi,\eta\in(0,1), s.t. \dfrac{1}{f(\xi)}+\dfrac{1}{f(\eta)}=\dfrac{2}{I}\)</span></p><h2 id="解答-8">解答</h2><p>就是普通的 <strong>双中值问题</strong> 套皮套了个积分，我们构造 <strong>变上限积分</strong> 再把他看作 <strong>原函数</strong> 就是 <strong>裸题</strong> 了</p><p>令 <span class="math inline">\(F(x) = \int_0^x f(t)dt\)</span>，则 <span class="math inline">\(F(1)=I\ne0\)</span></p><hr /><p><strong>分析步骤：</strong></p><p>双中值问题，无外乎就是在原始区间上找到一个 <strong>分割点</strong>，然后在分割点 <strong>左右两侧</strong> 分别进行 <strong>中值估计</strong></p><p>但一开始我们并不知道 <strong>分割点</strong> 的具体数值，故把它设成参数 <span class="math inline">\(x\)</span> 进行估计，然后在结论中找出关系</p><p>拉格朗日中值定理：<span class="math inline">\(\dfrac{x}{F(x)} - \dfrac{1-x}{I-F(x)} = \dfrac{2}{I}\)</span></p><p>经过简短观察，我们有两种方案：</p><ol type="1"><li>两个分式单独处理（分子分母相消）：<span class="math inline">\(F(x)=x\)</span>，这样 <strong>左式</strong> <span class="math inline">\(=1 - 1 = 0\)</span> 等式不成立</li><li>两个分式一起处理（两个分母相等）：<span class="math inline">\(F(x) = I - F(x)\)</span>，这样 <strong>左式</strong> $=  = $ <strong>右式</strong> 等式成立</li></ol><p>故，我们要找的 <strong>分割点</strong> 满足：<span class="math inline">\(F(x) = \dfrac{I}{2}\)</span> 即可</p><p><strong>分析完毕</strong></p><hr /><p><span class="math inline">\(F(0)=0 ~~\&amp;~~ F(1)=I\ne 0 ~~\&amp;~~ F(x)\text{连续可导} \Rightarrow \exist c\in(0,1), s.t. F(c) = \dfrac{I}{2}\)</span> （<strong>连续函数的介值定理</strong>）</p><p>由 <span class="math inline">\(Lagrange\)</span> 中值定理：</p><p><span class="math inline">\(\exist \xi\in(0,c)\subset(0,1),s.t. f(\xi) = \dfrac{I}{2c}\)</span></p><p><span class="math inline">\(\exist \eta\in(c,1)\subset(0,1),s.t. f(\eta) = \dfrac{I}{2-2c}\)</span></p><p>则 <span class="math inline">\(\dfrac{1}{f(\xi)}+\dfrac{1}{f(\eta)}= \dfrac{2c}{I} + \dfrac{2 - 2c}{I} = \dfrac{2}{I}\)</span> <strong>得证</strong></p><h1 id="题目297">题目297</h1><p>求不定积分 <span class="math inline">\(\int x\arctan x \cdot \ln(1+x^2)dx\)</span></p><h2 id="解答-9">解答</h2><p>分部积分 + 凑微分法小技巧</p><p><span class="math display">\[\begin{aligned}&amp;\int x\arctan x \cdot \ln(1+x^2)dx \\\\=&amp;\frac{1}{2}\int \arctan x \cdot \ln(1+x^2)d(1+x^2) \\\\=&amp;\frac{1}{2} \arctan x \cdot \ln(1+x^2) (1+x^2) - \frac{1}{2}\int (1+x^2) \cdot (\frac{\ln(1+x^2)}{1+x^2} + 2x \cdot \frac{\arctan x}{1+x^2})dx\\\=&amp;\frac{1}{2} \arctan x \cdot \ln(1+x^2) (1+x^2) - \frac{1}{2} \int (\ln(1+x^2) + 2x \arctan x)dx\\\\&amp; \int x\arctan x dx = \frac{1}{2}\int \arctan x d(x^2+1) = \frac{1}{2}(x^2+1)\arctan x - \frac{1}{2}x + C_1\\\&amp; \int \ln(x^2+1)dx = x\ln(1+x^2) - 2\int \frac{x^2}{x^2+1}dx \\\\&amp; \int \frac{x^2}{x^2+1}dx = x - \int\frac{1}{x^2+1}dx = x - \arctan x + C_2 \\\\&amp; \int \ln(x^2+1)dx =x\ln(1+x^2) - 2x + 2\arctan x + C_3 \\\\&amp; \int x\arctan x \cdot \ln(1+x^2)dx \\\\=&amp; \frac{1}{2} \arctan x (1+x^2)\ln(1+x^2) - \frac{1}{2}x\ln(1+x^2)-\arctan x - \frac{1}{2}(x^2+1)\arctan x + \frac{3}{2}x + C\end{aligned}\]</span></p><h1 id="题目298">题目298</h1><p><span class="math display">\[\text{求不定积分}\int\dfrac{\sqrt{x-1}\arctan\sqrt{x-1}}{x}dx\]</span></p><h2 id="解答-10">解答</h2><p>换元用于打开局面，首要目标是先去掉根号，因此直接对整个根号进行换元</p><p>令 <span class="math inline">\(\sqrt{x-1} = t\)</span>，则原式为化为：</p><p><span class="math display">\[\begin{aligned}&amp;  \int\dfrac{\sqrt{x-1}\arctan\sqrt{x-1}}{x}dx\\\\=&amp; \int\dfrac{t\arctan t}{t^2 - 1} 2tdt\\\\=&amp; 2\int\dfrac{t^2 \arctan t}{t^2-1} dt\\\\=&amp; 2\int\dfrac{(t^2+1-1)\arctan t}{t^2-1} dt\quad(\text{假分式化简})\\\\=&amp; 2\int\arctan tdt - \int\frac{\arctan t}{t^2-1}dt\\\\=&amp; 2\bigg({    t\arctan t - \frac{1}{2}\int\frac{1}{1+t^2}d(t^2+1)}\bigg) - 2\int\arctan t d(\arctan t) \\\\=&amp; 2t\arctan t - \ln(t^2 + 1) - \arctan^2 t + C \\\\=&amp; 2\sqrt{x-1}\arctan\sqrt{x-1} - \ln x - \arctan^2\sqrt{x - 1} + C\end{aligned}\]</span></p><h1 id="题目299">题目299</h1><p><span class="math display">\[\text{求不定积分} \int \frac{\cos^3 x - 2 \cos x}{ 1  + \sin^2 x +\sin^4 x} dx\]</span></p><h2 id="解答-11">解答</h2><p><span class="math inline">\(f(\sin x, -\cos x) = -f(\sin x, \cos x)\)</span>，故我们可以把 <span class="math inline">\(\cos x\)</span> 凑微分变成 <span class="math inline">\(d\sin x\)</span></p><p><span class="math display">\[\begin{aligned}&amp;   \int \frac{\cos^3 x - 2 \cos x}{ 1  + \sin^2 x +\sin^4 x} dx \\\\=&amp; -\int \frac{1 + \sin^2 x}{1 + \sin^2x + \sin^4 x} d\sin x \\\\=&amp; -\int \frac{u^2 + 1}{u^4 + u^2 + 1} du \quad\text{(这是一个经典的有理式不定积分，需要背过做法)}\\\\=&amp; -\int \frac{1 + \dfrac{1}{u^2}}{u^2 + 1 + \dfrac{1}{u^2}} du\\\\=&amp; -\int \frac{1}{(u-\dfrac{1}{u})^2 + 3} d(u - \frac{1}{u})\\\\=&amp; -\arctan \frac{u - \dfrac{1}{u}}{\sqrt{3}} + C\\\\=&amp; -\frac{1}{\sqrt{3}}\arctan \frac{\sin x - \dfrac{1}{\sin x}}{\sqrt{3}} + C\end{aligned}\]</span></p><h1 id="题目300">题目300</h1><p><span class="math display">\[\text{求定积分} \int_{-\pi}^\pi\frac{x\sin x(\arctan e^x+\int_0^x e^{t^2}dt)}{1+\cos^2 x}dx\]</span></p><h2 id="解答-12">解答</h2><p>求定积分，不要上来就直接求 <strong>原函数</strong>，定积分有很多诸如“<strong>区间再现</strong>”以及“<strong>广义奇偶性</strong>”等技巧</p><p>先观察 <strong>积分域</strong>，是个关于 <span class="math inline">\(x=0\)</span> 对称的区间，故看一下 <strong>被积函数</strong> 是否关于 <span class="math inline">\(x=0\)</span> <strong>奇/偶对称</strong></p><p>显然被积函数中的因式 <span class="math inline">\(\dfrac{x\sin x}{1 + \cos^x}\)</span> 是 <strong>偶函数</strong>，<span class="math inline">\(\int_0^{x} e^{t^2}dt\)</span> 是 <strong>奇函数</strong></p><p>这里有个常用结论需要背过：<span class="math inline">\(\arctan a^x\)</span> 关于 <span class="math inline">\((0,\dfrac{\pi}{4})\)</span> <strong>中心对称</strong></p><p>因此，我们可以在加号处拆开，右式为奇函数，定积分直接等于 <span class="math inline">\(0\)</span>:</p><p><span class="math inline">\(\int_{-\pi}^\pi\frac{x\sin x(\arctan e^x+\int_0^x e^{t^2}dt)}{1+\cos^2 x}dx = \int_{-\pi}^\pi\frac{x\sin x\arctan e^x}{1+\cos^2 x}dx + \int_{-\pi}^\pi\frac{x\sin x\int_0^x e^{t^2}dt}{1+\cos^2 x}dx = \int_{-\pi}^\pi\frac{x\sin x\arctan e^x}{1+\cos^2 x}dx\)</span></p><p>然后直接套公式 <span class="math inline">\(\int_{-x}^xf(t)dt = \int_0^xf(t) + f(-t)dt\)</span> 即可：</p><p><span class="math display">\[\begin{aligned} &amp;\int_{-\pi}^\pi\frac{x\sin x\arctan e^x}{1+\cos^2 x}dx \\\\=&amp;\int_{0}^\pi\frac{x\sin x}{1+\cos^2 x} (\arctan e^x + \arctan e^{-x})dx\\\\=&amp;\int_{0}^\pi\frac{x\sin x}{1+\cos^2 x} \cdot \frac{\pi}{2}dx\\\\=&amp;\frac{\pi}{2} \cdot \pi \cdot \int_0^{\frac{\pi}{2}} \frac{\sin x}{1 + \cos^2x}dx\\\\=&amp;-\frac{\pi}{2} \cdot \pi \cdot \int_0^{\frac{\pi}{2}} \frac{1}{1 + \cos^2x}d\cos x\\\\=&amp;-\frac{\pi}{2} \cdot \pi \cdot \arctan \cos x \Big|_0^\frac{\pi}{2}\\\\=&amp;\frac{\pi^3}{8}\end{aligned}\]</span></p><h1 id="题目301">题目301</h1><p><span class="math display">\[\text{求定积分} \int_0^{+\infty}\frac{1}{(1 + x^2)(1+x^4)}dx\]</span></p><h2 id="法一三角换元切割化弦区间再现">法一（三角换元、切割化弦、区间再现）</h2><p><span class="math display">\[\begin{aligned} &amp;\int_0^{+\infty}\frac{1}{(1 + x^2)(1+x^4)}dx \\\\=&amp;\int_0^{\frac{\pi}{2}}\frac{1}{\sec^2 t (1+\tan^4 t)} \sec^2 t dt \\\\=&amp;\int_0^{\frac{\pi}{2}}\frac{1}{1+\tan^4 t} dt \\\\=&amp;\int_0^{\frac{\pi}{2}}\frac{\cos^4 t}{\cos^4 t + \sin^4 t} dt \\\\=&amp;\frac{1}{2}\int_0^{\frac{\pi}{2}}\frac{\cos^4 t + \sin^4 t}{\cos^4 t + \sin^4 t} dt \quad(\text{区间再现})\\\\=&amp;\frac{\pi}{4}\end{aligned}\]</span></p><h2 id="法二倒代还广义区间再现">法二（倒代还、广义区间再现）</h2><p><span class="math display">\[\begin{aligned} &amp;\int_0^{+\infty}\frac{1}{(1 + x^2)(1+x^4)}dx \\\\=&amp;\int_0^{+\infty}\frac{t^4}{(1 + t^2)(1+t^4)}dt \\\\=&amp;\frac{1}{2}\int_0^{+\infty}\frac{t^4 + 1}{(1 + t^2)(1+t^4)}dt \\\\=&amp;\frac{1}{2}\int_0^{+\infty}\frac{1}{1 + t^2}dt \\\\=&amp;\frac{1}{2} \arctan t \bigg|_0^{+\infty} \\\\=&amp;\frac{\pi}{4}\end{aligned}\]</span></p><h1 id="题目302">题目302</h1><p><span class="math display">\[\text{已知} \int_0^{+\infty}\dfrac{\ln(1+x)}{x^\alpha}dx \text{收敛，求} \alpha \text{的取值范围}\]</span></p><h2 id="解答-13">解答</h2><p>判别 <strong>反常积分</strong> 的方法，就是找出他在 <strong>瑕点</strong> 处的 <strong>阶</strong>，然后与已知结论 <strong>p积分</strong> 作比较</p><p>经过简单观察发现，该反常积分的 <strong>瑕点</strong> 有两个：</p><ol type="1"><li>一个是被积函数的 <strong>无定义点</strong> <span class="math inline">\(x=0\)</span></li><li>一个是广义瑕点 <span class="math inline">\(x = +\infty\)</span></li></ol><p>我们可以任意选择一个 <span class="math inline">\(x_0\in(0,+\infty)\)</span> 把该反常积分用 <strong>区间可拆性</strong> 拆开，然后分别讨论 <strong>瑕点</strong></p><p><span class="math display">\[\int_0^{+\infty}\dfrac{\ln(1+x)}{x^\alpha}dx = \int_0^{x_0}\dfrac{\ln(1+x)}{x^\alpha}dx + \int_{x_0}^{+\infty}\dfrac{\ln(1+x)}{x^\alpha}dx\]</span></p><p><strong><span class="math inline">\(x\to0\)</span> 时：</strong></p><p><span class="math display">\[\frac{\ln(1+x)}{x^\alpha} \sim \frac{1}{x^{\alpha-1}}\]</span></p><p>由 <strong>p积分</strong> 的结论可知，若该反常积分收敛，则 <span class="math inline">\(\alpha - 1 &lt; 1 \Rightarrow \alpha &lt; 2\)</span></p><p><strong><span class="math inline">\(x\to+\infty\)</span> 时：</strong></p><p><span class="math display">\[\frac{\ln(1+x)}{x^\alpha} \rightarrow \frac{1}{x^{\alpha}}\]</span></p><p>由 <strong>p积分</strong> 的结论可知，若该反常积分收敛，则 <span class="math inline">\(\alpha &gt; 1\)</span></p><blockquote><p>这里做题多了，直接看出来的，因为 <span class="math inline">\(对数函数 &lt;&lt; 幂函数 &lt;&lt; 指数函数\)</span> 是一个数学常识</p><p>如果想要严格证明也很简单，直接取 <span class="math inline">\(x^c(c&gt;1)\)</span>，然后把被积函数拆成 <span class="math inline">\(\dfrac{\ln(1+x)}{x^{c-(1+\epsilon)}} \cdot \dfrac{1}{x^{(1+\epsilon)}}\)</span></p><p>其中 <span class="math inline">\(\epsilon \to 0^+\)</span>，这样左侧是一个熟悉的收敛的函数，右侧是一个更熟悉的常见 <strong>p积分</strong>，根据 <strong>p积分</strong> 结论判别即可</p></blockquote><p>综上所述，<span class="math inline">\(\alpha \in (1, 2)\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第272 - 287题</title>
      <link href="/graduate_exam/Math/0x110-0x11F/"/>
      <url>/graduate_exam/Math/0x110-0x11F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目272">题目272</h1><p>设 <span class="math inline">\(y=y(x)\)</span> 由 <span class="math inline">\(e^y\sin t - y + 1 = 0\)</span> 和 <span class="math inline">\(x = \begin{cases}  \dfrac{e^t-1}{t} &amp; t \ne 0 \\\\  1 &amp; t = 0 \end{cases}\)</span> 所确定，求 <span class="math inline">\(\dfrac{d^2y}{dx^2}\bigg|_{t=0}\)</span></p><h2 id="解答">解答</h2><p><strong>参数方程</strong> + <strong>隐函数</strong> 求 <strong>具体某一点的二阶导数值</strong> 考虑直接代公式</p><p>接下来的问题是求出 <span class="math inline">\(y,x\)</span> 在 <span class="math inline">\(x=0\)</span> 处的 <strong>一阶</strong> 和 <strong>二阶</strong> <strong>导数值</strong> 即可</p><p>对于 <span class="math inline">\(y\)</span> 我们直接用隐函数求导法则，方程两侧连续求导代入即可（过程就不写了，直接上答案）</p><p>对于 <span class="math inline">\(x\)</span> 我是 <strong>跨阶凑导数定义</strong> ，<strong>武老师</strong> 是用的 <strong>泰勒展开</strong>，我这里直接用 <strong>吴老师</strong> 的方法了</p><p><span class="math display">\[\begin{aligned}e^x - 1 &amp;= x + \frac{1}{2!}x^2 + \frac{1}{3!}x^3 \cdots \\\\\dfrac{e^x-1}{x} &amp;= 1 + \dfrac{1}{2!}x + \dfrac{1}{3!}x^2 + \cdots\end{aligned}\]</span></p><p>可得 <span class="math inline">\(\begin{cases}  x&#39;(0) = \dfrac{1}{2!} &amp; y&#39;(0) = e \\\\  x&#39;&#39;(0) = \dfrac{1}{3!} &amp; y&#39;&#39;(0) = 2e^2 \end{cases}\)</span></p><p>这个应该都会吧，就是求 <span class="math inline">\(n\)</span> 阶导后： 1. 小于 <span class="math inline">\(n\)</span> 的项求导没了 2. 大于 <span class="math inline">\(n\)</span> 的项，代入 <span class="math inline">\(x = 0\)</span> 后为 <span class="math inline">\(0\)</span> 3. 因此只会保留等于 <span class="math inline">\(n\)</span> 的项</p><p>最后代入公式即可：<span class="math inline">\(\dfrac{d^2y}{dx^2}\bigg|_{t=0} = 8(e^2-\dfrac{1}{3}e)\)</span></p><h1 id="题目273">题目273</h1><p>已知函数 <span class="math inline">\(f(x) = x^2\ln(1-x)\)</span>，当 <span class="math inline">\(n\ge3\)</span> 时，求 <span class="math inline">\(f^{(n)}(0)\)</span></p><h2 id="解答-1">解答</h2><p><span class="math display">\[高阶导数题型\begin{cases}    求f^{(n)}(x) \begin{cases}        求几阶然后找规律\\\\        莱布尼茨公式\\    \end{cases}\\\\    求f^{(n)}(x_0) \begin{cases}        泰勒展开 \\\\        求极限    \end{cases}\end{cases}\]</span></p><p>我这里写成 <strong>无穷级数</strong> 的形式，方便观察 <del>（被研友勒令）</del></p><p><span class="math display">\[\ln(1-x) = \sum_{n=1}^{\infty} -\frac{1}{n}x^n \\x^2\ln(1-x) = \sum_{n=1}^{\infty} -\frac{1}{n}x^{n+2}\]</span></p><p>我们都知道，<strong>幂函数的多项式</strong>，求 <span class="math inline">\(n\)</span> 阶导后，代入 <span class="math inline">\(x=0\)</span> 后，只会保留 <span class="math inline">\(x^n\)</span> 的系数：</p><ol type="1"><li>次数小于 <span class="math inline">\(n\)</span> 的，求 <span class="math inline">\(n\)</span> 阶导后为 <span class="math inline">\(0\)</span></li><li>次数大于 <span class="math inline">\(n\)</span> 的，求 <span class="math inline">\(n\)</span> 阶导后，保留有 <span class="math inline">\(x\)</span>，代入 <span class="math inline">\(x=0\)</span> 后，值为 <span class="math inline">\(0\)</span></li></ol><p>因此找 <span class="math inline">\(f^{(n)}(0)\)</span> 就等于找 <span class="math inline">\(x^n\)</span> 的项：<span class="math inline">\(-\dfrac{1}{n-2}x^n\)</span></p><p>由 <strong>抽象泰勒展开式</strong> 建立方程：<span class="math inline">\(\dfrac{f^{(n)}(0)}{n!}x^n = -\dfrac{1}{n-2}x^n\)</span></p><p>综上所述： <span class="math inline">\(f^{(n)}(0) = -\dfrac{n!}{n-2}\)</span></p><h1 id="题目274">题目274</h1><p>设 <span class="math inline">\(f(x) = \dfrac{1}{1+2x+4x^2}\)</span>，求 <span class="math inline">\(f^{(100)}(0)\)</span></p><h2 id="解答-2">解答</h2><blockquote><p>前置知识，幂差公式(3次)：<span class="math inline">\(a^3-b^3 = (a-b)(a^2+ab+b^2)\)</span></p></blockquote><p>根据 <strong>0x111（273）</strong> 题题解中的分析，我们有 <strong>泰勒展开</strong> 和 <strong>求极限</strong> 作为手段</p><p><strong>求极限</strong> 用于 <strong>无穷小阶数</strong> <span class="math inline">\(\ge\)</span> <strong>求导阶数</strong> 的题目，因此本题毫无疑问是 <strong>泰勒展开</strong></p><p>那么用哪个常见的幂级数展开呢？我们考虑对函数进行恒等变形</p><p><span class="math display">\[f(x) = \dfrac{1}{1 + 2x + (2x)^2} = \dfrac{1-2x}{(1-2x)(1+2x+(2x)^2)} = \dfrac{1-2x}{1-8x^3}\]</span></p><p>那么我们的选择毫无疑问就是 <strong>等比级数</strong> 分别展开 <span class="math inline">\(\dfrac{1}{1-8x^3}\)</span> 和 <span class="math inline">\(\dfrac{-2x}{1-8x^3}\)</span></p><p>由 <span class="math inline">\(\dfrac{1}{1-x} = \sum\limits_{n=0}^\infty x^n\)</span> 可知 <span class="math inline">\(\dfrac{1}{1-8x^3} = \sum\limits_{n=0}^\infty (2x)^{3n}\)</span></p><p>由于我们只需找出 <span class="math inline">\(x^{100}\)</span> 的项（在 <strong>0x111(273)</strong> 题中写过原因），再根据 <strong>抽象泰勒展开式</strong> 我们有如下方程：</p><p><span class="math display">\[\frac{f^{(100)}(0)}{100!} = -2\times 2^{99} \quad\Rightarrow\quad f^{(100)}(0) = -2^{100} 100!\]</span></p><h1 id="题目275">题目275</h1><p>设 <span class="math inline">\(y = \dfrac{\arcsin x}{\sqrt{1-x^2}}\)</span>:</p><p>（1）证明：<span class="math inline">\((1-x^2)y^{(n+1)} - (2n+1)xy^{(n)} - n^2y^{(n-1)} = 0 (n\ge1)\)</span></p><p>（2）求 <span class="math inline">\(y^{(n)}(0)\)</span></p><h2 id="解答-3">解答</h2><p>已知递推关系式的结论证明，可以考虑数学归纳法</p><p><strong>数学归纳法：</strong></p><p><strong>验证初值 <span class="math inline">\(n=1\)</span> 时：</strong></p><p>对给定的方程连续两次求导： <span class="math display">\[(1-x^2)y^&#39;&#39; - (2n+1)xy&#39; - n^2y = 0\]</span></p><p>初值成立</p><p><strong>假设 <span class="math inline">\(n=k(k\ge1)\)</span> 成立：</strong></p><p>对 <span class="math inline">\(n=k\)</span> 的递推式两侧再次求导：</p><p><span class="math display">\[(1-x^2)y^{(k+2)} - \bigg[2(k+1)+1\bigg]xy^{(k+1)} - (k^2+2k+1)y^{(k)} = 0\]</span></p><p>化简后可得：<span class="math inline">\((1-x^2)y^{(k+2)} - \bigg[2(k+1)+1\bigg]xy^{(k+1)} - (k+1)^2y^{(k)} = 0\)</span> <strong>得证</strong></p><hr /><p>令 <span class="math inline">\(x = 0\)</span> 可得：<span class="math inline">\(y^{(n+1)} = n^2y^{(n-1)} (n\ge1)\)</span></p><p>获得 <strong>跨阶</strong> 的 <strong>递推式</strong>，因此我们需要分 <strong>奇偶</strong> 讨论不同 <strong>初值</strong> 下的情况即可 <del>（经典 <strong>动态规划</strong>）</del></p><p><strong>n为偶数时：</strong></p><p><span class="math inline">\(\begin{cases}  y^{(0)} = 0 \\  y^{(2k+2)} = 4k^2 \cdot y^{(2k)} (k\ge0) \end{cases} \quad\Rightarrow\quad y^{(2k)} = 0\)</span></p><p><strong>n为奇数时：</strong></p><p><span class="math inline">\(\begin{cases}  y^{(1)} = 1 \\  y^{(2k+1)} = 4k^2 \cdot y^{(2k-1)} (k\ge 1) \end{cases} \quad\Rightarrow\quad y^{(2k+1)} = \Big[(2k)!!\Big]^2\)</span></p><p>综上可知 <span class="math inline">\(y^{(n)}(0) = \begin{cases}  0 &amp;n = 2k\\  \Big[(2k)!!\Big]^2 &amp; n = 2k + 1 \end{cases} \quad \text{其中k=0,1,}\cdots\)</span></p><h1 id="题目276">题目276</h1><p>设函数 <span class="math inline">\(f(x) = \begin{cases}  x|x| &amp;x\le0\\\\  x\ln x &amp;x&gt;0 \end{cases}\)</span> ，</p><p>判断 <span class="math inline">\(x = 0\)</span> 是否为 <span class="math inline">\(f(x)\)</span> 的 极值点 或 不可导点</p><h2 id="解答-4">解答</h2><p>原式可化为：<span class="math inline">\(\begin{cases}  -x^2 &amp;x\le0\\\\  x\ln x &amp;x&gt;0 \end{cases}\)</span></p><p><strong>研究可导性</strong></p><p>用导数定义：</p><p><span class="math inline">\(f_{+}&#39;(0) = \lim\limits_{x\to0^+} \dfrac{x\ln x}{x} = -\infty\)</span> 不存在，故不可导</p><p><strong>研究极值点</strong></p><p>由于该点一阶导数不存在，故三个判别极值的充分条件都用不了</p><p>我们考虑直接从极值的定义出发</p><p><span class="math inline">\(f(x - 0) = -x^2 &lt; 0\)</span></p><p><span class="math inline">\(f(x + 0) = x\ln x &lt; 0\)</span></p><p>故 <span class="math inline">\(x=0\)</span> 处 <span class="math inline">\(f(x)\)</span> 取极大值</p><h1 id="题目277">题目277</h1><p>设函数 <span class="math inline">\(f(x) = \displaystyle\int_{-1}^xt\ln|t|dt\)</span>，求 <span class="math inline">\(x=0\)</span> 处 <span class="math inline">\(f(x)\)</span> 是否有 <strong>极值点</strong> 、<strong>可导性</strong></p><h2 id="解答-5">解答</h2><p>被积函数在 <span class="math inline">\(x=0\)</span> 处不连续，则变上限积分可能在这一点不可导，故只需研究在这一点的可导性即可</p><p>利用导数定义：<span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0} \dfrac{\displaystyle\int_{-1}^xt\ln|t|dt - f(0)}{x} = \lim\limits_{x\to0} x\ln|x| = 0\)</span></p><p>故在这一点 <strong>可导</strong></p><p>然后研究极值点，找出一阶导数等于 0 的驻点，或不可导点</p><p>有可疑点：<span class="math inline">\(x = 0\)</span>，显然在 <span class="math inline">\(x=0\)</span> 不存在二阶导数，不妨用一阶导数左右正负来看</p><p><span class="math inline">\(x\to0^-\)</span> 时：<span class="math inline">\(x\ln(-x) &gt; 0\)</span></p><p><span class="math inline">\(x\to0^+\)</span> 时：<span class="math inline">\(x\ln(-x) &lt; 0\)</span></p><p>由极值点的第一充分条件可得：<span class="math inline">\(x=0\)</span> 为极大值点</p><h1 id="题目278">题目278</h1><p>函数 <span class="math inline">\(f(x)=(x+1)|x^2-1|\)</span> ，求 <strong>驻点</strong> 和 <strong>极值点</strong> 的个数</p><h2 id="解答-6">解答</h2><p>多项式函数求 <strong>驻点</strong> <strong>极值点</strong> 个数问题</p><p>首先写出函数的分段：<span class="math inline">\(\begin{cases}  (x+1)^2(x-1) &amp;|x|\ge1\\\\  (x+1)^2(1-x) &amp;|x|&lt;1 \end{cases}\)</span></p><p>写出导函数的分段：<span class="math inline">\(\begin{cases}  (3x-1)(x+1) &amp;|x|\gt1\\\\  -(3x-1)(x+1) &amp;|x|&lt;1 \end{cases}\)</span></p><p>区间内的驻点有：<span class="math inline">\(x = \dfrac{1}{3}\)</span></p><p>分段点的导数可以用定义去求，但有一个更快的结论：<span class="math inline">\(f(x)|x-a|\)</span> 在 <span class="math inline">\(x=a\)</span> 可导 <span class="math inline">\(\Leftrightarrow\)</span> <span class="math inline">\(f(a)=0\)</span></p><p>故可知 <strong>分段点</strong> 处 <strong>导数不存在</strong> 的点有 <span class="math inline">\(x=1\)</span>，<strong>导数存在的点</strong> 有 <span class="math inline">\(x=-1\)</span></p><p>综上，驻点为 <span class="math inline">\(x=1,\dfrac{1}{3}\)</span></p><p>找 <strong>极值点</strong>，就是找 <strong>驻点</strong> 或 <strong>导数不存在</strong> 的点，即 <span class="math inline">\(x=\pm1,\dfrac{1}{3}\)</span></p><p>这里我们可以直接从 <strong>极值的定义</strong> 出发来判断</p><p><span class="math inline">\(x\to1\)</span> 时，<span class="math inline">\(f(x)&gt;0\)</span>，故 <span class="math inline">\(x=1\)</span> 为极值点</p><p><span class="math inline">\(x\to-1^+\)</span> 时，<span class="math inline">\(f(x)&gt;0\)</span>，<span class="math inline">\(x\to-1^-\)</span> 时，<span class="math inline">\(f(x)&lt;0\)</span> 故 <span class="math inline">\(x=-1\)</span> 不是极值点</p><p><span class="math inline">\(x\to\dfrac{1}{3}^+\)</span> 时，<span class="math inline">\(f&#39;(x)&lt;0\)</span>，<span class="math inline">\(x\to\dfrac{1}{3}^-\)</span> 时，<span class="math inline">\(f&#39;(x)&gt; 0\)</span>，故 <span class="math inline">\(x=1\)</span> 为极值点</p><p>综上所述：<strong>2 个驻点，2 个极值点</strong></p><h1 id="题目279">题目279</h1><p>设 <span class="math inline">\(f(x)\)</span> 有二阶连续导数，且 <span class="math inline">\(f&#39;(0)=0,~\lim\limits_{x\to0}\dfrac{f&#39;&#39;(x)+f(x)-f(-x)}{|x|} = 1\)</span>，则</p><ol type="A"><li><p><span class="math inline">\(f(0)\)</span> 是 <span class="math inline">\(f(x)\)</span> 的极大值</p></li><li><p><span class="math inline">\(f&#39;&#39;(0)&gt;0, f(0)\)</span> 是 <span class="math inline">\(f(x)\)</span> 的极小值</p></li><li><p><span class="math inline">\((0,f(0))\)</span> 是曲线 <span class="math inline">\(y=f(x)\)</span> 的拐点</p></li><li><p><span class="math inline">\(f(0)\)</span> 是 <span class="math inline">\(f(x)\)</span> 的极值，<span class="math inline">\((0,f(0))\)</span> 不是曲线 <span class="math inline">\(y=f(x)\)</span> 的拐点</p></li></ol><h2 id="解答-7">解答</h2><p>条件一给的是 <strong>一阶导数值</strong> 为 <span class="math inline">\(0\)</span>，但条件二里只有 <strong>二阶导数</strong> 和 <strong>零阶导数</strong></p><p>那么要么是 <strong>降阶</strong> 要么是 <strong>升阶</strong> 两条路可以走</p><p>这里我采用 <strong>拉格朗日</strong> 来拉出 <strong>一阶</strong></p><p>$<em>{x0} = </em>{x0} = _{x0} = 1 $</p><p>整理一下该式子可以得出的结论：<span class="math inline">\(f&#39;&#39;(0) = 0, f&#39;&#39;(0\pm) &gt; 0, x=0\text{为极小值点}\)</span></p><p>故错误的有（A）、（B）、（C），排除法正确的为 (D)</p><p>关于（D）极值我们已经分析出了，他明显不是拐点：</p><p>根据 <strong>判别拐点的第一充分条件</strong>，<span class="math inline">\(f&#39;&#39;(x)\)</span> 在 <span class="math inline">\(x\to0\)</span> 的 <strong>左右邻域没变号</strong>，故不是拐点</p><h1 id="题目280">题目280</h1><p>已知 <span class="math inline">\(f(x)=\dfrac{x|x|}{1+x}\)</span>，求 <span class="math inline">\(f(x)\)</span> 凹凸区间 及 渐近线</p><h2 id="解答-8">解答</h2><p>首先写出 <strong>函数</strong> 的分段 <span class="math inline">\(f(x)=\begin{cases}  \dfrac{x^2}{1+x} &amp; x \ge 0\\\\  \dfrac{-x^2}{1+x} &amp; x \lt 0 \end{cases}\)</span></p><p>写出 <strong>一阶导数</strong> 的分段 <span class="math inline">\(f&#39;(x)=\begin{cases}  \dfrac{x^2+2x}{(1+x)^2} &amp; x \gt 0\\\\  \dfrac{-x^2-2x}{(1+x)^2} &amp; x \lt 0 \end{cases}\)</span></p><p>写出 <strong>二阶导数</strong> 的分段 <span class="math inline">\(f&#39;&#39;(x)=\begin{cases}  \dfrac{2}{(1+x)^3} &amp; x \gt 0\\\\  \dfrac{-2}{(1+x)^3} &amp; x \lt 0 \end{cases}\)</span></p><p>简单观察发现：<span class="math inline">\(x &gt; 0\)</span> 时，<span class="math inline">\(f&#39;&#39;(x) &gt; 0\)</span>；<span class="math inline">\(-1 &lt; x &lt; 0\)</span> 时，<span class="math inline">\(f&#39;&#39;(x) &lt; 0\)</span>；<span class="math inline">\(x &lt; -1\)</span> 时，<span class="math inline">\(f&#39;&#39;(x) &gt; 0\)</span></p><p>故 <strong>凹区间</strong> 为 <span class="math inline">\((-\infty,-1)\)</span> 和 <span class="math inline">\((0,+\infty)\)</span> ；<strong>凸区间</strong> 为 <span class="math inline">\((-1, 0)\)</span></p><p>研究 <strong>渐近线</strong> 就是研究 <strong>无定义点</strong>、<strong>分段点</strong>、<strong>广义无定义点（无穷大）</strong> 处函数值的大小</p><p><strong>无定义点</strong> <span class="math inline">\(x=-1\)</span>：<span class="math inline">\(\lim\limits_{x\to-1}f(x) = \infty\)</span> 故 <span class="math inline">\(x=-1\)</span> 为铅锤渐近线</p><p><strong>分段点</strong> <span class="math inline">\(x=0\)</span>：<span class="math inline">\(\lim\limits_{x\to0}f(x)=0\)</span> 故该点不是渐近线，而且还连续</p><p><strong>无穷大</strong> <span class="math inline">\(x\to+\infty\)</span>：<span class="math inline">\(\lim\limits_{x\to\infty}f(x) = \infty\)</span> 故没有水平渐近线</p><p>研究 <strong>斜渐近线</strong> <span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{f(x)}{x} = 1\)</span>, <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) - x = -1\)</span> 故有 <strong>斜渐近线</strong> <span class="math inline">\(y=x-1\)</span></p><p><span class="math inline">\(\lim\limits_{x\to-\infty}\dfrac{f(x)}{x} = -1\)</span>, <span class="math inline">\(\lim\limits_{x\to-\infty}f(x) + x = 1\)</span> 故有 <strong>斜渐近线</strong> <span class="math inline">\(y=-x+1\)</span></p><p>综上所属，渐近线为 <span class="math inline">\(y=x-1,y=-x+1,x=-1\)</span></p><h1 id="题目281">题目281</h1><p>（2017年2）曲线 <span class="math inline">\(y = x(1+\arcsin \dfrac{2}{x})\)</span> 的斜渐近线方程为 ______</p><h2 id="解答-9">解答</h2><p>直接求即可，没有什么特殊的地方</p><p><span class="math display">\[\lim\limits_{x\to+\infty}\dfrac{x+x\arcsin\dfrac{2}{x}}{x} = \lim\limits_{x\to+\infty} 1+\arcsin\dfrac{2}{x} = 1\]</span></p><p><span class="math display">\[\lim\limits_{x\to+\infty} x+x\arcsin\dfrac{2}{x} - x = \lim\limits_{x\to+\infty} x\arcsin\dfrac{2}{x} = \lim\limits_{x\to+\infty} x \cdot \dfrac{2}{x} = 2\]</span></p><p>故渐近线方程 <span class="math inline">\(y = x + 2\)</span></p><h1 id="题目282">题目282</h1><p>求曲线 <span class="math inline">\(y=e^{\frac{1}{x}}\sqrt{1+x^2}\)</span> 的渐近线所围区域的面积</p><h2 id="解答-10">解答</h2><p><span class="math inline">\(\lim\limits_{x\to0^+}e^{\frac{1}{x}}\sqrt{1+x^2} = +\infty\)</span> 故 <span class="math inline">\(x=0\)</span> 为 <strong>铅锤渐近线</strong></p><p><span class="math inline">\(\lim\limits_{x\to\infty}e^{\frac{1}{x}}\sqrt{1+x^2} = +\infty\)</span> 无水平渐近线</p><p>求斜渐近线，可以考虑把 <span class="math inline">\(y\)</span> 在 <span class="math inline">\(x\to\infty\)</span> 的一个 <strong>广义点处泰勒展开</strong> 了</p><p><span class="math display">\[y=e^{\frac{1}{x}}\sqrt{1+x^2}=|x|e^{\frac{1}{x}}\sqrt{1+\frac{1}{x^2}} = |x|(1+\frac{1}{2x^2}+o(\frac{1}{x^2}))(1+\frac{1}{x}+o(\frac{1}{x})) = |x|(1+\frac{1}{x}+o(\frac{1}{x}))\]</span></p><p>当 <span class="math inline">\(x\to+\infty\)</span> 时：<span class="math inline">\(y = x + 1 + o(1) \Rightarrow \text{渐近线：} y = x + 1\)</span></p><p>当 <span class="math inline">\(x\to-\infty\)</span> 时：<span class="math inline">\(y = -x - 1 + o(1) \Rightarrow \text{渐近线：} y = -x - 1\)</span></p><p>故有 <strong>斜渐近线</strong> <span class="math inline">\(y = \pm x \pm1\)</span></p><p>将三条渐近线围起来，计算一个三角形的面积即可</p><p><span class="math inline">\(S = \dfrac{2 \times 1}{2} = 1\)</span></p><h1 id="题目283">题目283</h1><p><strong>(2020年2)</strong> 求曲线 <span class="math inline">\(y = \dfrac{x^{1+x}}{(1+x)^x}(x&gt;0)\)</span> 的斜渐近线方程</p><h2 id="解答-11">解答</h2><p><span class="math display">\[k = \lim\limits_{x\to+\infty}\bigg(\dfrac{x}{1+x}\bigg)^{x} = e^{\lim\limits_{x\to+\infty} \frac{-x}{x+1}} = e^{-1}\]</span></p><p><span class="math display">\[b = \lim\limits_{x\to+\infty} \Bigg[x\bigg(\dfrac{x}{1+x}\bigg)^{x} - \dfrac{x}{e}\Bigg] = \lim\limits_{x\to+\infty} \dfrac{x}{e}\Bigg(e^{x\ln\frac{x}{1+x} + 1} - 1\Bigg) = \lim\limits_{x\to+\infty} \dfrac{x}{e}(x\ln\frac{x}{1+x} + 1)\]</span></p><p>"<span class="math inline">\(\infty \cdot 0\)</span>" 型，直接倒代还即可</p><p><span class="math display">\[\frac{1}{e}\lim\limits_{x\to0^+} \frac{\dfrac{\ln\dfrac{1}{1+x}}{x} + 1}{x} = \frac{1}{e}\lim\limits_{x\to0^+} \dfrac{\ln 1 - \ln (1+x) + x}{x^2} = \frac{1}{e}\lim\limits_{x\to0^+} \dfrac{x - \ln (1+x)}{x^2} = \frac{1}{2e}\]</span></p><p>故该 <strong>斜渐近线</strong> 为 <span class="math inline">\(y = e^{-1}x + (2e)^{-1}\)</span></p><h1 id="题目284">题目284</h1><p>（2019年3）已知方程 <span class="math inline">\(x^5-5x+k=0\)</span> 有三个不同的实根，则 <span class="math inline">\(k\)</span> 的取值范围是</p><p>（A）<span class="math inline">\((-\infty,-4)\)</span></p><p>（B）<span class="math inline">\((4,+\infty)\)</span></p><p>（C）<span class="math inline">\([-4,4]\)</span></p><p>（D）<span class="math inline">\((-4,4)\)</span></p><h2 id="解答-12">解答</h2><p>令 <span class="math inline">\(F(x) = 5x - x^5\)</span>，这样原问题就变成求曲线 <span class="math inline">\(F(x)\)</span> 与 直线 <span class="math inline">\(y = k\)</span> 的交点个数问题</p><p>则 <span class="math inline">\(F&#39;(x) = 5 - 5x^4 \xlongequal{\text{令}} 0\)</span>，解出 单减区间 <span class="math inline">\((-\infty,-1)\)</span> 和 <span class="math inline">\((1,\infty)\)</span> ；单增区间 <span class="math inline">\((-1,1)\)</span></p><p>而 <span class="math inline">\(F(-1) = -4\)</span>，<span class="math inline">\(F(1) = 4\)</span>，<span class="math inline">\(F(-\infty) = +\infty\)</span>，<span class="math inline">\(F(+\infty) = -\infty\)</span></p><p>故通过初步绘制图像观察可得结论：</p><p>函数 <span class="math inline">\(F(x)\)</span> 与 <span class="math inline">\(y=k\)</span> 有三个交点，当且仅当 <span class="math inline">\(k\in(-4, 4)\)</span> 时</p><p>（如果取的是闭区间，则交点个数会变成两个，与题意不符）</p><p><strong>综上选 D</strong></p><h1 id="题目285">题目285</h1><p>设函数 <span class="math inline">\(f(x) = ax - b\ln x (a &gt; 0)\)</span> 有两个零点，则 <span class="math inline">\(\dfrac{b}{a}\)</span> 的取值范围是（ ）</p><p>（A）<span class="math inline">\((e,+\infty)\)</span></p><p>（B）<span class="math inline">\((0,e)\)</span></p><p>（C）<span class="math inline">\((0,\dfrac{1}{e})\)</span></p><p>（D）<span class="math inline">\((\dfrac{1}{e},+\infty)\)</span></p><h2 id="解答-13">解答</h2><p>$f'(x) = a -   0  x =  $</p><p>分类讨论：</p><p><strong>1）<span class="math inline">\(b \le 0\)</span></strong></p><p>则 <span class="math inline">\(\dfrac{b}{a} &lt; 0\)</span> 不在 <span class="math inline">\(x\)</span> 的定义域内，则 <span class="math inline">\(f(x)\)</span> 在定义域内 <strong>单调</strong> <span class="math inline">\(\Rightarrow\)</span> 至多一个零点 （舍）</p><p><strong>2）<span class="math inline">\(b \gt 0\)</span></strong></p><p><span class="math inline">\(f(\dfrac{b}{a}) = b \bigg( \ln e - \ln \dfrac{b}{a}\bigg)\)</span></p><p>已知 <span class="math inline">\(\lim\limits_{x\to0^+}f(x) = +\infty\)</span> 及 <span class="math inline">\(\lim\limits_{x\to+\infty}f(x) = +\infty\)</span></p><p>故 <span class="math inline">\(f(\dfrac{b}{a}) &lt; 0\)</span> 才能满足 <strong>至少有两个零点</strong>（两次各用一次零点定理）</p><p>然后根据 <strong>单调性</strong> 可知在两侧区间 <strong>至多有两个零点</strong>，因此 <strong>恰有两个零点</strong></p><p>故 <span class="math inline">\(e &lt; \dfrac{b}{a}\)</span> <strong>选 A</strong></p><h1 id="题目286">题目286</h1><p>（2017年3）已知方程 <span class="math inline">\(\dfrac{1}{\ln(1+x)} - \dfrac{1}{x} = k\)</span> 在区间 <span class="math inline">\((0,1)\)</span> 有实根，确定常数 <span class="math inline">\(k\)</span> 的取值范围</p><h2 id="解答-14">解答</h2><p>方程的根的问题，还是直接套板题计算即可</p><p>令 <span class="math inline">\(F(x) = \dfrac{1}{\ln(1+x)} - \dfrac{1}{x}\)</span>，则 <span class="math inline">\(F&#39;(x) = \dfrac{(1+x)\ln^2(1+x) - x^2}{x^2(1+x)\ln^2(1+x)}\)</span></p><p>在给定 <span class="math inline">\((0,1)\)</span> 区间上，分母一定大于 <span class="math inline">\(0\)</span>，故我们只需研究分子的正负即可</p><p>令 <span class="math inline">\(g(x) = (1+x)\ln^2(1+x) - x^2\)</span>，则 <span class="math inline">\(g(0) = 0\)</span></p><p>求导得：<span class="math inline">\(g&#39;(x) = \ln^2(1+x) + 2\ln(1+x) - 2x\)</span>，<span class="math inline">\(g&#39;(0)=0\)</span></p><p>再求导：<span class="math inline">\(g&#39;&#39;(x) = \dfrac{2\ln(1+x) - 2x}{1 + x}\)</span></p><p>根据常用不等式结论：<span class="math inline">\(\ln(1+x) &gt; x \quad (x &gt; 0)\)</span> ，得 <span class="math inline">\(g&#39;&#39;(x) &lt; 0 \quad\Rightarrow\quad g&#39;(x)&lt;0 \quad\Rightarrow\quad g(x)&lt;0\)</span></p><p>所以 <span class="math inline">\(F&#39;(x) &lt; 0 \quad\Rightarrow\quad F(x)\text{单调递减}\)</span></p><p>又 <span class="math inline">\(\lim\limits_{x\to 0^+}F(x) = \lim\limits_{x\to 0^+}\dfrac{x - \ln(1+x)}{x\ln(1+x)} = \dfrac{1}{2}\)</span>；<span class="math inline">\(\lim\limits_{x\to 1^-}F(x) = F(1) = \dfrac{1}{\ln 2} - 1\)</span></p><p>综上 k <span class="math inline">\(\in (\dfrac{1}{\ln 2} - 1, \dfrac{1}{2})\)</span></p><h1 id="题目287">题目287</h1><p>试证：若在区间 <span class="math inline">\(I\)</span> 上 <span class="math inline">\(f^{(n)}(x)\ne0\)</span>，则方程 <span class="math inline">\(f(x) = 0\)</span> 在 <span class="math inline">\(I\)</span> 上最多 <span class="math inline">\(n\)</span> 个实根</p><h2 id="解答-15">解答</h2><p>这是著名的 <strong>罗尔原话</strong></p><p>我们采用反证法来证明，假设 <span class="math inline">\(f(x) = 0\)</span> 在 <span class="math inline">\(I\)</span> 上至少有 <span class="math inline">\(n + 1\)</span> 个实根</p><p>不妨设这 <span class="math inline">\(n+1\)</span> 个根为 <span class="math inline">\(x_1, x_2, \cdots, x_{n+1}\)</span>，则我们在 <strong>相邻零点</strong> 处，使用 <strong>罗尔定理</strong>，有：</p><p><span class="math inline">\(\exist \xi_1\in (x_1, x_2), \xi_2\in (x_2, x_3), \cdots, \xi_{n}\in (x_{n}, x_{n+1})，s.t. f&#39;(\xi_1) = f&#39;(\xi_2) = \cdots = f&#39;(\xi_{n}) = 0\)</span></p><p>再用一次 <strong>罗尔定理</strong>，会发现一个规律，每用一次，函数的 <strong>求导阶数</strong> 上升 <strong>一阶</strong>，函数 <strong>零点个数</strong> 减少 <strong>一个</strong></p><p>不妨使用 <strong>数学归纳法证明</strong>（这里我就不写了，很简单，在 <strong>k</strong> 次式的时候两两用 <strong>罗尔定理</strong> 即可得到 <strong>k+1</strong> 次式）</p><p>故 <span class="math inline">\(f^{(n)}(x) = 0\)</span> 有一个实根，与条件矛盾，因此 <del>至少有 n + 1 的实根</del> <span class="math inline">\(\Rightarrow\)</span> 至多有 <span class="math inline">\(n\)</span> 个实根（证毕）</p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第256 - 271题</title>
      <link href="/graduate_exam/Math/0x100-0x10F/"/>
      <url>/graduate_exam/Math/0x100-0x10F/</url>
      
        <content type="html"><![CDATA[<h1 id="题目256">题目256</h1><p>设 <span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^{n+2}-x^{-n}}{x^n+x^{-n}}\)</span>，则函数<span class="math inline">\(f(x)\)</span></p><p>（A）仅有<span class="math inline">\(1\)</span>个间断点 （B）仅有<span class="math inline">\(2\)</span>个间断点，其中<span class="math inline">\(1\)</span>个可去，<span class="math inline">\(1\)</span>个无穷 （C）仅有<span class="math inline">\(2\)</span>个间断点，<span class="math inline">\(2\)</span>个都是跳跃 （D）有<span class="math inline">\(2\)</span>跳跃间断点和<span class="math inline">\(1\)</span>个可去间断点</p><h2 id="解答">解答</h2><blockquote><p>常用极限结论：<span class="math inline">\(\lim\limits_{n\to\infty} x^n = \begin{cases} 0 &amp; ,|x| &lt; 1 \\\\ \infty &amp; ,|x| &gt; 1 \\\\ 1 &amp; ,x = 1 \\\\ \not\exists &amp;,x=-1 \end{cases}\)</span></p></blockquote><p><span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^{n+2}-x^{-n}}{x^n+x^{-n}} = \lim\limits_{n\to\infty}\dfrac{x^2 \cdot x^{2n}-1}{x^{2n}+1} \quad (x \ne 0)\)</span></p><p><span class="math inline">\(|x| &lt; 1\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^2 \cdot x^{2n}-1}{x^{2n}+1} = -1\)</span></p><p><span class="math inline">\(x = 1\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^2 \cdot x^{2n}-1}{x^{2n}+1} = 0\)</span></p><p><span class="math inline">\(x = -1\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^2 \cdot x^{2n}-1}{x^{2n}+1} = 0\)</span></p><p><span class="math inline">\(|x| &gt; 1\)</span> 时：<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^2 - 0}{1 + 0} = x^2\)</span></p><p><span class="math inline">\(\lim\limits_{x\to1^+} f(x) = 1\)</span>，<span class="math inline">\(\lim\limits_{x\to -1^-} f(x) = 1\)</span></p><p>故 <span class="math inline">\(x = 0, x = -1\)</span> 为 <strong>跳跃间断点</strong></p><p><span class="math inline">\(\lim\limits_{x\to0}f(x) = 0\)</span>，故 <span class="math inline">\(0\)</span> 是 <strong>可去间断点</strong></p><p>因此，两个跳跃，一个可去</p><h1 id="题目257">题目257</h1><p>设 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=1\)</span> 处连续，且 <span class="math inline">\(\dfrac{f(x)-2x}{e^{x-1} - 1} - \dfrac{1}{\ln x}\)</span> 在 <span class="math inline">\(x=1\)</span> 的某去心邻域有界，求 <span class="math inline">\(f(1)\)</span> 的值</p><h2 id="解答-1">解答</h2><blockquote><p>泰勒展开你就慢了，这题武老师的方法秒杀，妙啊</p></blockquote><p>由 <span class="math inline">\(\dfrac{f(x)-2x}{e^{x-1} - 1} - \dfrac{1}{\ln x}\)</span> 在 <span class="math inline">\(x\to 1\)</span> 时有界</p><p>故 <span class="math inline">\(\lim\limits_{x\to 1} (e^{x-1} - 1) \times \Bigg(\dfrac{f(x)-2x}{e^{x-1} - 1} - \dfrac{1}{\ln x} \Bigg) = 0\)</span></p><p><span class="math display">\[\begin{aligned}\lim\limits_{x\to 1} (e^{x-1} - 1) \times \Bigg(\dfrac{f(x)-2x}{e^{x-1} - 1} - \dfrac{1}{\ln x} \Bigg) &amp;= \lim\limits_{x\to 1} f(x) - 2x - \lim\limits_{x\to 1}\dfrac{e^{x-1} - 1}{\ln x} \\\\&amp;= f(1) - 2 - \lim\limits_{x\to 1}\dfrac{x-1}{x-1} \\\\&amp;= f(1) - 3\end{aligned}\]</span></p><p>故 <span class="math inline">\(f(1) = 3\)</span></p><p>当然本题也可以通分，泰勒展开算，就是有点慢了</p><h1 id="题目258">题目258</h1><p>已知函数 <span class="math inline">\(f(x) = \dfrac{(x^2 + a^2)(x-1)}{e^{\frac{1}{x}} + b}\)</span> 在 <span class="math inline">\((-\infty,+\infty)\)</span> 上有一个可去间断点和一个跳跃间断点，求 <span class="math inline">\(a,b\)</span> 的值</p><h2 id="解答-2">解答</h2><p>能且只能在分母为 <span class="math inline">\(0\)</span> 处，出现题目的两个间断点：<span class="math inline">\(x = 0\)</span> 处和 <span class="math inline">\(x = \dfrac{1}{\ln(-b)}\)</span></p><p><span class="math inline">\(x \to 0^+\)</span> 时：<span class="math inline">\(f(x) = 0\)</span> 显然</p><p><span class="math inline">\(x \to 0^-\)</span> 时：<span class="math inline">\(f(x) = -\dfrac{a^2}{b}\)</span></p><p>由于不存在第二类间断点，故分母趋于零的间断点必定会被分子抵消</p><p>则可知 <span class="math inline">\(\lim\limits_{x\to 1} e^{\frac{1}{x}} + b = 0\)</span>，得出 <span class="math inline">\(b = -e\)</span></p><p>此时: <span class="math inline">\(x = 1\)</span> 为可去间断点，故 <span class="math inline">\(x=0\)</span> 为跳跃间断点</p><p>故 <span class="math inline">\(a \ne 0, b = -e\)</span></p><h1 id="题目259">题目259</h1><p>函数 <span class="math inline">\(f(x) = \begin{cases}  \dfrac{e^x-1}{x} &amp;x\ne0\\\ 1&amp;x=0 \end{cases}\)</span>，在 <span class="math inline">\(x=0\)</span> 处</p><p>（A）连续且取极大值 （B）连续且取极小值 （C）可导且导数为<span class="math inline">\(0\)</span> （D）可导且导数不为<span class="math inline">\(0\)</span> ## 解答</p><p><span class="math inline">\(\lim\limits_{x\to0} f(x) = \lim\limits_{x\to0} \dfrac{e^x-1}{x} = \lim\limits_{x\to0} \dfrac{x}{x} = 1 = f(0)\)</span></p><p>故 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处连续</p><p><span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0}\dfrac{\dfrac{e^x-1}{x} - 1}{x} = \lim\limits_{x\to0} \dfrac{e^x - 1 - x}{x^2} = \dfrac{1}{2}\)</span></p><p>故 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x = 0\)</span> 处导数为 <span class="math inline">\(\dfrac{1}{2}\)</span></p><h1 id="题目260">题目260</h1><p>下列函数中在 <span class="math inline">\(x=0\)</span> 处不可导的是（ ）</p><ol type="A"><li><p><span class="math inline">\(\displaystyle\int_0^x(|t|+t)dt\)</span></p></li><li><p><span class="math inline">\(|x|(x+\displaystyle\int_0^{|x|}e^{t^2}dt)\)</span></p></li><li><p><span class="math inline">\(|\tan x - \sin x|\)</span></p></li><li><p><span class="math inline">\(\sin|x| + \cos|x|\)</span></p></li></ol><h2 id="解答-3">解答</h2><p>变上限积分在一点 <strong>可导性</strong> 取决于被积函数在该点的 <strong>连续性</strong></p><p>显然 (A) 可导</p><ol start="2" type="A"><li>选项：<span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0}\dfrac{|x|}{x} \cdot (x + \displaystyle\int^{|x|}e^{t^2}dt) = 0\)</span></li></ol><p>故（B）在 <span class="math inline">\(x = 0\)</span> 也可导</p><ol start="3" type="A"><li>选项：<span class="math inline">\(f_{+}&#39;(0) = \lim\limits_{x\to0^+}\dfrac{\tan x - \sin x}{x} = 0\)</span>，<span class="math inline">\(f_{-}&#39;(0) = \lim\limits_{x\to0^-}\dfrac{\sin x - \tan x}{x} = 0\)</span></li></ol><p>故（C）在 <span class="math inline">\(x = 0\)</span> 也可导</p><ol start="4" type="A"><li>选项：<span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0} \dfrac{\sin|x| + \cos|x| - 1}{x} = \lim\limits_{x\to0} \dfrac{|x| - \dfrac{1}{2}|x|^2 + o(|x|^2)}{x} = \lim\limits_{x\to0} \dfrac{|x|}{x}\)</span> 不存在</li></ol><p>故选 <span class="math inline">\(\mathbf{D}\)</span></p><h1 id="题目261">题目261</h1><p><span class="math inline">\(\lim\limits_{x\to0}\dfrac{f[\varphi(x)] - f(0)}{\varphi(x)}\)</span> 看似很像导数定义，但实则存在许多问题</p><h2 id="解答-4">解答</h2><p>例如 <span class="math inline">\(\varphi(x) &gt; 0\)</span> 则该式子只能说明在 <span class="math inline">\(x=0\)</span> 处的 <strong>右导数</strong> 存在，反例 <span class="math inline">\(\varphi(x) = x^2\)</span></p><p>反之 <span class="math inline">\(\varphi(x) &lt; 0\)</span> 则该式子只能说明在 <span class="math inline">\(x=0\)</span> 处的 <strong>右导数</strong> 存在，反例 <span class="math inline">\(\varphi(x) = -x^2\)</span></p><p>因此必须满足 <span class="math inline">\(\varphi(x)\)</span> 不是 <strong>恒正或恒负</strong> 的才能满足在 <span class="math inline">\(x = 0\)</span> 点的导数定义</p><p>故不能 <strong>正推</strong></p><p>反过来也不成立，如果 <span class="math inline">\(\varphi(x) \equiv 0\)</span> 则该式为 <strong>未定义式</strong>，故当然 <strong>极限不存在</strong></p><p>因此 <strong>即非必要也非充分条件</strong></p><hr /><p>看了一下武老师的讲解，他把 <span class="math inline">\(\varphi(x)\xlongequal{令}x\sin \dfrac{1}{x}\)</span> 这个是更好说明的例子</p><p>因为他在趋于 <span class="math inline">\(0\)</span> 的任意邻域内都有等于<span class="math inline">\(0\)</span>的值，且满足了<strong>极限</strong>为0</p><p>该例子更值得记忆</p><h1 id="题目262">题目262</h1><p>已知 <span class="math inline">\(f(x)\)</span> 为奇函数，则 <span class="math inline">\(f&#39;_+(0)\)</span> 存在是 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导的（ ）条件</p><h2 id="解答-5">解答</h2><p>"<span class="math inline">\(\Leftarrow\)</span>"：显然</p><p>"<span class="math inline">\(\Rightarrow\)</span>"：<span class="math inline">\(f_{+}&#39;(0) = \lim\limits_{x\to0^+} \dfrac{f(x)}{x} = \lim\limits_{t\to0^-} \dfrac{f(-t)}{-t} = \lim\limits_{t\to0^-} \dfrac{-f(t)}{-t} = \lim\limits_{t\to0^-} \dfrac{f(t)}{t} = f_{-}&#39;(0)\)</span></p><p>左导数 <span class="math inline">\(=\)</span> 右导数 <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(x = 0\)</span> 导数存在</p><p>故是 <strong>充要条件</strong></p><h1 id="题目263">题目263</h1><p>已知函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x = x_0\)</span> 的邻域内可导，则 <span class="math inline">\(f&#39;(x_0)&gt;0\)</span> 是 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=x_0\)</span> 的某邻域内单调增的 ( ) 条件</p><h2 id="解答-6">解答</h2><blockquote><p>一点处导数大于零，只能说明左高右低 一点处二阶导数大于零，可以推单调性（相当于上面的升维，六套卷里考过了）</p></blockquote><p>这是一个经典概念题，被换形式考了无数次了</p><p>那就是函数 <strong>在一点邻域内单调增</strong> 不能推出在 <strong>该点导数<span class="math inline">\(&gt;0\)</span></strong></p><p>例如：<span class="math inline">\(f(x)=x^3 \Rightarrow f&#39;(0)=0\)</span></p><p>以及函数在 <strong>一点导数<span class="math inline">\(&gt;0\)</span></strong> 不能推出在 <strong>该点邻域内单调增</strong></p><p>例如：<span class="math inline">\(f(x) = x + x^2\sin\dfrac{1}{x}\)</span> 在 <span class="math inline">\(x=0\)</span> <strong>任意邻域</strong> 内都不具有 <strong>单调性</strong></p><p>同时他在 <span class="math inline">\(x=0\)</span> 处 <span class="math inline">\(f&#39;(0) = 1 &gt; 0\)</span></p><p>这种时候往往就是要请出我们的震荡间断点hh</p><p>综上所述，为 <strong>非充分非必要</strong> 条件</p><h1 id="题目264">题目264</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x = x_0\)</span> 的某个邻域有定义，则下列命题</p><ol type="A"><li><p>若 <span class="math inline">\(f&#39;(x_0)\)</span> 存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=x_0\)</span> 处连续</p></li><li><p>若 <span class="math inline">\(f_{-}&#39;(x_0),f_{+}&#39;(x_0)\)</span> 都存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=x_0\)</span> 处连续</p></li><li><p>若 <span class="math inline">\(\lim\limits_{x\to x_0^-}f&#39;(x),\lim\limits_{x\to x_0^+}f&#39;(x)\)</span> 都存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=x_0\)</span> 处连续</p></li><li><p>若 <span class="math inline">\(\lim\limits_{x\to x_0}f&#39;(x)\)</span> 存在，则 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x=x_0\)</span> 处连续</p></li></ol><h2 id="解答-7">解答</h2><p>命题一：可导必连续，故正确</p><p>命题二：左右导数存在，则可以写出如下定义：</p><p><span class="math inline">\(\lim\limits_{x\to x_0^+} \dfrac{f(x)-f(x_0)}{x-x_0}\)</span> 存在，<span class="math inline">\(\lim\limits_{x\to x_0^-} \dfrac{f(x)-f(x_0)}{x-x_0}\)</span> 存在</p><p>故<span class="math inline">\(\lim\limits_{x\to x_0^+} f(x) = f(x_0)\)</span> 且 <span class="math inline">\(\lim\limits_{x\to x_0^-} f(x) = f(x_0)\)</span></p><p>由于 <strong>左连续</strong> 且 <strong>右连续</strong> 故在该点 <strong>连续</strong></p><p><strong>故正确</strong></p><p>命题三：<strong>导数的极限</strong> 存在，必然不能推得在该点连续</p><p>读者可以随意写两个函数，然后分段后在一点上跳跃间断即可</p><p>例如 <span class="math inline">\(\begin{cases}  x^2 + 2 &amp;x&lt;0\\  x^2 + 3 &amp;x\ge0 \end{cases}\)</span> 在 <span class="math inline">\(x=0\)</span> 跳跃间断，但左右导数极限存在</p><p><strong>故错误</strong></p><p>命题四：同理上面，推不了，函数可以在这一点 <strong>可去间断</strong></p><p>邻域内的导数极限，不受到该点的影响</p><p><strong>故错误</strong></p><hr /><p>看见 <strong>堡</strong> 的理解很棒：<strong>函数可导就一定连续，左可导左连续，右可导右连续</strong></p><h1 id="题目265">题目265</h1><p>设曲线 <span class="math inline">\(y=f(x)\)</span> 与 <span class="math inline">\(y=\sqrt{\dfrac{(1+x^2)\sqrt{x}}{e^{x-1}}} + \arctan\dfrac{x^2-1}{\sqrt{1+x^2}}\)</span> 在点 <span class="math inline">\((1,\sqrt{2})\)</span> 处相切</p><p>，则 $<em>{x1}(f(x)+1-)^{} = $ </em>_____</p><h2 id="解答-8">解答</h2><p>两曲线在一点处 <strong>相切</strong>，说明在该点处：</p><ol type="1"><li>坐标相同</li><li>切线斜率相同</li></ol><p>利用这两点建立方程即可</p><p>坐标相同： <span class="math display">\[f(1) = \sqrt{2}\]</span></p><p>切线斜率相同：令 <span class="math inline">\(y = y_1 + y_2\)</span></p><p><span class="math display">\[\begin{aligned}\ln y_{1}(x) &amp;= \dfrac{1}{2} [\ln(1+x^2) + \dfrac{1}{2}\ln x - x + 1]    \\\\\dfrac{y_{1}&#39;}{y_1} &amp;= \dfrac{1}{2} [\dfrac{2x}{1+x^2} + \dfrac{1}{2x} - 1]    \\\\\dfrac{y_{1}&#39;(1)}{y_1(1)} &amp;= \dfrac{1}{4}    \\\\y_{1}&#39;(1) &amp;= \dfrac{\sqrt{2}}{4}    \\\\\end{aligned}\]</span></p><p><span class="math display">\[y_{2}&#39;(1) = \lim_{x\to1}\dfrac{\arctan\dfrac{x^2-1}{\sqrt{1+x^2}}}{x - 1} = \lim_{x\to1}\dfrac{(x-1)(x+1)}{(x - 1) \sqrt{1+x^2}} = \sqrt{2}\]</span></p><p>故：<span class="math inline">\(f&#39;(1) = \dfrac{\sqrt{2}}{4} + \sqrt{2} = \dfrac{5}{4}\sqrt{2}\)</span></p><p><span class="math display">\[A = \lim_{x\to1}\dfrac{\ln (f(x) + 1 - \sqrt{2})}{\ln x} = \lim_{x\to1}\dfrac{f(x)-\sqrt{2}}{x-1} = \lim_{x\to1}f&#39;(x) = \dfrac{5}{4}\sqrt{2}\]</span></p><p>故：<span class="math inline">\(\lim\limits_{x\to1}(f(x)+1-\sqrt{2})^{\frac{1}{\ln x}} = e^{\frac{5\sqrt{2}}{4}}\)</span></p><h1 id="题目266">题目266</h1><p>确定函数 <span class="math inline">\(f(x) = |x^3-x-\sin x|\)</span> 不可导的点的个数</p><h2 id="解答-9">解答</h2><p>之前说过的一个知识点，不可导点个数，不外乎分析 <strong>分段点</strong> 即可</p><p>由分段函数的一个已知结论：</p><ol type="1"><li><span class="math inline">\(x_0 \ne 0\)</span>, <span class="math inline">\(f(x_0) \text{可导}\Leftrightarrow |f(x_0)| \text{可导}\)</span></li><li><span class="math inline">\(x_0 = 0\)</span>, <span class="math inline">\(f&#39;(x_0) = 0 \Leftrightarrow |f(x_0)| \text{可导}\)</span></li></ol><p>令 <span class="math inline">\(g(x) = x^3-x-\sin x\)</span>，由于 <span class="math inline">\(g(x)\)</span> 是 <strong>奇函数</strong>，故只需研究大于等于0的部分</p><p>找出 <span class="math inline">\(g(x)\)</span> 的零点: <span class="math inline">\(g&#39;(x) = 3x^2 - \cos x - 1\)</span>, <span class="math inline">\(g&#39;(0) &lt; 0, \lim\limits_{x\to\infty}g&#39;(x) &gt; 0\)</span></p><p>故由 <strong>零点定理</strong> 可知至少存在一个零点满足 <span class="math inline">\(g&#39;(x) = 0\)</span></p><p>又 <span class="math inline">\(g&#39;&#39;(x) = 6x + \sin x &gt; 0\)</span> 可知 <span class="math inline">\(g&#39;(x)\)</span> 在 <span class="math inline">\((0,+\infty)\)</span> 有且仅有一个零点</p><p>设该点为 <span class="math inline">\(x_0\)</span>，因此 <span class="math inline">\(x \in (0, x_0)\)</span> 时单调递减， <span class="math inline">\(x \in (x_0,+\infty)\)</span> 时单调递增</p><p>又 <span class="math inline">\(g(x_0) &lt; 0\)</span>，故存在一个零点 <span class="math inline">\(x_1\in(x_0, +\infty)\)</span></p><p>综上所述，共 <span class="math inline">\(3\)</span> 个零点 <span class="math inline">\(-x_1, 0, x_1\)</span></p><h1 id="题目267">题目267</h1><p>设 <span class="math inline">\(f(x)=\begin{cases}  x^2&amp;x\ge0,\\\\  x^4&amp;x&lt;0 \end{cases}\quad g(x)=\begin{cases}  -\sqrt{x}&amp;x\gt0,\\\\  x^2&amp;x\le0 \end{cases}\)</span></p><p>若 <span class="math inline">\(y=f[g(x)]\)</span>，则：</p><ol type="A"><li><p><span class="math inline">\(\dfrac{dy}{dx}\bigg|_{x=1} = 1\)</span></p></li><li><p><span class="math inline">\(\dfrac{dy}{dx}\bigg|_{x=1}\)</span> 不存在</p></li><li><p><span class="math inline">\(\dfrac{dy}{dx}\bigg|_{x=0} = 0\)</span></p></li><li><p><span class="math inline">\(\dfrac{dy}{dx}\bigg|_{x=0}\)</span> 不存在</p></li></ol><h2 id="解答-10">解答</h2><p>这是 <strong>30讲</strong> 第一章的某习题，直接做就完事了，先把复合函数的分段形式写出来：</p><p><span class="math inline">\(y = \begin{cases}  x^4 &amp; x \le 0\\\\  x^2 &amp; x &gt; 0 \end{cases}\)</span></p><p>则 <span class="math inline">\(\lim\limits_{x\to1}\dfrac{x^2 - 1}{x-1} = 2\)</span> 故 <strong>A,B错误</strong> （B上来就可以排错，初等函数在区间内都是连续的）</p><p>又 <span class="math inline">\(\lim\limits_{x\to0^+}\dfrac{x^2}{x} = 0 = \lim\limits_{x\to0^-}\dfrac{x^4}{x} = 0\)</span> 故 <strong>C正确，D错误</strong></p><h1 id="题目268">题目268</h1><p>设 <span class="math inline">\(\varphi(x)=\begin{cases}  x^3\sin\dfrac{1}{x} &amp;x\ne 0\\\\  0 &amp;x = 0 \end{cases}\)</span> 函数 <span class="math inline">\(f(x)\)</span> 可导，求<span class="math inline">\(F(x) = f[\varphi(x)]\)</span> 的导数</p><h2 id="解答-11">解答</h2><p><span class="math inline">\(x \ne 0\)</span> 时：<span class="math inline">\(F&#39;(x) = f&#39;[\varphi(x)] \cdot \varphi&#39;(x) = f&#39;(x^3\sin\dfrac{1}{x}) \cdot (3x^2\sin\dfrac{1}{x} - x\cos\dfrac{1}{x})\)</span></p><p>本题一大 <strong>踩分点</strong> 时发现 <span class="math inline">\(\varphi(x)\)</span> 在 <span class="math inline">\(x\)</span> 趋于 <span class="math inline">\(0\)</span> 时，会无限取到 <span class="math inline">\(0\)</span>，因此不能直接使用 <strong>导数定义</strong></p><p><span class="math inline">\(x = 0\)</span> 时：(导数定义分类讨论)</p><p><span class="math display">\[F&#39;(0)=\lim_{x\to 0}\frac{F(x)-F(0)}{x -0} = \lim_{x\to 0}\frac{f[\varphi(x)]-f(0)}{x}\]</span></p><p>$x =  $ 时:<span class="math inline">\((k\to\infty,k\in \mathbf{Z})\)</span></p><p><span class="math display">\[\lim_{x\to 0}\frac{F(x)-F(0)}{x} = \lim_{x\to 0}\frac{0}{x} = 0\]</span></p><p>$x  $ 时:<span class="math inline">\((k\to\infty,k\in \mathbf{Z})\)</span></p><p><span class="math display">\[\lim_{x\to 0}\frac{F(x)-F(0)}{x} = \lim_{x\to 0}\frac{f[\varphi(x)]-f(0)}{\varphi(x)} \cdot \frac{\varphi(x)}{x} = 0\]</span></p><p>综上 <span class="math inline">\(F&#39;(0) = 0\)</span></p><hr /><p>本题 <strong>武老师</strong> 要的是 <strong>复合函数链导法</strong>：</p><p>通过证明 <span class="math inline">\(\varphi(x)\)</span> 在 <span class="math inline">\(x=0\)</span> 处可导，即 <span class="math inline">\(\varphi&#39;(0)\)</span> 存在且<span class="math inline">\(\varphi&#39;(0) = 0\)</span>，又 <span class="math inline">\(f&#39;(0)\)</span> 存在，故 <span class="math inline">\(f&#39;(\varphi(0))\)</span> 存在</p><h1 id="题目269">题目269</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\((\dfrac{1}{2}, +\infty)\)</span> 上可导，且 <span class="math inline">\(\lim\limits_{h\to0}\dfrac{f[(x+h)^2] - f(x^2+h)}{h}=1,f(1)=1\)</span>，求<span class="math inline">\(f(x)\)</span></p><h2 id="解答-12">解答</h2><p><span class="math display">\[\begin{aligned}&amp;\lim\limits_{h\to0}\dfrac{f[(x+h)^2] - f(x^2+h)}{h}\\\\=&amp;\lim\limits_{h\to0}\dfrac{f[(x+h)^2] - f(x^2) + f(x^2) - f(x^2+h)}{h}\\\\=&amp;\lim\limits_{h\to0}\dfrac{f[(x+h)^2] - f(x^2)}{h} -\lim\limits_{h\to0}\dfrac{f(x^2+h)-f(x^2)}{h}\\\\=&amp;[f(x^2)]&#39; - f&#39;(x^2) = f&#39;(x^2) \cdot (2x - 1)\end{aligned}\]</span></p><p>令 <span class="math inline">\(f&#39;(x^2) \cdot (2x-1) = 1\)</span>，换元可得 <span class="math inline">\(f&#39;(x) = \dfrac{1}{2\sqrt{x}-1}\)</span>，左右取积分：</p><p><span class="math display">\[\begin{aligned}\int f&#39;(x) dx &amp;= \int \dfrac{1}{2\sqrt{x}-1} dx \\\\f(x) &amp;= \int \dfrac{2u - 1 + 1}{2u-1} du = \int (1 + \dfrac{1}{2u-1}) du \\\\f(x) &amp;= u + \dfrac{1}{2}\ln(2u - 1) + C \\\\f(x) &amp;= \sqrt{x} + \dfrac{1}{2}\ln(2\sqrt{x} - 1) + C \\\\\end{aligned}\]</span></p><p>代入初值：<span class="math inline">\(f(1) = 1 + C = 1\)</span>，故 <span class="math inline">\(C = 0\)</span>，于是有：</p><p><span class="math display">\[f(x) = \sqrt{x} + \dfrac{1}{2}\ln(2\sqrt{x} - 1)\]</span></p><h1 id="题目270">题目270</h1><p>设可导函数 <span class="math inline">\(y=y(x)\)</span> 由方程 <span class="math inline">\(\sin x - \displaystyle\int_x^y\varphi(u)du=0\)</span> 所确定的</p><p>其中可导函数 <span class="math inline">\(\varphi(u)&gt;0\)</span>，且 <span class="math inline">\(\varphi(0) = \varphi&#39;(0)=1\)</span>，求 <span class="math inline">\(y&#39;&#39;(0)\)</span></p><h2 id="解答-13">解答</h2><p>隐函数求导问题，显然 <span class="math inline">\(x = 0\)</span> 时，<span class="math inline">\(y = 0\)</span>，然后对方程两侧求导有：</p><p><span class="math display">\[\cos x - y&#39; \varphi(y) + \varphi(x) = 0 \quad\Rightarrow\quad y&#39; = \dfrac{\cos x + \varphi(x)}{\varphi(y)}\]</span></p><p>有：<span class="math inline">\(y&#39;(0) = \dfrac{1 + 1}{1} = 2\)</span></p><p>再求一次导：</p><p><span class="math display">\[-\sin x - y&#39;&#39;\varphi(y) - y&#39;^2\varphi&#39;(y) + \varphi&#39;(x) = 0 \quad\Rightarrow\quady&#39;&#39; = \dfrac{-\sin x - y&#39;^2\varphi&#39;(y) + \varphi&#39;(x)}{\varphi(y)}\]</span></p><p>有：<span class="math inline">\(y&#39;&#39;(0) = -4 + 1 = -3\)</span></p><h1 id="题目271">题目271</h1><p>设 <span class="math inline">\(x=x(y)\)</span> 是函数 <span class="math inline">\(y=\ln x + e^x\)</span> 的反函数，求 <span class="math inline">\(\dfrac{d^2x}{dy^2}\)</span></p><h2 id="解答-14">解答</h2><p>关于 <span class="math inline">\(y\)</span> 求导有：<span class="math inline">\(1 = \dfrac{x&#39;}{x} + x&#39;e^x\)</span>，化简可得：<span class="math inline">\(x&#39; = \dfrac{x}{1+xe^x}\)</span></p><p>再求一次导可得：<span class="math inline">\(\dfrac{d^2x}{dy^2} = \dfrac{d^2x}{dx} \cdot \dfrac{dx}{dy} = \dfrac{x}{1+xe^x} \cdot \dfrac{(1+xe^x) + x(e^x + xe^x)}{(1+xe^x)^2} = \dfrac{x - x^3e^x}{(xe^x + 1)^3}\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第240 - 255题</title>
      <link href="/graduate_exam/Math/0x0F0-0x0FF/"/>
      <url>/graduate_exam/Math/0x0F0-0x0FF/</url>
      
        <content type="html"><![CDATA[<h1 id="题目240">题目240</h1><p>若 <span class="math inline">\(\lim\limits_{x\to0}\bigg(\dfrac{\ln(x+\sqrt{x^2+1})+ax^2+bx^3}{x}\bigg)^{\dfrac{1}{x^2}}=e^2\)</span>,求<span class="math inline">\(a,b\)</span>的值</p><h2 id="解答">解答</h2><p><span class="math display">\[\begin{aligned}&amp;\lim\limits_{x\to0}\bigg(\dfrac{\ln(x+\sqrt{x^2+1})+ax^2+bx^3}{x}\bigg)^{\dfrac{1}{x^2}}\\\\=&amp;\lim\limits_{x\to0}e^{\dfrac{\ln(x + \sqrt{x^2 + 1}) + ax^2 + bx^3 - x}{x^3}}\\\\\end{aligned}\]</span></p><p>已知：</p><p><span class="math display">\[(1 + x^2)^{-\frac{1}{2}} \sim 1 - \dfrac{1}{2}x^2 + o(x^2)\]</span></p><p>两侧取积分：</p><p><span class="math display">\[\ln(x + \sqrt{x^2 + 1}) \sim x - \dfrac{1}{6}x^3 + o(x^3)\]</span></p><p>故可对原式进行 <strong>泰勒展开</strong>：</p><p><span class="math display">\[\lim\limits_{x\to0}e^{\dfrac{x - \frac{1}{6}x^3 + ax^2 + bx^3 - x}{x^3}}\]</span></p><p><strong>极限存在</strong>，故 <span class="math inline">\(a = 0, b = \dfrac{13}{6}\)</span></p><h1 id="题目241">题目241</h1><p>已知常数<span class="math inline">\(a&gt;0\)</span>，<span class="math inline">\(bc\ne0\)</span>，使得<span class="math inline">\(\lim\limits_{x\to+\infty}[x^a\ln(1+\dfrac{b}{x}) - x]=c\)</span>，求<span class="math inline">\(a,b,c\)</span>.</p><h2 id="解答-1">解答</h2><p>不妨先 <strong>倒代换</strong>，令 <span class="math inline">\(t = \dfrac{1}{x}\)</span>，然后直接 <strong>泰勒展开</strong></p><p><span class="math display">\[\lim_{t\to0^+} \dfrac{\ln(1 + bt) - t^{a - 1}}{t^a} = \lim_{t\to0^+} \dfrac{bt - \dfrac{b^2}{2}t^2 - t^{a - 1} + o(t^2)}{t^a} =c\]</span></p><p><span class="math inline">\(a \lt 2\)</span> 时：极限不存在</p><p><span class="math inline">\(a = 2\)</span> 时：要使极限存在，<span class="math inline">\(b - 1 = 0\)</span>，此时<span class="math inline">\(c = -\dfrac{1}{2}\)</span></p><p><span class="math inline">\(a &gt; 2\)</span> 时，极限不存在</p><p>综上所述 <span class="math inline">\(a = 2, b = 1, c = -\dfrac{1}{2}\)</span></p><h1 id="题目242">题目242</h1><p>当 <span class="math inline">\(x\to0\)</span> 时，<span class="math inline">\(\displaystyle\int_0^{x^2}(e^{t^3}-1)dt\)</span> 是 <span class="math inline">\(x^7\)</span> 的几阶无穷小</p><h2 id="解答-2">解答</h2><p>当 <span class="math inline">\(x\to0\)</span> 时，我们可以先用 <strong>变上限积分被积函数等价无穷小</strong> 的方法，<strong>化简</strong> <strong>被积函数</strong></p><p><span class="math display">\[\displaystyle\int_0^{x^2}(e^{t^3}-1)dt \sim \int_0^{x^2} t^3 dt\]</span></p><p>然后直接把这个积分解出来：<span class="math inline">\(\displaystyle\int_0^{x^2} t^3 dt = \dfrac{1}{4} x^8\)</span></p><p>故可知，该函数是 <span class="math inline">\(x^7\)</span> 的 <strong>高阶无穷小</strong></p><h1 id="题目243">题目243</h1><p>当 <span class="math inline">\(x\to0^+\)</span> 时，求出下列无穷小量的最高阶：</p><p><span class="math display">\[\begin{matrix}\displaystyle\int_0^x(e^{t^2} - 1)dt &amp; &amp;\displaystyle\int_0^x\ln(1+\sqrt{t^3})dt\\\\\displaystyle\int_0^{\sin x}\sin t^3dt &amp; &amp;\displaystyle\int_0^{1-\cos x}\sqrt{\sin^3t}dt\\\end{matrix}\]</span></p><h2 id="解答-3">解答</h2><p>当 <span class="math inline">\(x\to0^+\)</span> 时：</p><p><span class="math display">\[\displaystyle\int_0^x(e^{t^2} - 1)dt \sim \displaystyle\int_0^xt^2dt = \dfrac{1}{3}x^3\]</span></p><p><span class="math display">\[\displaystyle\int_0^x\ln(1+\sqrt{t^3})dt \sim \displaystyle\int_0^x t^{\frac{3}{2}}dt = \dfrac{2}{5} x^{\frac{5}{2}}\]</span></p><p><span class="math display">\[\displaystyle\int_0^{\sin x}\sin t^3dt \sim \displaystyle\int_0^{x}t^3dt = \dfrac{1}{4} x^4\]</span></p><p><span class="math display">\[\displaystyle\int_0^{1-\cos x}\sqrt{\sin^3t}dt \sim \displaystyle\int_0^{\frac{1}{2}x^2}x^{\frac{3}{2}}dt = \dfrac{\sqrt{2}}{20} x^5\]</span></p><p>故最高阶的为 <span class="math inline">\(\displaystyle\int_0^{1-\cos x}\sqrt{\sin^3t}dt\)</span></p><h1 id="题目244">题目244</h1><p>已知 <span class="math inline">\(a,b\)</span> 为常数，若 <span class="math inline">\((1+\dfrac{1}{n})^n-e\)</span> 与 <span class="math inline">\(\dfrac{b}{n^a}\)</span> 在 <span class="math inline">\(n\to\infty\)</span> 时是等价无穷小，求<span class="math inline">\(a,b\)</span></p><h2 id="解答-4">解答</h2><p>数列问题，却要求等价无穷小，不妨先 <strong>连续化</strong> 转为 <strong>函数问题</strong>，再用 <strong>海涅定理</strong> 证明</p><p><span class="math display">\[\begin{aligned}&amp;\lim_{n\to\infty} \dfrac{(1 + \dfrac{1}{n})^n - e}{\dfrac{b}{n^a}}\xlongequal{\text{连续化}}\lim_{x\to+\infty} \dfrac{(1 + \dfrac{1}{x})^x - e}{\dfrac{b}{x^a}}\\\\\xlongequal{\text{倒代换}} &amp;\lim_{x\to0^+} \dfrac{(1 + x)^\frac{1}{x} - e}{bx^a} =\lim_{x\to0^+} \dfrac{e^{\frac{\ln(1 + x)}{x}} - e}{bx^a}\\\\=&amp;e\lim_{x\to0^+} \dfrac{e^{\frac{\ln(1 + x) - x}{x}} - 1}{bx^a} =e\lim_{x\to0^+} \dfrac{\ln(1 + x)-x}{bx^{a + 1}}\\\\=&amp;-\dfrac{e}{2b}\lim_{x\to0^+} \dfrac{x^2}{x^{a + 1}}\end{aligned}\]</span></p><p>由 <strong>海涅定理</strong> 可知，原 <strong>数列极限</strong> 与 <strong>函数极限</strong> 收敛到同一个值</p><p>故该极限值为 <span class="math inline">\(1\)</span>，得 <span class="math inline">\(a = 1, b = -\dfrac{2}{e}\)</span></p><h1 id="题目245">题目245</h1><p>当 <span class="math inline">\(x\to0\)</span> 时，求下列无穷小量中最高阶</p><p>（A） <span class="math inline">\((1+x)^{x^2}-1\)</span> （B） <span class="math inline">\(e^{x^4-2x}-1\)</span></p><p>（C） <span class="math inline">\(\displaystyle\int_0^{x^2}\sin t^2dt\)</span> （D） <span class="math inline">\(\sqrt{1+2x} - \sqrt[3]{1+3x}\)</span></p><h2 id="解答-5">解答</h2><p>这是一到纯口算题，没什么要点</p><p><strong>A选项</strong> <span class="math inline">\((1+x)^{x^2}-1 \sim x^3\)</span> <strong>为3阶</strong></p><p><strong>B选项</strong> <span class="math inline">\(e^{x^4-2x}-1 \sim e^{4} - 2x \sim -2x\)</span> <strong>为1阶</strong></p><p><strong>C选项</strong> <span class="math inline">\(\displaystyle\int_0^{x^2}\sin t^2dt \sim \int_0^{x^2}t^2dt = \dfrac{1}{3} x^6\)</span> <strong>为6阶</strong></p><p><strong>D选项</strong> <span class="math inline">\(\sqrt{1+2x} - \sqrt[3]{1+3x} = -\dfrac{1}{8}x^2 + \dfrac{1}{18}x^2\)</span> <strong>为2阶</strong></p><p><strong>故选 C</strong></p><h1 id="题目246">题目246</h1><p>当 <span class="math inline">\(x\to0^+\)</span>时，下列无穷小量中最高阶的是（ ）</p><p>A. <span class="math inline">\(\displaystyle\int_0^{1-\cos x}\frac{\sin t}{t}dt\quad\quad\quad\quad\quad\)</span> B. <span class="math inline">\(\displaystyle\int_0^{x}t\tan\sqrt{x^2-t^2}dt\)</span></p><p>C. <span class="math inline">\(\displaystyle\int_{\sin x}^{1-\sqrt{\cos x}}e^{xt}\ln(1+t^3)dt\quad\)</span> D. <span class="math inline">\(\displaystyle\int_{\sin x}^{x}\sqrt{\sin^3t}dt\)</span></p><h2 id="解答-6">解答</h2><p><strong>A选项</strong></p><p><span class="math inline">\(\displaystyle\int_0^{1-\cos x}\frac{\sin t}{t}dt \sim \displaystyle\int_0^{\frac{1}{2}x^2}dt = \dfrac{1}{2}x^2\)</span></p><p><strong>B选项</strong></p><p>令 <span class="math inline">\(\sqrt{x^2 - t^2} = u\)</span>，则</p><p><span class="math inline">\(\displaystyle\int_0^{x}t\tan\sqrt{x^2-t^2}dt = -\displaystyle\int_0^{x}u\tan udu \sim -\int_0^x u^2 du = -\dfrac{1}{3}x^3\)</span></p><p><strong>C选项</strong></p><p>用第一积分中值定理，提出 <span class="math inline">\(e^{xt}\)</span> 项</p><p><span class="math inline">\(\displaystyle\int_{\sin x}^{1-\sqrt{\cos x}}e^{xt}\ln(1+t^3)dt = e^{x\xi}\displaystyle\int_{\sin x}^{1-\sqrt{\cos x}}\ln(1+t^3)dt \sim e^{x\xi}\displaystyle\int_{\sin x}^{1-\sqrt{\cos x}}t^3dt\)</span></p><p><span class="math inline">\(e^{x\xi}\displaystyle\int_{\sin x}^{1-\sqrt{\cos x}}t^3dt \sim \dfrac{1}{4} e^{x^2} [(1-\sqrt{\cos x})^4 - \sin^4 x] \sim \dfrac{1}{4}x^4\)</span></p><p><strong>D选项</strong></p><p><span class="math inline">\(\displaystyle\int_{\sin x}^{x}\sqrt{\sin^3t}dt = \int_{\sin x}^{x}t^{\frac{3}{2}}dt = \xi^{\frac{3}{2}} (x - \sin x)\)</span></p><p>由于 <span class="math inline">\(\sin x &lt; \xi &lt; x \quad \Rightarrow \quad \dfrac{\sin x}{x} &lt; \dfrac{\xi}{x} &lt; \dfrac{x}{x}\)</span></p><p>不等号两侧取极限，可知 <span class="math inline">\(\lim\limits_{x\to 0} \dfrac{\xi}{x} = 1 \Rightarrow \xi \sim x\)</span></p><p><span class="math inline">\(\xi^{\frac{3}{2}} (x - \sin x) \sim x^{\frac{3}{2}} \cdot \dfrac{1}{6}x^3 = \frac{1}{6}x^{\frac{9}{2}}\)</span></p><p>综上所述，选 <strong>D</strong></p><h1 id="题目247">题目247</h1><p>设 <span class="math inline">\(x\to a\)</span> 时，<span class="math inline">\(f(x)\)</span> 与 <span class="math inline">\(g(x)\)</span> 分别是 <span class="math inline">\(x-a\)</span> 的 <span class="math inline">\(n\)</span> 阶与 <span class="math inline">\(m\)</span> 阶无穷小，则下列命题</p><ol type="A"><li><p><span class="math inline">\(f(x)g(x)\)</span> 是 <span class="math inline">\(x-a\)</span> 的 <span class="math inline">\(n+m\)</span> 阶无穷小</p></li><li><p>若 <span class="math inline">\(n &gt; m\)</span>，<span class="math inline">\(\frac{f(x)}{g(x)}\)</span> 是 <span class="math inline">\(x-a\)</span> 的 <span class="math inline">\(n-m\)</span> 阶无穷小</p></li><li><p>若 <span class="math inline">\(n \le m\)</span>，则 <span class="math inline">\(f(x) + g(x)\)</span> 是 <span class="math inline">\(x-a\)</span> 的 <span class="math inline">\(n\)</span> 阶无穷小</p></li><li><p>若 <span class="math inline">\(f(x)\)</span> 连续，则 <span class="math inline">\(\int_a^x f(t)dt\)</span> 是 <span class="math inline">\(x-a\)</span> 的 <span class="math inline">\(n+1\)</span> 阶无穷小</p></li></ol><p>中，正确的个数是（ ）</p><h2 id="解答-7">解答</h2><p>由题干可知：<span class="math inline">\(f\sim (x-a)^n, g \sim (x - a)^m\)</span></p><p><strong>(A)选项</strong></p><p>因式考虑直接使用等价无穷小：</p><p><span class="math display">\[f \cdot g \sim (x - a)^{n + m}\]</span></p><p>故正确</p><p><strong>(B)选项</strong></p><p>因式考虑直接使用等价无穷小：</p><p><span class="math display">\[\dfrac{f}{g} \sim (x - a)^{n - m}\]</span></p><p>故正确</p><p><strong>(C)选项</strong></p><p>错误，因为如果他们是同阶无穷小，可能是相反数，一加变成 <span class="math inline">\(0\)</span>了</p><p>考虑构造反例：<span class="math inline">\(f(x) = (x-a)^n , g(x) = -(x - a)^n\)</span></p><p>则：<span class="math inline">\(f + g = 0\)</span></p><p><strong>(D)选项</strong></p><p>不妨用 <strong>洛必达</strong> 去验证</p><p><span class="math display">\[\lim_{x\to a}\frac{\displaystyle\int_a^xf(t)dt}{(x - a)^{n+1}} = \lim_{x\to a}\frac{f(x)}{(n+1)(x - a)^{n}} = \dfrac{1}{n+1}\]</span></p><p>故正确</p><p>因此正确的选项为 <strong>A,B,C</strong></p><h1 id="题目248">题目248</h1><p>设 <span class="math inline">\(f(x)\)</span> 连续，且<span class="math inline">\(\lim\limits_{x\to0^+}\dfrac{f(x)}{x}=1,\alpha(x)=\displaystyle\int_0^{\sqrt{x}}\dfrac{\ln(1+t^4)}{f(t)}dt\)</span></p><p><span class="math inline">\(\beta(x)=\displaystyle\int_0^{\sin x}\frac{\sqrt{1+t^3}-1}{f(t)}dt\)</span>，则当 <span class="math inline">\(x\to0^+\)</span>时，<span class="math inline">\(\alpha(x)\)</span> 是 <span class="math inline">\(\beta(x)\)</span> 的几阶无穷小</p><h2 id="解答-8">解答</h2><p>由 <span class="math inline">\(f(x)\)</span> 连续，且<span class="math inline">\(\lim\limits_{x\to0^+}\dfrac{f(x)}{x}=1\)</span>，可知：</p><p><span class="math inline">\(\lim\limits_{x\to0} f(x) = f(0) = 0, f&#39;(0) = 1, f(x) \sim x\)</span></p><p><span class="math display">\[\alpha \sim \int_0^{\sqrt{x}} t^3 dt = \dfrac{1}{4}x^2\]</span></p><p><span class="math display">\[\beta \sim \int_0^x \dfrac{t^2}{2} dt = \dfrac{1}{6} x^3\]</span></p><p>故 <span class="math inline">\(\alpha\)</span> 是 <span class="math inline">\(\beta\)</span> 的 <strong>低阶无穷小</strong></p><h1 id="题目249">题目249</h1><p>当 <span class="math inline">\(x\to0\)</span> 时，<span class="math inline">\(2\arctan x - \ln\dfrac{1+x}{1-x}\)</span> 是 <span class="math inline">\(x\)</span> 的 <span class="math inline">\(n\)</span> 阶无穷小，求 <span class="math inline">\(n\)</span> 的值</p><h2 id="解答-9">解答</h2><p><span class="math display">\[\arctan x = x - \dfrac{1}{3}x^3 + o(x^4)\]</span></p><p><span class="math display">\[\ln(1 + x) = x - \dfrac{1}{2}x^2 + \dfrac{1}{3}x^3 - \dfrac{1}{4}x^4 + o(x^4)\]</span></p><p><span class="math display">\[\ln(1 - x) = - x - \dfrac{1}{2}x^2 - \dfrac{1}{3}x^3 - \dfrac{1}{4}x^4 + o(x^4)\]</span></p><p><span class="math display">\[2\arctan x - \ln\dfrac{1+x}{1-x} = (2 - 1 - 1)x + (\dfrac{1}{2} - \dfrac{1}{2})x^2 + (-\dfrac{2}{3} - \dfrac{1}{3} - \dfrac{1}{3})x^3 = -\dfrac{4}{3}x^3\]</span></p><p>故 <span class="math inline">\(n = 3\)</span></p><h1 id="题目250">题目250</h1><p>当 <span class="math inline">\(x\to 0^+\)</span> 时，<span class="math inline">\((1+x)^{\frac{1}{x}} - (e+ax+bx^2)\)</span> 是比 <span class="math inline">\(x^2\)</span> 高阶的无穷小，求 <span class="math inline">\(a,b\)</span> 的值</p><h2 id="解答-10">解答</h2><p>简单推导：</p><p><span class="math display">\[\ln(1 + x) - x = -\dfrac{1}{2}x^2 + \dfrac{1}{3}x^3 - \dfrac{1}{4}x^4 + o(x^4)\]</span></p><p><span class="math display">\[\dfrac{\ln(1 + x) - x}{x} = -\dfrac{1}{2}x + \dfrac{1}{3}x^2 - \dfrac{1}{4}x^3 + o(x^3)\]</span></p><p><span class="math display">\[e^x - 1 = x + \dfrac{1}{2}x^2 + \dfrac{1}{6}x^3 + o(x^3)\]</span></p><p><span class="math display">\[e^{\dfrac{\ln(1 + x) - x}{x}} - 1 = (-\dfrac{1}{2})x + (\dfrac{1}{3} + \dfrac{1}{8})x^2 + o(x^2) = -\dfrac{1}{2}x + \dfrac{11}{24}x^2 + o(x^2)\]</span></p><p>由于 <span class="math inline">\(e \cdot [e^{\dfrac{\ln(1 + x) - x}{x}} - 1] - ax - bx^2\)</span> 是 <span class="math inline">\(o(x^2)\)</span></p><p>故 <span class="math inline">\(a = -\dfrac{1}{2}e\)</span>，<span class="math inline">\(b = \dfrac{11}{24}e\)</span></p><h1 id="题目251">题目251</h1><p>设函数 <span class="math inline">\(f(x)=\dfrac{\sin x}{1+x^2}\)</span> 在 <span class="math inline">\(x=0\)</span> 处的 <span class="math inline">\(3\)</span> 次泰勒多项式为 <span class="math inline">\(ax+bx^2+cx^3\)</span>，求参数 <span class="math inline">\(a,b,c\)</span></p><h2 id="解答-11">解答</h2><p>简单推导：</p><p><span class="math display">\[\begin{aligned}\sin x &amp;= x - \dfrac{1}{6}x^3 + o(x^3)\\\\\dfrac{1}{1 + x^2} &amp;= 1 - x^2 + x^4 + o(x^4)\\\\\dfrac{\sin x}{1+x^2} &amp;= [x - \dfrac{1}{6}x^3 + o(x^3)] \cdot [1 - x^2 + x^4 + o(x^4)] = x - \dfrac{7}{6}x^3 + o(x^3)\end{aligned}\]</span></p><p>故 <span class="math inline">\(a = 1, b = 0, c = -\dfrac{7}{6}\)</span></p><h1 id="题目252">题目252</h1><p>设函数 <span class="math inline">\(f(x)=\sec x\)</span> 在 <span class="math inline">\(x=0\)</span> 处的<span class="math inline">\(2\)</span>次泰勒多项式为<span class="math inline">\(1+ax+bx^2\)</span>，求参数 <span class="math inline">\(a,b\)</span></p><h2 id="解答-12">解答</h2><p>直接具体展开不太容易，考虑使用抽象展开式，再利用 <strong>算两次</strong> 的思想，令 <strong>系数相等</strong></p><p>泰勒在 <span class="math inline">\(x = 0\)</span> 的抽象展开式:</p><p><span class="math display">\[f(x) = f(0) + f&#39;(0)x + \dfrac{f&#39;&#39;(0)}{2}x^2 + o(x^2)\]</span></p><p><span class="math display">\[\begin{aligned}f(0) &amp;= \sec 0 = 1 \\\\f&#39;(0) &amp;= \tan 0 \sec 0 = 0 \\\\f&#39;&#39;(0) &amp;= \sec^3 0 + \tan^2 0 \sec 0 = 1 \\\\\end{aligned}\]</span></p><p>故 <span class="math inline">\(a = 0, b = \dfrac{1}{2}\)</span></p><h1 id="题目253">题目253</h1><p>求函数 <span class="math inline">\(f(x) = \dfrac{(x+1)|x-1|}{e^{\frac{1}{x-2}}\ln|x|}\)</span> 的可去间断点的个数</p><h2 id="解答-13">解答</h2><p>无定义点：<span class="math inline">\(x = 2, x = 1, x = -1, x = 0\)</span>，故只需研究这四点即可</p><p><strong>x = 0:</strong></p><p><span class="math inline">\(\lim\limits_{x \to 0} \dfrac{(x+1)|x-1|}{e^{\frac{1}{x-2}}\ln|x|} = \sqrt{e}\lim\limits_{x \to 0} \dfrac{1}{\ln|x|} = 0 \quad \Rightarrow \quad x=0\)</span> 是 <strong>可去间断点</strong></p><p><strong>x = 1:</strong></p><p><span class="math inline">\(\lim\limits_{x \to 1} \dfrac{(x+1)|x-1|}{e^{\frac{1}{x-2}}\ln|x|} = 2e \cdot \lim\limits_{x \to 1} \dfrac{|x-1|}{x - 1} \quad \Rightarrow \quad x=1\)</span> 是 <strong>跳跃间断点</strong></p><p><strong>x = -1:</strong></p><p><span class="math inline">\(\lim\limits_{x \to -1} \dfrac{(x+1)|x-1|}{e^{\frac{1}{x-2}}\ln|x|} = -2e \cdot \lim\limits_{x \to -1} \dfrac{(x + 1)}{x + 1} = -2e \quad \Rightarrow \quad x=1\)</span> 是 <strong>可去间断点</strong></p><p><strong>x = 2:</strong></p><p><span class="math inline">\(\lim\limits_{x \to 2} \dfrac{(x+1)|x-1|}{e^{\frac{1}{x-2}}\ln|x|} = \dfrac{3}{\ln 2}\lim\limits_{x \to 2} e^{\frac{-1}{x-2}}\)</span></p><p><span class="math inline">\(\lim\limits_{x \to 2^+} e^{\frac{-1}{x-2}} = 0\)</span>，<span class="math inline">\(\lim\limits_{x \to 2^-} e^{\frac{-1}{x-2}} = +\infty\)</span>，故 <span class="math inline">\(x = 2\)</span> 是 <strong>第二类间断点</strong></p><p>故 <strong>可去间断点</strong> 数量为 <span class="math inline">\(2\)</span></p><h1 id="题目254">题目254</h1><p>设 <span class="math inline">\(f(x)\)</span> 和 <span class="math inline">\(\varphi(x)\)</span> 在 <span class="math inline">\((-\infty, +\infty)\)</span> 内有定义，<span class="math inline">\(f(x)\)</span> 为连续函数，<span class="math inline">\(\varphi(x)\)</span> 有间断点，则下列命题:</p><ol type="A"><li><p><span class="math inline">\(f(x)\Big[|\varphi(x)| + \varphi^2(x)\Big]\)</span> 必有间断点</p></li><li><p>若 <span class="math inline">\(f(x)\)</span> 单调，则 <span class="math inline">\(\dfrac{\varphi(x)}{|f(x)|}\)</span> 必有间断点</p></li><li><p><span class="math inline">\(\dfrac{\varphi(x)}{1+f^2(x)}\)</span> 必有间断点</p></li><li><p><span class="math inline">\(f(x)\varphi(x)\)</span> 必有间断点</p></li></ol><p>中，命题正确的是哪些？</p><h2 id="解答-14">解答</h2><ol type="A"><li><p>错误，直接令 <span class="math inline">\(f(x) \equiv 0\)</span> 结束</p></li><li><p>正确，分类讨论：</p></li></ol><p>若 <span class="math inline">\(f(x)\)</span> 无零点连续，则 <span class="math inline">\(|f(x)|\)</span> 无零点连续，故 <span class="math inline">\(\dfrac{\varphi(x)}{|f(x)|}\)</span> 有间断点</p><p>若 <span class="math inline">\(f(x)\)</span> 有零点，则 <span class="math inline">\(\dfrac{\varphi(x)}{|f(x)|}\)</span> 必有间断点</p><ol start="3" type="A"><li><p>正确，显然</p></li><li><p>错误，令 <span class="math inline">\(f(x) \equiv 0\)</span> 结束</p></li></ol><blockquote><p>这里武老师有个小总结：</p><p><span class="math inline">\(|f(x)|\)</span> 有间断点 <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(f(x)\)</span> 有间断点</p><p><span class="math inline">\(f^2(x)\)</span> 有间断点 <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(f(x)\)</span> 有间断点</p><p><span class="math inline">\(f(x)\)</span> 连续 <span class="math inline">\(\Rightarrow\)</span> <span class="math inline">\(|f(x)|\)</span> 连续</p><p>反之，都不成立</p></blockquote><h1 id="题目255">题目255</h1><p>设 <span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^{n+2}}{\sqrt{2^{2n}+x^{2n}}}\)</span>，则 <span class="math inline">\(f(x)\)</span> 在其定义域内 <span class="math inline">\((~~)\)</span></p><p>A.连续 B.有<span class="math inline">\(1\)</span>个可去间断点 C.有<span class="math inline">\(1\)</span>个跳跃间断点 D.有<span class="math inline">\(1\)</span>个第二类间断点</p><h2 id="解答-15">解答</h2><blockquote><p>常用极限结论：<span class="math inline">\(\lim\limits_{n\to\infty} x^n = \begin{cases} 0 &amp; ,|x| &lt; 1 \\\\ \infty &amp; ,|x| &gt; 1 \\\\ 1 &amp; ,x = 1 \\\\ \not\exists &amp;,x=-1 \end{cases}\)</span></p></blockquote><p>分母是两个指数函数相加，谁作为分母无穷大上的最大数量级，考虑分类讨论</p><p><span class="math inline">\(|x| &lt; 2\)</span> 时，<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{(\dfrac{x}{2})^{n} \cdot x^2}{\sqrt{1+(\dfrac{x}{2})^{2n}}} = 0\)</span></p><p><span class="math inline">\(x = 2\)</span> 时，<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{2^{n+2}}{\sqrt{2^{2n+1}}} = 2^{\frac{3}{2}}\)</span></p><p><span class="math inline">\(x = -2\)</span> 时，<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}(-1)^{n+2} \cdot 2^{\frac{3}{2}} = \text{不存在}\)</span></p><p><span class="math inline">\(|x| &gt; 2\)</span> 时，<span class="math inline">\(f(x) = \lim\limits_{n\to\infty}\dfrac{x^{2}}{\sqrt{(\dfrac{2}{x})^{2n}+1}} = x^2\)</span></p><p>故 <span class="math inline">\(x = 2\)</span> 为跳跃间断点</p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第224 - 239题</title>
      <link href="/graduate_exam/Math/0x0E0-0x0EF/"/>
      <url>/graduate_exam/Math/0x0E0-0x0EF/</url>
      
        <content type="html"><![CDATA[<h1 id="题目224">题目224</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 一阶连续可导,且 <span class="math inline">\(f(0)=0\)</span>, <span class="math inline">\(f&#39;(0)\ne0\)</span> ,求 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{\displaystyle\int_0^{x^2}f(t)dt}{x^2\displaystyle\int_0^xf(t)dt}\)</span></p><h2 id="解答">解答</h2><blockquote><p><strong>连续可导</strong>：函数可导，且导函数连续</p></blockquote><p><span class="math inline">\(f(x)\)</span> 一阶连续可导 <span class="math inline">\(\quad\Rightarrow\quad\)</span> <span class="math inline">\(\lim\limits_{x \to 0} f&#39;(x_0 + x) = f&#39;(x_0)\)</span></p><p><span class="math display">\[\begin{aligned}\lim\limits_{x\to0}\dfrac{\displaystyle\int_0^{x^2}f(t)dt}{x^2\displaystyle\int_0^xf(t)dt}&amp;\xlongequal{L&#39;}\lim\limits_{x\to0}\dfrac{2x f(x^2)}{2x\displaystyle\int_0^xf(t)dt + x^2f(x)}\\\\&amp;=\lim\limits_{x\to0}\dfrac{2f(x^2)}{2\displaystyle\int_0^xf(t)dt + xf(x)}\\\\&amp;\xlongequal{L&#39;}\lim\limits_{x\to0}\dfrac{4xf&#39;(x^2)}{3f(x) + xf&#39;(x)}\\\\&amp;=\lim\limits_{x\to0}\dfrac{4f&#39;(x^2)}{3 \cdot \dfrac{f(x)}{x} + f&#39;(x)}\\\\&amp;=\frac{4f&#39;(0)}{3 \cdot \lim\limits_{x\to0} \dfrac{f(x)}{x} + f&#39;(0)}\\\\&amp;=\frac{4f&#39;(0)}{3f&#39;(0) + f&#39;(0)}\\\\&amp;=1\\\\\end{aligned}\]</span></p><h1 id="题目225">题目225</h1><p><span class="math display">\[\lim_{x\to0^+}\frac{\displaystyle\int_0^x\int_u^xu^2\arctan(1+tu)dtdu}{\displaystyle(\int_0^x\ln(1+t)dt)^2}\]</span></p><h2 id="解答-1">解答</h2><p>本题核心思路还是 <strong>洛必达法则</strong> 去 <strong>积分符号</strong></p><p>分子是一个 <strong>积分变量</strong> 分别为 <span class="math inline">\(t\)</span> 和 <span class="math inline">\(u\)</span> 的 <strong>二重积分</strong>，且两个 <strong>积分上限</strong> 都是 <span class="math inline">\(x\)</span> 不好直接 <strong>洛必达</strong></p><p>先考虑一下 <strong>交换积分次序</strong> 的手段，能否解决这个问题（答案是显然的，因为积分域是一个三角形）</p><p>先画出 <strong>积分域</strong>，是一个边长为 <span class="math inline">\(x\)</span> 的 <strong>正方形</strong> <strong>副对角线</strong> 上方的 <strong>三角形区域</strong></p><p>然后利用该 <strong>积分域</strong>，<strong>交换积分次序</strong></p><p><span class="math display">\[\displaystyle\int_0^x\int_u^xu^2\arctan(1+tu)dtdu = \displaystyle \int_0^x\int_0^t u^2\arctan(1+tu)dudt\]</span></p><p>通过 <strong>交换积分次序</strong> 的手段，我们成功在 <strong>积分限</strong> 上只保留了一个 <span class="math inline">\(x\)</span>，接下来就可以 <strong>洛必达</strong> 了</p><p>然后观察一下分母，可以利用 <strong>变上限积分</strong>，对 <strong>被积函数</strong> 做 <strong>等价无穷小代换</strong>，如下：</p><p><span class="math display">\[\ln(1+x)\sim x\quad\Rightarrow\quad \int_0^x\ln(1+t)dt\sim\int_0^xtdt\]</span></p><p>预处理都完成了，剩下的洛就完事了：</p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0^+}\frac{\displaystyle \int_0^x\int_0^t u^2\arctan(1+tu)dudt}{\displaystyle(\int_0^x t dt)^2}\\\\\xlongequal{L&#39;}&amp;\lim_{x\to0^+}\frac{\displaystyle \int_0^x u^2\arctan(1+xu)du}{2x\displaystyle\int_0^xtdt}\\\\\xlongequal{\scriptscriptstyle\text{广义积分中值定理}}&amp;\lim_{x\to0^+}\frac{\displaystyle \arctan(1+x\xi) \cdot \int_0^x u^2du}{2x\displaystyle\int_0^xtdt}\quad \text{其中} \xi\in(0,x)\\\\=&amp;\frac{\pi}{8} \cdot\lim_{x\to0^+}\frac{\displaystyle \int_0^x u^2du}{x\displaystyle\int_0^x tdt}\\\\\xlongequal{L&#39;}&amp;\frac{\pi}{8} \cdot\lim_{x\to0^+}\frac{x^2}{\displaystyle\int_0^x tdt + x^2}\\\\\xlongequal{L&#39;}&amp;\frac{\pi}{8} \cdot\lim_{x\to0^+}\frac{2x}{3x}\\\\=&amp; \frac{\pi}{12}\end{aligned}\]</span></p><h1 id="题目226">题目226</h1><p><span class="math display">\[\lim_{x\to+\infty}\frac{\displaystyle\int_0^xt|\sin t|dt}{x^2}\]</span></p><h2 id="解答一般方法">解答(一般方法)</h2><p>本题直接 <strong>洛必达</strong> 的话，洛必达法则会失效</p><p>洛必达法则成立的三大条件：</p><ol type="1"><li><p><span class="math inline">\(\dfrac{0}{0},\dfrac{\infty}{\infty}, \dfrac{\cdot}{\infty}\)</span> 型</p></li><li><p>函数 <span class="math inline">\(f(x)\)</span> 和 <span class="math inline">\(g(x)\)</span> 在 <span class="math inline">\(x_0\)</span> 的 <strong>去心邻域内</strong> 可导</p></li><li><p>求导后 <span class="math inline">\(\lim\limits_{x\to x_0}\dfrac{f&#39;(x)}{g&#39;(x)} = A\)</span> 存在 （<span class="math inline">\(A\)</span>可为 <strong>实数</strong>，也可为<span class="math inline">\(\infty\)</span>）</p></li></ol><p>本题直接求导的话，原式 = <span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{|\sin x|dt}{2}\)</span> 极限不存在，故 <strong>洛必达失效</strong></p><hr /><p>考虑一下如何求解该题，对于 <strong>绝对值函数</strong> 来说，首要目标就是去 <strong>绝对值</strong></p><p><span class="math inline">\(|\sin x|\)</span> 的 <strong>周期</strong> 是 <span class="math inline">\(\pi\)</span>，故我们可以考虑能不能用 <strong>不等式</strong> 进行 <strong>放缩</strong>，然后 <strong>夹逼</strong></p><p>对于任意 <span class="math inline">\(k\pi \lt x \lt k\pi + \pi\)</span>，有：</p><p><span class="math display">\[\begin{aligned}\int_0^{k\pi}t|\sin t|dt &amp;\lt \int_0^xt|\sin t|dt &amp;\lt \int_0^{k\pi + \pi}t|\sin t|dt\end{aligned}\]</span></p><p>考虑如何求积分 <span class="math inline">\(\displaystyle \int_0^{k\pi}t|\sin t|dt\)</span></p><p><span class="math display">\[\begin{aligned}I_1 &amp;= \int_0^{\pi} t|\sin t| dt = \pi \\\\I_2 &amp;= \int_\pi^{2\pi} t|\sin t| dt = 3\pi \\\\\cdots \\\\I_n &amp;= \int_{(n-1)\pi}^{n\pi} t|\sin t| dt = (2n - 1)\pi \\\\\end{aligned}\]</span></p><p>故 <span class="math inline">\(\displaystyle \int_0^{k\pi}t|\sin t|dt = k^2\pi\)</span></p><blockquote><p>这里分享另一个做法(区间再现+积分再现)，由 <strong><span class="citation" data-cites="好孩子都会写代码">@好孩子都会写代码</span></strong> 同学提供 <span class="math display">\[\begin{aligned}\int_0^{k\pi}t|\sin t|dt &amp;= \int_0^{k\pi}(k\pi - t)|\sin (k\pi - t)|dt\\\\&amp;= k\pi\int_0^{k\pi}|\sin t|dt - \int_0^{k\pi} t|\sin t|dt\\\\I &amp;= k\pi\int_0^{k\pi}|\sin t|dt - I\\\\I &amp;= \frac{k\pi}{2}\int_0^{k\pi}|\sin t|dt\\\\\end{aligned}\]</span> 而积分 <span class="math inline">\(\displaystyle\int_0^{k\pi} |\sin t|dt = 2k\)</span> 是显然的（一拱的面积为 <span class="math inline">\(2\)</span>，<span class="math inline">\(k\)</span> 拱的面积为 <span class="math inline">\(2k\)</span>） 则 <span class="math inline">\(I = k^2\pi\)</span>，这个做法必上述递推要简单</p></blockquote><p>接着我们的任务就是 <strong>凑出题设的极限</strong>，然后 <strong>夹逼</strong></p><p><span class="math display">\[\lim_{x\to+\infty}\frac{k^2\pi}{x^2} \lt \lim_{x\to+\infty}\frac{\displaystyle\int_0^xt|\sin t|dt}{x^2} \lt \lim_{x\to+\infty}\frac{(k+1)^2\pi}{x^2}\]</span></p><p>由 $kx k+ x - kx  <em>{x+}  </em>{x+}  _{x+} $</p><p>故 <span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{k^2\pi}{x^2} = \dfrac{1}{\pi}\)</span>，代入不等式中夹逼可得：<span class="math inline">\(\lim\limits_{x\to+\infty}\dfrac{\displaystyle\int_0^xt|\sin t|dt}{x^2} = \dfrac{1}{\pi}\)</span></p><hr /><h2 id="解答ostolz定理">解答(O'Stolz定理)</h2><p>知道 <strong>O'Stolz定理（洛必达推广的离散型）</strong> 这题就变成 <strong>构造题</strong> 了</p><p>令 <span class="math inline">\(x_n = \displaystyle\int_0^{n\pi} t|\sin t|dt\)</span>，<span class="math inline">\(y_n = x^2\)</span>，由于 <span class="math inline">\(\\{y_n\\}\)</span> <strong>单调递增</strong>，且 <span class="math inline">\(\lim\limits_{n\to\infty} y_n = +\infty\)</span>，由 <strong>O'Stolz 定理：</strong></p><p><span class="math display">\[\lim_{n\to+\infty} \frac{x_n}{y_n} = \lim_{n\to+\infty} \frac{x_{n+1} - x_n}{y_{n+1} - y_n} = \lim_{n\to+\infty} \frac{\dfrac{(2n+2)(n+1)\pi}{2} - \dfrac{n\cdot 2n\pi}{2}}{(n\pi + \pi)^2 - (n\pi)^2} = \dfrac{1}{\pi}\]</span></p><p>再由 <strong>海涅定理</strong> 可知：</p><p><span class="math display">\[\lim_{n\to+\infty} \frac{\displaystyle\int_0^xt|\sin t|dt}{x^2} = \lim_{n\to+\infty} \frac{x_n}{y_n} = \dfrac{1}{\pi}\]</span></p><h1 id="题目227">题目227</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to+\infty}\sin\frac{1}{x}\cdot\int_x^{x^2}(1+\frac{1}{2t})^t\sin\frac{1}{\sqrt{t}}dt\]</span></p><h2 id="解答-2">解答</h2><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to+\infty}\sin\frac{1}{x}\cdot\int_x^{x^2}(1+\frac{1}{2t})^t\sin\frac{1}{\sqrt{t}}dt\\\\=&amp;\lim_{x\to+\infty}[\frac{\displaystyle\int_x^{x^2}(1+\frac{1}{2t})^t\sin\frac{1}{\sqrt{t}}dt}{x}]\\\\\xlongequal{L&#39;}&amp;\lim_{x\to+\infty}[2x(1+\frac{1}{2x^2})^{x^2}\cdot \sin\frac{1}{x} - (1+\frac{1}{2x})^{x}\cdot \sin\frac{1}{\sqrt{x}}]\\\\=&amp;\lim_{x\to+\infty}[2 \cdot e^{x^2\ln(1+\frac{1}{2x^2})} - e^{x\ln(1+\frac{1}{2x})}\cdot \frac{1}{\sqrt{x}}]\\\\=&amp;2\lim_{x\to+\infty}e^{x^2\ln(1+\frac{1}{2x^2})} - \lim_{x\to+\infty}e^{x\ln(1+\frac{1}{2x})}\cdot \frac{1}{\sqrt{x}}\\\\=&amp;2e^{\frac{1}{2}} - 0\\\\=&amp;2e^{\frac{1}{2}}\\\\\end{aligned}\]</span></p><h1 id="题目228">题目228</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to+\infty}x(1-\frac{\ln x}{x})^x\]</span></p><h2 id="解答一暴力解">解答一（暴力解）</h2><p>"<span class="math inline">\(\infty \cdot 0\)</span>" 型，考虑倒代还化为 "<span class="math inline">\(\dfrac{0}{0}\)</span>" 型</p><p>令 <span class="math inline">\(x = \dfrac{1}{t}\)</span>，则：</p><p><span class="math display">\[\begin{aligned}\lim_{x\to+\infty} x(1-\frac{\ln x}{x})^x&amp;= \lim_{t\to0^+} \frac{(1+t\ln t)^{\dfrac{1}{t}}}{t}\\\\&amp;= \lim_{t\to0^+} \frac{e^{\dfrac{\ln(1 + t\ln t)}{t}}}{t}\\\\&amp;= \lim_{t\to0^+} \frac{e^{\dfrac{t\ln t - \frac{1}{2}t^2\ln^2 t + o(t^2\ln^2t)}{t}}}{t}\\\\&amp;= \lim_{t\to0^+} \frac{e^{\ln t}}{t}\\\\&amp;= \lim_{t\to0^+} \frac{t}{t}\\\\&amp;= 1\end{aligned}\]</span></p><h2 id="解答二取对数">解答二（取对数）</h2><p>考虑乘积幂次都有的式子，不妨取对数，转化为加减法（求导里常用）</p><p>令 <span class="math inline">\(y = x(1-\dfrac{\ln x}{x})^x\)</span></p><p><span class="math display">\[\begin{aligned}\lim_{x\to+\infty} \ln y &amp;=\lim_{x\to+\infty} [\ln x + x\ln(1 - \dfrac{\ln x}{x})]\\\\&amp;=\lim_{x\to+\infty} x[\ln(1 - \dfrac{\ln x}{x}) - (-\dfrac{\ln x}{x})]\\\\&amp;=\lim_{x\to+\infty} x[-\dfrac{1}{2}(-\dfrac{\ln x}{x})^2]\\\\&amp;=-\frac{1}{2} \lim_{x\to+\infty} \dfrac{\ln^2 x}{x}\\\\&amp;= 0\end{aligned}\]</span></p><p><span class="math inline">\(\lim\limits_{x\to+\infty} \ln y = 0 \quad\Rightarrow\quad \lim\limits_{x\to+\infty} y = 1\)</span></p><h1 id="题目229">题目229</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to0}\Bigg(\frac{1 + \displaystyle\int_0^xe^{t^2}dt}{e^x-1} - \frac{1}{\sin x}\Bigg)\]</span></p><h2 id="解答-3">解答</h2><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\Bigg(\frac{1 + \displaystyle\int_0^xe^{t^2}dt}{e^x-1} - \frac{1}{\sin x}\Bigg)&amp;=\lim_{x\to0}\Bigg(\frac{\displaystyle\int_0^xe^{t^2}dt}{e^x-1} - \frac{\sin x - e^x + 1}{(e^x-1)\sin x}\Bigg)\\\\&amp;=\lim_{x\to0} \frac{\displaystyle\int_0^xe^{t^2}dt}{e^x-1} - \lim_{x\to0}\frac{\sin x - e^x + 1}{(e^x-1)\sin x}\\\\&amp;=\lim_{x\to0} \frac{\displaystyle\int_0^xe^{t^2}dt}{x} - \lim_{x\to0}\frac{x - x - \dfrac{1}{2}x^2}{x^2}\\\\&amp;=1 - \dfrac{1}{2}\\\\&amp;= \frac{1}{2}\end{aligned}\]</span></p><h1 id="题目230">题目230</h1><p><span class="math display">\[\lim_{x\to0}\Big[\frac{1}{\ln(x+\sqrt{1+x^2})} - \frac{1}{\ln(1+x) + \int_0^xt(1+t)^{\frac{1}{t}}dt}\Big]\]</span></p><h2 id="解答-4">解答</h2><p><span class="math display">\[\lim_{x\to0}\frac{\ln(x+\sqrt{1+x^2})}{x} = 1\quad\Rightarrow\quad\ln(x+\sqrt{1+x^2}) \sim x\]</span></p><p><span class="math display">\[\lim_{x\to0}\frac{\int_0^xt(1+t)^{\frac{1}{t}}dt}{x} = 0\quad\Rightarrow\quad\Big[ \ln(1+x) + \int_0^xt(1+t)^{\frac{1}{t}}dt\Big] \sim \ln(1+x) \sim x\]</span></p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0}\Big[\frac{1}{\ln(x+\sqrt{1+x^2})} - \frac{1}{\ln(1+x) + \displaystyle\int_0^xt(1+t)^{\frac{1}{t}}dt}\Big]\\\\=&amp;\lim_{x\to0}\frac{\ln(1 + x) + \displaystyle\int_0^xt(1 + t)^{\frac{1}{t}}dt - \ln(x+\sqrt{1+x^2})}{x^2}\\\\=&amp;\lim_{x\to0}\Bigg[\frac{\ln(1+x) - \ln(x+\sqrt{1+x^2})}{x^2}\Bigg] + \lim_{x\to0}\Bigg[\frac{\int_0^xt(1+t)^{\frac{1}{t}}dt}{x^2}\Bigg] \quad(极限的四则运算)\\\\=&amp;\lim_{x\to0}\Bigg[\frac{\dfrac{1}{\xi}(1 - \sqrt{1+x^2})}{x^2}\Bigg] + \lim_{x\to0}\Bigg[\frac{x(1+x)^{\frac{1}{x}}}{2x}\Bigg] \quad\bigg(Lagrange中值定理\bigg)\\\\=&amp;\lim_{x\to0}\Bigg(\frac{1 \cdot (-1)}{2\sqrt{1+x^2}}\Bigg) + \lim_{x\to0}\Bigg(\frac{e}{2}\Bigg) \quad(洛必达)\\\\=&amp;\frac{e - 1}{2}\end{aligned}\]</span></p><h1 id="题目231">题目231</h1><p><span class="math display">\[\lim_{x\to+\infty} \bigg[{    (x^3 - x^2 + \dfrac{x}{2} + 1) e^{\frac{1}{x}} -    \sqrt{x^6 + x^2 + x + 1}}\bigg]\]</span></p><h2 id="解答-5">解答</h2><blockquote><p>不是很喜欢这种 <strong>硬展</strong> 的题目</p></blockquote><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to+\infty} \bigg[{    (x^3 - x^2 + \dfrac{x}{2} + 1) e^{\frac{1}{x}} - x^3 + x^3 -     \sqrt{x^6 + x^2 + x + 1}}\bigg]\\\\=&amp;\lim_{x\to+\infty} x^3 [(1-\dfrac{1}{x} + \dfrac{1}{2x^2} + \dfrac{1}{x^3})e^{\frac{1}{x}} - \sqrt{1 + \dfrac{1}{x^4} + \dfrac{1}{x^5} + \dfrac{1}{x^6}}]\\\\=&amp;\lim_{x\to+\infty} x^3 \cdot e^{\frac{1}{x}} [(1-\dfrac{1}{x} + \dfrac{1}{2x^2} + \dfrac{1}{x^3}) - e^{-\frac{1}{x}}\sqrt{1 + \dfrac{1}{x^4} + \dfrac{1}{x^5} + \dfrac{1}{x^6}}]\\\\=&amp;\lim_{x\to+\infty} x^3 \cdot [(1-\dfrac{1}{x} + \dfrac{1}{2x^2} + \dfrac{1}{x^3}) - (1 - \dfrac{1}{x} + \dfrac{1}{2x^2} - \dfrac{1}{6x^3})  (1 + o(\dfrac{1}{x^3}))]\\\\=&amp;\lim_{x\to+\infty} x^3 \cdot [\dfrac{7}{6} \cdot \dfrac{1}{x^3} + o(\dfrac{1}{x^3})]\\\\=&amp; \dfrac{7}{6}\end{aligned}\]</span></p><h1 id="题目232">题目232</h1><p><span class="math display">\[\lim_{x \to 0} \frac{\ln(1+\sin^2 x) - 6(\sqrt[3]{2-\cos x} - 1)}{x^4}\]</span></p><h2 id="解答-6">解答</h2><p>复合函数处理方法： 1. 强行泰勒展开（多项式计算量大） 2. 添项减项（精度随缘）</p><p><span class="math display">\[\ln(1 + \sin^2 x) - \sin ^2x \sim -\dfrac{1}{2}\sin^4x \sim -\dfrac{1}{2}x^4\]</span></p><p><span class="math display">\[(1 + x)^{\frac{1}{3}} - 1 - x \sim -\dfrac{1}{9} x^2\]</span></p><p><span class="math display">\[[1 + (1 - \cos x)]^{\frac{1}{3}} - 1  - \dfrac{1}{3}(1 - \cos x)\sim -\dfrac{1}{9} (1 - \cos x)^2 \sim -\dfrac{1}{36} x^4\]</span></p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x \to 0} \frac{\ln(1+\sin^2 x) - 6(\sqrt[3]{2-\cos x} - 1)}{x^4}\\\\=&amp;\lim_{x \to 0} \frac{\ln(1+\sin^2 x) - \sin^2x + 2(1-\cos x)- 6(\sqrt[3]{2-\cos x} - 1)+\sin^2x - 2(1 - \cos x)}{x^4}\end{aligned}\]</span></p><p><span class="math display">\[\dfrac{\sin^2x - 2 + 2\cos x}{x^4} =\dfrac{\cos x - 1}{2x^2} = -\dfrac{1}{4}\]</span></p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x \to 0} \frac{\ln(1+\sin^2 x) - \sin^2x}{x^4} -\lim_{x \to 0} \frac{-2(1-\cos x) + 6(\sqrt[3]{2-\cos x} - 1)}{x^4}\\\\+&amp;\lim_{x \to 0} \frac{\sin^2x - 2(1 - \cos x)}{x^4}\\\\= &amp; -\dfrac{1}{2} + \dfrac{1}{6} + \dfrac{1}{4} = -\dfrac{7}{12}\end{aligned}\]</span></p><h1 id="题目233">题目233</h1><p><span class="math display">\[\lim_{x\to0}\int_0^x\Big(\frac{\arctan t}{t}\Big)^{\dfrac{1}{\int_0^t\ln(1+u)du}}\cot x dt\]</span></p><h2 id="解答-7">解答</h2><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0}\int_0^x\Big(\frac{\arctan t}{t}\Big)^{\dfrac{1}{\int_0^t\ln(1+u)du}}\cot x dt\\\\=&amp;\lim_{x\to0}\dfrac{\displaystyle\int_0^x \Big(\dfrac{\arctan t}{t}\Big)^{\dfrac{1}{\int_0^t\ln(1+u)du}}dt}{\tan x}\\\\=&amp;\lim_{x\to0}\Big(\dfrac{\arctan t}{t}\Big)^{\dfrac{1}{\int_0^t\ln(1+u)du}}dt\\\\&amp;\lim_{x\to0}\dfrac{\ln(\dfrac{\arctan t}{t})}{\displaystyle\int_0^t \ln(1+u)du}\\\\=&amp;\lim_{x\to0}\dfrac{\arctan t - t}{t\displaystyle\int_0^t udu}\\\\=&amp;-\dfrac{2}{3}\\\\&amp;\lim_{x\to0}\int_0^x\Big(\frac{\arctan t}{t}\Big)^{\dfrac{1}{\int_0^t\ln(1+u)du}}\cot x dt\\\\=&amp; e^{-\frac{2}{3}}\end{aligned}\]</span></p><h1 id="题目234">题目234</h1><p><span class="math display">\[\lim_{x\to+\infty}\Big[\frac{\ln(x+\sqrt{x^2+1})}{\ln(x+\sqrt{x^2-1})}\Big]^{x^2\ln x}\]</span></p><h2 id="解答-8">解答</h2><p><span class="math display">\[\lim\limits_{x\to+\infty}\frac{\ln(x+\sqrt{x^2-1})}{\ln x} = 1 \quad\Rightarrow\quad\ln(x+\sqrt{x^2-1}) \sim \ln x\]</span></p><p><span class="math display">\[\lim\limits_{x\to+\infty}\frac{\sqrt{x^2+1} - \sqrt{x^2-1}}{\frac{1}{x}} = 1 \quad\Rightarrow\quad \sqrt{x^2+1} - \sqrt{x^2-1} \sim \dfrac{1}{x}\]</span></p><p><span class="math display">\[\begin{aligned}原式&amp;=\lim_{x\to+\infty} e^{x^2\ln x\cdot\ln(\frac{\ln(x+\sqrt{x^2+1})}{\ln(x+\sqrt{x^2-1})})}\quad(幂指函数互化)\\\\&amp;=e^{\lim\limits_{x\to+\infty}x^2\ln x\cdot (\frac{\ln(x+\sqrt{x^2+1}) - \ln(x+\sqrt{x^2-1})}{\ln(x+\sqrt{x^2-1})})}\quad(等价无穷小代换)\\\\&amp;=e^{\lim\limits_{x\to+\infty}x^2\ln x\cdot (\frac{\ln(x+\sqrt{x^2+1}) - \ln(x+\sqrt{x^2-1})}{\ln x})}\quad(\ln(x+\sqrt{x^2-1}) \sim \ln x)\\\\&amp;=e^{\lim\limits_{x\to+\infty}x^2\cdot \Big((\ln(x+\sqrt{x^2+1}) - \ln(x+\sqrt{x^2-1})\Big)}\quad =e^{\lim\limits_{x\to+\infty}x^2\cdot \ln\frac{x+\sqrt{x^2+1}}{x+\sqrt{x^2-1}}}\quad (\ln\frac{A}{B} = \ln A - \ln B)\\\\&amp;=e^{\lim\limits_{x\to+\infty}x^2\cdot \frac{x+\sqrt{x^2+1} - x - \sqrt{x^2-1}}{x+\sqrt{x^2-1}}}\quad =e^{\lim\limits_{x\to+\infty}x^2\cdot \frac{\sqrt{x^2+1} - \sqrt{x^2-1}}{x+\sqrt{x^2-1}}}\quad(等价无穷小代换)\\\\&amp;=e^{\lim\limits_{x\to+\infty}x^2\cdot \frac{\frac{1}{x}}{x+\sqrt{x^2-1}}}\quad =e^{\lim\limits_{x\to+\infty}\frac{x}{x+\sqrt{x^2-1}}}\quad(\sqrt{x^2+1} - \sqrt{x^2-1} \sim \dfrac{1}{x})\\\\&amp;=e^{\frac{1}{2}}\end{aligned}\]</span></p><h1 id="题目235">题目235</h1><p>设 <span class="math inline">\(f(x)\)</span> 连续, <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(x)}{x}=1\)</span> ,求极限 <span class="math inline">\(\lim\limits_{x\to0}\Big[ 1+\displaystyle\int_0^xtf(x^2-t^2)dt \Big]^{\dfrac{1}{(\tan x - x)\ln(1+x)}}\)</span></p><h2 id="解答-9">解答</h2><p><span class="math inline">\(f(x)\)</span> 连续 <span class="math inline">\(\\&amp;\)</span> $_{x0}=1 $ <span class="math inline">\(\quad \Rightarrow \quad\)</span> <span class="math inline">\(f(0) = 0\)</span> 且 <span class="math inline">\(f&#39;(0) = 1\)</span></p><p>幂指函数，先取指对数，然后单独处理指数部分</p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to0} \dfrac{\ln(1 + \displaystyle\int_0^x tf(x^2 - t^2)dt)}{(\tan x - x) \ln(1 + x)}\\\\=&amp;\lim_{x\to0} \dfrac{\displaystyle\int_0^x tf(x^2 - t^2)dt}{\dfrac{1}{3}x^4}\\\\&amp; \text{令} x^2 - t^2 = u, \text{则} -2tdt = du\\\\=&amp;\dfrac{3}{2}\lim_{x\to0} \dfrac{\displaystyle\int_0^{x^2} f(u)du}{x^4}\\\\\xlongequal{L&#39;}&amp;\dfrac{3}{4}\lim_{x\to0} \dfrac{f(x^2)}{x^2}\\\\=&amp;\dfrac{3}{4}\lim_{x\to0} \dfrac{f(x^2) - f(0)}{x^2 - 0}\\\\=&amp;\dfrac{3}{4}f_+&#39;(0)\\\\=&amp;\dfrac{3}{4}\\\\\end{aligned}\]</span></p><p>故 <span class="math inline">\(\lim\limits_{x\to0}\Big[ 1+\displaystyle\int_0^xtf(x^2-t^2)dt \Big]^{\dfrac{1}{(\tan x - x)\ln(1+x)}} = e^{\frac{3}{4}}\)</span></p><h1 id="题目236">题目236</h1><p><span class="math display">\[\lim_{x\to+\infty} \Big(x^{\frac{1}{x}} - 1\Big)^{\frac{1}{\ln x}}\]</span></p><h2 id="解答-10">解答</h2><p>这里介绍一个 <strong>对数函数的等价无穷大技巧</strong>：</p><p>若 <span class="math inline">\(x \to x_0\)</span> 时，<span class="math inline">\(A\)</span> 与 <span class="math inline">\(B\)</span> 是<strong>等价无穷小</strong> （<span class="math inline">\(A \sim B\)</span>），则 <span class="math inline">\(\ln A\)</span> 与 <span class="math inline">\(\ln B\)</span> 是 <strong>等价无穷大</strong></p><p>证明：</p><p><span class="math display">\[\text{欲证：}\lim_{x\to x_0} \dfrac{\ln A}{\ln B} = 1,\text{不妨证} \lim_{x\to x_0} \dfrac{\ln A}{\ln B} - 1 = 0\]</span></p><p><span class="math display">\[\lim_{x\to x_0} \dfrac{\ln A}{\ln B} - 1 = \lim_{x\to x_0} \dfrac{\ln A - \ln B}{\ln B} = \lim_{x\to x_0} \dfrac{\ln\dfrac{A}{B}}{\ln B} = \dfrac{0}{\infty} = 0 \quad QED\]</span></p><p>在本题中，取过指对数后，可利用该技巧：</p><p><span class="math display">\[\begin{aligned}&amp;\lim_{x\to +\infty} \dfrac{\ln (e^{\dfrac{\ln x}{x}} - 1)}{\ln x}\\\\=&amp;\lim_{x\to +\infty}\dfrac{\ln ({\dfrac{\ln x}{x}})}{\ln x}\\\\=&amp;\lim_{x\to +\infty}\dfrac{\ln\ln x - \ln x}{\ln x}\\\\\xlongequal{L&#39;}&amp;\lim_{x\to +\infty}\dfrac{1 - \ln x}{\ln x}\\\\=&amp; -1\end{aligned}\]</span></p><p>故原式 = <span class="math inline">\(e^{-1}\)</span></p><h1 id="题目237">题目237</h1><p>若 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{\cos(xe^x)-e^{-\dfrac{x^2e^{2x}}{2}}}{x^\alpha}= \beta\ne0\)</span>，求 <span class="math inline">\(\alpha,\beta\)</span></p><h2 id="解答-11">解答</h2><blockquote><p>已知极限反求参数，<strong>不能使用洛必达</strong>，<strong>不能使用洛必达</strong>，<strong>不能使用洛必达</strong> 这个行为违背了洛必达的 <strong>先验性</strong> 在已知极限的情况下，再洛必达获得的新极限，不一定与原极限相等</p></blockquote><p>由泰勒展开：</p><p><span class="math display">\[\cos(xe^x) = 1 - \dfrac{1}{2} (x^2e^{2x}) + \dfrac{1}{24}x^4e^{4x} + o(x^4e^{4x})\]</span></p><p><span class="math display">\[e^{-\dfrac{x^2e^{2x}}{2}} = 1 - \dfrac{1}{2}(x^2e^{2x}) + \dfrac{1}{8}(x^4e^{4x}) +  o(x^4e^{4x})\]</span></p><p>可以推得：</p><p><span class="math display">\[\cos(xe^x)-e^{-\dfrac{x^2e^{2x}}{2}} \sim -\dfrac{1}{12}x^4e^{4x}\]</span></p><p>故：</p><p><span class="math display">\[\lim\limits_{x\to0}\dfrac{\cos(xe^x)-e^{-\dfrac{x^2e^{2x}}{2}}}{x^\alpha} = \lim\limits_{x\to0} \dfrac{-\dfrac{1}{12}x^4}{x^\alpha} = \beta \ne 0\]</span></p><p>由于 <strong>极限存在</strong>，且不为 <span class="math inline">\(0\)</span>，故 <span class="math inline">\(\alpha = 4, \beta = - \dfrac{1}{12}\)</span></p><h1 id="题目238">题目238</h1><p><span class="math display">\[\lim_{x\to0}\frac{\cos 2x - \cos x\sqrt{\cos 2x}}{x^k} = a \ne 0,\text{求k,a}\]</span></p><h2 id="解答-12">解答</h2><p>对 <strong>分子</strong> 恒等变形：</p><p><span class="math display">\[\begin{aligned}\cos 2x - \cos x\sqrt{\cos 2x} &amp;= \sqrt{\cos 2x} \cdot (\sqrt{\cos 2x} - \cos x)\\\\&amp;= \sqrt{\cos 2x} \cdot \dfrac{\cos 2x - \cos^2 x}{\sqrt{\cos 2x} + \cos x}\\\\&amp;= \dfrac{\sqrt{\cos 2x}}{\sqrt{\cos 2x} + \cos x} \cdot (2\cos^2 x - 1 - \cos^2 x)\\\\&amp;= \dfrac{\sqrt{\cos 2x}}{\sqrt{\cos 2x} + \cos x} \cdot (\cos^2 x - 1)\\\\&amp;= \dfrac{\sqrt{\cos 2x}}{\sqrt{\cos 2x} + \cos x} \cdot (- \sin^2 x)\\\\\end{aligned}\]</span></p><p>故原式为</p><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\frac{\cos 2x - \cos x\sqrt{\cos 2x}}{x^k} &amp;= \lim_{x\to0} \dfrac{\sqrt{\cos 2x}}{\sqrt{\cos 2x} + \cos x} \cdot \frac{(- \sin^2 x)}{x^k}\\\\&amp;=-\dfrac{1}{2} \lim_{x\to0} \frac{\sin^2 x}{x^k}\\\\&amp;=-\dfrac{1}{2} \lim_{x\to0} \frac{x^2}{x^k}\\\\\end{aligned}\]</span></p><p>由于 <strong>极限存在</strong>，故 <span class="math inline">\(k = 2, a = -\dfrac{1}{2}\)</span></p><h1 id="题目239">题目239</h1><p>若 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{ax^2+bx+1-e^{x^2-2x}}{x^2}=2\)</span>,求<span class="math inline">\(a,b\)</span>的值</p><h2 id="解答-13">解答</h2><p>由 <strong>泰勒展开</strong>：</p><p><span class="math display">\[e^{x^2 - 2x} - 1 = x^2 - 2x + \dfrac{1}{2}(x^2 - 2x)^2 + o(x)^2 = 3x^2 - 2x + o(x^2)\]</span></p><p>故可对原式进行 <strong>泰勒展开</strong>：</p><p><span class="math display">\[\lim\limits_{x\to0}\dfrac{ax^2+bx+1-e^{x^2-2x}}{x^2} = \lim\limits_{x\to0}\dfrac{(a - 3)x^2+(b + 2)x}{x^2}\]</span></p><p><strong>极限存在</strong>，故 <span class="math inline">\(b = -2, a = 5\)</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武忠祥老师每日一题｜第211 - 223题</title>
      <link href="/graduate_exam/Math/0x0D3-0x0DF/"/>
      <url>/graduate_exam/Math/0x0D3-0x0DF/</url>
      
        <content type="html"><![CDATA[<h1 id="题目211">题目211</h1><p>设 <span class="math inline">\(f(x)=1-\cos{x}\)</span>，求极限 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{(1-\sqrt{\cos{x}})(1-\sqrt[3]{\cos{x}})(1-\sqrt[4]{\cos{x}})(1-\sqrt[5]{\cos{x}})}{f\\{f[f(x)]\\}}\)</span></p><h2 id="解答">解答</h2><p>当 <span class="math inline">\(x \to 0\)</span> 时：</p><p><span class="math display">\[1-\sqrt{\cos x} \sim 1 - (1 - \frac{1}{2}x^2)^{\frac{1}{2}} \sim-(-\frac{1}{4})x^2 = \frac{1}{4}x^2\]</span></p><p>同理，由此推导可证得：<span class="math inline">\(1 - \cos^\alpha x \sim \dfrac{1}{2} \alpha x^2\)</span></p><p><span class="math display">\[\begin{aligned}\text{原式} &amp;= \frac{\dfrac{1}{4} \cdot \dfrac{1}{6} \cdot \dfrac{1}{8} \cdot \dfrac{1}{10} \cdot x^8}{1 - \cos(f[f(x)])} \\\\&amp;=\frac{\dfrac{x^8}{1920}}{\dfrac{1}{2}[1 - \cos f(x)]^2} \\\\&amp;=\frac{\dfrac{x^8}{1920}}{\dfrac{1}{2}[\dfrac{1}{2}(1 - \cos x)^2]^2}\\\\&amp;=\frac{\dfrac{x^8}{1920}}{\dfrac{1}{128} \cdot x^8}\\\\&amp;=\frac{1}{15}\\\\\end{aligned}\]</span></p><h1 id="题目212">题目212</h1><p><span class="math display">\[\text{求极限 } \lim_{x\to0}\frac{\tan(\sin x) - x}{\arctan x - \arcsin x}\]</span></p><h2 id="解答-1">解答</h2><p>该极限为 <span class="math inline">\(\dfrac{0}{0}\)</span> 型极限，常用方法有：</p><ol type="1"><li>洛必达法则</li><li>等价无穷小</li><li>泰勒展开</li></ol><p><span class="math display">\[\tan x - x \sim \frac{1}{3}x^3\quad\Rightarrow\quad\tan(\sin x) - \sin x \sim \frac{1}{3}\sin^3x\]</span></p><p>由以上 <strong>等价无穷小</strong>，我们可以考虑 <strong>加减交叉项</strong> 凑出需要的形式</p><p><span class="math display">\[\begin{aligned}\text{原式} &amp;= \lim_{x\to 0} \frac{\tan(\sin x) - \sin x + \sin x - x}{-\dfrac{1}{3}x^3 - \dfrac{1}{6}x^3}\\\\&amp;= -2\lim_{x\to 0} \frac{\tan(\sin x) - \sin x}{x^3}-2\lim_{x\to 0} \frac{\sin x -  x}{x^3}\\\\&amp;= -2\lim_{x\to 0} \frac{\dfrac{1}{3}\sin^3 x}{x^3}-2\lim_{x\to 0} \frac{-\dfrac{1}{6}x^3}{x^3}\\\\&amp;= -\frac{2}{3} + \frac{1}{3}\\\\&amp;= -\frac{1}{3}\\\\\end{aligned}\]</span></p><h1 id="题目213">题目213</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to0}\frac{\sqrt[4]{1-\sqrt[3]{1-\sqrt{1-x}}} - 1}{(1+x)^\frac{1}{\sqrt[3]{x^2}} - 1}\]</span></p><h2 id="解答-2">解答</h2><p><span class="math display">\[\sqrt[4]{1-\sqrt[3]{1-\sqrt{1-x}}} - 1\sim\sqrt[4]{1-\sqrt[3]{\frac{1}{2}x}} - 1\sim-\frac{1}{2^{\frac{7}{3}}}x^{\frac{1}{3}}\]</span></p><p><span class="math display">\[(1+x)^\frac{1}{\sqrt[3]{x^2}} - 1 \sim x^{\frac{1}{3}}\]</span></p><p><span class="math display">\[\text{原式} = \lim_{x\to0}\frac{-\dfrac{1}{2^{\frac{7}{3}}}x^{\frac{1}{3}}}{x^{\frac{1}{3}}} = -\frac{1}{2^{\frac{7}{3}}}\]</span></p><h1 id="题目214">题目214</h1><p><span class="math display">\[\lim_{x\to0}\frac{(3+\sin x^2)^x-3^{\sin x}}{x^3}\]</span></p><h2 id="解答-3">解答</h2><p><strong>底数相同</strong> 的 <strong>幂指函数</strong> 相减，一般考虑 <strong>左提右式</strong> 或 <strong>拉格朗日中值定理（不推荐）</strong></p><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\frac{(3+\sin x^2)^x-3^{\sin x}}{x^3}&amp;=\lim_{x\to0}\frac{e^{x\ln(3+\sin x^2)} - e^{\sin x\ln 3}}{x^3}\\\\&amp;=\lim_{x\to0}\frac{e^{\sin x\ln 3}[x\ln(3+\sin x^2) - \sin x\ln 3]}{x^3}\\\\&amp;=\lim_{x\to0}\frac{x\ln(3+\sin x^2) - x\ln 3 - (\sin x\ln 3 - x\ln 3)}{x^3}\\\\&amp;=\lim_{x\to0}\frac{x\cdot [\ln(3+\sin x^2) - \ln 3]}{x^3} - \ln 3\cdot \lim_{x\to0}\frac{\sin x - x}{x^3}\\\\&amp;=\lim_{x\to0}\frac{x\cdot \ln(1+\dfrac{\sin x^2}{3})}{x^3} + \frac{\ln 3}{6}\\\\&amp;=\lim_{x\to0}\frac{x \cdot \sin x^2}{3x^3} + \frac{\ln 3}{6}\\\\&amp;=\frac{1}{3} + \frac{\ln 3}{6}\\\\&amp;=\frac{2 + \ln 3}{6}\\\\\end{aligned}\]</span></p><h1 id="题目215">题目215</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to 1}\frac{x - x^x}{1 - x + \ln x}\]</span></p><h2 id="解答-4">解答</h2><p>先处理分子：</p><p><span class="math display">\[\lim_{x\to 1}\frac{x - x^x}{1 - x + \ln x} = \lim_{x\to 1}x \cdot \frac{1 - x^{x - 1}}{1 - x + \ln x} = -\lim_{x\to 1}\frac{e^{(x-1)\ln x} - 1}{1 - x + \ln x} = -\lim_{x\to 1}\frac{(x-1)\ln x}{1 - x + \ln x}\]</span></p><p>不妨换元，令 <span class="math inline">\(t = x - 1\)</span>，则 <span class="math inline">\(x = 1 + t\)</span></p><p><span class="math display">\[\text{原式}= -\lim_{t\to0}\frac{t\ln(1 + t)}{ln(1 + t) - t} = -\lim_{t\to0}\frac{t^2}{\bigg(t - \dfrac{1}{2}t^2 + o(t^2)\bigg) - t} = 2\]</span></p><h1 id="题目216">题目216</h1><p><span class="math display">\[\text{求极限 } \lim_{x\to0}\frac{(1+x)^{\frac{2}{x}} - e^2[1 - \ln(1+x)]}{x}\]</span></p><h2 id="解答-5">解答</h2><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\frac{(1+x)^{\frac{2}{x}} - e^2[1 - \ln(1+x)]}{x}&amp;= \lim_{x\to0}\frac{e^{\frac{2\ln(1 + x)}{x}} - e^2[1 - \ln(1+x)]}{x}\\\\&amp;= e^2 \cdot \lim_{x\to0}\frac{e^{\frac{2\ln(1 + x) - 2x}{x}} - 1 + \ln(1+x)}{x}\\\\&amp;= e^2 \cdot \lim_{x\to0}\frac{e^{\frac{2\ln(1 + x) - 2x}{x}} - 1}{x} + e^2 \cdot \lim_{x\to0}\frac{\ln(1+x)}{x}\\\\&amp;= e^2 \cdot \lim_{x\to0}\frac{2\ln(1 + x) - 2x}{x^2} + e^2\\\\&amp;= -e^2 + e^2\\\\&amp;= 0\end{aligned}\]</span></p><h1 id="题目217">题目217</h1><p><span class="math display">\[\text{求极限 } \lim_{x\to0}\frac{(1+x)^{\frac{1}{x}} - (1 + 2x)^{\frac{1}{2x}}}{\sin x}\]</span></p><h2 id="解答-6">解答</h2><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\frac{(1+x)^{\frac{1}{x}} - (1 + 2x)^{\frac{1}{2x}}}{\sin x}&amp;=\lim_{x\to0}\frac{e^{\frac{\ln(x + 1)}{x}} - e^{\frac{\ln(2x + 1)}{2x}}}{x}\\\\&amp;=\lim_{x\to0} e^{\frac{\ln(2x + 1)}{2x}} \cdot \frac{e^{\frac{2\ln(x + 1) - \ln(2x + 1)}{2x}} - 1}{x}\\\\&amp;=e\cdot\lim_{x\to0}\frac{2\ln(x + 1) - \ln(2x + 1)}{2x^2}\\\\&amp;=e\cdot\lim_{x\to0}\frac{2x -x^2 - 2x + 2x^2 + o(x^2)}{2x^2}\\\\&amp;=\frac{e}{2}\end{aligned}\]</span></p><h1 id="题目218">题目218</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to0}\frac{1 + \dfrac{x^2}{2} - \sqrt{1+x^2}}{(\cos x - e ^{x^2})\sin x^2}\]</span></p><h2 id="解答-7">解答</h2><p><span class="math inline">\(x \to 0\)</span> 时，有如下推导：</p><p><span class="math display">\[\cos x = 1 - \frac{1}{2}x^2 + o(x^2), \quade^{x^2} = 1 + x^2 + o(x^2) \quad \Rightarrow \quad\cos x - e^{x^2} \sim -\frac{3}{2}x^2\]</span></p><p><span class="math display">\[(1 + x^2)^{\frac{1}{2}} - 1 \sim \frac{1}{2}x^2 - \frac{1}{8}x^4\]</span></p><p>利用上述推导解决问题：</p><p><span class="math display">\[\begin{aligned}\lim_{x\to0}\frac{1 + \dfrac{x^2}{2} - \sqrt{1+x^2}}{(\cos x - e ^{x^2})\sin x^2}&amp;=\lim_{x\to0}\frac{\dfrac{1}{8}x^4}{-\dfrac{3}{2}x^4}&amp;=-\frac{1}{12}\end{aligned}\]</span></p><h1 id="题目219">题目219</h1><p><span class="math display">\[\text{求极限 }\lim_{x\to0}\frac{x\sin x^2 - 2(1 - \cos x)\sin x}{x^5}\]</span></p><h2 id="解答-8">解答</h2><p><span class="math display">\[x\sin x^2 = x^3 - \dfrac{1}{6}x^6 + o(x^6) \quad\]</span></p><p><span class="math display">\[2(1 - \cos x) \sin x = (x^2 - \dfrac{1}{12}x^4 + o(x^4)) \cdot (x - \dfrac{1}{6}x^3 + o(x^3)) = x^3 - (\frac{1}{6} + \frac{1}{12}) x^5 + o(x^5)\]</span></p><p><span class="math display">\[\lim_{x\to0}\frac{x\sin x^2 - 2(1 - \cos x)\sin x}{x^5} =\lim_{x\to0}\frac{x^3 - \dfrac{1}{6}x^6 - x^3 + \dfrac{1}{4}x^5 + o(x^5)}{x^5} = \frac{1}{4}\]</span></p><h1 id="题目220">题目220</h1><p>设 <span class="math inline">\(f&#39;(0) = 0\)</span>, <span class="math inline">\(f&#39;&#39;(0)\)</span>存在, 求极限 $ _{x0} $</p><h2 id="解答-9">解答</h2><p><strong>“f-f” 型</strong> <strong>同名函数</strong> 相减，考虑 <strong>拉格朗日中值定理</strong></p><p>然后，通过题干给出的条件，建立等式</p><p>由于 <span class="math inline">\(f&#39;&#39;(0)\)</span> 存在，故 <span class="math inline">\(f&#39;(x)\)</span> 在点 <span class="math inline">\(x=0\)</span> 处 <strong>连续</strong> （可导 <span class="math inline">\(\Rightarrow\)</span> 连续）</p><p>故 <span class="math inline">\(\lim\limits_{x\to 0}f&#39;(x) = f&#39;(0)\)</span></p><p>先由 <span class="math inline">\(Lagrange\)</span> 中值定理可得：</p><p><span class="math display">\[\begin{aligned}\lim\limits_{x\to0}\dfrac{f(x) - f(\ln(1 + x))}{x^3}&amp;= \lim\limits_{x\to0}\dfrac{f&#39;(\xi)(x - \ln(1+x))}{x^3}\end{aligned}\]</span></p><p>其中 <span class="math inline">\(\ln(1 + x) &lt; \xi &lt; x\)</span>，<strong>两侧同除 x 取极限</strong> ，然后 <strong>夹逼</strong>，可得:</p><p><span class="math display">\[\lim\limits_{x\to 0}\dfrac{\ln(1 + x)}{x} &lt; \lim\limits_{x\to 0} \dfrac{\xi}{x} &lt; \lim\limits_{x\to 0}\dfrac{x}{x} \quad\Rightarrow\quad\lim\limits_{x\to 0} \dfrac{\xi}{x} = 1\quad\Rightarrow\quad\xi \sim x \quad(x\to 0)\]</span></p><p>最后用 <strong>导数定义</strong> 收尾：</p><p><span class="math display">\[\begin{aligned}\lim\limits_{x\to0}\dfrac{f&#39;(\xi)(x - \ln(1+x))}{x^3}&amp;=\dfrac{1}{2} \lim\limits_{x\to0} \dfrac{f&#39;(\xi)}{x}\\\\&amp;=\dfrac{1}{2} \lim\limits_{x\to0} \dfrac{f&#39;(\xi) - f&#39;(0)}{\xi} \cdot \dfrac{\xi}{x}\\\\&amp;=\dfrac{1}{2} \lim\limits_{x\to0} \dfrac{f&#39;(\xi) - f&#39;(0)}{\xi - 0} \cdot 1\\\\&amp;=\dfrac{1}{2} f&#39;&#39;(0)\\\\\end{aligned}\]</span></p><h1 id="题目221">题目221</h1><p><span class="math display">\[\lim_{x\to0^+}\frac{\sqrt{a}\arctan\sqrt{\dfrac{x}{a}}-\sqrt{b}\arctan\sqrt{\dfrac{x}{b}}}{x\sqrt{x}}\]</span></p><h2 id="解答-10">解答</h2><p><span class="math display">\[\arctan x = x - \dfrac{1}{3}x^3 \quad \Rightarrow \quad\arctan \sqrt{\dfrac{x}{a}} = \sqrt{\dfrac{x}{a}} - \dfrac{x^{\frac{3}{2}}}{3a^{\frac{3}{2}}} + o(x^{\frac{3}{2}})\]</span></p><p>根据上述推导，可对等式中的分子进行如下变形：</p><p><span class="math display">\[\sqrt{a}\arctan\sqrt{\dfrac{x}{a}}-\sqrt{b}\arctan\sqrt{\dfrac{x}{b}} = x^{\frac{1}{2}} - \dfrac{x^{\frac{3}{2}}}{3a} - x^{\frac{1}{2}} + \dfrac{x^{\frac{3}{2}}}{3b} + o(x^{\frac{3}{2}}) = \dfrac{a - b}{3ab} x^{\frac{3}{2}} + o(x^{\frac{3}{2}})\]</span></p><p>刚好展开到分母对应的阶数，于是就做完了</p><p><span class="math display">\[\lim_{x\to0^+}\frac{\sqrt{a}\arctan\sqrt{\dfrac{x}{a}}-\sqrt{b}\arctan\sqrt{\dfrac{x}{b}}}{x\sqrt{x}} = \dfrac{a - b}{3ab}\]</span></p><h1 id="题目222">题目222</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 连续, 且<span class="math inline">\(f(0)\ne0\)</span>, 求极限 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{x\int^x_{0}f(x-t)dt}{\int_0^xtf(x-t)dt}\)</span></p><h2 id="解答-11">解答</h2><p>极限中有 <strong>变上限积分</strong>，考虑用 <strong>洛必达法则</strong> 求导消掉积分符号</p><p>然后分母的 <strong>被积函数</strong> 中含有 <span class="math inline">\(x\)</span>，考虑对积分变量换元，从而分离出 <span class="math inline">\(x\)</span></p><p>令 <span class="math inline">\(x - t = u\)</span>，则 <span class="math inline">\(-dt = du\)</span>，有</p><p><span class="math display">\[\int_0^xf(x-t)dt = \int_0^xf(u)du\]</span></p><p><span class="math display">\[\int_0^xtf(x-t)dt = \int_0^x(x - u)f(u)du = x\int_0^xf(u)du - \int_0^x uf(u)du\]</span></p><p>拆分好后，按照先前给出的思路，<strong>洛必达</strong> 即可</p><p><span class="math display">\[\lim\limits_{x\to0}\dfrac{x\int_0^xf(u)du}{x\int_0^xf(u)du - \int_0^x uf(u)du} = \lim\limits_{x\to0}\dfrac{\int_0^xf(u)du + xf(x)}{\int_0^xf(u)du}\]</span></p><p>这里没说 <span class="math inline">\(f(x)\)</span> 可导，再洛就寄了，考虑 <strong>积分中值定理</strong> 来去掉 <strong>积分符号</strong></p><p><span class="math inline">\(\exists \xi \in (0,x), s.t. xf(\xi) = \int_0^x f(u)du\)</span>，则原式 $ = <em>{x0} = </em>{x0}$</p><p>又由于 <span class="math inline">\(f(x)\)</span> 连续，且 <span class="math inline">\(f(0) \ne 0\)</span>，故 <span class="math inline">\(\lim\limits_{\xi \to 0} f(\xi) = f(0) \ne 0\)</span></p><p>于是，原式 $ = _{(, x) (0,0)} =  = 2$</p><h1 id="题目223">题目223</h1><p>设函数 <span class="math inline">\(f(x)\)</span> 连续,且<span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(x)}{x} = 2\)</span>, 求极限 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{\displaystyle\int_0^xe^{xt}\arctan(x-t)^2dt}{\displaystyle\int_0^xtf(x-t)dt}\)</span></p><h2 id="解答-12">解答</h2><p>由函数 <span class="math inline">\(f(x)\)</span> 连续 及 <span class="math inline">\(\lim\limits_{x\to0}\dfrac{f(x)}{x} = 2\)</span>，易知：<span class="math inline">\(\lim\limits_{x\to0}f(x)=f(0)=0\)</span></p><p>再由 <strong>导数定义</strong>，可得：<span class="math inline">\(f&#39;(0) = \lim\limits_{x\to0}\dfrac{f(x) - f(0)}{x - 0} = 2\)</span></p><p><strong>变上限积分函数</strong> 求极限，考虑 <strong>洛必达法则</strong> 求导去积分符号</p><p>分子的 <strong>变上限积分函数</strong> 中，既有 <span class="math inline">\(xt\)</span> 又有 <span class="math inline">\(x-t\)</span>，<strong>换元法</strong> 不能同时消掉，故考虑 <strong>广义积分中值定理</strong></p><p>由 <strong>广义积分中值定理</strong> <span class="math inline">\(\displaystyle\int_a^b f(x)g(x)dx = f(\xi) \displaystyle\int_a^b g(x)dx\)</span>，其中 <span class="math inline">\(g(x)\)</span> 在 <span class="math inline">\((a,b)\)</span> 上不变号</p><p>易知在 <span class="math inline">\(x\to 0\)</span> 时，<span class="math inline">\(\arctan(x-t)^2\)</span> <strong>不变号</strong>，于是有：</p><p><span class="math inline">\(\displaystyle\int_0^xe^{xt}\arctan(x-t)^2dt = e^{x\xi}\displaystyle\int_0^x\arctan(x-t)^2dt\)</span>，其中 <span class="math inline">\(\xi\in(0,x)\)</span></p><p><span class="math display">\[\begin{aligned}\lim\limits_{x\to0}\frac{\displaystyle\int_0^xe^{xt}\arctan(x-t)^2dt}{\displaystyle\int_0^xtf(x-t)dt} &amp;=e^0 \cdot \lim\limits_{x\to0}\frac{\displaystyle\int_0^x\arctan(x-t)^2dt}{\displaystyle\int_0^xtf(x-t)dt} \\\\&amp;= \lim\limits_{x\to0}\frac{\displaystyle\int_0^x\arctan u^2du}{x\displaystyle\int_0^xf(u)du - \displaystyle\int_0^x uf(u)du}\\\\&amp;= \lim\limits_{x\to0}\frac{\arctan x^2}{xf(x) + \displaystyle\int_0^xf(u)du - xf(x)}\\\\&amp;= \lim\limits_{x\to0}\frac{x^2}{\displaystyle\int_0^xf(u)du}\\\\&amp;= \lim\limits_{x\to0}\frac{2x}{f(x)} = 2 \cdot \lim\limits_{x\to0}\frac{1}{\dfrac{f(x) - f(0)}{x - 0}}\\\\&amp;= \frac{2}{f&#39;(0)} \\\\&amp;= 1\end{aligned}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 研究生入学考试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高等数学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
